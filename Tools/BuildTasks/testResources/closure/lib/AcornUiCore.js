if (typeof kotlin === 'undefined') {
  throw new Error("Error loading module 'AcornUiCore'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'AcornUiCore'.");
}
if (typeof AcornUtils === 'undefined') {
  throw new Error("Error loading module 'AcornUiCore'. Its dependency 'AcornUtils' was not found. Please, check whether 'AcornUtils' is loaded prior to 'AcornUiCore'.");
}
var AcornUiCore = function (_, Kotlin, $module$AcornUtils) {
  'use strict';
  var Exception = Kotlin.kotlin.Exception;
  var Color = $module$AcornUtils.com.acornui.graphics.Color;
  var Pad_init = $module$AcornUtils.com.acornui.math.Pad_init;
  var Corners = $module$AcornUtils.com.acornui.math.Corners;
  var obj = $module$AcornUtils.com.acornui.serialization.obj_seohcg$;
  var color = $module$AcornUtils.com.acornui.graphics.color_1qbbry$;
  var math_0 = $module$AcornUtils.com.acornui.math;
  var obj_0 = $module$AcornUtils.com.acornui.serialization.obj_gbx3af$;
  var color_0 = $module$AcornUtils.com.acornui.graphics.color_86n5bk$;
  var From = $module$AcornUtils.com.acornui.serialization.From;
  var To = $module$AcornUtils.com.acornui.serialization.To;
  var toMutableList = Kotlin.kotlin.collections.toMutableList_us0mfu$;
  var radToDeg = $module$AcornUtils.com.acornui.core.radToDeg_81szk$;
  var string_0 = $module$AcornUtils.com.acornui.serialization.string_uavegi$;
  var float = $module$AcornUtils.com.acornui.serialization.float_uavegi$;
  var string_1 = $module$AcornUtils.com.acornui.serialization.string_c8rh0v$;
  var float_0 = $module$AcornUtils.com.acornui.serialization.float_f1rv4u$;
  var array = $module$AcornUtils.com.acornui.serialization.array_5r75ej$;
  var Enum = Kotlin.kotlin.Enum;
  var color_1 = $module$AcornUtils.com.acornui.graphics.color_uavegi$;
  var color_2 = $module$AcornUtils.com.acornui.graphics.color_l6i4uk$;
  var Signal1 = $module$AcornUtils.com.acornui.signal.Signal1;
  var HashMap_init = Kotlin.kotlin.collections.HashMap_init_q3lmfv$;
  var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
  var LazyInstance = $module$AcornUtils.com.acornui.factory.LazyInstance;
  var get_lastIndex = Kotlin.kotlin.collections.get_lastIndex_55thoc$;
  var Ray = $module$AcornUtils.com.acornui.math.Ray;
  var Pad_init_0 = $module$AcornUtils.com.acornui.math.Pad_init_mx4ult$;
  var Hsv = $module$AcornUtils.com.acornui.graphics.Hsv;
  var Signal3 = $module$AcornUtils.com.acornui.signal.Signal3;
  var Signal2 = $module$AcornUtils.com.acornui.signal.Signal2;
  var Vector2 = $module$AcornUtils.com.acornui.math.Vector2;
  var Cancel = $module$AcornUtils.com.acornui.signal.Cancel;
  var Disposable = $module$AcornUtils.com.acornui.core.Disposable;
  var properties_0 = Kotlin.kotlin.properties;
  var Iterable = Kotlin.kotlin.collections.Iterable;
  var UnsupportedOperationException = Kotlin.kotlin.UnsupportedOperationException;
  var toIntOrNull = Kotlin.kotlin.text.toIntOrNull_pdl1vz$;
  var Signal0 = $module$AcornUtils.com.acornui.signal.Signal0;
  var sum2 = $module$AcornUtils.com.acornui.collection.sum2_u3djwt$;
  var ListView = $module$AcornUtils.com.acornui.collection.ListView;
  var ObjectPool = $module$AcornUtils.com.acornui.collection.ObjectPool;
  var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
  var floor = $module$AcornUtils.com.acornui.core.floor_81szk$;
  var Clearable = $module$AcornUtils.com.acornui.collection.Clearable;
  var addAll = Kotlin.kotlin.collections.addAll_ye1y7v$;
  var addOrSet = $module$AcornUtils.com.acornui.collection.addOrSet_yd8n6p$;
  var arrayListOf = Kotlin.kotlin.collections.arrayListOf_i5x0yv$;
  var ObservableProperty = Kotlin.kotlin.properties.ObservableProperty;
  var ActiveList_init = $module$AcornUtils.com.acornui.collection.ActiveList_init_bemo1h$;
  var ActiveList_init_0 = $module$AcornUtils.com.acornui.collection.ActiveList_init_287e2$;
  var kotlin_0 = Kotlin.kotlin;
  var Vector3 = $module$AcornUtils.com.acornui.math.Vector3;
  var Bounds = $module$AcornUtils.com.acornui.math.Bounds;
  var Range2 = $module$AcornUtils.com.acornui.math.Range2;
  var downTo = Kotlin.kotlin.ranges.downTo_dqglrj$;
  var lastOrNull = Kotlin.kotlin.collections.lastOrNull_2p1efm$;
  var firstOrNull = Kotlin.kotlin.collections.firstOrNull_2p1efm$;
  var get_lastIndex_0 = Kotlin.kotlin.collections.get_lastIndex_m7z4lg$;
  var Signal4 = $module$AcornUtils.com.acornui.signal.Signal4;
  var FloatCompanionObject = Kotlin.kotlin.js.internal.FloatCompanionObject;
  var indexOf = Kotlin.kotlin.text.indexOf_l5u8uk$;
  var Pad = $module$AcornUtils.com.acornui.math.Pad;
  var onSuccess = $module$AcornUtils.com.acornui.action.onSuccess_ehmz8c$;
  var poll = $module$AcornUtils.com.acornui.collection.poll_vvxzk3$;
  var StoppableSignalImpl = $module$AcornUtils.com.acornui.signal.StoppableSignalImpl;
  var last = Kotlin.kotlin.collections.last_2p1efm$;
  var first = Kotlin.kotlin.collections.first_2p1efm$;
  var Any = Object;
  var ReadWriteProperty = Kotlin.kotlin.properties.ReadWriteProperty;
  var addAll2 = $module$AcornUtils.com.acornui.collection.addAll2_q5hvb0$;
  var sortedInsertionIndex = $module$AcornUtils.com.acornui.collection.sortedInsertionIndex_u0u1c5$;
  var addAllUnique = $module$AcornUtils.com.acornui.collection.addAllUnique_z57ypx$;
  var removeAll = Kotlin.kotlin.collections.removeAll_ye1y7v$;
  var toList = Kotlin.kotlin.collections.toList_us0mfu$;
  var IllegalArgumentException = Kotlin.kotlin.IllegalArgumentException;
  var indexOf_0 = Kotlin.kotlin.collections.indexOf_bv23uc$;
  var IntCompanionObject = Kotlin.kotlin.js.internal.IntCompanionObject;
  var collection_0 = $module$AcornUtils.com.acornui.collection;
  var ArrayList = Kotlin.kotlin.collections.ArrayList;
  var isNaN_0 = Kotlin.kotlin.isNaN_81szk$;
  var StoppableSignal = $module$AcornUtils.com.acornui.signal.StoppableSignal;
  var Quaternion = $module$AcornUtils.com.acornui.math.Quaternion;
  var Matrix4 = $module$AcornUtils.com.acornui.math.Matrix4;
  var core_0 = $module$AcornUtils.com.acornui.core;
  var noopDecorator = $module$AcornUtils.com.acornui.action.noopDecorator_287e2$;
  var Progress = $module$AcornUtils.com.acornui.action.Progress;
  var LoadableDecorator = $module$AcornUtils.com.acornui.action.LoadableDecorator;
  var Loadable = $module$AcornUtils.com.acornui.action.Loadable;
  var MutableResultAction = $module$AcornUtils.com.acornui.action.MutableResultAction;
  var ActionStatus = $module$AcornUtils.com.acornui.action.ActionStatus;
  var appendParam = $module$AcornUtils.com.acornui.browser.appendParam_j4ogox$;
  var logging_0 = $module$AcornUtils.com.acornui.logging;
  var PriorityQueueAction = $module$AcornUtils.com.acornui.action.PriorityQueueAction;
  var BasicAction = $module$AcornUtils.com.acornui.action.BasicAction;
  var serialization_0 = $module$AcornUtils.com.acornui.serialization;
  var MutableListIteratorImpl = $module$AcornUtils.com.acornui.collection.MutableListIteratorImpl;
  var Decorator = $module$AcornUtils.com.acornui.action.Decorator;
  var pop = $module$AcornUtils.com.acornui.collection.pop_vvxzk3$;
  var ActiveList = $module$AcornUtils.com.acornui.collection.ActiveList;
  var firstOrNull_1 = Kotlin.kotlin.collections.firstOrNull_7wnvza$;
  var UrlParamsImpl = $module$AcornUtils.com.acornui.browser.UrlParamsImpl_61zpoe$;
  var ClearableObjectPool = $module$AcornUtils.com.acornui.collection.ClearableObjectPool;
  var Comparable = Kotlin.kotlin.Comparable;
  var sortedInsertionIndex_0 = $module$AcornUtils.com.acornui.collection.sortedInsertionIndex_hdciot$;
  var DependencyGraph = $module$AcornUtils.com.acornui.di.DependencyGraph;
  var containsAllKeys = $module$AcornUtils.com.acornui.collection.containsAllKeys_50wjuc$;
  var sort = Kotlin.kotlin.collections.sort_4wi501$;
  var ModTagImpl = $module$AcornUtils.com.acornui.observe.ModTagImpl;
  var Frustum = $module$AcornUtils.com.acornui.math.Frustum;
  var get_lastIndex_1 = Kotlin.kotlin.collections.get_lastIndex_964n91$;
  var IntRange = Kotlin.kotlin.ranges.IntRange;
  var step = Kotlin.kotlin.ranges.step_xsgg7u$;
  var startsWith = Kotlin.kotlin.text.startsWith_7epoxm$;
  var lastIndexOf = Kotlin.kotlin.text.lastIndexOf_8eortd$;
  var Pair = Kotlin.kotlin.Pair;
  var array_0 = $module$AcornUtils.com.acornui.serialization.array_iqluob$;
  var int = $module$AcornUtils.com.acornui.serialization.int_uavegi$;
  var bool = $module$AcornUtils.com.acornui.serialization.bool_uavegi$;
  var int_0 = $module$AcornUtils.com.acornui.serialization.int_6g08gh$;
  var bool_0 = $module$AcornUtils.com.acornui.serialization.bool_rvr0ye$;
  var obj_1 = $module$AcornUtils.com.acornui.serialization.obj_3axv6d$;
  var floatArray = $module$AcornUtils.com.acornui.serialization.floatArray_uavegi$;
  var intArray = $module$AcornUtils.com.acornui.serialization.intArray_uavegi$;
  var obj_2 = $module$AcornUtils.com.acornui.serialization.obj_vzin3y$;
  var floatArray_0 = $module$AcornUtils.com.acornui.serialization.floatArray_bs8qql$;
  var intArray_0 = $module$AcornUtils.com.acornui.serialization.intArray_usrqa2$;
  var joinToString = Kotlin.kotlin.collections.joinToString_fmv235$;
  var replace2 = $module$AcornUtils.com.acornui.core.replace2_90ijwr$;
  var StringParser = $module$AcornUtils.com.acornui.string.StringParser;
  var startsWith_0 = Kotlin.kotlin.text.startsWith_sgbm27$;
  var indexOf_1 = Kotlin.kotlin.text.indexOf_8eortd$;
  var endsWith = Kotlin.kotlin.text.endsWith_sgbm27$;
  var removeBackslashes = $module$AcornUtils.com.acornui.core.removeBackslashes_61zpoe$;
  var LazyThreadSafetyMode = Kotlin.kotlin.LazyThreadSafetyMode;
  var lazy = Kotlin.kotlin.lazy_kls4a0$;
  var Stoppable = $module$AcornUtils.com.acornui.signal.Stoppable;
  var replace2_0 = $module$AcornUtils.com.acornui.core.replace2_c4eoeh$;
  var split2 = $module$AcornUtils.com.acornui.core.split2_bauq2a$;
  var split = Kotlin.kotlin.text.split_ip8yn$;
  var substringAfterLast = Kotlin.kotlin.text.substringAfterLast_8cymmc$;
  var substringBeforeLast = Kotlin.kotlin.text.substringBeforeLast_8cymmc$;
  var equals = Kotlin.kotlin.text.equals_igcy3c$;
  var sorted = Kotlin.kotlin.collections.sorted_exjks8$;
  var substringAfter = Kotlin.kotlin.text.substringAfter_j4ogox$;
  var IllegalStateException = Kotlin.kotlin.IllegalStateException;
  var joinToString_0 = Kotlin.kotlin.collections.joinToString_cgipc5$;
  var browser_0 = $module$AcornUtils.com.acornui.browser;
  var equalsArray = $module$AcornUtils.com.acornui.collection.equalsArray_5fp2ol$;
  var emptyMap = Kotlin.kotlin.collections.emptyMap_q3lmfv$;
  var NativeBuffer = $module$AcornUtils.com.acornui.io.NativeBuffer;
  var MutableLoadable = $module$AcornUtils.com.acornui.action.MutableLoadable;
  var println = Kotlin.kotlin.io.println_s8jyv4$;
  var DualHashMap = $module$AcornUtils.com.acornui.collection.DualHashMap;
  var toInt = Kotlin.kotlin.text.toInt_pdl1vz$;
  var reverse = Kotlin.kotlin.collections.reverse_vvxzk3$;
  var Box = $module$AcornUtils.com.acornui.math.Box;
  var get_lastIndex_2 = Kotlin.kotlin.collections.get_lastIndex_tmsbgo$;
  var Ray2 = $module$AcornUtils.com.acornui.math.Ray2;
  var Rectangle = $module$AcornUtils.com.acornui.math.Rectangle;
  var IntRectangle = $module$AcornUtils.com.acornui.math.IntRectangle;
  var requireNoNulls = Kotlin.kotlin.collections.requireNoNulls_9b7vla$;
  var onFailed = $module$AcornUtils.com.acornui.action.onFailed_r6f3ly$;
  var get_lastIndex_3 = Kotlin.kotlin.text.get_lastIndex_gw00vp$;
  var isBreaking = $module$AcornUtils.com.acornui.string.isBreaking_myv2d0$;
  var lazy_0 = Kotlin.kotlin.lazy_klfg04$;
  var get_lastIndex_4 = Kotlin.kotlin.collections.get_lastIndex_rjqryz$;
  var round = $module$AcornUtils.com.acornui.core.round_81szk$;
  var equalsArray_0 = $module$AcornUtils.com.acornui.collection.equalsArray_tec1tx$;
  var arrayCopy = $module$AcornUtils.com.acornui.collection.arrayCopy_5ukzfm$;
  var hashMapOf_0 = Kotlin.kotlin.collections.hashMapOf_qfcya0$;
  var listOf = Kotlin.kotlin.collections.listOf_i5x0yv$;
  var Corners_init = $module$AcornUtils.com.acornui.math.Corners_init_mx4ult$;
  var Corners_init_0 = $module$AcornUtils.com.acornui.math.Corners_init_7b5o5w$;
  var Corners_init_1 = $module$AcornUtils.com.acornui.math.Corners_init_n34qss$;
  var Color_0 = $module$AcornUtils.com.acornui.graphics.Color_s8cxhz$;
  BoxStyle.prototype = Object.create(StyleBase.prototype);
  BoxStyle.prototype.constructor = BoxStyle;
  GradientDirection.prototype = Object.create(Enum.prototype);
  GradientDirection.prototype.constructor = GradientDirection;
  UiComponentImpl.prototype = Object.create(LifecycleBase.prototype);
  UiComponentImpl.prototype.constructor = UiComponentImpl;
  ContainerImpl.prototype = Object.create(UiComponentImpl.prototype);
  ContainerImpl.prototype.constructor = ContainerImpl;
  ElementContainerImpl.prototype = Object.create(ContainerImpl.prototype);
  ElementContainerImpl.prototype.constructor = ElementContainerImpl;
  Button.prototype = Object.create(ElementContainerImpl.prototype);
  Button.prototype.constructor = Button;
  ButtonState.prototype = Object.create(Enum.prototype);
  ButtonState.prototype.constructor = ButtonState;
  ButtonStyle.prototype = Object.create(StyleBase.prototype);
  ButtonStyle.prototype.constructor = ButtonStyle;
  Checkbox.prototype = Object.create(Button.prototype);
  Checkbox.prototype.constructor = Checkbox;
  ColorPicker.prototype = Object.create(ContainerImpl.prototype);
  ColorPicker.prototype.constructor = ColorPicker;
  ColorPickerStyle.prototype = Object.create(StyleBase.prototype);
  ColorPickerStyle.prototype.constructor = ColorPickerStyle;
  ColorPalette.prototype = Object.create(ContainerImpl.prototype);
  ColorPalette.prototype.constructor = ColorPalette;
  ColorPaletteStyle.prototype = Object.create(StyleBase.prototype);
  ColorPaletteStyle.prototype.constructor = ColorPaletteStyle;
  LayoutContainerImpl.prototype = Object.create(ElementContainerImpl.prototype);
  LayoutContainerImpl.prototype.constructor = LayoutContainerImpl;
  HorizontalLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  HorizontalLayoutContainer.prototype.constructor = HorizontalLayoutContainer;
  ColorPickerWithText.prototype = Object.create(HorizontalLayoutContainer.prototype);
  ColorPickerWithText.prototype.constructor = ColorPickerWithText;
  IntColumn.prototype = Object.create(DataGridColumn.prototype);
  IntColumn.prototype.constructor = IntColumn;
  IntCell.prototype = Object.create(ContainerImpl.prototype);
  IntCell.prototype.constructor = IntCell;
  IntEditorCell.prototype = Object.create(ContainerImpl.prototype);
  IntEditorCell.prototype.constructor = IntEditorCell;
  StringColumn.prototype = Object.create(DataGridColumn.prototype);
  StringColumn.prototype.constructor = StringColumn;
  StringCell.prototype = Object.create(ContainerImpl.prototype);
  StringCell.prototype.constructor = StringCell;
  StringEditorCell.prototype = Object.create(ContainerImpl.prototype);
  StringEditorCell.prototype.constructor = StringEditorCell;
  DataGrid.prototype = Object.create(ContainerImpl.prototype);
  DataGrid.prototype.constructor = DataGrid;
  DataGridStyle.prototype = Object.create(StyleBase.prototype);
  DataGridStyle.prototype.constructor = DataGridStyle;
  ColumnSortDirection.prototype = Object.create(Enum.prototype);
  ColumnSortDirection.prototype.constructor = ColumnSortDirection;
  VisiblePool.prototype = Object.create(ObjectPool.prototype);
  VisiblePool.prototype.constructor = VisiblePool;
  HDivider.prototype = Object.create(ElementContainerImpl.prototype);
  HDivider.prototype.constructor = HDivider;
  HeadingGroup.prototype = Object.create(ElementContainerImpl.prototype);
  HeadingGroup.prototype.constructor = HeadingGroup;
  HeadingGroupStyle.prototype = Object.create(StyleBase.prototype);
  HeadingGroupStyle.prototype.constructor = HeadingGroupStyle;
  IconButton.prototype = Object.create(Button.prototype);
  IconButton.prototype.constructor = IconButton;
  ScaleBoxLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  ScaleBoxLayoutContainer.prototype.constructor = ScaleBoxLayoutContainer;
  Image.prototype = Object.create(ScaleBoxLayoutContainer.prototype);
  Image.prototype.constructor = Image;
  InteractivityMode.prototype = Object.create(Enum.prototype);
  InteractivityMode.prototype.constructor = InteractivityMode;
  BasicLayoutData.prototype = Object.create(LayoutData.prototype);
  BasicLayoutData.prototype.constructor = BasicLayoutData;
  CanvasLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  CanvasLayoutContainer.prototype.constructor = CanvasLayoutContainer;
  CanvasLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  CanvasLayoutData.prototype.constructor = CanvasLayoutData;
  FlowLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  FlowLayoutData.prototype.constructor = FlowLayoutData;
  FlowDisplay.prototype = Object.create(Enum.prototype);
  FlowDisplay.prototype.constructor = FlowDisplay;
  FlowHAlign.prototype = Object.create(Enum.prototype);
  FlowHAlign.prototype.constructor = FlowHAlign;
  FlowVAlign.prototype = Object.create(Enum.prototype);
  FlowVAlign.prototype.constructor = FlowVAlign;
  FlowLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  FlowLayoutContainer.prototype.constructor = FlowLayoutContainer;
  GridColumn$bindable$ObjectLiteral.prototype = Object.create(ObservableProperty.prototype);
  GridColumn$bindable$ObjectLiteral.prototype.constructor = GridColumn$bindable$ObjectLiteral;
  GridLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  GridLayoutData.prototype.constructor = GridLayoutData;
  GridLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  GridLayoutContainer.prototype.constructor = GridLayoutContainer;
  FormContainer.prototype = Object.create(GridLayoutContainer.prototype);
  FormContainer.prototype.constructor = FormContainer;
  HorizontalLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  HorizontalLayoutData.prototype.constructor = HorizontalLayoutData;
  bindable$ObjectLiteral.prototype = Object.create(ObservableProperty.prototype);
  bindable$ObjectLiteral.prototype.constructor = bindable$ObjectLiteral;
  ScaleLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  ScaleLayoutData.prototype.constructor = ScaleLayoutData;
  VerticalLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  VerticalLayoutData.prototype.constructor = VerticalLayoutData;
  VerticalLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  VerticalLayoutContainer.prototype.constructor = VerticalLayoutContainer;
  VirtualDirection.prototype = Object.create(Enum.prototype);
  VirtualDirection.prototype.constructor = VirtualDirection;
  bindable$ObjectLiteral_0.prototype = Object.create(ObservableProperty.prototype);
  bindable$ObjectLiteral_0.prototype.constructor = bindable$ObjectLiteral_0;
  HAlign.prototype = Object.create(Enum.prototype);
  HAlign.prototype.constructor = HAlign;
  VAlign.prototype = Object.create(Enum.prototype);
  VAlign.prototype.constructor = VAlign;
  DataScroller.prototype = Object.create(ContainerImpl.prototype);
  DataScroller.prototype.constructor = DataScroller;
  DataScrollerStyle.prototype = Object.create(StyleBase.prototype);
  DataScrollerStyle.prototype.constructor = DataScrollerStyle;
  DataScrollerSelection.prototype = Object.create(Selection.prototype);
  DataScrollerSelection.prototype.constructor = DataScrollerSelection;
  Spacer.prototype = Object.create(UiComponentImpl.prototype);
  Spacer.prototype.constructor = Spacer;
  VirtualList.prototype = Object.create(ContainerImpl.prototype);
  VirtualList.prototype.constructor = VirtualList;
  VirtualListSelection.prototype = Object.create(Selection.prototype);
  VirtualListSelection.prototype.constructor = VirtualListSelection;
  VirtualListPool.prototype = Object.create(ObjectPool.prototype);
  VirtualListPool.prototype.constructor = VirtualListPool;
  NinePatchComponent.prototype = Object.create(ElementContainerImpl.prototype);
  NinePatchComponent.prototype.constructor = NinePatchComponent;
  NumericStepper.prototype = Object.create(ElementContainerImpl.prototype);
  NumericStepper.prototype.constructor = NumericStepper;
  NumericStepperStyle.prototype = Object.create(StyleBase.prototype);
  NumericStepperStyle.prototype.constructor = NumericStepperStyle;
  OptionsList.prototype = Object.create(ElementContainerImpl.prototype);
  OptionsList.prototype.constructor = OptionsList;
  OptionsListStyle.prototype = Object.create(StyleBase.prototype);
  OptionsListStyle.prototype.constructor = OptionsListStyle;
  Panel.prototype = Object.create(ElementContainerImpl.prototype);
  Panel.prototype.constructor = Panel;
  PanelStyle.prototype = Object.create(StyleBase.prototype);
  PanelStyle.prototype.constructor = PanelStyle;
  ProgressBarRect.prototype = Object.create(ContainerImpl.prototype);
  ProgressBarRect.prototype.constructor = ProgressBarRect;
  ProgressBarRectStyle.prototype = Object.create(StyleBase.prototype);
  ProgressBarRectStyle.prototype.constructor = ProgressBarRectStyle;
  RadioButton.prototype = Object.create(Button.prototype);
  RadioButton.prototype.constructor = RadioButton;
  Rule.prototype = Object.create(ElementContainerImpl.prototype);
  Rule.prototype.constructor = Rule;
  RuleStyle.prototype = Object.create(BoxStyle.prototype);
  RuleStyle.prototype.constructor = RuleStyle;
  ScrollBarBase.prototype = Object.create(ContainerImpl.prototype);
  ScrollBarBase.prototype.constructor = ScrollBarBase;
  HScrollBar.prototype = Object.create(ScrollBarBase.prototype);
  HScrollBar.prototype.constructor = HScrollBar;
  HSlider.prototype = Object.create(HScrollBar.prototype);
  HSlider.prototype.constructor = HSlider;
  ScrollPolicy.prototype = Object.create(Enum.prototype);
  ScrollPolicy.prototype.constructor = ScrollPolicy;
  ScrollAreaStyle.prototype = Object.create(StyleBase.prototype);
  ScrollAreaStyle.prototype.constructor = ScrollAreaStyle;
  ScrollBarStyle.prototype = Object.create(StyleBase.prototype);
  ScrollBarStyle.prototype.constructor = ScrollBarStyle;
  VScrollBar.prototype = Object.create(ScrollBarBase.prototype);
  VScrollBar.prototype.constructor = VScrollBar;
  VSlider.prototype = Object.create(VScrollBar.prototype);
  VSlider.prototype.constructor = VSlider;
  SimpleItemRenderer.prototype = Object.create(ElementContainerImpl.prototype);
  SimpleItemRenderer.prototype.constructor = SimpleItemRenderer;
  StackLayoutData.prototype = Object.create(BasicLayoutData.prototype);
  StackLayoutData.prototype.constructor = StackLayoutData;
  StackLayoutContainer.prototype = Object.create(LayoutContainerImpl.prototype);
  StackLayoutContainer.prototype.constructor = StackLayoutContainer;
  StageStyle.prototype = Object.create(StyleBase.prototype);
  StageStyle.prototype.constructor = StageStyle;
  TabNavigator.prototype = Object.create(ContainerImpl.prototype);
  TabNavigator.prototype.constructor = TabNavigator;
  TabNavigatorStyle.prototype = Object.create(StyleBase.prototype);
  TabNavigatorStyle.prototype.constructor = TabNavigatorStyle;
  TextCommand.prototype = Object.create(Enum.prototype);
  TextCommand.prototype.constructor = TextCommand;
  FlowStyle.prototype = Object.create(StyleBase.prototype);
  FlowStyle.prototype.constructor = FlowStyle;
  CharStyle.prototype = Object.create(StyleBase.prototype);
  CharStyle.prototype.constructor = CharStyle;
  VDivider.prototype = Object.create(ElementContainerImpl.prototype);
  VDivider.prototype.constructor = VDivider;
  DividerStyle.prototype = Object.create(StyleBase.prototype);
  DividerStyle.prototype.constructor = DividerStyle;
  WindowPanel.prototype = Object.create(ElementContainerImpl.prototype);
  WindowPanel.prototype.constructor = WindowPanel;
  WindowPanelStyle.prototype = Object.create(StyleBase.prototype);
  WindowPanelStyle.prototype.constructor = WindowPanelStyle;
  Browser.prototype = Object.create(Enum.prototype);
  Browser.prototype.constructor = Browser;
  AssetLoaderDecorator.prototype = Object.create(LoadableDecorator.prototype);
  AssetLoaderDecorator.prototype.constructor = AssetLoaderDecorator;
  FailedLoader.prototype = Object.create(BasicAction.prototype);
  FailedLoader.prototype.constructor = FailedLoader;
  DrivableChildBase.prototype = Object.create(LifecycleBase.prototype);
  DrivableChildBase.prototype.constructor = DrivableChildBase;
  AudioManagerImpl.prototype = Object.create(DrivableChildBase.prototype);
  AudioManagerImpl.prototype.constructor = AudioManagerImpl;
  MusicReadyState.prototype = Object.create(Enum.prototype);
  MusicReadyState.prototype.constructor = MusicReadyState;
  FocusChangeResult.prototype = Object.create(Enum.prototype);
  FocusChangeResult.prototype.constructor = FocusChangeResult;
  SimpleHighlight.prototype = Object.create(ContainerImpl.prototype);
  SimpleHighlight.prototype.constructor = SimpleHighlight;
  AtlasComponent.prototype = Object.create(ElementContainerImpl.prototype);
  AtlasComponent.prototype.constructor = AtlasComponent;
  OrthographicCamera.prototype = Object.create(CameraBase.prototype);
  OrthographicCamera.prototype.constructor = OrthographicCamera;
  PerspectiveCamera.prototype = Object.create(CameraBase.prototype);
  PerspectiveCamera.prototype.constructor = PerspectiveCamera;
  Scaling.prototype = Object.create(Enum.prototype);
  Scaling.prototype.constructor = Scaling;
  SpriteAnimation.prototype = Object.create(ContainerImpl.prototype);
  SpriteAnimation.prototype.constructor = SpriteAnimation;
  ConcurrentParent.prototype = Object.create(ParentBase.prototype);
  ConcurrentParent.prototype.constructor = ConcurrentParent;
  TreeWalk.prototype = Object.create(Enum.prototype);
  TreeWalk.prototype.constructor = TreeWalk;
  CharInteraction.prototype = Object.create(InteractionEventBase.prototype);
  CharInteraction.prototype.constructor = CharInteraction;
  MouseInteraction.prototype = Object.create(InteractionEventBase.prototype);
  MouseInteraction.prototype.constructor = MouseInteraction;
  ClickEvent.prototype = Object.create(MouseInteraction.prototype);
  ClickEvent.prototype.constructor = ClickEvent;
  ClipboardInteraction.prototype = Object.create(InteractionEventBase.prototype);
  ClipboardInteraction.prototype.constructor = ClipboardInteraction;
  DownRepeatStyle.prototype = Object.create(StyleBase.prototype);
  DownRepeatStyle.prototype.constructor = DownRepeatStyle;
  DragEvent.prototype = Object.create(InteractionEventBase.prototype);
  DragEvent.prototype.constructor = DragEvent;
  KeyInteraction.prototype = Object.create(InteractionEventBase.prototype);
  KeyInteraction.prototype.constructor = KeyInteraction;
  KeyLocation.prototype = Object.create(Enum.prototype);
  KeyLocation.prototype.constructor = KeyLocation;
  WheelInteraction.prototype = Object.create(MouseInteraction.prototype);
  WheelInteraction.prototype.constructor = WheelInteraction;
  MouseUpOutside.prototype = Object.create(StoppableSignalImpl.prototype);
  MouseUpOutside.prototype.constructor = MouseUpOutside;
  PinchInteraction.prototype = Object.create(InteractionEventBase.prototype);
  PinchInteraction.prototype.constructor = PinchInteraction;
  TouchInteraction.prototype = Object.create(InteractionEventBase.prototype);
  TouchInteraction.prototype.constructor = TouchInteraction;
  WhichButton.prototype = Object.create(Enum.prototype);
  WhichButton.prototype.constructor = WhichButton;
  Binder$bindable$ObjectLiteral.prototype = Object.create(ObservableProperty.prototype);
  Binder$bindable$ObjectLiteral.prototype.constructor = Binder$bindable$ObjectLiteral;
  Lift.prototype = Object.create(ElementContainerImpl.prototype);
  Lift.prototype.constructor = Lift;
  LiftStack.prototype = Object.create(StackLayoutContainer.prototype);
  LiftStack.prototype.constructor = LiftStack;
  PopUpManagerStyle.prototype = Object.create(StyleBase.prototype);
  PopUpManagerStyle.prototype.constructor = PopUpManagerStyle;
  PopUpManagerImpl.prototype = Object.create(CanvasLayoutContainer.prototype);
  PopUpManagerImpl.prototype.constructor = PopUpManagerImpl;
  ResponseType.prototype = Object.create(Enum.prototype);
  ResponseType.prototype.constructor = ResponseType;
  ResponseException.prototype = Object.create(Exception.prototype);
  ResponseException.prototype.constructor = ResponseException;
  LimitedCallback.prototype = Object.create(DrivableChildBase.prototype);
  LimitedCallback.prototype.constructor = LimitedCallback;
  DelayedCallback.prototype = Object.create(DrivableChildBase.prototype);
  DelayedCallback.prototype.constructor = DelayedCallback;
  OnTick.prototype = Object.create(DrivableChildBase.prototype);
  OnTick.prototype.constructor = OnTick;
  TimeDriverImpl.prototype = Object.create(LifecycleBase.prototype);
  TimeDriverImpl.prototype.constructor = TimeDriverImpl;
  drive$ObjectLiteral.prototype = Object.create(DrivableChildBase.prototype);
  drive$ObjectLiteral.prototype.constructor = drive$ObjectLiteral;
  Timer.prototype = Object.create(DrivableChildBase.prototype);
  Timer.prototype.constructor = Timer;
  EnterFrame.prototype = Object.create(DrivableChildBase.prototype);
  EnterFrame.prototype.constructor = EnterFrame;
  CallbackTween.prototype = Object.create(TweenBase.prototype);
  CallbackTween.prototype.constructor = CallbackTween;
  TimelineTween.prototype = Object.create(TweenBase.prototype);
  TimelineTween.prototype.constructor = TimelineTween;
  TweenImpl.prototype = Object.create(TweenBase.prototype);
  TweenImpl.prototype.constructor = TweenImpl;
  TweenDriver.prototype = Object.create(DrivableChildBase.prototype);
  TweenDriver.prototype.constructor = TweenDriver;
  DynamicMeshComponent.prototype = Object.create(UiComponentImpl.prototype);
  DynamicMeshComponent.prototype.constructor = DynamicMeshComponent;
  MeshIntersectionType.prototype = Object.create(Enum.prototype);
  MeshIntersectionType.prototype.constructor = MeshIntersectionType;
  StaticMeshComponent.prototype = Object.create(UiComponentImpl.prototype);
  StaticMeshComponent.prototype.constructor = StaticMeshComponent;
  GlFilter.prototype = Object.create(StackLayoutContainer.prototype);
  GlFilter.prototype.constructor = GlFilter;
  GlRect.prototype = Object.create(ContainerImpl.prototype);
  GlRect.prototype.constructor = GlRect;
  GlScrollArea.prototype = Object.create(ElementContainerImpl.prototype);
  GlScrollArea.prototype.constructor = GlScrollArea;
  GlStageImpl.prototype = Object.create(ElementContainerImpl.prototype);
  GlStageImpl.prototype.constructor = GlStageImpl;
  GlTextureComponent.prototype = Object.create(UiComponentImpl.prototype);
  GlTextureComponent.prototype.constructor = GlTextureComponent;
  GlScrollRect.prototype = Object.create(ElementContainerImpl.prototype);
  GlScrollRect.prototype.constructor = GlScrollRect;
  GlTextField.prototype = Object.create(ContainerImpl.prototype);
  GlTextField.prototype.constructor = GlTextField;
  GlEditableTextField.prototype = Object.create(GlTextField.prototype);
  GlEditableTextField.prototype.constructor = GlEditableTextField;
  TfWord.prototype = Object.create(BasicLayoutElementImpl.prototype);
  TfWord.prototype.constructor = TfWord;
  GlTextInput.prototype = Object.create(ContainerImpl.prototype);
  GlTextInput.prototype.constructor = GlTextInput;
  GlTextArea.prototype = Object.create(GlTextInput.prototype);
  GlTextArea.prototype.constructor = GlTextArea;
  BufferUsage.prototype = Object.create(Enum.prototype);
  BufferUsage.prototype.constructor = BufferUsage;
  BufferTexture.prototype = Object.create(GlTextureBase.prototype);
  BufferTexture.prototype.constructor = BufferTexture;
  TextureTarget.prototype = Object.create(Enum.prototype);
  TextureTarget.prototype.constructor = TextureTarget;
  TextureMagFilter.prototype = Object.create(Enum.prototype);
  TextureMagFilter.prototype.constructor = TextureMagFilter;
  TextureMinFilter.prototype = Object.create(Enum.prototype);
  TextureMinFilter.prototype.constructor = TextureMinFilter;
  TextureWrapMode.prototype = Object.create(Enum.prototype);
  TextureWrapMode.prototype.constructor = TextureWrapMode;
  TexturePixelFormat.prototype = Object.create(Enum.prototype);
  TexturePixelFormat.prototype.constructor = TexturePixelFormat;
  TexturePixelType.prototype = Object.create(Enum.prototype);
  TexturePixelType.prototype.constructor = TexturePixelType;
  RgbTexture.prototype = Object.create(GlTextureBase.prototype);
  RgbTexture.prototype.constructor = RgbTexture;
  ShaderCompileException.prototype = Object.create(Exception.prototype);
  ShaderCompileException.prototype.constructor = ShaderCompileException;
  DefaultShaderProgram.prototype = Object.create(ShaderProgramBase.prototype);
  DefaultShaderProgram.prototype.constructor = DefaultShaderProgram;
  standardVertexAttributes$ObjectLiteral.prototype = Object.create(VertexAttributes.prototype);
  standardVertexAttributes$ObjectLiteral.prototype.constructor = standardVertexAttributes$ObjectLiteral;
  CheckboxSkinPart.prototype = Object.create(HorizontalLayoutContainer.prototype);
  CheckboxSkinPart.prototype.constructor = CheckboxSkinPart;
  LabelButtonSkinPart.prototype = Object.create(ElementContainerImpl.prototype);
  LabelButtonSkinPart.prototype.constructor = LabelButtonSkinPart;
  IconButtonSkinPart.prototype = Object.create(ElementContainerImpl.prototype);
  IconButtonSkinPart.prototype.constructor = IconButtonSkinPart;
  var assertionsEnabled;
  function _assert(value, message) {
    if (message === void 0)
      message = 'Assertion failed';
    if (assertionsEnabled) {
      if (!value) {
        throw new Exception('' + Kotlin.toString(message));
      }
    }
  }
  var _assert_0 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui._assert_4ina18$', function (value, lazyMessage) {
    if (_.com.acornui.assertionsEnabled) {
      if (!value) {
        var message = lazyMessage();
        throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message));
      }
    }
  });
  var _assert_1 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui._assert_d2rpia$', function (lazyValue, message) {
    if (message === void 0)
      message = 'Assertion failed';
    if (_.com.acornui.assertionsEnabled) {
      if (!lazyValue()) {
        throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message));
      }
    }
  });
  var _assert_2 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui._assert_fwoila$', function (lazyValue, lazyMessage) {
    if (_.com.acornui.assertionsEnabled) {
      if (!lazyValue()) {
        var message = lazyMessage();
        throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message));
      }
    }
  });
  function AttachmentHolder() {
  }
  AttachmentHolder.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'AttachmentHolder',
    interfaces: []
  };
  function createOrReuseAttachment($receiver, key, factory_0) {
    var existing = $receiver.getAttachment_pgxeca$(key);
    if (existing != null) {
      return existing;
    }
     else {
      var newAttachment = factory_0();
      $receiver.addAttachment_wn2jw4$(key, newAttachment);
      return newAttachment;
    }
  }
  function BoxStyle() {
    BoxStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_tnjw1n$_0 = BoxStyle$Companion_getInstance();
    this.linearGradient$delegate = this.prop_umlfku$('linearGradient', null);
    this.backgroundColor$delegate = this.prop_umlfku$('backgroundColor', Color.Companion.CLEAR.copy_7b5o5w$());
    this.borderColor$delegate = this.prop_umlfku$('borderColor', new BorderColors());
    this.borderThickness$delegate = this.prop_umlfku$('borderThickness', Pad_init());
    this.borderRadius$delegate = this.prop_umlfku$('borderRadius', new Corners());
    this.margin$delegate = this.prop_umlfku$('margin', Pad_init());
    this.padding$delegate = this.prop_umlfku$('padding', Pad_init());
  }
  Object.defineProperty(BoxStyle.prototype, 'type', {
    get: function () {
      return this.type_tnjw1n$_0;
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'linearGradient', {
    get: function () {
      return this.linearGradient$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('linearGradient'));
    },
    set: function (linearGradient) {
      this.linearGradient$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('linearGradient'), linearGradient);
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'backgroundColor', {
    get: function () {
      return this.backgroundColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('backgroundColor'));
    },
    set: function (backgroundColor) {
      this.backgroundColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('backgroundColor'), backgroundColor);
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'borderColor', {
    get: function () {
      return this.borderColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderColor'));
    },
    set: function (borderColor) {
      this.borderColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderColor'), borderColor);
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'borderThickness', {
    get: function () {
      return this.borderThickness$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderThickness'));
    },
    set: function (borderThickness) {
      this.borderThickness$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderThickness'), borderThickness);
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'borderRadius', {
    get: function () {
      return this.borderRadius$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderRadius'));
    },
    set: function (borderRadius) {
      this.borderRadius$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderRadius'), borderRadius);
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'margin', {
    get: function () {
      return this.margin$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('margin'));
    },
    set: function (margin) {
      this.margin$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('margin'), margin);
    }
  });
  Object.defineProperty(BoxStyle.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  function BoxStyle$Companion() {
    BoxStyle$Companion_instance = this;
  }
  BoxStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var BoxStyle$Companion_instance = null;
  function BoxStyle$Companion_getInstance() {
    if (BoxStyle$Companion_instance === null) {
      new BoxStyle$Companion();
    }
    return BoxStyle$Companion_instance;
  }
  BoxStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BoxStyle',
    interfaces: [StyleBase]
  };
  function BoxStyleSerializer() {
    BoxStyleSerializer_instance = this;
  }
  BoxStyleSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    (tmp$ = styleProperty(writer, $receiver, 'linearGradient')) != null ? obj(tmp$, $receiver.linearGradient, LinearGradientSerializer_getInstance()) : null;
    (tmp$_0 = styleProperty(writer, $receiver, 'backgroundColor')) != null ? color(tmp$_0, $receiver.backgroundColor) : null;
    (tmp$_1 = styleProperty(writer, $receiver, 'borderColor')) != null ? obj(tmp$_1, $receiver.borderColor, BorderColorsSerializer_getInstance()) : null;
    (tmp$_2 = styleProperty(writer, $receiver, 'borderThickness')) != null ? obj(tmp$_2, $receiver.borderThickness, math_0.PadSerializer) : null;
    (tmp$_3 = styleProperty(writer, $receiver, 'borderRadius')) != null ? obj(tmp$_3, $receiver.borderRadius, math_0.CornersSerializer) : null;
    (tmp$_4 = styleProperty(writer, $receiver, 'margin')) != null ? obj(tmp$_4, $receiver.margin, math_0.PadSerializer) : null;
  };
  BoxStyleSerializer.prototype.read_gax0m7$ = function (reader) {
    var boxStyle_0 = new BoxStyle();
    this.read_vakiwy$(reader, boxStyle_0);
    return boxStyle_0;
  };
  BoxStyleSerializer.prototype.read_vakiwy$ = function (reader, boxStyle_0) {
    var name = 'linearGradient';
    var tmp$;
    if (reader.contains_61zpoe$(name)) {
      boxStyle_0.linearGradient = obj_0((tmp$ = reader.get_61zpoe$(name)) != null ? tmp$ : Kotlin.throwNPE(), LinearGradientSerializer_getInstance());
    }
    var name_0 = 'backgroundColor';
    var tmp$_0;
    if (reader.contains_61zpoe$(name_0)) {
      var tmp$_1;
      boxStyle_0.backgroundColor = (tmp$_1 = color_0((tmp$_0 = reader.get_61zpoe$(name_0)) != null ? tmp$_0 : Kotlin.throwNPE())) != null ? tmp$_1 : Kotlin.throwNPE();
    }
    var name_1 = 'borderColor';
    var tmp$_2;
    if (reader.contains_61zpoe$(name_1)) {
      var tmp$_3;
      boxStyle_0.borderColor = (tmp$_3 = obj_0((tmp$_2 = reader.get_61zpoe$(name_1)) != null ? tmp$_2 : Kotlin.throwNPE(), BorderColorsSerializer_getInstance())) != null ? tmp$_3 : Kotlin.throwNPE();
    }
    var name_2 = 'borderThickness';
    var tmp$_4;
    if (reader.contains_61zpoe$(name_2)) {
      var tmp$_5;
      boxStyle_0.borderThickness = (tmp$_5 = obj_0((tmp$_4 = reader.get_61zpoe$(name_2)) != null ? tmp$_4 : Kotlin.throwNPE(), math_0.PadSerializer)) != null ? tmp$_5 : Kotlin.throwNPE();
    }
    var name_3 = 'borderRadius';
    var tmp$_6;
    if (reader.contains_61zpoe$(name_3)) {
      var tmp$_7;
      boxStyle_0.borderRadius = (tmp$_7 = obj_0((tmp$_6 = reader.get_61zpoe$(name_3)) != null ? tmp$_6 : Kotlin.throwNPE(), math_0.CornersSerializer)) != null ? tmp$_7 : Kotlin.throwNPE();
    }
    var tmp$_8;
    if (reader.contains_61zpoe$('margin')) {
      var tmp$_9;
      boxStyle_0.margin = (tmp$_9 = obj_0((tmp$_8 = reader.get_61zpoe$('margin')) != null ? tmp$_8 : Kotlin.throwNPE(), math_0.PadSerializer)) != null ? tmp$_9 : Kotlin.throwNPE();
    }
  };
  BoxStyleSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'BoxStyleSerializer',
    interfaces: [From, To]
  };
  var BoxStyleSerializer_instance = null;
  function BoxStyleSerializer_getInstance() {
    if (BoxStyleSerializer_instance === null) {
      new BoxStyleSerializer();
    }
    return BoxStyleSerializer_instance;
  }
  function boxStyle(init) {
    var b = new BoxStyle();
    init(b);
    return b;
  }
  function LinearGradient$lambda(closure$colors) {
    return function (it) {
      return new ColorStop(closure$colors[it]);
    };
  }
  function LinearGradient(direction, colors) {
    var colorStops = Kotlin.newArrayF(colors.length, LinearGradient$lambda(colors));
    return new LinearGradient_0(direction, 0.0, toMutableList(colorStops));
  }
  function LinearGradient_1(direction, colorStops) {
    return new LinearGradient_0(direction, 0.0, toMutableList(colorStops));
  }
  function LinearGradient_2(angle, colorStops) {
    return new LinearGradient_0(GradientDirection$ANGLE_getInstance(), angle, toMutableList(colorStops));
  }
  function LinearGradient_0(direction, angle, colorStops) {
    this.direction = direction;
    this.angle = angle;
    this.colorStops = colorStops;
  }
  LinearGradient_0.prototype.toCssString = function () {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = this.direction;
    if (Kotlin.equals(tmp$, GradientDirection$TOP_LEFT_getInstance()))
      tmp$_0 = 'to left top';
    else if (Kotlin.equals(tmp$, GradientDirection$TOP_getInstance()))
      tmp$_0 = 'to top';
    else if (Kotlin.equals(tmp$, GradientDirection$TOP_RIGHT_getInstance()))
      tmp$_0 = 'to top right';
    else if (Kotlin.equals(tmp$, GradientDirection$RIGHT_getInstance()))
      tmp$_0 = 'to right';
    else if (Kotlin.equals(tmp$, GradientDirection$BOTTOM_RIGHT_getInstance()))
      tmp$_0 = 'to bottom right';
    else if (Kotlin.equals(tmp$, GradientDirection$BOTTOM_getInstance()))
      tmp$_0 = 'to bottom';
    else if (Kotlin.equals(tmp$, GradientDirection$BOTTOM_LEFT_getInstance()))
      tmp$_0 = 'to bottom left';
    else if (Kotlin.equals(tmp$, GradientDirection$LEFT_getInstance()))
      tmp$_0 = 'to left';
    else if (Kotlin.equals(tmp$, GradientDirection$ANGLE_getInstance()))
      tmp$_0 = radToDeg(this.angle).toString() + 'deg';
    else
      tmp$_0 = Kotlin.noWhenBranchMatched();
    var angleStr = tmp$_0;
    var colorStopsStr = '';
    tmp$_1 = this.colorStops.iterator();
    while (tmp$_1.hasNext()) {
      var colorStop = tmp$_1.next();
      if (!Kotlin.equals(colorStopsStr, ''))
        colorStopsStr += ', ';
      colorStopsStr += colorStop.toCssString();
    }
    return 'linear-gradient(' + angleStr + ', ' + colorStopsStr + ')';
  };
  LinearGradient_0.prototype.getAngle_dleff0$ = function (width, height) {
    if (this.direction === GradientDirection$ANGLE_getInstance())
      return this.angle;
    else
      return this.direction.getAngle_dleff0$(width, height);
  };
  LinearGradient_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LinearGradient',
    interfaces: []
  };
  LinearGradient_0.prototype.component1 = function () {
    return this.direction;
  };
  LinearGradient_0.prototype.component2 = function () {
    return this.angle;
  };
  LinearGradient_0.prototype.component3 = function () {
    return this.colorStops;
  };
  LinearGradient_0.prototype.copy_l9n30r$ = function (direction, angle, colorStops) {
    return new LinearGradient_0(direction === void 0 ? this.direction : direction, angle === void 0 ? this.angle : angle, colorStops === void 0 ? this.colorStops : colorStops);
  };
  LinearGradient_0.prototype.toString = function () {
    return 'LinearGradient(direction=' + Kotlin.toString(this.direction) + (', angle=' + Kotlin.toString(this.angle)) + (', colorStops=' + Kotlin.toString(this.colorStops)) + ')';
  };
  LinearGradient_0.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.direction) | 0;
    result = result * 31 + Kotlin.hashCode(this.angle) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorStops) | 0;
    return result;
  };
  LinearGradient_0.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.direction, other.direction) && Kotlin.equals(this.angle, other.angle) && Kotlin.equals(this.colorStops, other.colorStops)))));
  };
  function LinearGradientSerializer() {
    LinearGradientSerializer_instance = this;
  }
  LinearGradientSerializer.prototype.read_gax0m7$ = function (reader) {
    var tmp$, tmp$_2, tmp$_0, tmp$_3, tmp$_1;
    tmp$_2 = GradientDirection$valueOf((tmp$ = string_0(reader, 'direction')) != null ? tmp$ : Kotlin.throwNPE());
    tmp$_3 = (tmp$_0 = float(reader, 'angle')) != null ? tmp$_0 : Kotlin.throwNPE();
    var name = 'colorStops';
    var itemFactory = ColorStopSerializer_getInstance();
    var tmp$_4;
    var tmp$_5;
    if ((tmp$_4 = reader.get_61zpoe$(name)) != null) {
      var e = tmp$_4.elements();
      tmp$_5 = Kotlin.newArrayF(e.size, $module$AcornUtils.com.acornui.serialization.array2$f(itemFactory, e));
    }
     else
      tmp$_5 = null;
    var b = new LinearGradient_0(tmp$_2, tmp$_3, toMutableList((tmp$_1 = tmp$_5) != null ? tmp$_1 : Kotlin.throwNPE()));
    return b;
  };
  LinearGradientSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    string_1(writer, 'direction', $receiver.direction.name);
    float_0(writer, 'angle', $receiver.angle);
    array(writer, 'colorStops', $receiver.colorStops, ColorStopSerializer_getInstance());
  };
  LinearGradientSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'LinearGradientSerializer',
    interfaces: [From, To]
  };
  var LinearGradientSerializer_instance = null;
  function LinearGradientSerializer_getInstance() {
    if (LinearGradientSerializer_instance === null) {
      new LinearGradientSerializer();
    }
    return LinearGradientSerializer_instance;
  }
  function GradientDirection(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function GradientDirection_initFields() {
    GradientDirection_initFields = function () {
    };
    GradientDirection$TOP_LEFT_instance = new GradientDirection('TOP_LEFT', 0);
    GradientDirection$TOP_instance = new GradientDirection('TOP', 1);
    GradientDirection$TOP_RIGHT_instance = new GradientDirection('TOP_RIGHT', 2);
    GradientDirection$RIGHT_instance = new GradientDirection('RIGHT', 3);
    GradientDirection$BOTTOM_RIGHT_instance = new GradientDirection('BOTTOM_RIGHT', 4);
    GradientDirection$BOTTOM_instance = new GradientDirection('BOTTOM', 5);
    GradientDirection$BOTTOM_LEFT_instance = new GradientDirection('BOTTOM_LEFT', 6);
    GradientDirection$LEFT_instance = new GradientDirection('LEFT', 7);
    GradientDirection$ANGLE_instance = new GradientDirection('ANGLE', 8);
  }
  var GradientDirection$TOP_LEFT_instance;
  function GradientDirection$TOP_LEFT_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$TOP_LEFT_instance;
  }
  var GradientDirection$TOP_instance;
  function GradientDirection$TOP_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$TOP_instance;
  }
  var GradientDirection$TOP_RIGHT_instance;
  function GradientDirection$TOP_RIGHT_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$TOP_RIGHT_instance;
  }
  var GradientDirection$RIGHT_instance;
  function GradientDirection$RIGHT_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$RIGHT_instance;
  }
  var GradientDirection$BOTTOM_RIGHT_instance;
  function GradientDirection$BOTTOM_RIGHT_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$BOTTOM_RIGHT_instance;
  }
  var GradientDirection$BOTTOM_instance;
  function GradientDirection$BOTTOM_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$BOTTOM_instance;
  }
  var GradientDirection$BOTTOM_LEFT_instance;
  function GradientDirection$BOTTOM_LEFT_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$BOTTOM_LEFT_instance;
  }
  var GradientDirection$LEFT_instance;
  function GradientDirection$LEFT_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$LEFT_instance;
  }
  var GradientDirection$ANGLE_instance;
  function GradientDirection$ANGLE_getInstance() {
    GradientDirection_initFields();
    return GradientDirection$ANGLE_instance;
  }
  GradientDirection.prototype.getAngle_dleff0$ = function (width, height) {
    var tmp$;
    if (Kotlin.equals(this, GradientDirection$TOP_LEFT_getInstance()))
      tmp$ = math_0.MathUtils.atan2_dleff0$(-height, width);
    else if (Kotlin.equals(this, GradientDirection$TOP_getInstance()))
      tmp$ = 0.0;
    else if (Kotlin.equals(this, GradientDirection$TOP_RIGHT_getInstance()))
      tmp$ = math_0.MathUtils.atan2_dleff0$(height, width);
    else if (Kotlin.equals(this, GradientDirection$RIGHT_getInstance()))
      tmp$ = 0.5 * math_0.PI;
    else if (Kotlin.equals(this, GradientDirection$BOTTOM_RIGHT_getInstance()))
      tmp$ = math_0.MathUtils.atan2_dleff0$(height, -width);
    else if (Kotlin.equals(this, GradientDirection$BOTTOM_getInstance()))
      tmp$ = math_0.PI;
    else if (Kotlin.equals(this, GradientDirection$BOTTOM_LEFT_getInstance()))
      tmp$ = math_0.MathUtils.atan2_dleff0$(-height, -width);
    else if (Kotlin.equals(this, GradientDirection$LEFT_getInstance()))
      tmp$ = 1.5 * math_0.PI;
    else if (Kotlin.equals(this, GradientDirection$ANGLE_getInstance()))
      tmp$ = 0.0;
    else
      tmp$ = Kotlin.noWhenBranchMatched();
    return tmp$;
  };
  GradientDirection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GradientDirection',
    interfaces: [Enum]
  };
  function GradientDirection$values() {
    return [GradientDirection$TOP_LEFT_getInstance(), GradientDirection$TOP_getInstance(), GradientDirection$TOP_RIGHT_getInstance(), GradientDirection$RIGHT_getInstance(), GradientDirection$BOTTOM_RIGHT_getInstance(), GradientDirection$BOTTOM_getInstance(), GradientDirection$BOTTOM_LEFT_getInstance(), GradientDirection$LEFT_getInstance(), GradientDirection$ANGLE_getInstance()];
  }
  GradientDirection.values = GradientDirection$values;
  function GradientDirection$valueOf(name) {
    switch (name) {
      case 'TOP_LEFT':
        return GradientDirection$TOP_LEFT_getInstance();
      case 'TOP':
        return GradientDirection$TOP_getInstance();
      case 'TOP_RIGHT':
        return GradientDirection$TOP_RIGHT_getInstance();
      case 'RIGHT':
        return GradientDirection$RIGHT_getInstance();
      case 'BOTTOM_RIGHT':
        return GradientDirection$BOTTOM_RIGHT_getInstance();
      case 'BOTTOM':
        return GradientDirection$BOTTOM_getInstance();
      case 'BOTTOM_LEFT':
        return GradientDirection$BOTTOM_LEFT_getInstance();
      case 'LEFT':
        return GradientDirection$LEFT_getInstance();
      case 'ANGLE':
        return GradientDirection$ANGLE_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.GradientDirection.' + name);
    }
  }
  GradientDirection.valueOf_61zpoe$ = GradientDirection$valueOf;
  function ColorStop(color_3, percent, pixels) {
    if (percent === void 0)
      percent = null;
    if (pixels === void 0)
      pixels = null;
    this.color = color_3;
    this.percent = percent;
    this.pixels = pixels;
  }
  ColorStop.prototype.toCssString = function () {
    var tmp$;
    var str = this.color.toCssString();
    if (this.percent != null)
      str += ' ' + ((tmp$ = this.percent) != null ? tmp$ : Kotlin.throwNPE()) * 100.0 + '%';
    else if (this.pixels != null)
      str += ' ' + Kotlin.toString(this.pixels) + 'px';
    return str;
  };
  ColorStop.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorStop',
    interfaces: []
  };
  ColorStop.prototype.component1 = function () {
    return this.color;
  };
  ColorStop.prototype.component2 = function () {
    return this.percent;
  };
  ColorStop.prototype.component3 = function () {
    return this.pixels;
  };
  ColorStop.prototype.copy_4lnpwa$ = function (color_3, percent, pixels) {
    return new ColorStop(color_3 === void 0 ? this.color : color_3, percent === void 0 ? this.percent : percent, pixels === void 0 ? this.pixels : pixels);
  };
  ColorStop.prototype.toString = function () {
    return 'ColorStop(color=' + Kotlin.toString(this.color) + (', percent=' + Kotlin.toString(this.percent)) + (', pixels=' + Kotlin.toString(this.pixels)) + ')';
  };
  ColorStop.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.color) | 0;
    result = result * 31 + Kotlin.hashCode(this.percent) | 0;
    result = result * 31 + Kotlin.hashCode(this.pixels) | 0;
    return result;
  };
  ColorStop.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.color, other.color) && Kotlin.equals(this.percent, other.percent) && Kotlin.equals(this.pixels, other.pixels)))));
  };
  function ColorStopSerializer() {
    ColorStopSerializer_instance = this;
  }
  ColorStopSerializer.prototype.read_gax0m7$ = function (reader) {
    var tmp$;
    var c = new ColorStop((tmp$ = color_1(reader, 'color')) != null ? tmp$ : Kotlin.throwNPE(), float(reader, 'percent'), float(reader, 'pixels'));
    return c;
  };
  ColorStopSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    color_2(writer, 'color', $receiver.color);
    if ($receiver.percent != null)
      float_0(writer, 'percent', $receiver.percent);
    if ($receiver.pixels != null)
      float_0(writer, 'pixels', $receiver.pixels);
  };
  ColorStopSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'ColorStopSerializer',
    interfaces: [From, To]
  };
  var ColorStopSerializer_instance = null;
  function ColorStopSerializer_getInstance() {
    if (ColorStopSerializer_instance === null) {
      new ColorStopSerializer();
    }
    return ColorStopSerializer_instance;
  }
  function BorderColors(top, right, bottom, left) {
    if (top === void 0)
      top = Color.Companion.CLEAR.copy_7b5o5w$();
    if (right === void 0)
      right = Color.Companion.CLEAR.copy_7b5o5w$();
    if (bottom === void 0)
      bottom = Color.Companion.CLEAR.copy_7b5o5w$();
    if (left === void 0)
      left = Color.Companion.CLEAR.copy_7b5o5w$();
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.left = left;
  }
  BorderColors.prototype.set_1qghwi$ = function (all) {
    this.top.set_1qghwi$(all);
    this.right.set_1qghwi$(all);
    this.bottom.set_1qghwi$(all);
    this.left.set_1qghwi$(all);
    return this;
  };
  BorderColors.prototype.set_4ifqej$ = function (other) {
    this.top.set_1qghwi$(other.top);
    this.right.set_1qghwi$(other.right);
    this.bottom.set_1qghwi$(other.bottom);
    this.left.set_1qghwi$(other.left);
    return this;
  };
  BorderColors.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BorderColors',
    interfaces: []
  };
  function BorderColors_init(all, $this) {
    $this = $this || Object.create(BorderColors.prototype);
    BorderColors.call($this);
    $this.set_1qghwi$(all);
    return $this;
  }
  BorderColors.prototype.component1 = function () {
    return this.top;
  };
  BorderColors.prototype.component2 = function () {
    return this.right;
  };
  BorderColors.prototype.component3 = function () {
    return this.bottom;
  };
  BorderColors.prototype.component4 = function () {
    return this.left;
  };
  BorderColors.prototype.copy_67bdn8$ = function (top, right, bottom, left) {
    return new BorderColors_init(top === void 0 ? this.top : top, right === void 0 ? this.right : right, bottom === void 0 ? this.bottom : bottom, left === void 0 ? this.left : left);
  };
  BorderColors.prototype.toString = function () {
    return 'BorderColors(top=' + Kotlin.toString(this.top) + (', right=' + Kotlin.toString(this.right)) + (', bottom=' + Kotlin.toString(this.bottom)) + (', left=' + Kotlin.toString(this.left)) + ')';
  };
  BorderColors.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.top) | 0;
    result = result * 31 + Kotlin.hashCode(this.right) | 0;
    result = result * 31 + Kotlin.hashCode(this.bottom) | 0;
    result = result * 31 + Kotlin.hashCode(this.left) | 0;
    return result;
  };
  BorderColors.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.top, other.top) && Kotlin.equals(this.right, other.right) && Kotlin.equals(this.bottom, other.bottom) && Kotlin.equals(this.left, other.left)))));
  };
  function BorderColorsSerializer() {
    BorderColorsSerializer_instance = this;
  }
  BorderColorsSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    color_2(writer, 'top', $receiver.top);
    color_2(writer, 'right', $receiver.right);
    color_2(writer, 'bottom', $receiver.bottom);
    color_2(writer, 'left', $receiver.left);
  };
  BorderColorsSerializer.prototype.read_gax0m7$ = function (reader) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    return new BorderColors((tmp$ = color_1(reader, 'top')) != null ? tmp$ : Kotlin.throwNPE(), (tmp$_0 = color_1(reader, 'right')) != null ? tmp$_0 : Kotlin.throwNPE(), (tmp$_1 = color_1(reader, 'bottom')) != null ? tmp$_1 : Kotlin.throwNPE(), (tmp$_2 = color_1(reader, 'left')) != null ? tmp$_2 : Kotlin.throwNPE());
  };
  BorderColorsSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'BorderColorsSerializer',
    interfaces: [From, To]
  };
  var BorderColorsSerializer_instance = null;
  function BorderColorsSerializer_getInstance() {
    if (BorderColorsSerializer_instance === null) {
      new BorderColorsSerializer();
    }
    return BorderColorsSerializer_instance;
  }
  function Button(owner) {
    Button$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.style = style(this, new ButtonStyle());
    this.selectedChanged = own(this, new Signal1());
    this.toggle = false;
    this._mouseIsOver = false;
    this._mouseIsDown = false;
    this._disabled = false;
    this._selected = false;
    this._label = '';
    this._currentState_zg4wqv$_0 = ButtonState$UP_getInstance();
    this._currentSkinPart_zg4wqv$_0 = null;
    this._stateSkinMap_zg4wqv$_0 = HashMap_init();
    this.focusEnabled_zg4wqv$_0 = true;
    this.focusOrder_zg4wqv$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.rollOverHandler_zg4wqv$_0 = Button$rollOverHandler$lambda(this);
    this.rollOutHandler_zg4wqv$_0 = Button$rollOutHandler$lambda(this);
    this.mouseDownHandler_zg4wqv$_0 = Button$mouseDownHandler$lambda(this);
    this.touchStartHandler_zg4wqv$_0 = Button$touchStartHandler$lambda(this);
    this.stageMouseUpHandler_zg4wqv$_0 = Button$stageMouseUpHandler$lambda(this);
    this.stageTouchEndHandler_zg4wqv$_0 = Button$stageTouchEndHandler$lambda(this);
    this.clickHandler_zg4wqv$_0 = Button$clickHandler$lambda(this);
    addTag(this, Button$Companion_getInstance());
    if (!UserInfo_getInstance().isTouchDevice) {
      rollOver(this).add_trkh7z$(this.rollOverHandler_zg4wqv$_0);
      rollOut(this).add_trkh7z$(this.rollOutHandler_zg4wqv$_0);
    }
    mouseDown(this).add_trkh7z$(this.mouseDownHandler_zg4wqv$_0);
    touchStart(this).add_trkh7z$(this.touchStartHandler_zg4wqv$_0);
    click(this).add_trkh7z$(this.clickHandler_zg4wqv$_0);
    cursor(this, StandardCursors_getInstance().HAND);
    var oldInstances = ArrayList_init();
    onChanged(this.style, Button_init$lambda(oldInstances, this));
  }
  Object.defineProperty(Button.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_zg4wqv$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_zg4wqv$_0 = focusEnabled;
    }
  });
  Object.defineProperty(Button.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_zg4wqv$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_zg4wqv$_0 = focusOrder;
    }
  });
  Object.defineProperty(Button.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(Button.prototype, 'disabled', {
    get: function () {
      return this._disabled;
    },
    set: function (value) {
      if (Kotlin.equals(this._disabled, value))
        return;
      this._disabled = value;
      this.interactivityMode = value ? InteractivityMode$NONE_getInstance() : InteractivityMode$ALL_getInstance();
      this.refreshState();
    }
  });
  Object.defineProperty(Button.prototype, 'selected', {
    get: function () {
      return this._selected;
    },
    set: function (value) {
      if (Kotlin.equals(this._selected, value))
        return;
      this._selected = value;
      this.refreshState();
      this.selectedChanged.dispatch_11rb$(this);
    }
  });
  Button.prototype.refreshState = function () {
    this.currentState_yiv4ds$(this.calculateButtonState());
  };
  Button.prototype.calculateButtonState = function () {
    var newState;
    if (this._disabled) {
      newState = ButtonState$DISABLED_getInstance();
    }
     else {
      if (this._selected) {
        if (this._mouseIsDown) {
          newState = ButtonState$SELECTED_DOWN_getInstance();
        }
         else if (this._mouseIsOver) {
          newState = ButtonState$SELECTED_OVER_getInstance();
        }
         else {
          newState = ButtonState$SELECTED_UP_getInstance();
        }
      }
       else {
        if (this._mouseIsDown) {
          newState = ButtonState$DOWN_getInstance();
        }
         else if (this._mouseIsOver) {
          newState = ButtonState$OVER_getInstance();
        }
         else {
          newState = ButtonState$UP_getInstance();
        }
      }
    }
    return newState;
  };
  Object.defineProperty(Button.prototype, 'currentSkinPart', {
    get: function () {
      return this._currentSkinPart_zg4wqv$_0;
    }
  });
  Object.defineProperty(Button.prototype, 'currentState', {
    get: function () {
      return this._currentState_zg4wqv$_0;
    }
  });
  Button.prototype.currentState_yiv4ds$ = function (newState) {
    var tmp$;
    if (this.isDisposed)
      return;
    var previousState = this._currentState_zg4wqv$_0;
    this._currentState_zg4wqv$_0 = newState;
    var newSkinPart = (tmp$ = this._stateSkinMap_zg4wqv$_0.get_11rb$(newState)) != null ? tmp$.instance : null;
    var previousSkinPart = this._currentSkinPart_zg4wqv$_0;
    if (Kotlin.equals(previousSkinPart, newSkinPart))
      return;
    newSkinPart != null ? (newSkinPart.interactivityMode = InteractivityMode$NONE_getInstance()) : null;
    this._currentSkinPart_zg4wqv$_0 = newSkinPart;
    if (Kotlin.isType(newSkinPart, Labelable)) {
      newSkinPart.label = this._label;
    }
    this.onCurrentStateChanged_l4icno$(previousState, newState, previousSkinPart, newSkinPart);
    if (newSkinPart != null)
      this.addChild_mxweac$(newSkinPart);
    this.removeChild_erfg6z$(previousSkinPart);
  };
  Button.prototype.onCurrentStateChanged_l4icno$ = function (previousState, newState, previousSkinPart, newSkinPart) {
  };
  Object.defineProperty(Button.prototype, 'label', {
    get: function () {
      return this._label;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      this._label = value;
      (tmp$_0 = Kotlin.isType(tmp$ = this._currentSkinPart_zg4wqv$_0, Labelable) ? tmp$ : null) != null ? (tmp$_0.label = value) : null;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  Button.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$;
    if (this._currentSkinPart_zg4wqv$_0 == null)
      return;
    out.set_mby7og$(((tmp$ = this._currentSkinPart_zg4wqv$_0) != null ? tmp$ : Kotlin.throwNPE()).sizeConstraints);
  };
  Button.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1;
    if (this._currentSkinPart_zg4wqv$_0 != null) {
      ((tmp$ = this._currentSkinPart_zg4wqv$_0) != null ? tmp$ : Kotlin.throwNPE()).setSize_yxjqmk$(explicitWidth, explicitHeight);
      out.set_i12l7q$(((tmp$_0 = this._currentSkinPart_zg4wqv$_0) != null ? tmp$_0 : Kotlin.throwNPE()).bounds);
    }
    (tmp$_1 = this.highlight) != null ? tmp$_1.setSize_yxjqmk$(out.width, out.height) : null;
  };
  Button.prototype.dispose = function () {
    ElementContainerImpl.prototype.dispose.call(this);
    mouseUp(get_stage(this)).remove_trkh7z$(this.stageMouseUpHandler_zg4wqv$_0);
    touchEnd(get_stage(this)).remove_trkh7z$(this.stageTouchEndHandler_zg4wqv$_0);
  };
  function Button$Companion() {
    Button$Companion_instance = this;
  }
  Button$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var Button$Companion_instance = null;
  function Button$Companion_getInstance() {
    if (Button$Companion_instance === null) {
      new Button$Companion();
    }
    return Button$Companion_instance;
  }
  function Button$rollOverHandler$lambda(this$Button) {
    return function (event) {
      this$Button._mouseIsOver = true;
      this$Button.refreshState();
    };
  }
  function Button$rollOutHandler$lambda(this$Button) {
    return function (event) {
      this$Button._mouseIsOver = false;
      this$Button.refreshState();
    };
  }
  function Button$mouseDownHandler$lambda(this$Button) {
    return function (event) {
      if (!this$Button._mouseIsDown && event.button === WhichButton$LEFT_getInstance()) {
        this$Button._mouseIsDown = true;
        mouseUp(get_stage(this$Button)).add_onkqg$(this$Button.stageMouseUpHandler_zg4wqv$_0, true);
        this$Button.refreshState();
      }
    };
  }
  function Button$touchStartHandler$lambda(this$Button) {
    return function (event) {
      if (!this$Button._mouseIsDown) {
        this$Button._mouseIsDown = true;
        touchEnd(get_stage(this$Button)).add_onkqg$(this$Button.stageTouchEndHandler_zg4wqv$_0, true);
        this$Button.refreshState();
      }
    };
  }
  function Button$stageMouseUpHandler$lambda(this$Button) {
    return function (event) {
      if (event.button === WhichButton$LEFT_getInstance()) {
        this$Button._mouseIsDown = false;
        this$Button.refreshState();
      }
    };
  }
  function Button$stageTouchEndHandler$lambda(this$Button) {
    return function (event) {
      this$Button._mouseIsDown = false;
      this$Button.refreshState();
    };
  }
  function Button$clickHandler$lambda(this$Button) {
    return function (event) {
      if (this$Button.toggle)
        this$Button.selected = !this$Button.selected;
    };
  }
  function Button_init$lambda(closure$oldInstances, this$Button) {
    return function (it) {
      var tmp$;
      closure$oldInstances.addAll_brywnq$(this$Button._stateSkinMap_zg4wqv$_0.values);
      var $receiver = this$Button._stateSkinMap_zg4wqv$_0;
      var key = ButtonState$UP_getInstance();
      var value = new LazyInstance(this$Button, it.upState);
      $receiver.put_xwzc9p$(key, value);
      var $receiver_0 = this$Button._stateSkinMap_zg4wqv$_0;
      var key_0 = ButtonState$OVER_getInstance();
      var value_0 = new LazyInstance(this$Button, it.overState);
      $receiver_0.put_xwzc9p$(key_0, value_0);
      var $receiver_1 = this$Button._stateSkinMap_zg4wqv$_0;
      var key_1 = ButtonState$DOWN_getInstance();
      var value_1 = new LazyInstance(this$Button, it.downState);
      $receiver_1.put_xwzc9p$(key_1, value_1);
      var $receiver_2 = this$Button._stateSkinMap_zg4wqv$_0;
      var key_2 = ButtonState$SELECTED_UP_getInstance();
      var value_2 = new LazyInstance(this$Button, it.selectedUpState);
      $receiver_2.put_xwzc9p$(key_2, value_2);
      var $receiver_3 = this$Button._stateSkinMap_zg4wqv$_0;
      var key_3 = ButtonState$SELECTED_OVER_getInstance();
      var value_3 = new LazyInstance(this$Button, it.selectedOverState);
      $receiver_3.put_xwzc9p$(key_3, value_3);
      var $receiver_4 = this$Button._stateSkinMap_zg4wqv$_0;
      var key_4 = ButtonState$SELECTED_DOWN_getInstance();
      var value_4 = new LazyInstance(this$Button, it.selectedDownState);
      $receiver_4.put_xwzc9p$(key_4, value_4);
      var $receiver_5 = this$Button._stateSkinMap_zg4wqv$_0;
      var key_5 = ButtonState$DISABLED_getInstance();
      var value_5 = new LazyInstance(this$Button, it.disabledState);
      $receiver_5.put_xwzc9p$(key_5, value_5);
      this$Button.refreshState();
      tmp$ = get_lastIndex(closure$oldInstances);
      for (var i = 0; i <= tmp$; i++) {
        closure$oldInstances.get_za3lpa$(i).disposeInstance();
      }
      closure$oldInstances.clear();
    };
  }
  Button.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Button',
    interfaces: [Focusable, Selectable, Labelable, ElementContainerImpl]
  };
  function ButtonState(name, ordinal, isSelected) {
    Enum.call(this);
    this.isSelected = isSelected;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ButtonState_initFields() {
    ButtonState_initFields = function () {
    };
    ButtonState$UP_instance = new ButtonState('UP', 0, false);
    ButtonState$OVER_instance = new ButtonState('OVER', 1, false);
    ButtonState$DOWN_instance = new ButtonState('DOWN', 2, false);
    ButtonState$SELECTED_UP_instance = new ButtonState('SELECTED_UP', 3, true);
    ButtonState$SELECTED_OVER_instance = new ButtonState('SELECTED_OVER', 4, true);
    ButtonState$SELECTED_DOWN_instance = new ButtonState('SELECTED_DOWN', 5, true);
    ButtonState$DISABLED_instance = new ButtonState('DISABLED', 6, false);
  }
  var ButtonState$UP_instance;
  function ButtonState$UP_getInstance() {
    ButtonState_initFields();
    return ButtonState$UP_instance;
  }
  var ButtonState$OVER_instance;
  function ButtonState$OVER_getInstance() {
    ButtonState_initFields();
    return ButtonState$OVER_instance;
  }
  var ButtonState$DOWN_instance;
  function ButtonState$DOWN_getInstance() {
    ButtonState_initFields();
    return ButtonState$DOWN_instance;
  }
  var ButtonState$SELECTED_UP_instance;
  function ButtonState$SELECTED_UP_getInstance() {
    ButtonState_initFields();
    return ButtonState$SELECTED_UP_instance;
  }
  var ButtonState$SELECTED_OVER_instance;
  function ButtonState$SELECTED_OVER_getInstance() {
    ButtonState_initFields();
    return ButtonState$SELECTED_OVER_instance;
  }
  var ButtonState$SELECTED_DOWN_instance;
  function ButtonState$SELECTED_DOWN_getInstance() {
    ButtonState_initFields();
    return ButtonState$SELECTED_DOWN_instance;
  }
  var ButtonState$DISABLED_instance;
  function ButtonState$DISABLED_getInstance() {
    ButtonState_initFields();
    return ButtonState$DISABLED_instance;
  }
  ButtonState.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ButtonState',
    interfaces: [Enum]
  };
  function ButtonState$values() {
    return [ButtonState$UP_getInstance(), ButtonState$OVER_getInstance(), ButtonState$DOWN_getInstance(), ButtonState$SELECTED_UP_getInstance(), ButtonState$SELECTED_OVER_getInstance(), ButtonState$SELECTED_DOWN_getInstance(), ButtonState$DISABLED_getInstance()];
  }
  ButtonState.values = ButtonState$values;
  function ButtonState$valueOf(name) {
    switch (name) {
      case 'UP':
        return ButtonState$UP_getInstance();
      case 'OVER':
        return ButtonState$OVER_getInstance();
      case 'DOWN':
        return ButtonState$DOWN_getInstance();
      case 'SELECTED_UP':
        return ButtonState$SELECTED_UP_getInstance();
      case 'SELECTED_OVER':
        return ButtonState$SELECTED_OVER_getInstance();
      case 'SELECTED_DOWN':
        return ButtonState$SELECTED_DOWN_getInstance();
      case 'DISABLED':
        return ButtonState$DISABLED_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.ButtonState.' + name);
    }
  }
  ButtonState.valueOf_61zpoe$ = ButtonState$valueOf;
  function ButtonStyle() {
    ButtonStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_4sj416$_0 = ButtonStyle$Companion_getInstance();
    this.upState$delegate = this.prop_umlfku$('upState', noSkin);
    this.overState$delegate = this.prop_umlfku$('overState', noSkin);
    this.downState$delegate = this.prop_umlfku$('downState', noSkin);
    this.selectedUpState$delegate = this.prop_umlfku$('selectedUpState', noSkin);
    this.selectedOverState$delegate = this.prop_umlfku$('selectedOverState', noSkin);
    this.selectedDownState$delegate = this.prop_umlfku$('selectedDownState', noSkin);
    this.disabledState$delegate = this.prop_umlfku$('disabledState', noSkin);
  }
  Object.defineProperty(ButtonStyle.prototype, 'type', {
    get: function () {
      return this.type_4sj416$_0;
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'upState', {
    get: function () {
      return this.upState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('upState'));
    },
    set: function (upState) {
      this.upState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('upState'), upState);
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'overState', {
    get: function () {
      return this.overState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('overState'));
    },
    set: function (overState) {
      this.overState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('overState'), overState);
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'downState', {
    get: function () {
      return this.downState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('downState'));
    },
    set: function (downState) {
      this.downState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('downState'), downState);
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'selectedUpState', {
    get: function () {
      return this.selectedUpState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('selectedUpState'));
    },
    set: function (selectedUpState) {
      this.selectedUpState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('selectedUpState'), selectedUpState);
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'selectedOverState', {
    get: function () {
      return this.selectedOverState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('selectedOverState'));
    },
    set: function (selectedOverState) {
      this.selectedOverState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('selectedOverState'), selectedOverState);
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'selectedDownState', {
    get: function () {
      return this.selectedDownState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('selectedDownState'));
    },
    set: function (selectedDownState) {
      this.selectedDownState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('selectedDownState'), selectedDownState);
    }
  });
  Object.defineProperty(ButtonStyle.prototype, 'disabledState', {
    get: function () {
      return this.disabledState$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('disabledState'));
    },
    set: function (disabledState) {
      this.disabledState$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('disabledState'), disabledState);
    }
  });
  function ButtonStyle$Companion() {
    ButtonStyle$Companion_instance = this;
  }
  ButtonStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var ButtonStyle$Companion_instance = null;
  function ButtonStyle$Companion_getInstance() {
    if (ButtonStyle$Companion_instance === null) {
      new ButtonStyle$Companion();
    }
    return ButtonStyle$Companion_instance;
  }
  ButtonStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ButtonStyle',
    interfaces: [StyleBase]
  };
  function Labelable() {
  }
  Labelable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Labelable',
    interfaces: [UiComponent]
  };
  function Selectable() {
  }
  Selectable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Selectable',
    interfaces: [UiComponent]
  };
  function button$lambda($receiver) {
  }
  function button($receiver, init) {
    if (init === void 0)
      init = button$lambda;
    var b = new Button($receiver);
    init(b);
    return b;
  }
  function button$lambda_0($receiver) {
  }
  function button_0($receiver, label, init) {
    if (init === void 0)
      init = button$lambda_0;
    var b = new Button($receiver);
    b.label = label;
    init(b);
    return b;
  }
  function CameraElement() {
  }
  CameraElement.prototype.windowToLocal_9wm29l$ = function (windowCoord) {
    var ray = Ray.Companion.obtain();
    this.globalToLocal_ujzndq$(this.camera.getPickRay_7zdu66$(windowCoord.x, windowCoord.y, ray));
    this.rayToPlane_94uff5$(ray, windowCoord);
    ray.free();
    return windowCoord;
  };
  CameraElement.prototype.localToWindow_9wm29k$ = function (localCoord) {
    this.localToGlobal_9wm29k$(localCoord);
    this.camera.project_9wm29k$(localCoord);
    return localCoord;
  };
  CameraElement.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'CameraElement',
    interfaces: [Transformable]
  };
  function Checkbox(owner) {
    Checkbox$Companion_getInstance();
    Button.call(this, owner);
    addTag(this, Checkbox$Companion_getInstance());
    this.toggle = true;
  }
  function Checkbox$Companion() {
    Checkbox$Companion_instance = this;
  }
  Checkbox$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var Checkbox$Companion_instance = null;
  function Checkbox$Companion_getInstance() {
    if (Checkbox$Companion_instance === null) {
      new Checkbox$Companion();
    }
    return Checkbox$Companion_instance;
  }
  Checkbox.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Checkbox',
    interfaces: [Button]
  };
  function checkbox$lambda($receiver) {
  }
  function checkbox($receiver, init) {
    if (init === void 0)
      init = checkbox$lambda;
    var c = new Checkbox($receiver);
    init(c);
    return c;
  }
  function checkbox$lambda_0($receiver) {
  }
  function checkbox_0($receiver, label, init) {
    if (init === void 0)
      init = checkbox$lambda_0;
    var b = new Checkbox($receiver);
    b.label = label;
    init(b);
    return b;
  }
  function Closeable() {
  }
  Closeable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Closeable',
    interfaces: []
  };
  function ColorPicker(owner) {
    ColorPicker$Companion_getInstance();
    ContainerImpl.call(this, owner);
    this.focusEnabled_gzg2t4$_0 = true;
    this.focusOrder_gzg2t4$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.style = style(this, new ColorPickerStyle());
    this.background_gzg2t4$_0 = null;
    this.colorSwatch_gzg2t4$_0 = null;
    this.colorPalette_gzg2t4$_0 = new ColorPalette(owner);
    this.colorPaletteLift_gzg2t4$_0 = lift(this, ColorPicker$colorPaletteLift$lambda(this));
    this.stageMouseDownHandler_gzg2t4$_0 = ColorPicker$stageMouseDownHandler$lambda(this);
    this.tmpColor_gzg2t4$_0 = new Color();
    addTag(this, ColorPicker$Companion_getInstance());
    click(this).add_trkh7z$(ColorPicker_init$lambda(this));
    this.colorSwatch_gzg2t4$_0 = this.addChild_mxweac$(rect(this, ColorPicker_init$lambda_0(this)));
    this.colorPalette_gzg2t4$_0.changed.add_trkh7z$(ColorPicker_init$lambda_1(this));
    onChanged(this.style, ColorPicker_init$lambda_2(this));
    this._isOpen_gzg2t4$_0 = false;
  }
  Object.defineProperty(ColorPicker.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_gzg2t4$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_gzg2t4$_0 = focusEnabled;
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_gzg2t4$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_gzg2t4$_0 = focusOrder;
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'userChanged', {
    get: function () {
      return this.colorPalette_gzg2t4$_0.userChanged;
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'changed', {
    get: function () {
      return this.colorPalette_gzg2t4$_0.changed;
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'color', {
    get: function () {
      return this.colorPalette_gzg2t4$_0.color;
    },
    set: function (value) {
      this.colorPalette_gzg2t4$_0.color = value;
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'value', {
    get: function () {
      return this.colorPalette_gzg2t4$_0.value;
    },
    set: function (value) {
      this.colorPalette_gzg2t4$_0.value = value;
    }
  });
  Object.defineProperty(ColorPicker.prototype, 'isOpen', {
    get: function () {
      return this._isOpen_gzg2t4$_0;
    }
  });
  ColorPicker.prototype.open = function () {
    if (this._isOpen_gzg2t4$_0)
      return;
    this._isOpen_gzg2t4$_0 = true;
    this.addChild_mxweac$(this.colorPaletteLift_gzg2t4$_0);
    mouseDown(get_stage(this), true).add_trkh7z$(this.stageMouseDownHandler_gzg2t4$_0);
  };
  ColorPicker.prototype.close = function () {
    if (!this._isOpen_gzg2t4$_0)
      return;
    this._isOpen_gzg2t4$_0 = false;
    this.removeChild_erfg6z$(this.colorPaletteLift_gzg2t4$_0);
    mouseDown(get_stage(this), true).remove_trkh7z$(this.stageMouseDownHandler_gzg2t4$_0);
  };
  ColorPicker.prototype.toggleOpen = function () {
    if (this._isOpen_gzg2t4$_0)
      this.close();
    else
      this.open();
  };
  ColorPicker.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0;
    var s = this.style;
    var padding = s.padding;
    var w = explicitWidth != null ? explicitWidth : s.defaultSwatchWidth + padding.left + padding.right;
    var h = explicitHeight != null ? explicitHeight : s.defaultSwatchHeight + padding.top + padding.bottom;
    this.colorSwatch_gzg2t4$_0.setSize_yxjqmk$(padding.reduceWidth_81sz4$(w), padding.reduceHeight_81sz4$(h));
    this.colorSwatch_gzg2t4$_0.moveTo_y2kzbl$(padding.left, padding.top);
    ((tmp$ = this.background_gzg2t4$_0) != null ? tmp$ : Kotlin.throwNPE()).setSize_yxjqmk$(w, h);
    out.set_dleff0$(w, h);
    this.colorPaletteLift_gzg2t4$_0.moveTo_y2kzbl$(0.0, h);
    (tmp$_0 = this.highlight) != null ? tmp$_0.setSize_yxjqmk$(out.width, out.height) : null;
  };
  ColorPicker.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    this.close();
  };
  function ColorPicker$Companion() {
    ColorPicker$Companion_instance = this;
    this.COLOR_SWATCH_STYLE = styleTag();
  }
  ColorPicker$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var ColorPicker$Companion_instance = null;
  function ColorPicker$Companion_getInstance() {
    if (ColorPicker$Companion_instance === null) {
      new ColorPicker$Companion();
    }
    return ColorPicker$Companion_instance;
  }
  function ColorPicker$colorPaletteLift$lambda$lambda(this$ColorPicker) {
    return function () {
      this$ColorPicker.close();
    };
  }
  function ColorPicker$colorPaletteLift$lambda(this$ColorPicker) {
    return function ($receiver) {
      $receiver.unaryPlus_8db8yx$(this$ColorPicker.colorPalette_gzg2t4$_0);
      $receiver.onClosed = ColorPicker$colorPaletteLift$lambda$lambda(this$ColorPicker);
    };
  }
  function ColorPicker$stageMouseDownHandler$lambda(this$ColorPicker) {
    return function (event) {
      var tmp$, tmp$_0;
      if (event.target == null || (!isDescendantOf((tmp$ = event.target) != null ? tmp$ : Kotlin.throwNPE(), this$ColorPicker.colorPalette_gzg2t4$_0) && !isDescendantOf((tmp$_0 = event.target) != null ? tmp$_0 : Kotlin.throwNPE(), this$ColorPicker))) {
        this$ColorPicker.close();
      }
    };
  }
  function ColorPicker_init$lambda(this$ColorPicker) {
    return function (it) {
      this$ColorPicker.toggleOpen();
    };
  }
  function ColorPicker_init$lambda_0(this$ColorPicker) {
    return function ($receiver) {
      addTag($receiver, ColorPicker$Companion_getInstance().COLOR_SWATCH_STYLE);
      $receiver.interactivityMode = InteractivityMode$NONE_getInstance();
      $receiver.style.backgroundColor = this$ColorPicker.color;
    };
  }
  function ColorPicker_init$lambda_1(this$ColorPicker) {
    return function (old, new_0) {
      this$ColorPicker.colorSwatch_gzg2t4$_0.style.backgroundColor = new_0.toRgb_1qghwi$(this$ColorPicker.tmpColor_gzg2t4$_0);
    };
  }
  function ColorPicker_init$lambda_2(this$ColorPicker) {
    return function (it) {
      this$ColorPicker.dispose_erfg6z$(this$ColorPicker.background_gzg2t4$_0);
      this$ColorPicker.background_gzg2t4$_0 = this$ColorPicker.addChild_3i6itm$(0, it.background(this$ColorPicker));
    };
  }
  ColorPicker.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorPicker',
    interfaces: [Focusable, ContainerImpl]
  };
  function ColorPickerStyle() {
    ColorPickerStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_p7r7v$_0 = ColorPickerStyle$Companion_getInstance();
    this.padding$delegate = this.prop_umlfku$('padding', Pad_init_0(4.0));
    this.background$delegate = this.prop_umlfku$('background', noSkin);
    this.defaultSwatchWidth$delegate = this.prop_umlfku$('defaultSwatchWidth', 20.0);
    this.defaultSwatchHeight$delegate = this.prop_umlfku$('defaultSwatchHeight', 20.0);
  }
  Object.defineProperty(ColorPickerStyle.prototype, 'type', {
    get: function () {
      return this.type_p7r7v$_0;
    }
  });
  Object.defineProperty(ColorPickerStyle.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(ColorPickerStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  Object.defineProperty(ColorPickerStyle.prototype, 'defaultSwatchWidth', {
    get: function () {
      return this.defaultSwatchWidth$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultSwatchWidth'));
    },
    set: function (defaultSwatchWidth) {
      this.defaultSwatchWidth$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultSwatchWidth'), defaultSwatchWidth);
    }
  });
  Object.defineProperty(ColorPickerStyle.prototype, 'defaultSwatchHeight', {
    get: function () {
      return this.defaultSwatchHeight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultSwatchHeight'));
    },
    set: function (defaultSwatchHeight) {
      this.defaultSwatchHeight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultSwatchHeight'), defaultSwatchHeight);
    }
  });
  function ColorPickerStyle$Companion() {
    ColorPickerStyle$Companion_instance = this;
  }
  ColorPickerStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var ColorPickerStyle$Companion_instance = null;
  function ColorPickerStyle$Companion_getInstance() {
    if (ColorPickerStyle$Companion_instance === null) {
      new ColorPickerStyle$Companion();
    }
    return ColorPickerStyle$Companion_instance;
  }
  ColorPickerStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorPickerStyle',
    interfaces: [StyleBase]
  };
  function colorPicker$lambda($receiver) {
  }
  function colorPicker($receiver, init) {
    if (init === void 0)
      init = colorPicker$lambda;
    var c = new ColorPicker($receiver);
    init(c);
    return c;
  }
  function ColorPalette(owner) {
    ColorPalette$Companion_getInstance();
    ContainerImpl.call(this, owner);
    this.userChanged = new Signal3();
    this.changed = new Signal2();
    this.style = style(this, new ColorPaletteStyle());
    this.background_0 = null;
    this.hueSaturationIndicator_0 = null;
    this.valueIndicator_0 = null;
    this.tmpVec_0 = new Vector2();
    this.tmpHSV_0 = new Hsv();
    this.tmpColor_0 = new Color();
    this.hueRect = this.addChild_mxweac$(rect(this, ColorPalette$hueRect$lambda));
    this.saturationRect = this.addChild_mxweac$(rect(this, ColorPalette$saturationRect$lambda(this)));
    this.cancel_0 = new Cancel();
    this.valueRect = this.addChild_mxweac$(rect(this, ColorPalette$valueRect$lambda(this)));
    this._value_0 = Color.Companion.WHITE.toHsv_y02iyi$(new Hsv());
    addTag(this, ColorPalette$Companion_getInstance());
    onChanged(this.style, ColorPalette_init$lambda(this));
  }
  ColorPalette.prototype.userChange_0 = function (value) {
    var oldValue = this._value_0;
    if (oldValue != null ? oldValue.equals(value) : null)
      return;
    this.userChanged.dispatch_1llc0w$(oldValue, value, this.cancel_0);
    if (!this.cancel_0.canceled()) {
      this.value = value;
    }
  };
  Object.defineProperty(ColorPalette.prototype, 'color', {
    get: function () {
      return this._value_0.toRgb_1qghwi$(new Color());
    },
    set: function (value) {
      this.value = value.toHsv_y02iyi$(new Hsv());
    }
  });
  Object.defineProperty(ColorPalette.prototype, 'value', {
    get: function () {
      return this._value_0;
    },
    set: function (value) {
      var oldValue = this._value_0;
      if (oldValue != null ? oldValue.equals(value) : null)
        return;
      this._value_0 = value.copy_7b5o5w$();
      this.changed.dispatch_xwzc9p$(oldValue, value);
      this.invalidate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
    }
  });
  ColorPalette.prototype.updateProperties = function () {
    this.tmpHSV_0.set_y02iyi$(this._value_0);
    this.tmpHSV_0.v = 1.0;
    this.valueRect.style.linearGradient = LinearGradient(GradientDirection$BOTTOM_getInstance(), [this.tmpHSV_0.toRgb_1qghwi$(this.tmpColor_0), new Color(0.0, 0.0, 0.0, 1.0)]);
  };
  ColorPalette.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var s = this.style;
    var padding = s.padding;
    var w = explicitWidth != null ? explicitWidth : s.defaultPaletteWidth + s.brightnessWidth + s.gap + padding.left + padding.right;
    var h = explicitHeight != null ? explicitHeight : s.defaultPaletteHeight + padding.top + padding.bottom;
    this.hueRect.setSize_yxjqmk$(w - padding.right - padding.left - s.gap - s.brightnessWidth, h - padding.top - padding.bottom);
    this.hueRect.moveTo_y2kzbl$(padding.left, padding.top);
    this.saturationRect.setSize_yxjqmk$(this.hueRect.width, this.hueRect.height);
    this.saturationRect.moveTo_y2kzbl$(this.hueRect.x, this.hueRect.y);
    var satHeight = h - padding.top - padding.bottom;
    this.valueRect.setSize_yxjqmk$(s.brightnessWidth, satHeight);
    this.valueRect.moveTo_y2kzbl$(padding.left + this.hueRect.width + s.gap, padding.top);
    ((tmp$ = this.hueSaturationIndicator_0) != null ? tmp$ : Kotlin.throwNPE()).moveTo_y2kzbl$(this.saturationRect.x + this._value_0.h / 360.0 * this.saturationRect.width - ((tmp$_0 = this.hueSaturationIndicator_0) != null ? tmp$_0 : Kotlin.throwNPE()).width * 0.5, this.saturationRect.y + (1.0 - this._value_0.s) * this.saturationRect.height - ((tmp$_1 = this.hueSaturationIndicator_0) != null ? tmp$_1 : Kotlin.throwNPE()).height * 0.5);
    ((tmp$_2 = this.valueIndicator_0) != null ? tmp$_2 : Kotlin.throwNPE()).moveTo_y2kzbl$(this.valueRect.x - ((tmp$_3 = this.valueIndicator_0) != null ? tmp$_3 : Kotlin.throwNPE()).width * 0.5, (1.0 - this._value_0.v) * satHeight + padding.top - ((tmp$_4 = this.valueIndicator_0) != null ? tmp$_4 : Kotlin.throwNPE()).height * 0.5);
    var bg = (tmp$_5 = this.background_0) != null ? tmp$_5 : Kotlin.throwNPE();
    bg.setSize_yxjqmk$(w, h);
    out.set_dleff0$(bg.width, bg.height);
  };
  ColorPalette.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    this.userChanged.dispose();
    this.changed.dispose();
  };
  function ColorPalette$Companion() {
    ColorPalette$Companion_instance = this;
  }
  ColorPalette$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var ColorPalette$Companion_instance = null;
  function ColorPalette$Companion_getInstance() {
    if (ColorPalette$Companion_instance === null) {
      new ColorPalette$Companion();
    }
    return ColorPalette$Companion_instance;
  }
  function ColorPalette$hueRect$lambda($receiver) {
    $receiver.style.linearGradient = LinearGradient(GradientDirection$RIGHT_getInstance(), [new Color(1.0, 0.0, 0.0, 1.0), new Color(1.0, 1.0, 0.0, 1.0), new Color(0.0, 1.0, 0.0, 1.0), new Color(0.0, 1.0, 1.0, 1.0), new Color(0.0, 0.0, 1.0, 1.0), new Color(1.0, 0.0, 1.0, 1.0), new Color(1.0, 0.0, 0.0, 1.0)]);
  }
  function ColorPalette$saturationRect$lambda$lambda(this$ColorPalette, this$) {
    return function (it) {
      this$.windowToLocal_9wm29l$(this$ColorPalette.tmpVec_0.set_1fv330$(it.position));
      this$ColorPalette.tmpHSV_0.set_y02iyi$(this$ColorPalette._value_0);
      var tmp$ = this$ColorPalette.tmpHSV_0;
      var value = this$ColorPalette.tmpVec_0.x / this$.width;
      var clamp_73gzaq$result;
      clamp_73gzaq$break: {
        if (Kotlin.compareTo(value, 0.0) <= 0) {
          clamp_73gzaq$result = 0.0;
          break clamp_73gzaq$break;
        }
        if (Kotlin.compareTo(value, 1.0) >= 0) {
          clamp_73gzaq$result = 1.0;
          break clamp_73gzaq$break;
        }
        clamp_73gzaq$result = value;
      }
      tmp$.h = 360.0 * clamp_73gzaq$result;
      var tmp$_0 = this$ColorPalette.tmpHSV_0;
      var value_0 = this$ColorPalette.tmpVec_0.y / this$.height;
      var clamp_73gzaq$result_0;
      clamp_73gzaq$break_0: {
        if (Kotlin.compareTo(value_0, 0.0) <= 0) {
          clamp_73gzaq$result_0 = 0.0;
          break clamp_73gzaq$break_0;
        }
        if (Kotlin.compareTo(value_0, 1.0) >= 0) {
          clamp_73gzaq$result_0 = 1.0;
          break clamp_73gzaq$break_0;
        }
        clamp_73gzaq$result_0 = value_0;
      }
      tmp$_0.s = 1.0 - clamp_73gzaq$result_0;
      this$ColorPalette.userChange_0(this$ColorPalette.tmpHSV_0);
    };
  }
  function ColorPalette$saturationRect$lambda(this$ColorPalette) {
    return function ($receiver) {
      $receiver.style.linearGradient = LinearGradient(GradientDirection$BOTTOM_getInstance(), [new Color(1.0, 1.0, 1.0, 0.0), new Color(1.0, 1.0, 1.0, 1.0)]);
      cursor($receiver, StandardCursors_getInstance().CROSSHAIR);
      dragAttachment($receiver, 0.0).drag.add_trkh7z$(ColorPalette$saturationRect$lambda$lambda(this$ColorPalette, $receiver));
    };
  }
  function ColorPalette$valueRect$lambda$lambda(this$ColorPalette, this$) {
    return function (it) {
      this$.windowToLocal_9wm29l$(this$ColorPalette.tmpVec_0.set_1fv330$(it.position));
      var value = this$ColorPalette.tmpVec_0.y / this$.height;
      var clamp_73gzaq$result;
      clamp_73gzaq$break: {
        if (Kotlin.compareTo(value, 0.0) <= 0) {
          clamp_73gzaq$result = 0.0;
          break clamp_73gzaq$break;
        }
        if (Kotlin.compareTo(value, 1.0) >= 0) {
          clamp_73gzaq$result = 1.0;
          break clamp_73gzaq$break;
        }
        clamp_73gzaq$result = value;
      }
      var p = clamp_73gzaq$result;
      this$ColorPalette.tmpHSV_0.set_y02iyi$(this$ColorPalette._value_0);
      this$ColorPalette.tmpHSV_0.v = 1.0 - p;
      this$ColorPalette.userChange_0(this$ColorPalette.tmpHSV_0);
    };
  }
  function ColorPalette$valueRect$lambda(this$ColorPalette) {
    return function ($receiver) {
      dragAttachment($receiver, 0.0).drag.add_trkh7z$(ColorPalette$valueRect$lambda$lambda(this$ColorPalette, $receiver));
    };
  }
  function ColorPalette_init$lambda(this$ColorPalette) {
    return function (it) {
      var tmp$, tmp$_0;
      this$ColorPalette.dispose_erfg6z$(this$ColorPalette.background_0);
      this$ColorPalette.dispose_erfg6z$(this$ColorPalette.hueSaturationIndicator_0);
      this$ColorPalette.dispose_erfg6z$(this$ColorPalette.valueIndicator_0);
      this$ColorPalette.background_0 = this$ColorPalette.addChild_3i6itm$(0, it.background(this$ColorPalette));
      this$ColorPalette.hueSaturationIndicator_0 = this$ColorPalette.addChild_mxweac$(it.hueSaturationIndicator(this$ColorPalette));
      ((tmp$ = this$ColorPalette.hueSaturationIndicator_0) != null ? tmp$ : Kotlin.throwNPE()).interactivityMode = InteractivityMode$NONE_getInstance();
      this$ColorPalette.valueIndicator_0 = this$ColorPalette.addChild_mxweac$(it.valueIndicator(this$ColorPalette));
      ((tmp$_0 = this$ColorPalette.valueIndicator_0) != null ? tmp$_0 : Kotlin.throwNPE()).interactivityMode = InteractivityMode$NONE_getInstance();
    };
  }
  ColorPalette.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorPalette',
    interfaces: [ContainerImpl]
  };
  function ColorPaletteStyle() {
    ColorPaletteStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_uelfzk$_0 = ColorPaletteStyle$Companion_getInstance();
    this.padding$delegate = this.prop_umlfku$('padding', Pad_init_0(5.0));
    this.brightnessWidth$delegate = this.prop_umlfku$('brightnessWidth', 15.0);
    this.defaultPaletteWidth$delegate = this.prop_umlfku$('defaultPaletteWidth', 200.0);
    this.defaultPaletteHeight$delegate = this.prop_umlfku$('defaultPaletteHeight', 100.0);
    this.gap$delegate = this.prop_umlfku$('gap', 5.0);
    this.background$delegate = this.prop_umlfku$('background', noSkin);
    this.hueSaturationIndicator$delegate = this.prop_umlfku$('hueSaturationIndicator', noSkin);
    this.valueIndicator$delegate = this.prop_umlfku$('valueIndicator', noSkin);
  }
  Object.defineProperty(ColorPaletteStyle.prototype, 'type', {
    get: function () {
      return this.type_uelfzk$_0;
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'brightnessWidth', {
    get: function () {
      return this.brightnessWidth$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('brightnessWidth'));
    },
    set: function (brightnessWidth) {
      this.brightnessWidth$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('brightnessWidth'), brightnessWidth);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'defaultPaletteWidth', {
    get: function () {
      return this.defaultPaletteWidth$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultPaletteWidth'));
    },
    set: function (defaultPaletteWidth) {
      this.defaultPaletteWidth$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultPaletteWidth'), defaultPaletteWidth);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'defaultPaletteHeight', {
    get: function () {
      return this.defaultPaletteHeight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultPaletteHeight'));
    },
    set: function (defaultPaletteHeight) {
      this.defaultPaletteHeight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultPaletteHeight'), defaultPaletteHeight);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'gap', {
    get: function () {
      return this.gap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('gap'));
    },
    set: function (gap) {
      this.gap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('gap'), gap);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'hueSaturationIndicator', {
    get: function () {
      return this.hueSaturationIndicator$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('hueSaturationIndicator'));
    },
    set: function (hueSaturationIndicator) {
      this.hueSaturationIndicator$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('hueSaturationIndicator'), hueSaturationIndicator);
    }
  });
  Object.defineProperty(ColorPaletteStyle.prototype, 'valueIndicator', {
    get: function () {
      return this.valueIndicator$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('valueIndicator'));
    },
    set: function (valueIndicator) {
      this.valueIndicator$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('valueIndicator'), valueIndicator);
    }
  });
  function ColorPaletteStyle$Companion() {
    ColorPaletteStyle$Companion_instance = this;
  }
  ColorPaletteStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var ColorPaletteStyle$Companion_instance = null;
  function ColorPaletteStyle$Companion_getInstance() {
    if (ColorPaletteStyle$Companion_instance === null) {
      new ColorPaletteStyle$Companion();
    }
    return ColorPaletteStyle$Companion_instance;
  }
  ColorPaletteStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorPaletteStyle',
    interfaces: [StyleBase]
  };
  function ColorPickerWithText(owner) {
    HorizontalLayoutContainer.call(this, owner);
    this.textInput = this.unaryPlus_8db8yx$(textInput(this, ColorPickerWithText$textInput$lambda));
    this.color_viyhzv$_0 = new Color();
    this.colorPicker = this.unaryPlus_8db8yx$(colorPicker(this, ColorPickerWithText$colorPicker$lambda(this)));
  }
  function ColorPickerWithText$textInput$lambda$lambda() {
  }
  function ColorPickerWithText$textInput$lambda($receiver) {
    $receiver.changed.add_trkh7z$(ColorPickerWithText$textInput$lambda$lambda);
  }
  function ColorPickerWithText$colorPicker$lambda$lambda(this$, this$ColorPickerWithText) {
    return function (old, new_0) {
      this$ColorPickerWithText.textInput.text = new_0.toRgb_1qghwi$(this$.color).toRgbString();
    };
  }
  function ColorPickerWithText$colorPicker$lambda(this$ColorPickerWithText) {
    return function ($receiver) {
      $receiver.changed.add_trkh7z$(ColorPickerWithText$colorPicker$lambda$lambda($receiver, this$ColorPickerWithText));
    };
  }
  ColorPickerWithText.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorPickerWithText',
    interfaces: [HorizontalLayoutContainer]
  };
  function colorPickerWithText$lambda($receiver) {
  }
  function colorPickerWithText($receiver, init) {
    if (init === void 0)
      init = colorPickerWithText$lambda;
    var c = new ColorPicker($receiver);
    init(c);
    return c;
  }
  function ColorTransformable() {
  }
  Object.defineProperty(ColorTransformable.prototype, 'alpha', {
    get: function () {
      return this.colorTint.a;
    },
    set: function (value) {
      var t = this.colorTint;
      if (t.a === value)
        return;
      this.colorTint_7b5o5w$(t.r, t.g, t.b, value);
    }
  });
  ColorTransformable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ColorTransformable',
    interfaces: []
  };
  function Container() {
  }
  Container.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Container',
    interfaces: [Parent, UiComponent]
  };
  function ContainerImpl(owner, native) {
    if (native === void 0)
      native = inject(owner, NativeContainer$Companion_getInstance().FACTORY_KEY)(owner);
    UiComponentImpl.call(this, owner, native);
    this.native_zesow8$_0 = native;
    this._children = ArrayList_init();
    this.cascadingFlags = ValidationFlags_getInstance().HIERARCHY_DESCENDING | ValidationFlags_getInstance().CONCATENATED_COLOR_TRANSFORM | ValidationFlags_getInstance().CONCATENATED_TRANSFORM | ValidationFlags_getInstance().INTERACTIVITY_MODE;
    this._isInvalidatingChildren = false;
    this.layoutInvalidatingFlags = ValidationFlags_getInstance().TRANSFORM | ValidationFlags_getInstance().HIERARCHY_ASCENDING | ValidationFlags_getInstance().LAYOUT;
    this.bubblingFlags = ValidationFlags_getInstance().HIERARCHY_ASCENDING | ValidationFlags_getInstance().LAYOUT | ValidationFlags_getInstance().SIZE_CONSTRAINTS;
    this.childInvalidatedHandler = ContainerImpl$childInvalidatedHandler$lambda(this);
  }
  Object.defineProperty(ContainerImpl.prototype, 'native', {
    get: function () {
      return this.native_zesow8$_0;
    }
  });
  Object.defineProperty(ContainerImpl.prototype, 'children', {
    get: function () {
      return this._children;
    }
  });
  ContainerImpl.prototype.addChild_mxweac$ = function (child) {
    return this.addChild_3i6itm$(this.numChildren, child);
  };
  ContainerImpl.prototype.addOptionalChild_mxweac$ = function (child) {
    return this.addOptionalChild_3i6itm$(this.numChildren, child);
  };
  ContainerImpl.prototype.addOptionalChild_3i6itm$ = function (index, child) {
    if (child == null)
      return child;
    return this.addChild_3i6itm$(index, child);
  };
  ContainerImpl.prototype.addChild_3i6itm$ = function (index, child) {
    _assert(!this.isDisposed, 'This Container is disposed.');
    _assert(!child.isDisposed, 'Added child is disposed.');
    _assert(child.parent == null, 'Remove child first.');
    if (index < 0 || index > this._children.size)
      throw new Exception('index is out of bounds.');
    child.parent = this;
    this._children.add_wxm5ur$(index, child);
    child.invalidated.add_trkh7z$(this.childInvalidatedHandler);
    this.native.addChild_a1xap5$(child.native, index);
    if (this.isActive) {
      child.activate();
    }
    this.invalidate_za3lpa$(this.bubblingFlags);
    child.invalidate_za3lpa$(this.cascadingFlags);
    return child;
  };
  ContainerImpl.prototype.addChildAfter_tu2188$ = function (child, after) {
    var index = this.children.indexOf_11rb$(after);
    if (index === -1)
      return -1;
    this.addChild_3i6itm$(index + 1 | 0, child);
    return index + 1 | 0;
  };
  ContainerImpl.prototype.addChildBefore_tu2188$ = function (child, before) {
    var index = this.children.indexOf_11rb$(before);
    if (index === -1)
      return -1;
    this.addChild_3i6itm$(index, child);
    return index;
  };
  ContainerImpl.prototype.removeChild_erfg6z$ = function (child) {
    if (child == null)
      return false;
    var index = this.children.indexOf_11rb$(child);
    if (index === -1)
      return false;
    this.removeChild_za3lpa$(index);
    return true;
  };
  ContainerImpl.prototype.removeChild_za3lpa$ = function (index) {
    _assert(!this.isDisposed, 'This Container is disposed.');
    var child = this._children.removeAt_za3lpa$(index);
    child.parent = null;
    child.invalidated.remove_trkh7z$(this.childInvalidatedHandler);
    if (child.isActive) {
      child.deactivate();
    }
    this.native.removeChild_za3lpa$(index);
    this.invalidate_za3lpa$(this.bubblingFlags);
    child.invalidate_za3lpa$(this.cascadingFlags);
    return child;
  };
  ContainerImpl.prototype.swapChildren_tu2188$ = function (childA, childB) {
    var indexA = this._children.indexOf_11rb$(childA);
    var indexB = this._children.indexOf_11rb$(childB);
    this.swapChildren_vux9f0$(indexA, indexB);
  };
  ContainerImpl.prototype.swapChildren_vux9f0$ = function (indexA, indexB) {
    var c = this._children;
    var tmp = c.get_za3lpa$(indexA);
    c.set_wxm5ur$(indexA, c.get_za3lpa$(indexB));
    c.set_wxm5ur$(indexB, tmp);
    this.invalidate_za3lpa$(this.bubblingFlags);
    this.native.swapChildren_vux9f0$(indexA, indexB);
  };
  ContainerImpl.prototype.clearChildren_6taknv$ = function (dispose) {
    if (dispose === void 0)
      dispose = true;
    var c = this.children;
    while (!c.isEmpty()) {
      var child = this.removeChild_za3lpa$(this.numChildren - 1 | 0);
      if (dispose && Kotlin.isType(child, Disposable)) {
        child.dispose();
      }
    }
  };
  function ContainerImpl$onActivated$lambda(it) {
    if (!it.isActive) {
      it.activate();
    }
    return true;
  }
  ContainerImpl.prototype.onActivated = function () {
    UiComponentImpl.prototype.onActivated.call(this);
    this.iterateChildren_bwf5pq$(ContainerImpl$onActivated$lambda);
  };
  function ContainerImpl$onInvalidated$lambda(closure$flagsToCascade) {
    return function (it) {
      it.invalidate_za3lpa$(closure$flagsToCascade);
      return true;
    };
  }
  ContainerImpl.prototype.onInvalidated_za3lpa$ = function (flagsInvalidated) {
    var flagsToCascade = flagsInvalidated & this.cascadingFlags;
    if (flagsToCascade > 0) {
      this._isInvalidatingChildren = true;
      this.iterateChildren_bwf5pq$(ContainerImpl$onInvalidated$lambda(flagsToCascade));
      this._isInvalidatingChildren = false;
    }
  };
  function ContainerImpl$update$lambda(it) {
    it.update();
    return true;
  }
  ContainerImpl.prototype.update = function () {
    UiComponentImpl.prototype.update.call(this);
    this.iterateChildren_bwf5pq$(ContainerImpl$update$lambda);
  };
  function ContainerImpl$draw$lambda(it) {
    it.render();
    return true;
  }
  ContainerImpl.prototype.draw = function () {
    this.iterateChildren_bwf5pq$(ContainerImpl$draw$lambda);
  };
  function ContainerImpl$onDeactivated$lambda(it) {
    if (it.isActive) {
      it.deactivate();
    }
    return true;
  }
  ContainerImpl.prototype.onDeactivated = function () {
    this.iterateChildren_bwf5pq$(ContainerImpl$onDeactivated$lambda);
  };
  ContainerImpl.prototype.iterator = function () {
    return this.children.iterator();
  };
  function ContainerImpl$getChildrenUnderRayInternal$lambda(closure$globalRay, closure$out, closure$returnAll, closure$onlyInteractive) {
    return function (child) {
      child.getChildrenUnderRayInternal_4zqksb$(closure$globalRay, closure$out, closure$returnAll, closure$onlyInteractive);
      return closure$returnAll || closure$out.isEmpty();
    };
  }
  ContainerImpl.prototype.getChildrenUnderRayInternal_4zqksb$ = function (globalRay, out, returnAll, onlyInteractive) {
    if (!this.visible || (onlyInteractive && this.inheritedInteractivityMode === InteractivityMode$NONE_getInstance()))
      return;
    if (!this.intersectsGlobalRay_ujzndq$(globalRay)) {
      return;
    }
    if (returnAll || out.isEmpty()) {
      this.iterateChildrenReversed_bwf5pq$(ContainerImpl$getChildrenUnderRayInternal$lambda(globalRay, out, returnAll, onlyInteractive));
    }
    if ((returnAll || out.isEmpty()) && (!onlyInteractive || this.interactivityEnabled)) {
      out.add_11rb$(this);
    }
  };
  function ContainerImpl$createSlot$lambda(this$ContainerImpl, closure$placeholder) {
    return function (f, oldValue, newValue) {
      var index = this$ContainerImpl.children.indexOf_11rb$(oldValue != null ? oldValue : closure$placeholder);
      this$ContainerImpl.removeChild_za3lpa$(index);
      this$ContainerImpl.addChild_3i6itm$(index, newValue != null ? newValue : closure$placeholder);
    };
  }
  ContainerImpl.prototype.createSlot_6s3w0i$ = function () {
    var tmp$;
    var placeholder = this.addChild_mxweac$(new UiComponentImpl(this));
    properties_0.Delegates;
    var initialValue = (tmp$ = null) == null || Kotlin.isType(tmp$, UiComponent) ? tmp$ : Kotlin.throwCCE();
    return new Kotlin.kotlin.properties.Delegates.observable$f(ContainerImpl$createSlot$lambda(this, placeholder), initialValue);
  };
  ContainerImpl.prototype.dispose_erfg6z$ = function (component_0) {
    if (component_0 == null)
      return;
    if (component_0.parent != null) {
      if (Kotlin.equals(component_0.parent, this))
        this.removeChild_erfg6z$(component_0);
      else
        throw new Exception('target component is not a child of this');
    }
    component_0.dispose();
  };
  ContainerImpl.prototype.dispose = function () {
    this.clearChildren_6taknv$(false);
    this._children.clear();
    UiComponentImpl.prototype.dispose.call(this);
  };
  function ContainerImpl$childInvalidatedHandler$lambda(this$ContainerImpl) {
    return function (child, flagsInvalidated) {
      var tmp$;
      Kotlin.isType(tmp$ = child, UiComponent) ? tmp$ : Kotlin.throwCCE();
      if (!this$ContainerImpl._isInvalidatingChildren) {
        if ((flagsInvalidated & this$ContainerImpl.layoutInvalidatingFlags) > 0) {
          if (child.includeInLayout || (flagsInvalidated & ValidationFlags_getInstance().HIERARCHY_ASCENDING) > 0) {
            this$ContainerImpl.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
          }
        }
        var bubblingFlags = flagsInvalidated & this$ContainerImpl.bubblingFlags;
        if (bubblingFlags > 0) {
          this$ContainerImpl.invalidate_za3lpa$(bubblingFlags);
        }
      }
    };
  }
  ContainerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ContainerImpl',
    interfaces: [Iterable, Container, UiComponentImpl]
  };
  function NativeContainer() {
    NativeContainer$Companion_getInstance();
  }
  function NativeContainer$Companion() {
    NativeContainer$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  NativeContainer$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var NativeContainer$Companion_instance = null;
  function NativeContainer$Companion_getInstance() {
    if (NativeContainer$Companion_instance === null) {
      new NativeContainer$Companion();
    }
    return NativeContainer$Companion_instance;
  }
  NativeContainer.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'NativeContainer',
    interfaces: [NativeComponent]
  };
  function NativeContainerDummy() {
    NativeContainerDummy_instance = this;
    this.interactivityEnabled_i4pyml$_0 = true;
    this.visible_i4pyml$_0 = true;
  }
  Object.defineProperty(NativeContainerDummy.prototype, 'interactivityEnabled', {
    get: function () {
      return this.interactivityEnabled_i4pyml$_0;
    },
    set: function (interactivityEnabled) {
      this.interactivityEnabled_i4pyml$_0 = interactivityEnabled;
    }
  });
  Object.defineProperty(NativeContainerDummy.prototype, 'visible', {
    get: function () {
      return this.visible_i4pyml$_0;
    },
    set: function (visible) {
      this.visible_i4pyml$_0 = visible;
    }
  });
  Object.defineProperty(NativeContainerDummy.prototype, 'bounds', {
    get: function () {
      throw new UnsupportedOperationException('NativeComponentDummy does not have bounds.');
    }
  });
  NativeContainerDummy.prototype.setSize_yxjqmk$ = function (width, height) {
  };
  NativeContainerDummy.prototype.setTransform_1ktw39$ = function (value) {
  };
  NativeContainerDummy.prototype.setSimpleTranslate_dleff0$ = function (x, y) {
  };
  NativeContainerDummy.prototype.setConcatenatedTransform_1ktw39$ = function (value) {
  };
  NativeContainerDummy.prototype.setColorTint_1qghwi$ = function (value) {
  };
  NativeContainerDummy.prototype.setConcatenatedColorTint_1qghwi$ = function (value) {
  };
  NativeContainerDummy.prototype.dispose = function () {
  };
  NativeContainerDummy.prototype.addChild_a1xap5$ = function (native, index) {
  };
  NativeContainerDummy.prototype.removeChild_za3lpa$ = function (index) {
  };
  NativeContainerDummy.prototype.swapChildren_vux9f0$ = function (indexA, indexB) {
  };
  NativeContainerDummy.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'NativeContainerDummy',
    interfaces: [NativeContainer]
  };
  var NativeContainerDummy_instance = null;
  function NativeContainerDummy_getInstance() {
    if (NativeContainerDummy_instance === null) {
      new NativeContainerDummy();
    }
    return NativeContainerDummy_instance;
  }
  function container$lambda($receiver) {
  }
  function container($receiver, init) {
    if (init === void 0)
      init = container$lambda;
    var c = new ElementContainerImpl($receiver);
    init(c);
    return c;
  }
  function IntColumn() {
    DataGridColumn.call(this);
  }
  IntColumn.prototype.createCell_4yfvcu$ = function ($receiver) {
    return new IntCell($receiver);
  };
  IntColumn.prototype.createEditorCell_4yfvcu$ = function ($receiver) {
    return new IntEditorCell($receiver);
  };
  IntColumn.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'IntColumn',
    interfaces: [DataGridColumn]
  };
  function IntCell(owner) {
    ContainerImpl.call(this, owner);
    this.input_0 = this.addChild_mxweac$(text_0(this));
  }
  Object.defineProperty(IntCell.prototype, 'data', {
    get: function () {
      return toIntOrNull(this.input_0.label);
    },
    set: function (value) {
      var tmp$;
      this.input_0.label = (tmp$ = value != null ? value.toString() : null) != null ? tmp$ : '';
    }
  });
  IntCell.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    ContainerImpl.prototype.updateLayout_64u75x$.call(this, explicitWidth, explicitHeight, out);
    this.input_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    out.set_i12l7q$(this.input_0.bounds);
  };
  IntCell.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'IntCell',
    interfaces: [DataGridCell, ContainerImpl]
  };
  function IntEditorCell(owner) {
    ContainerImpl.call(this, owner);
    this.changed_4813v9$_0 = own(this, new Signal0());
    this.input_0 = this.addChild_mxweac$(textInput(this));
    this.input_0.changed.add_trkh7z$(Kotlin.getCallableRef('dispatch', function ($receiver) {
      return $receiver.dispatch();
    }.bind(null, this.changed)));
  }
  Object.defineProperty(IntEditorCell.prototype, 'changed', {
    get: function () {
      return this.changed_4813v9$_0;
    }
  });
  Object.defineProperty(IntEditorCell.prototype, 'data', {
    get: function () {
      return toIntOrNull(this.input_0.text);
    },
    set: function (value) {
      var tmp$;
      this.input_0.text = (tmp$ = value != null ? value.toString() : null) != null ? tmp$ : '';
    }
  });
  IntEditorCell.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    ContainerImpl.prototype.updateLayout_64u75x$.call(this, explicitWidth, explicitHeight, out);
    this.input_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    out.set_i12l7q$(this.input_0.bounds);
  };
  IntEditorCell.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'IntEditorCell',
    interfaces: [DataGridEditorCell, ContainerImpl]
  };
  function StringColumn() {
    DataGridColumn.call(this);
  }
  StringColumn.prototype.createCell_4yfvcu$ = function ($receiver) {
    return new StringCell($receiver);
  };
  StringColumn.prototype.createEditorCell_4yfvcu$ = function ($receiver) {
    return new StringEditorCell($receiver);
  };
  StringColumn.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StringColumn',
    interfaces: [DataGridColumn]
  };
  function StringCell(owner) {
    ContainerImpl.call(this, owner);
    this.input_0 = this.addChild_mxweac$(text_0(this));
  }
  Object.defineProperty(StringCell.prototype, 'data', {
    get: function () {
      return this.input_0.label;
    },
    set: function (value) {
      this.input_0.label = value != null ? value : '';
    }
  });
  StringCell.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    ContainerImpl.prototype.updateLayout_64u75x$.call(this, explicitWidth, explicitHeight, out);
    this.input_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    out.set_i12l7q$(this.input_0.bounds);
  };
  StringCell.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StringCell',
    interfaces: [DataGridCell, ContainerImpl]
  };
  function StringEditorCell(owner) {
    ContainerImpl.call(this, owner);
    this.changed_z4pv9n$_0 = own(this, new Signal0());
    this.input_0 = this.addChild_mxweac$(textInput(this));
    this.input_0.changed.add_trkh7z$(Kotlin.getCallableRef('dispatch', function ($receiver) {
      return $receiver.dispatch();
    }.bind(null, this.changed)));
  }
  Object.defineProperty(StringEditorCell.prototype, 'changed', {
    get: function () {
      return this.changed_z4pv9n$_0;
    }
  });
  Object.defineProperty(StringEditorCell.prototype, 'data', {
    get: function () {
      return this.input_0.text;
    },
    set: function (value) {
      this.input_0.text = value != null ? value : '';
    }
  });
  StringEditorCell.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    ContainerImpl.prototype.updateLayout_64u75x$.call(this, explicitWidth, explicitHeight, out);
    this.input_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    out.set_i12l7q$(this.input_0.bounds);
  };
  StringEditorCell.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StringEditorCell',
    interfaces: [DataGridEditorCell, ContainerImpl]
  };
  function DataGrid(owner, data, columns) {
    DataGrid$Companion_getInstance();
    ContainerImpl.call(this, owner);
    this.data = data;
    this.columns = columns;
    this.focusEnabled_ra978b$_0 = true;
    this.focusOrder_ra978b$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.style = style(this, new DataGridStyle());
    this.hScrollPolicy$delegate = validationProp(this, ScrollPolicy$AUTO_getInstance(), ValidationFlags_getInstance().LAYOUT);
    this.vScrollPolicy$delegate = validationProp(this, ScrollPolicy$AUTO_getInstance(), ValidationFlags_getInstance().LAYOUT);
    this.maxRows$delegate = validationProp(this, 30, ValidationFlags_getInstance().LAYOUT);
    this.background_0 = null;
    this.dataView_0 = new ListView(this.data);
    this.columnCaches_0 = ArrayList_init();
    this.columnsAreValid_0 = false;
    this.clipper_0 = this.addChild_mxweac$(scrollRect(this));
    this.contents_0 = this.clipper_0.addElement_mxweac$(container(this));
    this.header_0 = this.clipper_0.addElement_mxweac$(container(this));
    this.columnDividers_0 = this.clipper_0.addElement_mxweac$(container(this, DataGrid$columnDividers$lambda));
    this.hScrollBar_0 = this.addChild_mxweac$(hScrollBar(this, DataGrid$hScrollBar$lambda));
    this.vScrollBar_0 = this.addChild_mxweac$(vScrollBar(this, DataGrid$vScrollBar$lambda));
    this.tossScroller_0 = enableTossScrolling(this.contents_0);
    this.tossBinding_0 = own(this, new TossScrollModelBinding(this.tossScroller_0, this.hScrollModel, this.vScrollModel));
    this.sortDownArrowPool_0 = new VisiblePool(DataGrid$sortDownArrowPool$lambda(this));
    this.sortUpArrowPool_0 = new VisiblePool(DataGrid$sortUpArrowPool$lambda(this));
    this.sortDownArrows_0 = ArrayList_init();
    this.sortUpArrows_0 = ArrayList_init();
    addTag(this, DataGrid$Companion_getInstance());
    onChanged(this.style, DataGrid_init$lambda(this));
    this.initColumnObservers_0();
    this.dataView_0.added.add_trkh7z$(DataGrid_init$lambda_0(this));
    this.dataView_0.removed.add_trkh7z$(DataGrid_init$lambda_1(this));
    this.dataView_0.changed.add_trkh7z$(DataGrid_init$lambda_2(this));
    this.dataView_0.reset.add_trkh7z$(DataGrid_init$lambda_3(this));
    this.colWidths_0 = ArrayList_init();
    this.contentsWidth_0 = 0.0;
    this.firstColumn_0 = null;
    this.lastColumn_0 = null;
  }
  Object.defineProperty(DataGrid.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_ra978b$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_ra978b$_0 = focusEnabled;
    }
  });
  Object.defineProperty(DataGrid.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_ra978b$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_ra978b$_0 = focusOrder;
    }
  });
  Object.defineProperty(DataGrid.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(DataGrid.prototype, 'hScrollPolicy', {
    get: function () {
      return this.hScrollPolicy$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('hScrollPolicy'));
    },
    set: function (hScrollPolicy) {
      this.hScrollPolicy$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('hScrollPolicy'), hScrollPolicy);
    }
  });
  Object.defineProperty(DataGrid.prototype, 'vScrollPolicy', {
    get: function () {
      return this.vScrollPolicy$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('vScrollPolicy'));
    },
    set: function (vScrollPolicy) {
      this.vScrollPolicy$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('vScrollPolicy'), vScrollPolicy);
    }
  });
  Object.defineProperty(DataGrid.prototype, 'maxRows', {
    get: function () {
      return this.maxRows$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('maxRows'));
    },
    set: function (maxRows) {
      this.maxRows$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('maxRows'), maxRows);
    }
  });
  Object.defineProperty(DataGrid.prototype, 'hScrollModel', {
    get: function () {
      return this.hScrollBar_0.scrollModel;
    }
  });
  Object.defineProperty(DataGrid.prototype, 'vScrollModel', {
    get: function () {
      return this.vScrollBar_0.scrollModel;
    }
  });
  function DataGrid$initColumnObservers$lambda(this$DataGrid) {
    return function (index, column) {
      this$DataGrid.columnCaches_0.add_wxm5ur$(index, new ColumnCache(this$DataGrid, column));
      this$DataGrid.invalidateColumns();
    };
  }
  function DataGrid$initColumnObservers$lambda_0(this$DataGrid) {
    return function (index, column) {
      this$DataGrid.dispose_0(this$DataGrid.columnCaches_0.removeAt_za3lpa$(index));
      this$DataGrid.invalidateColumns();
    };
  }
  function DataGrid$initColumnObservers$lambda_1(this$DataGrid) {
    return function (index, oldColumn, newColumn) {
      this$DataGrid.dispose_0(this$DataGrid.columnCaches_0.removeAt_za3lpa$(index));
      this$DataGrid.columnCaches_0.add_wxm5ur$(index, new ColumnCache(this$DataGrid, newColumn));
      this$DataGrid.invalidateColumns();
    };
  }
  function DataGrid$initColumnObservers$lambda_2(this$DataGrid) {
    return function () {
      var tmp$, tmp$_0;
      tmp$ = get_lastIndex(this$DataGrid.columnCaches_0);
      for (var i = 0; i <= tmp$; i++) {
        this$DataGrid.dispose_0(this$DataGrid.columnCaches_0.get_za3lpa$(i));
      }
      this$DataGrid.columnCaches_0.clear();
      tmp$_0 = get_lastIndex(this$DataGrid.columns);
      for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
        this$DataGrid.columnCaches_0.add_11rb$(new ColumnCache(this$DataGrid, this$DataGrid.columns.get_za3lpa$(i_0)));
      }
      this$DataGrid.invalidateColumns();
    };
  }
  DataGrid.prototype.initColumnObservers_0 = function () {
    var tmp$;
    this.columns.added.add_trkh7z$(DataGrid$initColumnObservers$lambda(this));
    this.columns.removed.add_trkh7z$(DataGrid$initColumnObservers$lambda_0(this));
    this.columns.changed.add_trkh7z$(DataGrid$initColumnObservers$lambda_1(this));
    this.columns.reset.add_trkh7z$(DataGrid$initColumnObservers$lambda_2(this));
    tmp$ = get_lastIndex(this.columns);
    for (var i = 0; i <= tmp$; i++) {
      this.columnCaches_0.add_11rb$(new ColumnCache(this, this.columns.get_za3lpa$(i)));
    }
  };
  DataGrid.prototype.dispose_0 = function (columnCache) {
    if (columnCache.headerCell.created) {
      this.header_0.removeElement_erfg6z$(columnCache.headerCell.instance);
    }
    columnCache.dispose();
  };
  DataGrid.prototype.dispose_1 = function (children) {
    var tmp$;
    tmp$ = get_lastIndex(children);
    for (var i = 0; i <= tmp$; i++) {
      this.dispose_erfg6z$(children.get_za3lpa$(i));
    }
    children.clear();
  };
  DataGrid.prototype.invalidateColumns = function () {
    this.columnsAreValid_0 = false;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  DataGrid.prototype.setSize_yxjqmk$$default = function (width, height) {
    if (this._explicitWidth === width && this._explicitHeight === height)
      return;
    this.columnsAreValid_0 = false;
    this.setSize_yxjqmk$(width, height, ContainerImpl.prototype.setSize_yxjqmk$$default.bind(this));
  };
  DataGrid.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var pad = this.style.borderThickness;
    var availableWidth = pad.reduceWidth_81sz4$(explicitWidth);
    var availableHeight = pad.reduceHeight_81sz4$(explicitHeight);
    if (!this.columnsAreValid_0) {
      this.columnsAreValid_0 = true;
      this.updateColumnWidths_0(availableWidth);
    }
    var w = this.contentsWidth_0 - this.hScrollBar_0.scrollModel.max;
    out.width = pad.expandWidth2_mx4ult$(w);
    this.updateHeader_0(w);
    var hScrollBarH = this.hScrollBar_0.visible ? (tmp$ = this.hScrollBar_0.minHeight) != null ? tmp$ : 0.0 : 0.0;
    var vScrollBarW = this.vScrollBar_0.visible ? (tmp$_0 = this.vScrollBar_0.minWidth) != null ? tmp$_0 : 0.0 : 0.0;
    this.hScrollBar_0.setSize_yxjqmk$(out.width - vScrollBarW, null);
    this.hScrollBar_0.setPosition_y2kzbl$(0.0, out.height - hScrollBarH);
    this.tossBinding_0.modelToPixelsY = this.vScrollBar_0.modelToPixels;
    this.updateVerticalDividers_0(w, out.height);
    this.clipper_0.maskSize_dleff0$(w, pad.reduceHeight2_mx4ult$(out.height));
    this.clipper_0.setSize_i12l7q$(this.clipper_0.maskBounds);
    this.clipper_0.setPosition_y2kzbl$(pad.left, pad.top);
    this.contents_0.setSize_yxjqmk$(this.clipper_0.bounds.width, this.clipper_0.bounds.height - this.header_0.height);
    this.contents_0.setPosition_y2kzbl$(0.0, this.header_0.height);
    (tmp$_1 = this.background_0) != null ? tmp$_1.setSize_i12l7q$(out) : null;
    (tmp$_2 = this.highlight) != null ? tmp$_2.setSize_i12l7q$(out) : null;
  };
  DataGrid.prototype.updateColumnWidths_0 = function (width) {
    var tmp$, tmp$_0, tmp$_1;
    this.colWidths_0.clear();
    var totalColW = 0.0;
    var inflexibleW = 0.0;
    var tmp$_2;
    if (width == null)
      tmp$_2 = this.style.defaultColumnWidth;
    else {
      var b = width / this.columns.size;
      tmp$_2 = Math.max(100.0, b);
    }
    var defaultW = tmp$_2;
    tmp$ = get_lastIndex(this.columns);
    for (var i = 0; i <= tmp$; i++) {
      var col = this.columns.get_za3lpa$(i);
      if (!col.visible) {
        this.colWidths_0.add_11rb$(0.0);
      }
       else {
        var prefWidth = (tmp$_0 = col.getPreferredWidth_81sz4$(width)) != null ? tmp$_0 : defaultW;
        if (!col.getIsFlexible()) {
          inflexibleW += prefWidth;
        }
        totalColW += prefWidth;
        this.colWidths_0.add_11rb$(prefWidth);
      }
    }
    if (width != null && totalColW > inflexibleW) {
      if (totalColW <= width || this.hScrollPolicy === ScrollPolicy$OFF_getInstance()) {
        var b_0 = width - inflexibleW;
        var scale = Math.max(0.0, b_0) / (totalColW - inflexibleW);
        tmp$_1 = get_lastIndex(this.columns);
        for (var i_0 = 0; i_0 <= tmp$_1; i_0++) {
          var col_0 = this.columns.get_za3lpa$(i_0);
          if (col_0.visible && col_0.getIsFlexible()) {
            this.colWidths_0.set_wxm5ur$(i_0, this.colWidths_0.get_za3lpa$(i_0) * scale);
          }
        }
      }
    }
    this.contentsWidth_0 = sum2(this.colWidths_0);
    var w = width == null || this.contentsWidth_0 < width ? this.contentsWidth_0 : width;
    this.hScrollBar_0.scrollModel.max = this.contentsWidth_0 - w;
    if (this.hScrollBar_0.scrollModel.max < 0.01)
      this.hScrollBar_0.scrollModel.max = 0.0;
    this.hScrollBar_0.visible = this.hScrollPolicy === ScrollPolicy$ON_getInstance() || (this.hScrollPolicy === ScrollPolicy$AUTO_getInstance() && this.hScrollBar_0.scrollModel.max > 0.0);
  };
  DataGrid.prototype.updateHeader_0 = function (width) {
    var tmp$;
    this.sortDownArrowPool_0.freeAll_4ezy5m$(this.sortDownArrows_0);
    this.sortDownArrows_0.clear();
    this.sortUpArrowPool_0.freeAll_4ezy5m$(this.sortUpArrows_0);
    this.sortUpArrows_0.clear();
    var x = -this.hScrollModel.value;
    tmp$ = get_lastIndex(this.columns);
    for (var i = 0; i <= tmp$; i++) {
      var col = this.columns.get_za3lpa$(i);
      var columnCache = this.columnCaches_0.get_za3lpa$(i);
      if (x >= 0 && x < width && col.visible) {
        if (!columnCache.headerCell.created) {
          var newHeaderCell = columnCache.headerCell.instance;
          addTag(newHeaderCell, DataGrid$Companion_getInstance().HEADER_CELL);
          newHeaderCell.interactivityMode = InteractivityMode$NONE_getInstance();
          var tmp$_0 = this.header_0;
          var b = this.header_0.numElements;
          tmp$_0.addElement_3i6itm$(Math.min(i, b), newHeaderCell);
        }
        var headerCell = columnCache.headerCell.instance;
        headerCell.visible = true;
      }
       else {
        if (columnCache.headerCell.created) {
          columnCache.headerCell.instance.visible = false;
        }
      }
      x += this.colWidths_0.get_za3lpa$(i);
    }
    this.header_0.setSize_yxjqmk$(width, null);
  };
  function DataGrid$updateVerticalDividers$lambda($receiver) {
    addTag($receiver, DataGrid$Companion_getInstance().COLUMN_DIVIDER);
  }
  DataGrid.prototype.updateVerticalDividers_0 = function (width, height) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var x = -this.hScrollModel.value;
    var shownColumns = 0;
    tmp$ = get_lastIndex(this.columns);
    for (var i = 0; i <= tmp$; i++) {
      if (i > 0 && x > 0 && this.columns.get_za3lpa$(i).visible) {
        if (this.columnDividers_0.numElements <= shownColumns) {
          this.columnDividers_0.addElement_mxweac$(vr(this, DataGrid$updateVerticalDividers$lambda));
        }
        var divider = (tmp$_0 = this.columnDividers_0.getElementAt_za3lpa$(shownColumns)) != null ? tmp$_0 : Kotlin.throwNPE();
        divider.visible = true;
        divider.setSize_yxjqmk$(null, height);
        divider.setPosition_y2kzbl$(x, 0.0);
        shownColumns = shownColumns + 1 | 0;
      }
      x += this.colWidths_0.get_za3lpa$(i);
      if (x >= width)
        break;
    }
    tmp$_1 = this.columnDividers_0.numElements - 1 | 0;
    for (var i_0 = shownColumns; i_0 <= tmp$_1; i_0++) {
      ((tmp$_2 = this.columnDividers_0.getElementAt_za3lpa$(i_0)) != null ? tmp$_2 : Kotlin.throwNPE()).visible = false;
    }
  };
  DataGrid.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    this.dataView_0.dispose();
  };
  function DataGrid$Companion() {
    DataGrid$Companion_instance = this;
    this.COLUMN_DIVIDER = styleTag();
    this.HEADER_BACKGROUND = styleTag();
    this.HEADER_CELL = styleTag();
    this.FIRST_COLUMN = styleTag();
    this.LAST_COLUMN = styleTag();
    this.EVEN_COL = styleTag();
    this.ODD_COL = styleTag();
    this.EVEN_ROW = styleTag();
    this.ODD_ROW = styleTag();
  }
  DataGrid$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var DataGrid$Companion_instance = null;
  function DataGrid$Companion_getInstance() {
    if (DataGrid$Companion_instance === null) {
      new DataGrid$Companion();
    }
    return DataGrid$Companion_instance;
  }
  function DataGrid$columnDividers$lambda($receiver) {
    $receiver.interactivityMode = InteractivityMode$NONE_getInstance();
  }
  function DataGrid$hScrollBar$lambda($receiver) {
    $receiver.visible = false;
  }
  function DataGrid$vScrollBar$lambda($receiver) {
    $receiver.visible = false;
  }
  function DataGrid$sortDownArrowPool$lambda(this$DataGrid) {
    return function () {
      return this$DataGrid.header_0.addElement_mxweac$(this$DataGrid.style.sortDownArrow(this$DataGrid));
    };
  }
  function DataGrid$sortUpArrowPool$lambda(this$DataGrid) {
    return function () {
      return this$DataGrid.header_0.addElement_mxweac$(this$DataGrid.style.sortUpArrow(this$DataGrid));
    };
  }
  function DataGrid_init$lambda(this$DataGrid) {
    return function (it) {
      this$DataGrid.columnDividers_0.clearElements_6taknv$(true);
      this$DataGrid.clipper_0.borderRadius = (new Corners()).set_avuye$(it.borderRadius).deflate_ujzovp$(it.borderThickness);
      this$DataGrid.dispose_erfg6z$(this$DataGrid.background_0);
      this$DataGrid.background_0 = this$DataGrid.addChild_3i6itm$(0, it.background(this$DataGrid));
      this$DataGrid.dispose_1(this$DataGrid.sortDownArrows_0);
      this$DataGrid.dispose_1(this$DataGrid.sortUpArrows_0);
      this$DataGrid.sortDownArrowPool_0.clear_6taknv$(true);
      this$DataGrid.sortUpArrowPool_0.clear_6taknv$(true);
    };
  }
  function DataGrid_init$lambda_0(this$DataGrid) {
    return function (f, f_0) {
      this$DataGrid.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  function DataGrid_init$lambda_1(this$DataGrid) {
    return function (f, f_0) {
      this$DataGrid.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  function DataGrid_init$lambda_2(this$DataGrid) {
    return function (f, f_0, f_1) {
      this$DataGrid.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  function DataGrid_init$lambda_3(this$DataGrid) {
    return function () {
      this$DataGrid.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  DataGrid.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DataGrid',
    interfaces: [Focusable, ContainerImpl]
  };
  function DataGridStyle() {
    DataGridStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_lypbyg$_0 = DataGridStyle$Companion_getInstance();
    this.background$delegate = this.prop_umlfku$('background', noSkin);
    this.borderRadius$delegate = this.prop_umlfku$('borderRadius', new Corners());
    this.borderThickness$delegate = this.prop_umlfku$('borderThickness', Pad_init());
    this.defaultColumnWidth$delegate = this.prop_umlfku$('defaultColumnWidth', 100.0);
    this.sortDownArrow$delegate = this.prop_umlfku$('sortDownArrow', noSkin);
    this.sortUpArrow$delegate = this.prop_umlfku$('sortUpArrow', noSkin);
    this.columnHeaderPadding$delegate = this.prop_umlfku$('columnHeaderPadding', Pad_init_0(4.0));
    this.columnHeaderArrowGap$delegate = this.prop_umlfku$('columnHeaderArrowGap', 2.0);
    this.headerBackground$delegate = this.prop_umlfku$('headerBackground', noSkin);
  }
  Object.defineProperty(DataGridStyle.prototype, 'type', {
    get: function () {
      return this.type_lypbyg$_0;
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'borderRadius', {
    get: function () {
      return this.borderRadius$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderRadius'));
    },
    set: function (borderRadius) {
      this.borderRadius$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderRadius'), borderRadius);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'borderThickness', {
    get: function () {
      return this.borderThickness$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderThickness'));
    },
    set: function (borderThickness) {
      this.borderThickness$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderThickness'), borderThickness);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'defaultColumnWidth', {
    get: function () {
      return this.defaultColumnWidth$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultColumnWidth'));
    },
    set: function (defaultColumnWidth) {
      this.defaultColumnWidth$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultColumnWidth'), defaultColumnWidth);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'sortDownArrow', {
    get: function () {
      return this.sortDownArrow$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('sortDownArrow'));
    },
    set: function (sortDownArrow) {
      this.sortDownArrow$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('sortDownArrow'), sortDownArrow);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'sortUpArrow', {
    get: function () {
      return this.sortUpArrow$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('sortUpArrow'));
    },
    set: function (sortUpArrow) {
      this.sortUpArrow$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('sortUpArrow'), sortUpArrow);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'columnHeaderPadding', {
    get: function () {
      return this.columnHeaderPadding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('columnHeaderPadding'));
    },
    set: function (columnHeaderPadding) {
      this.columnHeaderPadding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('columnHeaderPadding'), columnHeaderPadding);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'columnHeaderArrowGap', {
    get: function () {
      return this.columnHeaderArrowGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('columnHeaderArrowGap'));
    },
    set: function (columnHeaderArrowGap) {
      this.columnHeaderArrowGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('columnHeaderArrowGap'), columnHeaderArrowGap);
    }
  });
  Object.defineProperty(DataGridStyle.prototype, 'headerBackground', {
    get: function () {
      return this.headerBackground$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('headerBackground'));
    },
    set: function (headerBackground) {
      this.headerBackground$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('headerBackground'), headerBackground);
    }
  });
  function DataGridStyle$Companion() {
    DataGridStyle$Companion_instance = this;
  }
  DataGridStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var DataGridStyle$Companion_instance = null;
  function DataGridStyle$Companion_getInstance() {
    if (DataGridStyle$Companion_instance === null) {
      new DataGridStyle$Companion();
    }
    return DataGridStyle$Companion_instance;
  }
  DataGridStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DataGridStyle',
    interfaces: [StyleBase]
  };
  function dataGrid($receiver, data, columns, init) {
    var d = new DataGrid($receiver, data, columns);
    init(d);
    return d;
  }
  function DataGridCell() {
  }
  DataGridCell.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'DataGridCell',
    interfaces: [UiComponent]
  };
  function DataGridEditorCell() {
  }
  DataGridEditorCell.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'DataGridEditorCell',
    interfaces: [DataGridCell]
  };
  function ColumnSortDirection(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ColumnSortDirection_initFields() {
    ColumnSortDirection_initFields = function () {
    };
    ColumnSortDirection$NONE_instance = new ColumnSortDirection('NONE', 0);
    ColumnSortDirection$ASCENDING_instance = new ColumnSortDirection('ASCENDING', 1);
    ColumnSortDirection$DESCENDING_instance = new ColumnSortDirection('DESCENDING', 2);
  }
  var ColumnSortDirection$NONE_instance;
  function ColumnSortDirection$NONE_getInstance() {
    ColumnSortDirection_initFields();
    return ColumnSortDirection$NONE_instance;
  }
  var ColumnSortDirection$ASCENDING_instance;
  function ColumnSortDirection$ASCENDING_getInstance() {
    ColumnSortDirection_initFields();
    return ColumnSortDirection$ASCENDING_instance;
  }
  var ColumnSortDirection$DESCENDING_instance;
  function ColumnSortDirection$DESCENDING_getInstance() {
    ColumnSortDirection_initFields();
    return ColumnSortDirection$DESCENDING_instance;
  }
  ColumnSortDirection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColumnSortDirection',
    interfaces: [Enum]
  };
  function ColumnSortDirection$values() {
    return [ColumnSortDirection$NONE_getInstance(), ColumnSortDirection$ASCENDING_getInstance(), ColumnSortDirection$DESCENDING_getInstance()];
  }
  ColumnSortDirection.values = ColumnSortDirection$values;
  function ColumnSortDirection$valueOf(name) {
    switch (name) {
      case 'NONE':
        return ColumnSortDirection$NONE_getInstance();
      case 'ASCENDING':
        return ColumnSortDirection$ASCENDING_getInstance();
      case 'DESCENDING':
        return ColumnSortDirection$DESCENDING_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.datagrid.ColumnSortDirection.' + name);
    }
  }
  ColumnSortDirection.valueOf_61zpoe$ = ColumnSortDirection$valueOf;
  function ColumnCache(owner, column) {
    this.headerCell = new LazyInstance(column, ColumnCache$headerCell$lambda(owner));
  }
  ColumnCache.prototype.dispose = function () {
    this.headerCell.disposeInstance();
  };
  function ColumnCache$headerCell$lambda(closure$owner) {
    return function ($receiver) {
      return $receiver.createHeaderCell_4yfvcu$(closure$owner);
    };
  }
  ColumnCache.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColumnCache',
    interfaces: [Disposable]
  };
  function VisiblePool(create) {
    ObjectPool.call(this, 8, create);
  }
  VisiblePool.prototype.obtain = function () {
    var i = ObjectPool.prototype.obtain.call(this);
    i.visible = true;
    return i;
  };
  VisiblePool.prototype.free_11rb$ = function (obj_3) {
    ObjectPool.prototype.free_11rb$.call(this, obj_3);
    obj_3.visible = false;
  };
  VisiblePool.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VisiblePool',
    interfaces: [ObjectPool]
  };
  function DataGridColumn() {
    this.visible = true;
    this.editable = false;
    this.selectable = true;
    this.resizable = true;
    this.sortable = true;
    this.width = null;
    this.widthPercent = null;
    this.minWidth = 8.0;
    this.hAlign = HAlign$LEFT_getInstance();
    this.isFlexible = null;
    this.sortDirection = ColumnSortDirection$NONE_getInstance();
  }
  DataGridColumn.prototype.setCellData_xwzc9p$ = function (row, value) {
  };
  DataGridColumn.prototype.getPreferredWidth_81sz4$ = function (availableWidth) {
    var tmp$, tmp$_0;
    var w = availableWidth == null || this.widthPercent == null ? this.width : ((tmp$ = this.widthPercent) != null ? tmp$ : Kotlin.throwNPE()) * availableWidth;
    if (this.minWidth != null && w != null && ((tmp$_0 = this.minWidth) != null ? tmp$_0 : Kotlin.throwNPE()) > w)
      w = this.minWidth;
    return w;
  };
  DataGridColumn.prototype.getIsFlexible = function () {
    var tmp$;
    return this.width == null && this.widthPercent == null || ((tmp$ = this.isFlexible) != null ? tmp$ : this.widthPercent != null);
  };
  DataGridColumn.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DataGridColumn',
    interfaces: []
  };
  var createOrReuseContents = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.component.createOrReuseContents_binxfq$', function (createOrReuseContents$T_0, isT, $receiver, factory_0) {
    var existing;
    var contents = $receiver.getElementAt_za3lpa$(0);
    if (!isT(contents)) {
      $receiver.removeElement_erfg6z$(contents);
      contents != null ? contents.dispose() : null;
      existing = factory_0($receiver);
      $receiver.addElement_mxweac$(existing);
    }
     else {
      existing = contents;
    }
    return existing;
  });
  function ElementParent() {
  }
  ElementParent.prototype.unaryPlus_8db8yx$ = function ($receiver) {
    this.addElement_3i6itm$(this.numElements, $receiver);
    return $receiver;
  };
  ElementParent.prototype.unaryMinus_8db8yx$ = function ($receiver) {
    this.removeElement_erfg6z$($receiver);
    return $receiver;
  };
  ElementParent.prototype.clearElements_6taknv$ = function (dispose, callback$default) {
    if (dispose === void 0)
      dispose = true;
    callback$default ? callback$default(dispose) : this.clearElements_6taknv$$default(dispose);
  };
  ElementParent.prototype.addElementAfter_tu2188$ = function (element, after) {
    var index = this.elements.indexOf_11rb$(after);
    if (index === -1)
      return -1;
    this.addElement_3i6itm$(index + 1 | 0, element);
    return index + 1 | 0;
  };
  ElementParent.prototype.addElementBefore_tu2188$ = function (element, before) {
    var index = this.elements.indexOf_11rb$(before);
    if (index === -1)
      return -1;
    this.addElement_3i6itm$(index, element);
    return index;
  };
  ElementParent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ElementParent',
    interfaces: []
  };
  function ElementContainer() {
  }
  ElementContainer.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ElementContainer',
    interfaces: [ElementParent, Container]
  };
  function ElementContainerImpl(owner, native) {
    if (native === void 0)
      native = inject(owner, NativeContainer$Companion_getInstance().FACTORY_KEY)(owner);
    ContainerImpl.call(this, owner, native);
    this.native_jeji3q$_0 = native;
    this._elements = ArrayList_init();
  }
  Object.defineProperty(ElementContainerImpl.prototype, 'native', {
    get: function () {
      return this.native_jeji3q$_0;
    }
  });
  Object.defineProperty(ElementContainerImpl.prototype, 'elements', {
    get: function () {
      return this._elements;
    }
  });
  Object.defineProperty(ElementContainerImpl.prototype, 'numElements', {
    get: function () {
      return this._elements.size;
    }
  });
  ElementContainerImpl.prototype.iterateElements_qulv53$ = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.component.ElementContainerImpl.iterateElements_qulv53$', function (body) {
    var tmp$;
    tmp$ = Kotlin.kotlin.collections.get_lastIndex_55thoc$(this.elements);
    for (var i = 0; i <= tmp$; i++) {
      body(this.elements.get_za3lpa$(i));
    }
  });
  ElementContainerImpl.prototype.iterateElementsReversed_qulv53$ = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.component.ElementContainerImpl.iterateElementsReversed_qulv53$', function (body) {
    var tmp$;
    tmp$ = Kotlin.kotlin.ranges.downTo_dqglrj$(Kotlin.kotlin.collections.get_lastIndex_55thoc$(this.elements), 0).iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      body(this.elements.get_za3lpa$(i));
    }
  });
  ElementContainerImpl.prototype.getElementAt_za3lpa$ = function (index) {
    if (index < 0 || index >= this.numElements)
      return null;
    return this.elements.get_za3lpa$(index);
  };
  ElementContainerImpl.prototype.addElement_mxweac$ = function (child) {
    return this.addElement_3i6itm$(this.numElements, child);
  };
  ElementContainerImpl.prototype.addElement_3i6itm$ = function (index, element) {
    var newIndex = index;
    var oldIndex = this.elements.indexOf_11rb$(element);
    if (oldIndex !== -1) {
      if (newIndex === oldIndex)
        return element;
      if (oldIndex < newIndex) {
        newIndex = newIndex - 1 | 0;
      }
    }
    this._elements.add_wxm5ur$(newIndex, element);
    this.onElementAdded_68b5gw$(newIndex, element);
    return element;
  };
  ElementContainerImpl.prototype.onElementAdded_68b5gw$ = function (index, element) {
    if (index === (this.numElements - 1 | 0)) {
      this.addChild_mxweac$(element);
    }
     else if (index === 0) {
      var nextElement = this._elements.get_za3lpa$(index + 1 | 0);
      this.addChildBefore_tu2188$(element, nextElement);
    }
     else {
      var previousElement = this._elements.get_za3lpa$(index - 1 | 0);
      this.addChildAfter_tu2188$(element, previousElement);
    }
  };
  ElementContainerImpl.prototype.removeElement_erfg6z$ = function (element) {
    if (element == null)
      return false;
    var index = this.elements.indexOf_11rb$(element);
    if (index === -1)
      return false;
    this.removeElement_za3lpa$(index);
    return true;
  };
  ElementContainerImpl.prototype.removeElement_za3lpa$ = function (index) {
    var element = this._elements.get_za3lpa$(index);
    this._elements.removeAt_za3lpa$(index);
    this.onElementRemoved_68b5gw$(index, element);
    if (element.parent != null)
      throw new Exception('Removing an element should remove from the display.');
    return element;
  };
  ElementContainerImpl.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.removeChild_erfg6z$(element);
  };
  ElementContainerImpl.prototype.swapElements_tu2188$ = function (elementA, elementB) {
    var indexA = this._elements.indexOf_11rb$(elementA);
    var indexB = this._elements.indexOf_11rb$(elementB);
    this.swapElements_vux9f0$(indexA, indexB);
  };
  ElementContainerImpl.prototype.swapElements_vux9f0$ = function (indexA, indexB) {
    var c = this._elements;
    var childA = c.get_za3lpa$(indexA);
    var childB = c.get_za3lpa$(indexB);
    c.set_wxm5ur$(indexA, childB);
    c.set_wxm5ur$(indexB, childA);
    this.onElementsSwapped_7tm638$(childA, indexA, childB, indexB);
  };
  ElementContainerImpl.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.swapChildren_tu2188$(elementA, elementB);
  };
  ElementContainerImpl.prototype.clearElements_6taknv$$default = function (dispose) {
    var c = this.elements;
    while (!c.isEmpty()) {
      var element = this.removeElement_za3lpa$(this.numElements - 1 | 0);
      if (dispose && Kotlin.isType(element, Disposable)) {
        element.dispose();
      }
    }
  };
  ElementContainerImpl.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    if (explicitWidth != null && explicitHeight != null)
      return;
    var tmp$;
    tmp$ = Kotlin.kotlin.collections.get_lastIndex_55thoc$(this.elements);
    for (var i = 0; i <= tmp$; i++) {
      var it = this.elements.get_za3lpa$(i);
      if (it.shouldLayout) {
        if (explicitWidth == null) {
          if (it.right > out.width)
            out.width = it.right;
        }
        if (explicitHeight == null) {
          if (it.bottom > out.height)
            out.height = it.bottom;
        }
      }
    }
  };
  ElementContainerImpl.prototype.dispose_erfg6z$ = function (component_0) {
    if (component_0 == null)
      return;
    this.removeElement_erfg6z$(component_0);
    ContainerImpl.prototype.dispose_erfg6z$.call(this, component_0);
  };
  ElementContainerImpl.prototype.dispose = function () {
    this._elements.clear();
    ContainerImpl.prototype.dispose.call(this);
  };
  ElementContainerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ElementContainerImpl',
    interfaces: [ElementContainer, ContainerImpl, Iterable]
  };
  function HDivider(owner) {
    HDivider$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.style = style(this, new DividerStyle());
    this._dividerBar_ig9wna$_0 = null;
    this._handle_ig9wna$_0 = null;
    this._left_ig9wna$_0 = null;
    this._right_ig9wna$_0 = null;
    this._split_ig9wna$_0 = 0.5;
    this._mouse_ig9wna$_0 = new Vector2();
    addTag(this, HDivider$Companion_getInstance());
    onChanged(this.style, HDivider_init$lambda(this));
  }
  HDivider.prototype.dividerDragHandler_xpqwa9$_0 = function (event) {
    this.mousePosition_9wm29l$(this._mouse_ig9wna$_0);
    this.split_mx4ult$(this._mouse_ig9wna$_0.x / this.width);
  };
  HDivider.prototype.onElementAdded_68b5gw$ = function (index, element) {
    ElementContainerImpl.prototype.onElementAdded_68b5gw$.call(this, index, element);
    this.refreshParts_ig9wna$_0();
  };
  HDivider.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    ElementContainerImpl.prototype.onElementRemoved_68b5gw$.call(this, index, element);
    this.refreshParts_ig9wna$_0();
  };
  HDivider.prototype.refreshParts_ig9wna$_0 = function () {
    this._left_ig9wna$_0 = getOrNull(this._children, 0);
    this._right_ig9wna$_0 = getOrNull(this._children, 1);
  };
  HDivider.prototype.split = function () {
    return this._split_ig9wna$_0;
  };
  HDivider.prototype.split_mx4ult$ = function (value) {
    var clamp_73gzaq$result;
    clamp_73gzaq$break: {
      if (Kotlin.compareTo(value, 0.0) <= 0) {
        clamp_73gzaq$result = 0.0;
        break clamp_73gzaq$break;
      }
      if (Kotlin.compareTo(value, 1.0) >= 0) {
        clamp_73gzaq$result = 1.0;
        break clamp_73gzaq$break;
      }
      clamp_73gzaq$result = value;
    }
    var clamped = clamp_73gzaq$result;
    if (this._split_ig9wna$_0 === clamped)
      return;
    this._split_ig9wna$_0 = clamped;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  HDivider.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6;
    var mW = 0.0;
    if (this._left_ig9wna$_0 != null) {
      out.height.bound_66lwr4$(((tmp$ = this._left_ig9wna$_0) != null ? tmp$ : Kotlin.throwNPE()).sizeConstraints.height);
      mW += (tmp$_1 = ((tmp$_0 = this._left_ig9wna$_0) != null ? tmp$_0 : Kotlin.throwNPE()).minWidth) != null ? tmp$_1 : 0.0;
    }
    mW += (tmp$_3 = (tmp$_2 = this._handle_ig9wna$_0) != null ? tmp$_2.width : null) != null ? tmp$_3 : 0.0;
    if (this._right_ig9wna$_0 != null) {
      out.height.bound_66lwr4$(((tmp$_4 = this._right_ig9wna$_0) != null ? tmp$_4 : Kotlin.throwNPE()).sizeConstraints.height);
      mW += (tmp$_6 = ((tmp$_5 = this._right_ig9wna$_0) != null ? tmp$_5 : Kotlin.throwNPE()).minWidth) != null ? tmp$_6 : 0.0;
    }
    out.width.min = mW;
  };
  HDivider.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_20, tmp$_14, tmp$_15, tmp$_21, tmp$_16, tmp$_17, tmp$_22, tmp$_18, tmp$_19, tmp$_23, tmp$_24, tmp$_25, tmp$_26, tmp$_27;
    (tmp$ = this._dividerBar_ig9wna$_0) != null ? tmp$.setSize_yxjqmk$(null, explicitHeight) : null;
    var dividerBarWidth = (tmp$_1 = (tmp$_0 = this._dividerBar_ig9wna$_0) != null ? tmp$_0.width : null) != null ? tmp$_1 : 0.0;
    var leftWidth;
    var rightWidth;
    if (explicitWidth != null) {
      var w = explicitWidth - dividerBarWidth;
      var rW = (tmp$_3 = (tmp$_2 = this._right_ig9wna$_0) != null ? clampWidth(tmp$_2, w * (1.0 - this._split_ig9wna$_0)) : null) != null ? tmp$_3 : 0.0;
      leftWidth = floor((tmp$_5 = (tmp$_4 = this._left_ig9wna$_0) != null ? clampWidth(tmp$_4, w - rW) : null) != null ? tmp$_5 : 0.0);
      var y = w - leftWidth;
      var min_sdesaw$result;
      if (Kotlin.compareTo(rW, y) <= 0) {
        min_sdesaw$result = rW;
      }
       else {
        min_sdesaw$result = y;
      }
      rightWidth = min_sdesaw$result;
      (tmp$_6 = this._left_ig9wna$_0) != null ? tmp$_6.setSize_yxjqmk$(leftWidth, explicitHeight) : null;
      (tmp$_7 = this._right_ig9wna$_0) != null ? tmp$_7.setSize_yxjqmk$(rightWidth, explicitHeight) : null;
    }
     else {
      (tmp$_8 = this._left_ig9wna$_0) != null ? tmp$_8.setSize_yxjqmk$(null, explicitHeight) : null;
      (tmp$_9 = this._right_ig9wna$_0) != null ? tmp$_9.setSize_yxjqmk$(null, explicitHeight) : null;
      leftWidth = (tmp$_11 = (tmp$_10 = this._left_ig9wna$_0) != null ? tmp$_10.width : null) != null ? tmp$_11 : 0.0;
      rightWidth = (tmp$_13 = (tmp$_12 = this._right_ig9wna$_0) != null ? tmp$_12.width : null) != null ? tmp$_13 : 0.0;
    }
    var x = explicitWidth != null ? explicitWidth : 0.0;
    var y_0 = leftWidth + dividerBarWidth + rightWidth;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y_0) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y_0;
    }
    out.width = max_sdesaw$result;
    tmp$_23 = math_0.MathUtils;
    tmp$_20 = explicitHeight != null ? explicitHeight : 0.0;
    tmp$_21 = (tmp$_15 = (tmp$_14 = this._left_ig9wna$_0) != null ? tmp$_14.height : null) != null ? tmp$_15 : 0.0;
    tmp$_22 = (tmp$_17 = (tmp$_16 = this._right_ig9wna$_0) != null ? tmp$_16.height : null) != null ? tmp$_17 : 0.0;
    var z = (tmp$_19 = (tmp$_18 = this._handle_ig9wna$_0) != null ? tmp$_18.minHeight : null) != null ? tmp$_19 : 0.0;
    tmp$_23.max_sdesaw$;
    tmp$_23.max_sdesaw$;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(tmp$_20, tmp$_21) >= 0) {
      max_sdesaw$result_0 = tmp$_20;
    }
     else {
      max_sdesaw$result_0 = tmp$_21;
    }
    var x_0 = max_sdesaw$result_0;
    var inline$result;
    if (Kotlin.compareTo(x_0, tmp$_22) >= 0) {
      inline$result = x_0;
    }
     else {
      inline$result = tmp$_22;
    }
    var x_1 = inline$result;
    var inline$result_0;
    if (Kotlin.compareTo(x_1, z) >= 0) {
      inline$result_0 = x_1;
    }
     else {
      inline$result_0 = z;
    }
    out.height = inline$result_0;
    (tmp$_24 = this._left_ig9wna$_0) != null ? tmp$_24.moveTo_y2kzbl$(0.0, 0.0) : null;
    if (this._dividerBar_ig9wna$_0 != null)
      ((tmp$_25 = this._dividerBar_ig9wna$_0) != null ? tmp$_25 : Kotlin.throwNPE()).moveTo_y2kzbl$(leftWidth, 0.0);
    (tmp$_26 = this._right_ig9wna$_0) != null ? tmp$_26.moveTo_y2kzbl$(leftWidth + dividerBarWidth, 0.0) : null;
    if (this._handle_ig9wna$_0 != null) {
      var handle = (tmp$_27 = this._handle_ig9wna$_0) != null ? tmp$_27 : Kotlin.throwNPE();
      handle.setSize_yxjqmk$(null, null);
      if (handle.height > out.height)
        handle.setSize_yxjqmk$(null, out.height);
      handle.moveTo_y2kzbl$(leftWidth + dividerBarWidth * 0.5 - handle.width * 0.5, (out.height - handle.height) * 0.5);
    }
  };
  function HDivider$Companion() {
    HDivider$Companion_instance = this;
  }
  HDivider$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var HDivider$Companion_instance = null;
  function HDivider$Companion_getInstance() {
    if (HDivider$Companion_instance === null) {
      new HDivider$Companion();
    }
    return HDivider$Companion_instance;
  }
  function HDivider_init$lambda(this$HDivider) {
    return function (it) {
      this$HDivider.dispose_erfg6z$(this$HDivider._dividerBar_ig9wna$_0);
      this$HDivider.dispose_erfg6z$(this$HDivider._handle_ig9wna$_0);
      var dividerBar = this$HDivider.addChild_mxweac$(it.divideBar(this$HDivider));
      this$HDivider._dividerBar_ig9wna$_0 = dividerBar;
      drag(dividerBar).add_trkh7z$(Kotlin.getCallableRef('dividerDragHandler', function ($receiver, event) {
        return $receiver.dividerDragHandler_xpqwa9$_0(event);
      }.bind(null, this$HDivider)));
      cursor(dividerBar, StandardCursors_getInstance().RESIZE_E);
      var handle = this$HDivider.addChild_mxweac$(it.handle(this$HDivider));
      this$HDivider._handle_ig9wna$_0 = handle;
      handle.interactivityMode = InteractivityMode$NONE_getInstance();
    };
  }
  HDivider.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HDivider',
    interfaces: [ElementContainerImpl]
  };
  function hDivider($receiver, init) {
    var h = new HDivider($receiver);
    init(h);
    return h;
  }
  function HeadingGroup(owner) {
    HeadingGroup$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.style = style(this, new HeadingGroupStyle());
    this.background_gxzur2$_0 = null;
    this.heading_gxzur2$_0 = null;
    this.contents_gxzur2$_0 = this.addChild_mxweac$(stack(this));
    addTag(this, HeadingGroup$Companion_getInstance());
    onChanged(this.style, HeadingGroup_init$lambda(this));
    this._label_gxzur2$_0 = '';
  }
  HeadingGroup.prototype.createLayoutData = function () {
    return new StackLayoutData();
  };
  Object.defineProperty(HeadingGroup.prototype, 'label', {
    get: function () {
      return this._label_gxzur2$_0;
    },
    set: function (value) {
      var tmp$;
      this._label_gxzur2$_0 = value;
      (tmp$ = this.heading_gxzur2$_0) != null ? (tmp$.label = value) : null;
    }
  });
  HeadingGroup.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.contents_gxzur2$_0.addElement_3i6itm$(index, element);
  };
  HeadingGroup.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.contents_gxzur2$_0.removeElement_erfg6z$(element);
  };
  HeadingGroup.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.contents_gxzur2$_0.swapElements_tu2188$(elementA, elementB);
  };
  HeadingGroup.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var hP = this.style.headingPadding;
    (tmp$ = this.heading_gxzur2$_0) != null ? tmp$.setSize_yxjqmk$(hP.reduceWidth_81sz4$(explicitWidth), null) : null;
    (tmp$_0 = this.heading_gxzur2$_0) != null ? tmp$_0.setPosition_y2kzbl$(hP.left, hP.top) : null;
    var headingW = hP.expandWidth2_mx4ult$((tmp$_2 = (tmp$_1 = this.heading_gxzur2$_0) != null ? tmp$_1.width : null) != null ? tmp$_2 : 0.0);
    var headingH = hP.expandHeight2_mx4ult$((tmp$_4 = (tmp$_3 = this.heading_gxzur2$_0) != null ? tmp$_3.height : null) != null ? tmp$_4 : 0.0);
    this.contents_gxzur2$_0.setSize_yxjqmk$(explicitWidth, explicitHeight == null ? null : explicitHeight - headingH);
    this.contents_gxzur2$_0.setPosition_y2kzbl$(0.0, headingH);
    var y = this.contents_gxzur2$_0.width;
    var max_sdesaw$result;
    if (Kotlin.compareTo(headingW, y) >= 0) {
      max_sdesaw$result = headingW;
    }
     else {
      max_sdesaw$result = y;
    }
    out.set_dleff0$(max_sdesaw$result, headingH + this.contents_gxzur2$_0.height);
    (tmp$_5 = this.background_gxzur2$_0) != null ? tmp$_5.setSize_yxjqmk$(out.width, out.height) : null;
  };
  function HeadingGroup$Companion() {
    HeadingGroup$Companion_instance = this;
  }
  HeadingGroup$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var HeadingGroup$Companion_instance = null;
  function HeadingGroup$Companion_getInstance() {
    if (HeadingGroup$Companion_instance === null) {
      new HeadingGroup$Companion();
    }
    return HeadingGroup$Companion_instance;
  }
  function HeadingGroup_init$lambda(this$HeadingGroup) {
    return function (it) {
      var tmp$, tmp$_0;
      this$HeadingGroup.dispose_erfg6z$(this$HeadingGroup.background_gxzur2$_0);
      this$HeadingGroup.background_gxzur2$_0 = it.background(this$HeadingGroup);
      tmp$_0 = (tmp$ = this$HeadingGroup.background_gxzur2$_0) != null ? tmp$ : Kotlin.throwNPE();
      this$HeadingGroup.addChild_3i6itm$(0, tmp$_0);
      this$HeadingGroup.dispose_erfg6z$(this$HeadingGroup.heading_gxzur2$_0);
      var h = it.heading(this$HeadingGroup);
      h.label = this$HeadingGroup._label_gxzur2$_0;
      this$HeadingGroup.heading_gxzur2$_0 = this$HeadingGroup.addChild_3i6itm$(1, h);
      this$HeadingGroup.contents_gxzur2$_0.layoutAlgorithm.padding.set_ujzovp$(it.padding);
    };
  }
  HeadingGroup.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HeadingGroup',
    interfaces: [LayoutDataProvider, Labelable, ElementContainerImpl]
  };
  function headingGroup$lambda($receiver) {
  }
  function headingGroup($receiver, init) {
    if (init === void 0)
      init = headingGroup$lambda;
    var f = new HeadingGroup($receiver);
    init(f);
    return f;
  }
  function HeadingGroupStyle() {
    HeadingGroupStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_uv2oyz$_0 = HeadingGroupStyle$Companion_getInstance();
    this.background$delegate = this.prop_umlfku$('background', noSkin);
    this.heading$delegate = this.prop_umlfku$('heading', HeadingGroupStyle$heading$lambda);
    this.headingPadding$delegate = this.prop_umlfku$('headingPadding', Pad_init_0(5.0));
    this.padding$delegate = this.prop_umlfku$('padding', Pad_init_0(5.0));
  }
  Object.defineProperty(HeadingGroupStyle.prototype, 'type', {
    get: function () {
      return this.type_uv2oyz$_0;
    }
  });
  Object.defineProperty(HeadingGroupStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  Object.defineProperty(HeadingGroupStyle.prototype, 'heading', {
    get: function () {
      return this.heading$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('heading'));
    },
    set: function (heading) {
      this.heading$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('heading'), heading);
    }
  });
  Object.defineProperty(HeadingGroupStyle.prototype, 'headingPadding', {
    get: function () {
      return this.headingPadding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('headingPadding'));
    },
    set: function (headingPadding) {
      this.headingPadding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('headingPadding'), headingPadding);
    }
  });
  Object.defineProperty(HeadingGroupStyle.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  function HeadingGroupStyle$Companion() {
    HeadingGroupStyle$Companion_instance = this;
  }
  HeadingGroupStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var HeadingGroupStyle$Companion_instance = null;
  function HeadingGroupStyle$Companion_getInstance() {
    if (HeadingGroupStyle$Companion_instance === null) {
      new HeadingGroupStyle$Companion();
    }
    return HeadingGroupStyle$Companion_instance;
  }
  function HeadingGroupStyle$heading$lambda($receiver) {
    return text_0($receiver);
  }
  HeadingGroupStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HeadingGroupStyle',
    interfaces: [StyleBase]
  };
  function IconButton(owner) {
    IconButton$Companion_getInstance();
    Button.call(this, owner);
    this._contents_0 = null;
    this._currentContentsContainer_0 = null;
    addTag(this, IconButton$Companion_getInstance());
  }
  IconButton.prototype.onElementAdded_68b5gw$ = function (index, element) {
    var tmp$, tmp$_0;
    if (this._contents_0 != null)
      throw new Exception('Icon buttons can only have one child.');
    this._contents_0 = element;
    this._currentContentsContainer_0 = Kotlin.isType(tmp$ = this.currentSkinPart, ElementContainer) ? tmp$ : null;
    (tmp$_0 = this._currentContentsContainer_0) != null ? tmp$_0.addElement_mxweac$(element) : null;
  };
  IconButton.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    var tmp$;
    _assert(Kotlin.equals(this._contents_0, element));
    this._contents_0 = null;
    (tmp$ = this._currentContentsContainer_0) != null ? tmp$.removeElement_erfg6z$(element) : null;
    this._currentContentsContainer_0 = null;
  };
  IconButton.prototype.onCurrentStateChanged_l4icno$ = function (previousState, newState, previousSkinPart, newSkinPart) {
    var tmp$;
    tmp$ = this._contents_0;
    if (tmp$ == null) {
      return;
    }
    var c = tmp$;
    this.removeElement_erfg6z$(c);
    this.addElement_mxweac$(c);
  };
  function IconButton$Companion() {
    IconButton$Companion_instance = this;
  }
  IconButton$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var IconButton$Companion_instance = null;
  function IconButton$Companion_getInstance() {
    if (IconButton$Companion_instance === null) {
      new IconButton$Companion();
    }
    return IconButton$Companion_instance;
  }
  IconButton.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'IconButton',
    interfaces: [Button]
  };
  function iconButton$lambda($receiver) {
  }
  function iconButton($receiver, init) {
    if (init === void 0)
      init = iconButton$lambda;
    var b = new IconButton($receiver);
    init(b);
    return b;
  }
  function iconButton$lambda_0($receiver) {
  }
  function iconButton_0($receiver, icon, init) {
    if (init === void 0)
      init = iconButton$lambda_0;
    var b = new IconButton($receiver);
    contentsImage(b, icon);
    init(b);
    return b;
  }
  function iconButton$lambda_1($receiver) {
  }
  function iconButton_1($receiver, atlas_1, region, init) {
    if (init === void 0)
      init = iconButton$lambda_1;
    var b = new IconButton($receiver);
    contentsAtlas(b, atlas_1, region);
    init(b);
    return b;
  }
  function Image(owner) {
    ScaleBoxLayoutContainer.call(this, owner);
  }
  Image.prototype.onElementAdded_68b5gw$ = function (index, element) {
    ScaleBoxLayoutContainer.prototype.onElementAdded_68b5gw$.call(this, index, element);
    if (!Kotlin.isType(element.layoutData, ScaleLayoutData)) {
      var layoutData = new ScaleLayoutData();
      layoutData.maxScaleX = 1.0;
      layoutData.maxScaleY = 1.0;
      element.layoutData = layoutData;
    }
  };
  Image.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Image',
    interfaces: [ScaleBoxLayoutContainer]
  };
  function image$lambda($receiver) {
  }
  function image($receiver, init) {
    if (init === void 0)
      init = image$lambda;
    var i = new Image($receiver);
    init(i);
    return i;
  }
  function image$lambda_0($receiver) {
  }
  function image_0($receiver, path, init) {
    if (init === void 0)
      init = image$lambda_0;
    var i = new Image($receiver);
    init(i);
    contentsImage(i, path);
    return i;
  }
  function image$lambda_1($receiver) {
  }
  function image_1($receiver, atlasPath, region, init) {
    if (init === void 0)
      init = image$lambda_1;
    var i = new Image($receiver);
    init(i);
    contentsAtlas(i, atlasPath, region);
    return i;
  }
  function contentsImage($receiver, value) {
    var existing;
    var contents = $receiver.getElementAt_za3lpa$(0);
    if (!Kotlin.isType(contents, TextureComponent)) {
      $receiver.removeElement_erfg6z$(contents);
      contents != null ? contents.dispose() : null;
      existing = textureC($receiver);
      $receiver.addElement_mxweac$(existing);
    }
     else {
      existing = contents;
    }
    existing.path = value;
  }
  function contentsTexture($receiver, value) {
    var existing;
    var contents = $receiver.getElementAt_za3lpa$(0);
    if (!Kotlin.isType(contents, TextureComponent)) {
      $receiver.removeElement_erfg6z$(contents);
      contents != null ? contents.dispose() : null;
      existing = textureC($receiver);
      $receiver.addElement_mxweac$(existing);
    }
     else {
      existing = contents;
    }
    existing.texture = value;
  }
  function InteractiveElement() {
  }
  Object.defineProperty(InteractiveElement.prototype, 'interactivityEnabled', {
    get: function () {
      return this.inheritedInteractivityMode === InteractivityMode$ALL_getInstance();
    }
  });
  InteractiveElement.prototype.handlesInteraction_1811yh$ = function (type) {
    return this.handlesInteraction_j3fyc4$(type, true) || this.handlesInteraction_j3fyc4$(type, false);
  };
  InteractiveElement.prototype.handlesInteraction_j3fyc4$ = function (type, isCapture) {
    return this.getInteractionSignal_j3fyc4$(type, isCapture) != null;
  };
  InteractiveElement.prototype.hasInteraction_j3fyc4$$default = function (type, isCapture) {
    return this.getInteractionSignal_j3fyc4$(type, isCapture) != null;
  };
  InteractiveElement.prototype.hasInteraction_j3fyc4$ = function (type, isCapture, callback$default) {
    if (isCapture === void 0)
      isCapture = false;
    return callback$default ? callback$default(type, isCapture) : this.hasInteraction_j3fyc4$$default(type, isCapture);
  };
  InteractiveElement.prototype.getInteractionSignal_j3fyc4$ = function (type, isCapture, callback$default) {
    if (isCapture === void 0)
      isCapture = false;
    return callback$default ? callback$default(type, isCapture) : this.getInteractionSignal_j3fyc4$$default(type, isCapture);
  };
  InteractiveElement.prototype.addInteractionSignal_pqftit$ = function (type, signal_0, isCapture, callback$default) {
    if (isCapture === void 0)
      isCapture = false;
    callback$default ? callback$default(type, signal_0, isCapture) : this.addInteractionSignal_pqftit$$default(type, signal_0, isCapture);
  };
  InteractiveElement.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'InteractiveElement',
    interfaces: [Owned, Child, AttachmentHolder, CameraElement, LayoutElement]
  };
  function InteractivityMode(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function InteractivityMode_initFields() {
    InteractivityMode_initFields = function () {
    };
    InteractivityMode$NONE_instance = new InteractivityMode('NONE', 0);
    InteractivityMode$ALL_instance = new InteractivityMode('ALL', 1);
    InteractivityMode$CHILDREN_instance = new InteractivityMode('CHILDREN', 2);
  }
  var InteractivityMode$NONE_instance;
  function InteractivityMode$NONE_getInstance() {
    InteractivityMode_initFields();
    return InteractivityMode$NONE_instance;
  }
  var InteractivityMode$ALL_instance;
  function InteractivityMode$ALL_getInstance() {
    InteractivityMode_initFields();
    return InteractivityMode$ALL_instance;
  }
  var InteractivityMode$CHILDREN_instance;
  function InteractivityMode$CHILDREN_getInstance() {
    InteractivityMode_initFields();
    return InteractivityMode$CHILDREN_instance;
  }
  InteractivityMode.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'InteractivityMode',
    interfaces: [Enum]
  };
  function InteractivityMode$values() {
    return [InteractivityMode$NONE_getInstance(), InteractivityMode$ALL_getInstance(), InteractivityMode$CHILDREN_getInstance()];
  }
  InteractivityMode.values = InteractivityMode$values;
  function InteractivityMode$valueOf(name) {
    switch (name) {
      case 'NONE':
        return InteractivityMode$NONE_getInstance();
      case 'ALL':
        return InteractivityMode$ALL_getInstance();
      case 'CHILDREN':
        return InteractivityMode$CHILDREN_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.InteractivityMode.' + name);
    }
  }
  InteractivityMode.valueOf_61zpoe$ = InteractivityMode$valueOf;
  function createOrReuse($receiver, type, isCapture) {
    var existing = $receiver.getInteractionSignal_j3fyc4$(type, isCapture);
    if (existing != null) {
      return existing;
    }
     else {
      var interactivity = inject($receiver, InteractivityManager$Companion_getInstance());
      var newHandler = interactivity.getSignal_3hf04x$($receiver, type, isCapture);
      $receiver.addInteractionSignal_pqftit$(type, newHandler, isCapture);
      return newHandler;
    }
  }
  function ItemRenderer() {
  }
  ItemRenderer.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ItemRenderer',
    interfaces: [Selectable]
  };
  function BasicLayoutData() {
    LayoutData.call(this);
    this.height$delegate = this.bindable_mh5how$(null);
    this.width$delegate = this.bindable_mh5how$(null);
    this.widthPercent$delegate = this.bindable_mh5how$(null);
    this.heightPercent$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(BasicLayoutData.prototype, 'height', {
    get: function () {
      return this.height$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('height'));
    },
    set: function (height) {
      this.height$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('height'), height);
    }
  });
  Object.defineProperty(BasicLayoutData.prototype, 'width', {
    get: function () {
      return this.width$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('width'));
    },
    set: function (width) {
      this.width$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('width'), width);
    }
  });
  Object.defineProperty(BasicLayoutData.prototype, 'widthPercent', {
    get: function () {
      return this.widthPercent$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('widthPercent'));
    },
    set: function (widthPercent) {
      this.widthPercent$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('widthPercent'), widthPercent);
    }
  });
  Object.defineProperty(BasicLayoutData.prototype, 'heightPercent', {
    get: function () {
      return this.heightPercent$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('heightPercent'));
    },
    set: function (heightPercent) {
      this.heightPercent$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('heightPercent'), heightPercent);
    }
  });
  BasicLayoutData.prototype.fill = function () {
    this.widthPercent = 1.0;
    this.heightPercent = 1.0;
  };
  BasicLayoutData.prototype.getPreferredWidth_81sz4$ = function (availableWidth) {
    var tmp$;
    return this.widthPercent == null || availableWidth == null ? this.width : ((tmp$ = this.widthPercent) != null ? tmp$ : Kotlin.throwNPE()) * availableWidth;
  };
  BasicLayoutData.prototype.getPreferredHeight_81sz4$ = function (availableHeight) {
    var tmp$;
    return this.heightPercent == null || availableHeight == null ? this.height : ((tmp$ = this.heightPercent) != null ? tmp$ : Kotlin.throwNPE()) * availableHeight;
  };
  BasicLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BasicLayoutData',
    interfaces: [LayoutData]
  };
  function basicLayoutData$lambda($receiver) {
  }
  function basicLayoutData(init) {
    if (init === void 0)
      init = basicLayoutData$lambda;
    var b = new BasicLayoutData();
    init(b);
    return b;
  }
  function CanvasLayout() {
    this.changed_f3q5j0$_0 = new Signal0();
  }
  Object.defineProperty(CanvasLayout.prototype, 'changed', {
    get: function () {
      return this.changed_f3q5j0$_0;
    }
  });
  CanvasLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    var tmp$_5, tmp$_6, tmp$_7, tmp$_8;
    var minWidth = 0.0;
    var minHeight = 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var sC = element.sizeConstraints;
      var layoutData = (tmp$_0 = element.layoutData) == null || Kotlin.isType(tmp$_0, CanvasLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      math_0.MathUtils;
      var x = ((tmp$_1 = sC.width.min) != null ? tmp$_1 : 0.0) + ((tmp$_2 = layoutData != null ? layoutData.left : null) != null ? tmp$_2 : 0.0) + ((tmp$_3 = layoutData != null ? layoutData.right : null) != null ? tmp$_3 : 0.0) + ((tmp$_4 = layoutData != null ? layoutData.horizontalCenter : null) != null ? tmp$_4 : 0.0);
      var y = minWidth;
      var max_sdesaw$result;
      if (Kotlin.compareTo(x, y) >= 0) {
        max_sdesaw$result = x;
      }
       else {
        max_sdesaw$result = y;
      }
      minWidth = max_sdesaw$result;
      math_0.MathUtils;
      var x_0 = ((tmp$_5 = sC.height.min) != null ? tmp$_5 : 0.0) + ((tmp$_6 = layoutData != null ? layoutData.top : null) != null ? tmp$_6 : 0.0) + ((tmp$_7 = layoutData != null ? layoutData.bottom : null) != null ? tmp$_7 : 0.0) + ((tmp$_8 = layoutData != null ? layoutData.verticalCenter : null) != null ? tmp$_8 : 0.0);
      var y_0 = minHeight;
      var max_sdesaw$result_0;
      if (Kotlin.compareTo(x_0, y_0) >= 0) {
        max_sdesaw$result_0 = x_0;
      }
       else {
        max_sdesaw$result_0 = y_0;
      }
      minHeight = max_sdesaw$result_0;
    }
    out.width.min = minWidth;
    out.height.min = minHeight;
  };
  CanvasLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    this.basicLayout_tva9ox$(explicitWidth, explicitHeight, elements, out);
  };
  CanvasLayout.prototype.basicLayout_tva9ox$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10;
    var w = explicitWidth != null ? explicitWidth : 0.0;
    var h = explicitHeight != null ? explicitHeight : 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var layoutData = (tmp$_0 = element.layoutData) == null || Kotlin.isType(tmp$_0, CanvasLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      element.setSize_yxjqmk$(layoutData != null ? layoutData.getPreferredWidth_81sz4$(explicitWidth) : null, layoutData != null ? layoutData.getPreferredHeight_81sz4$(explicitHeight) : null);
    }
    tmp$_1 = get_lastIndex(elements);
    for (var i_0 = 0; i_0 <= tmp$_1; i_0++) {
      var element_0 = elements.get_za3lpa$(i_0);
      var layoutData_0 = (tmp$_2 = element_0.layoutData) == null || Kotlin.isType(tmp$_2, CanvasLayoutData) ? tmp$_2 : Kotlin.throwCCE();
      if (layoutData_0 == null) {
        element_0.moveTo_y2kzbl$(0.0, 0.0);
        out.ext_dleff0$(element_0.width, element_0.height);
      }
       else {
        var x;
        var y;
        if (layoutData_0.left != null) {
          x = (tmp$_3 = layoutData_0.left) != null ? tmp$_3 : Kotlin.throwNPE();
        }
         else if (layoutData_0.right != null) {
          x = w - ((tmp$_4 = layoutData_0.right) != null ? tmp$_4 : Kotlin.throwNPE()) - element_0.width;
        }
         else if (layoutData_0.horizontalCenter != null) {
          x = (w - element_0.width) * 0.5 + ((tmp$_5 = layoutData_0.horizontalCenter) != null ? tmp$_5 : Kotlin.throwNPE());
        }
         else {
          x = 0.0;
        }
        if (layoutData_0.top != null) {
          y = (tmp$_6 = layoutData_0.top) != null ? tmp$_6 : Kotlin.throwNPE();
        }
         else if (layoutData_0.bottom != null) {
          y = h - ((tmp$_7 = layoutData_0.bottom) != null ? tmp$_7 : Kotlin.throwNPE()) - element_0.height;
        }
         else if (layoutData_0.verticalCenter != null) {
          y = (h - element_0.height) * 0.5 + ((tmp$_8 = layoutData_0.verticalCenter) != null ? tmp$_8 : Kotlin.throwNPE());
        }
         else {
          y = 0.0;
        }
        element_0.moveTo_y2kzbl$(x, y);
        out.ext_dleff0$(element_0.right + ((tmp$_9 = layoutData_0.right) != null ? tmp$_9 : 0.0), element_0.bottom + ((tmp$_10 = layoutData_0.bottom) != null ? tmp$_10 : 0.0));
      }
    }
  };
  CanvasLayout.prototype.createLayoutData = function () {
    return new CanvasLayoutData();
  };
  CanvasLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CanvasLayout',
    interfaces: [BasicLayoutAlgorithm, LayoutAlgorithm]
  };
  function CanvasLayoutContainer(owner) {
    LayoutContainerImpl.call(this, owner, new CanvasLayout());
  }
  CanvasLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CanvasLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function canvas$lambda($receiver) {
  }
  function canvas($receiver, init) {
    if (init === void 0)
      init = canvas$lambda;
    var canvasContainer = new CanvasLayoutContainer($receiver);
    init(canvasContainer);
    return canvasContainer;
  }
  function CanvasLayoutData() {
    BasicLayoutData.call(this);
    this.top$delegate = this.bindable_mh5how$(null);
    this.right$delegate = this.bindable_mh5how$(null);
    this.bottom$delegate = this.bindable_mh5how$(null);
    this.left$delegate = this.bindable_mh5how$(null);
    this.horizontalCenter$delegate = this.bindable_mh5how$(null);
    this.verticalCenter$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(CanvasLayoutData.prototype, 'top', {
    get: function () {
      return this.top$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('top'));
    },
    set: function (top) {
      this.top$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('top'), top);
    }
  });
  Object.defineProperty(CanvasLayoutData.prototype, 'right', {
    get: function () {
      return this.right$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('right'));
    },
    set: function (right) {
      this.right$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('right'), right);
    }
  });
  Object.defineProperty(CanvasLayoutData.prototype, 'bottom', {
    get: function () {
      return this.bottom$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('bottom'));
    },
    set: function (bottom) {
      this.bottom$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('bottom'), bottom);
    }
  });
  Object.defineProperty(CanvasLayoutData.prototype, 'left', {
    get: function () {
      return this.left$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('left'));
    },
    set: function (left) {
      this.left$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('left'), left);
    }
  });
  Object.defineProperty(CanvasLayoutData.prototype, 'horizontalCenter', {
    get: function () {
      return this.horizontalCenter$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalCenter'));
    },
    set: function (horizontalCenter) {
      this.horizontalCenter$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalCenter'), horizontalCenter);
    }
  });
  Object.defineProperty(CanvasLayoutData.prototype, 'verticalCenter', {
    get: function () {
      return this.verticalCenter$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalCenter'));
    },
    set: function (verticalCenter) {
      this.verticalCenter$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalCenter'), verticalCenter);
    }
  });
  CanvasLayoutData.prototype.center = function () {
    this.horizontalCenter = 0.0;
    this.verticalCenter = 0.0;
  };
  CanvasLayoutData.prototype.getPreferredWidth_81sz4$ = function (availableWidth) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    if (availableWidth != null) {
      if (this.left != null && this.horizontalCenter != null) {
        return availableWidth * 0.5 + ((tmp$ = this.horizontalCenter) != null ? tmp$ : Kotlin.throwNPE()) - ((tmp$_0 = this.left) != null ? tmp$_0 : Kotlin.throwNPE());
      }
      if (this.right != null && this.horizontalCenter != null) {
        return 0.5 * availableWidth - ((tmp$_1 = this.right) != null ? tmp$_1 : Kotlin.throwNPE()) - ((tmp$_2 = this.horizontalCenter) != null ? tmp$_2 : Kotlin.throwNPE());
      }
       else if (this.left != null && this.right != null) {
        return availableWidth - ((tmp$_3 = this.right) != null ? tmp$_3 : Kotlin.throwNPE()) - ((tmp$_4 = this.left) != null ? tmp$_4 : Kotlin.throwNPE());
      }
    }
    return BasicLayoutData.prototype.getPreferredWidth_81sz4$.call(this, availableWidth);
  };
  CanvasLayoutData.prototype.getPreferredHeight_81sz4$ = function (availableHeight) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    if (availableHeight != null) {
      if (this.top != null && this.verticalCenter != null) {
        return availableHeight * 0.5 + ((tmp$ = this.verticalCenter) != null ? tmp$ : Kotlin.throwNPE()) - ((tmp$_0 = this.top) != null ? tmp$_0 : Kotlin.throwNPE());
      }
      if (this.bottom != null && this.verticalCenter != null) {
        return 0.5 * availableHeight - ((tmp$_1 = this.bottom) != null ? tmp$_1 : Kotlin.throwNPE()) - ((tmp$_2 = this.verticalCenter) != null ? tmp$_2 : Kotlin.throwNPE());
      }
       else if (this.top != null && this.bottom != null) {
        return availableHeight - ((tmp$_3 = this.bottom) != null ? tmp$_3 : Kotlin.throwNPE()) - ((tmp$_4 = this.top) != null ? tmp$_4 : Kotlin.throwNPE());
      }
    }
    return BasicLayoutData.prototype.getPreferredHeight_81sz4$.call(this, availableHeight);
  };
  CanvasLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CanvasLayoutData',
    interfaces: [BasicLayoutData]
  };
  function canvasLayoutData$lambda($receiver) {
  }
  function canvasLayoutData(init) {
    if (init === void 0)
      init = canvasLayoutData$lambda;
    var c = new CanvasLayoutData();
    init(c);
    return c;
  }
  function FlowLayout() {
    this.changed_9k8xri$_0 = new Signal0();
    this.horizontalGap$delegate = bindable(this.changed, 5.0);
    this.verticalGap$delegate = bindable(this.changed, 5.0);
    this.tabSize$delegate = bindable(this.changed, 24.0);
    this.padding$delegate = bindable(this.changed, Pad_init());
    this.horizontalAlign$delegate = bindable(this.changed, FlowHAlign$LEFT_getInstance());
    this.verticalAlign$delegate = bindable(this.changed, FlowVAlign$TOP_getInstance());
    this.line_0 = new LineInfo();
  }
  Object.defineProperty(FlowLayout.prototype, 'changed', {
    get: function () {
      return this.changed_9k8xri$_0;
    }
  });
  Object.defineProperty(FlowLayout.prototype, 'horizontalGap', {
    get: function () {
      return this.horizontalGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalGap'));
    },
    set: function (horizontalGap) {
      this.horizontalGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalGap'), horizontalGap);
    }
  });
  Object.defineProperty(FlowLayout.prototype, 'verticalGap', {
    get: function () {
      return this.verticalGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalGap'));
    },
    set: function (verticalGap) {
      this.verticalGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalGap'), verticalGap);
    }
  });
  Object.defineProperty(FlowLayout.prototype, 'tabSize', {
    get: function () {
      return this.tabSize$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('tabSize'));
    },
    set: function (tabSize) {
      this.tabSize$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('tabSize'), tabSize);
    }
  });
  Object.defineProperty(FlowLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(FlowLayout.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(FlowLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  FlowLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
    var tmp$, tmp$_0, tmp$_1;
    var minWidth = 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      tmp$_1 = (tmp$_0 = elements.get_za3lpa$(i).minWidth) != null ? tmp$_0 : 0.0;
      var a = minWidth;
      minWidth = Math.max(a, tmp$_1);
    }
    out.width.min = minWidth + this.padding.left + this.padding.right;
  };
  FlowLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    this.basicLayout_tva9ox$(explicitWidth, explicitHeight, elements, out);
  };
  FlowLayout.prototype.basicLayout_tva9ox$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    var measuredW = 0.0;
    this.line_0.clear();
    var x = 0.0;
    var y = 0.0;
    var previousChild = null;
    var lastIndex = get_lastIndex(elements);
    for (var i = 0; i <= lastIndex; i++) {
      var child = elements.get_za3lpa$(i);
      var layoutData = (tmp$ = child.layoutData) == null || Kotlin.isType(tmp$, FlowLayoutData) ? tmp$ : Kotlin.throwCCE();
      child.setSize_yxjqmk$(layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null, layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null);
      if (childAvailableWidth != null && child.width > childAvailableWidth) {
        child.width_81sz4$(childAvailableWidth);
      }
      var w = child.width;
      var h = child.height;
      var doesOverhang = (tmp$_0 = layoutData != null ? layoutData.overhangs : null) != null ? tmp$_0 : false;
      if (i > this.line_0.startIndex && (this.clearsLine_0(previousChild != null ? previousChild : Kotlin.throwNPE()) || this.startsNewLine_0(child) || (childAvailableWidth != null && !doesOverhang && x + w > childAvailableWidth))) {
        this.line_0.endIndex = i - 1 | 0;
        this.positionLine_0(this.line_0, childAvailableWidth, elements);
        x = 0.0;
        y += this.line_0.height + this.verticalGap;
        this.line_0.width = 0.0;
        this.line_0.height = 0.0;
        this.line_0.baseline = 0.0;
        this.line_0.startIndex = i;
      }
      child.moveTo_y2kzbl$(this.padding.left + x, this.padding.top + y);
      x += w;
      if ((tmp$_1 = layoutData != null ? layoutData.clearsTabstop : null) != null ? tmp$_1 : false) {
        var v = x / this.tabSize;
        var tabIndex = Math.floor(v) + 1 | 0;
        x = tabIndex * this.tabSize;
      }
      if (!doesOverhang) {
        this.line_0.width = x;
        if (x > measuredW)
          measuredW = x;
      }
      x += this.horizontalGap;
      if (h > this.line_0.height)
        this.line_0.height = h;
      var baseline = (tmp$_2 = layoutData != null ? layoutData.baseline : null) != null ? tmp$_2 : h;
      if (baseline > this.line_0.baseline)
        this.line_0.baseline = baseline;
      previousChild = child;
    }
    this.line_0.endIndex = lastIndex;
    this.positionLine_0(this.line_0, childAvailableWidth, elements);
    measuredW += this.padding.left + this.padding.right;
    if (measuredW > out.width)
      out.width = measuredW;
    var measuredH = y + this.line_0.height + this.padding.top + this.padding.bottom;
    if (measuredH > out.height)
      out.height = measuredH;
  };
  FlowLayout.prototype.positionLine_0 = function (line_1, availableWidth, elements) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11;
    if (line_1.startIndex > line_1.endIndex)
      return;
    if (availableWidth != null) {
      var remainingSpace = availableWidth - line_1.width;
      tmp$ = this.horizontalAlign;
      if (Kotlin.equals(tmp$, FlowHAlign$LEFT_getInstance()))
        tmp$_0 = 0.0;
      else if (Kotlin.equals(tmp$, FlowHAlign$CENTER_getInstance())) {
        var v = remainingSpace * 0.5;
        tmp$_0 = Math.round(v);
      }
       else if (Kotlin.equals(tmp$, FlowHAlign$RIGHT_getInstance()))
        tmp$_0 = remainingSpace;
      else if (Kotlin.equals(tmp$, FlowHAlign$JUSTIFY_getInstance()))
        tmp$_0 = 0.0;
      else
        tmp$_0 = Kotlin.noWhenBranchMatched();
      var xOffset = tmp$_0;
      if (this.horizontalAlign === FlowHAlign$JUSTIFY_getInstance() && line_1.endIndex !== line_1.startIndex && line_1.endIndex !== get_lastIndex(elements) && !this.clearsLine_0(elements.get_za3lpa$(line_1.endIndex)) && !this.startsNewLine_0(elements.get_za3lpa$(line_1.endIndex + 1 | 0))) {
        var gapOffset = remainingSpace / (line_1.endIndex - line_1.startIndex | 0);
        tmp$_1 = line_1.startIndex;
        tmp$_2 = line_1.endIndex;
        for (var j = tmp$_1; j <= tmp$_2; j++) {
          var child = elements.get_za3lpa$(j);
          child.x = floor(child.x + xOffset + (j - line_1.startIndex | 0) * gapOffset);
        }
      }
       else {
        tmp$_3 = line_1.startIndex;
        tmp$_4 = line_1.endIndex;
        for (var j_0 = tmp$_3; j_0 <= tmp$_4; j_0++) {
          var child_0 = elements.get_za3lpa$(j_0);
          child_0.x = child_0.x + xOffset;
        }
      }
    }
    tmp$_5 = line_1.startIndex;
    tmp$_6 = line_1.endIndex;
    for (var j_1 = tmp$_5; j_1 <= tmp$_6; j_1++) {
      var child_1 = elements.get_za3lpa$(j_1);
      var layoutData = (tmp$_7 = child_1.layoutData) == null || Kotlin.isType(tmp$_7, FlowLayoutData) ? tmp$_7 : Kotlin.throwCCE();
      tmp$_9 = (tmp$_8 = layoutData != null ? layoutData.verticalAlign : null) != null ? tmp$_8 : this.flowOwner_0(child_1).verticalAlign;
      if (Kotlin.equals(tmp$_9, FlowVAlign$TOP_getInstance()))
        tmp$_11 = 0.0;
      else if (Kotlin.equals(tmp$_9, FlowVAlign$MIDDLE_getInstance())) {
        var v_0 = (line_1.height - child_1.height) * 0.5;
        tmp$_11 = Math.round(v_0);
      }
       else if (Kotlin.equals(tmp$_9, FlowVAlign$BOTTOM_getInstance()))
        tmp$_11 = line_1.height - child_1.height;
      else if (Kotlin.equals(tmp$_9, FlowVAlign$BASELINE_getInstance())) {
        tmp$_11 = line_1.baseline - ((tmp$_10 = layoutData != null ? layoutData.baseline : null) != null ? tmp$_10 : child_1.height);
      }
       else
        tmp$_11 = Kotlin.noWhenBranchMatched();
      var yOffset = tmp$_11;
      if (yOffset !== 0.0)
        child_1.y = child_1.y + yOffset;
    }
  };
  FlowLayout.prototype.flowOwner_0 = function ($receiver) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    return (tmp$_4 = Kotlin.isType(tmp$_3 = (tmp$_2 = Kotlin.isType(tmp$_1 = (tmp$_0 = Kotlin.isType(tmp$ = $receiver, Child) ? tmp$ : null) != null ? tmp$_0.parent : null, LayoutContainer) ? tmp$_1 : null) != null ? tmp$_2.layoutAlgorithm : null, FlowLayout) ? tmp$_3 : null) != null ? tmp$_4 : this;
  };
  FlowLayout.prototype.createLayoutData = function () {
    return new FlowLayoutData();
  };
  FlowLayout.prototype.clearsLine_0 = function ($receiver) {
    var tmp$, tmp$_0, tmp$_1;
    return (tmp$_1 = (tmp$_0 = (tmp$ = $receiver.layoutData) == null || Kotlin.isType(tmp$, FlowLayoutData) ? tmp$ : Kotlin.throwCCE()) != null ? tmp$_0.clearsLine : null) != null ? tmp$_1 : false;
  };
  FlowLayout.prototype.startsNewLine_0 = function ($receiver) {
    var tmp$, tmp$_0;
    return Kotlin.equals((tmp$_0 = (tmp$ = $receiver.layoutData) == null || Kotlin.isType(tmp$, FlowLayoutData) ? tmp$ : Kotlin.throwCCE()) != null ? tmp$_0.display : null, FlowDisplay$BLOCK_getInstance());
  };
  FlowLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowLayout',
    interfaces: [BasicLayoutAlgorithm, LayoutAlgorithm]
  };
  function LineInfo() {
    this.startIndex = 0;
    this.endIndex = 0;
    this.width = 0.0;
    this.height = 0.0;
    this.baseline = 0.0;
  }
  LineInfo.prototype.clear = function () {
    this.startIndex = 0;
    this.endIndex = 0;
    this.width = 0.0;
    this.height = 0.0;
    this.baseline = 0.0;
  };
  LineInfo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LineInfo',
    interfaces: [Clearable]
  };
  function FlowLayoutData() {
    BasicLayoutData.call(this);
    this.clearsLine$delegate = this.bindable_mh5how$(false);
    this.overhangs$delegate = this.bindable_mh5how$(false);
    this.clearsTabstop$delegate = this.bindable_mh5how$(false);
    this.verticalAlign$delegate = this.bindable_mh5how$(null);
    this.display$delegate = this.bindable_mh5how$(FlowDisplay$INLINE_BLOCK_getInstance());
    this.baseline$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(FlowLayoutData.prototype, 'clearsLine', {
    get: function () {
      return this.clearsLine$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('clearsLine'));
    },
    set: function (clearsLine) {
      this.clearsLine$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('clearsLine'), clearsLine);
    }
  });
  Object.defineProperty(FlowLayoutData.prototype, 'overhangs', {
    get: function () {
      return this.overhangs$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('overhangs'));
    },
    set: function (overhangs) {
      this.overhangs$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('overhangs'), overhangs);
    }
  });
  Object.defineProperty(FlowLayoutData.prototype, 'clearsTabstop', {
    get: function () {
      return this.clearsTabstop$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('clearsTabstop'));
    },
    set: function (clearsTabstop) {
      this.clearsTabstop$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('clearsTabstop'), clearsTabstop);
    }
  });
  Object.defineProperty(FlowLayoutData.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(FlowLayoutData.prototype, 'display', {
    get: function () {
      return this.display$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('display'));
    },
    set: function (display) {
      this.display$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('display'), display);
    }
  });
  Object.defineProperty(FlowLayoutData.prototype, 'baseline', {
    get: function () {
      return this.baseline$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('baseline'));
    },
    set: function (baseline) {
      this.baseline$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('baseline'), baseline);
    }
  });
  FlowLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowLayoutData',
    interfaces: [BasicLayoutData]
  };
  function FlowDisplay(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function FlowDisplay_initFields() {
    FlowDisplay_initFields = function () {
    };
    FlowDisplay$INLINE_BLOCK_instance = new FlowDisplay('INLINE_BLOCK', 0);
    FlowDisplay$INLINE_instance = new FlowDisplay('INLINE', 1);
    FlowDisplay$BLOCK_instance = new FlowDisplay('BLOCK', 2);
  }
  var FlowDisplay$INLINE_BLOCK_instance;
  function FlowDisplay$INLINE_BLOCK_getInstance() {
    FlowDisplay_initFields();
    return FlowDisplay$INLINE_BLOCK_instance;
  }
  var FlowDisplay$INLINE_instance;
  function FlowDisplay$INLINE_getInstance() {
    FlowDisplay_initFields();
    return FlowDisplay$INLINE_instance;
  }
  var FlowDisplay$BLOCK_instance;
  function FlowDisplay$BLOCK_getInstance() {
    FlowDisplay_initFields();
    return FlowDisplay$BLOCK_instance;
  }
  FlowDisplay.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowDisplay',
    interfaces: [Enum]
  };
  function FlowDisplay$values() {
    return [FlowDisplay$INLINE_BLOCK_getInstance(), FlowDisplay$INLINE_getInstance(), FlowDisplay$BLOCK_getInstance()];
  }
  FlowDisplay.values = FlowDisplay$values;
  function FlowDisplay$valueOf(name) {
    switch (name) {
      case 'INLINE_BLOCK':
        return FlowDisplay$INLINE_BLOCK_getInstance();
      case 'INLINE':
        return FlowDisplay$INLINE_getInstance();
      case 'BLOCK':
        return FlowDisplay$BLOCK_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.layout.algorithm.FlowDisplay.' + name);
    }
  }
  FlowDisplay.valueOf_61zpoe$ = FlowDisplay$valueOf;
  function FlowHAlign(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function FlowHAlign_initFields() {
    FlowHAlign_initFields = function () {
    };
    FlowHAlign$LEFT_instance = new FlowHAlign('LEFT', 0);
    FlowHAlign$CENTER_instance = new FlowHAlign('CENTER', 1);
    FlowHAlign$RIGHT_instance = new FlowHAlign('RIGHT', 2);
    FlowHAlign$JUSTIFY_instance = new FlowHAlign('JUSTIFY', 3);
  }
  var FlowHAlign$LEFT_instance;
  function FlowHAlign$LEFT_getInstance() {
    FlowHAlign_initFields();
    return FlowHAlign$LEFT_instance;
  }
  var FlowHAlign$CENTER_instance;
  function FlowHAlign$CENTER_getInstance() {
    FlowHAlign_initFields();
    return FlowHAlign$CENTER_instance;
  }
  var FlowHAlign$RIGHT_instance;
  function FlowHAlign$RIGHT_getInstance() {
    FlowHAlign_initFields();
    return FlowHAlign$RIGHT_instance;
  }
  var FlowHAlign$JUSTIFY_instance;
  function FlowHAlign$JUSTIFY_getInstance() {
    FlowHAlign_initFields();
    return FlowHAlign$JUSTIFY_instance;
  }
  FlowHAlign.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowHAlign',
    interfaces: [Enum]
  };
  function FlowHAlign$values() {
    return [FlowHAlign$LEFT_getInstance(), FlowHAlign$CENTER_getInstance(), FlowHAlign$RIGHT_getInstance(), FlowHAlign$JUSTIFY_getInstance()];
  }
  FlowHAlign.values = FlowHAlign$values;
  function FlowHAlign$valueOf(name) {
    switch (name) {
      case 'LEFT':
        return FlowHAlign$LEFT_getInstance();
      case 'CENTER':
        return FlowHAlign$CENTER_getInstance();
      case 'RIGHT':
        return FlowHAlign$RIGHT_getInstance();
      case 'JUSTIFY':
        return FlowHAlign$JUSTIFY_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.layout.algorithm.FlowHAlign.' + name);
    }
  }
  FlowHAlign.valueOf_61zpoe$ = FlowHAlign$valueOf;
  function FlowVAlign(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function FlowVAlign_initFields() {
    FlowVAlign_initFields = function () {
    };
    FlowVAlign$TOP_instance = new FlowVAlign('TOP', 0);
    FlowVAlign$MIDDLE_instance = new FlowVAlign('MIDDLE', 1);
    FlowVAlign$BOTTOM_instance = new FlowVAlign('BOTTOM', 2);
    FlowVAlign$BASELINE_instance = new FlowVAlign('BASELINE', 3);
  }
  var FlowVAlign$TOP_instance;
  function FlowVAlign$TOP_getInstance() {
    FlowVAlign_initFields();
    return FlowVAlign$TOP_instance;
  }
  var FlowVAlign$MIDDLE_instance;
  function FlowVAlign$MIDDLE_getInstance() {
    FlowVAlign_initFields();
    return FlowVAlign$MIDDLE_instance;
  }
  var FlowVAlign$BOTTOM_instance;
  function FlowVAlign$BOTTOM_getInstance() {
    FlowVAlign_initFields();
    return FlowVAlign$BOTTOM_instance;
  }
  var FlowVAlign$BASELINE_instance;
  function FlowVAlign$BASELINE_getInstance() {
    FlowVAlign_initFields();
    return FlowVAlign$BASELINE_instance;
  }
  FlowVAlign.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowVAlign',
    interfaces: [Enum]
  };
  function FlowVAlign$values() {
    return [FlowVAlign$TOP_getInstance(), FlowVAlign$MIDDLE_getInstance(), FlowVAlign$BOTTOM_getInstance(), FlowVAlign$BASELINE_getInstance()];
  }
  FlowVAlign.values = FlowVAlign$values;
  function FlowVAlign$valueOf(name) {
    switch (name) {
      case 'TOP':
        return FlowVAlign$TOP_getInstance();
      case 'MIDDLE':
        return FlowVAlign$MIDDLE_getInstance();
      case 'BOTTOM':
        return FlowVAlign$BOTTOM_getInstance();
      case 'BASELINE':
        return FlowVAlign$BASELINE_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.layout.algorithm.FlowVAlign.' + name);
    }
  }
  FlowVAlign.valueOf_61zpoe$ = FlowVAlign$valueOf;
  function FlowLayoutContainer(owner, native) {
    if (native === void 0)
      native = inject(owner, NativeContainer$Companion_getInstance().FACTORY_KEY)(owner);
    LayoutContainerImpl.call(this, owner, new FlowLayout(), native);
    this.inlineChildren = ArrayList_init();
  }
  FlowLayoutContainer.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0;
    var flowLayoutData_0 = (tmp$ = this.layoutData) == null || Kotlin.isType(tmp$, FlowLayoutData) ? tmp$ : null;
    if (Kotlin.equals(flowLayoutData_0 != null ? flowLayoutData_0.display : null, FlowDisplay$INLINE_getInstance())) {
      return;
    }
    this.elementsToLayout.clear();
    this.inlineChildren.clear();
    var tmp$_1, tmp$_2, tmp$_3;
    var openList = Kotlin.isType(tmp$_1 = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$_1 : Kotlin.throwCCE();
    openList.add_11rb$(this);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var callback$result;
      var tmp$_4;
      if (next === this) {
        callback$result = TreeWalk$CONTINUE_getInstance();
      }
       else {
        if (next.shouldLayout) {
          var childLayoutData = (tmp$_4 = next.layoutData) == null || Kotlin.isType(tmp$_4, FlowLayoutData) ? tmp$_4 : Kotlin.throwCCE();
          if (Kotlin.equals(childLayoutData != null ? childLayoutData.display : null, FlowDisplay$INLINE_getInstance())) {
            this.inlineChildren.add_11rb$(next);
            callback$result = TreeWalk$CONTINUE_getInstance();
          }
           else {
            this.elementsToLayout.add_11rb$(next);
            callback$result = TreeWalk$SKIP_getInstance();
          }
        }
         else {
          callback$result = TreeWalk$SKIP_getInstance();
        }
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_3 = Kotlin.isType(tmp$_2 = next, _.com.acornui.core.Parent) ? tmp$_2 : null) != null ? tmp$_3.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    if (!this.elementsToLayout.isEmpty())
      this.layoutAlgorithm.layout_dyymdl$(explicitWidth, explicitHeight, this.elementsToLayout, out);
    tmp$_0 = get_lastIndex(this.inlineChildren);
    for (var i = 0; i <= tmp$_0; i++) {
      var c = this.inlineChildren.get_za3lpa$(i);
      c.setSize_yxjqmk$(out.width, out.height);
      c.moveTo_y2kzbl$(0.0, 0.0);
    }
  };
  FlowLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function flow$lambda($receiver) {
  }
  function flow($receiver, init) {
    if (init === void 0)
      init = flow$lambda;
    var flowContainer = new FlowLayoutContainer($receiver);
    init(flowContainer);
    return flowContainer;
  }
  function flowLayoutData$lambda($receiver) {
  }
  function flowLayoutData(init) {
    if (init === void 0)
      init = flowLayoutData$lambda;
    var f = new FlowLayoutData();
    init(f);
    return f;
  }
  function GridLayout() {
    this.changed_i8vowm$_0 = new Signal0();
    this.verticalGap$delegate = bindable(this.changed, 5.0);
    this.horizontalGap$delegate = bindable(this.changed, 5.0);
    this.padding$delegate = bindable(this.changed, Pad_init());
    this.verticalAlign$delegate = bindable(this.changed, VAlign$BOTTOM_getInstance());
    this.rowHeight$delegate = bindable(this.changed, null);
    this.allowScaleUp$delegate = bindable(this.changed, false);
    this._columns_0 = arrayListOf([new GridColumn()]);
    this._columnPreferredWidths_0 = ArrayList_init();
    this._measuredColWidths_0 = ArrayList_init();
    this._measuredRowHeights_0 = ArrayList_init();
    this.rowOccupancy_0 = ArrayList_init();
    this.columnChangedHandler_0 = GridLayout$columnChangedHandler$lambda(this);
  }
  Object.defineProperty(GridLayout.prototype, 'changed', {
    get: function () {
      return this.changed_i8vowm$_0;
    }
  });
  Object.defineProperty(GridLayout.prototype, 'verticalGap', {
    get: function () {
      return this.verticalGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalGap'));
    },
    set: function (verticalGap) {
      this.verticalGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalGap'), verticalGap);
    }
  });
  Object.defineProperty(GridLayout.prototype, 'horizontalGap', {
    get: function () {
      return this.horizontalGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalGap'));
    },
    set: function (horizontalGap) {
      this.horizontalGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalGap'), horizontalGap);
    }
  });
  Object.defineProperty(GridLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(GridLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(GridLayout.prototype, 'rowHeight', {
    get: function () {
      return this.rowHeight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('rowHeight'));
    },
    set: function (rowHeight) {
      this.rowHeight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('rowHeight'), rowHeight);
    }
  });
  Object.defineProperty(GridLayout.prototype, 'allowScaleUp', {
    get: function () {
      return this.allowScaleUp$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('allowScaleUp'));
    },
    set: function (allowScaleUp) {
      this.allowScaleUp$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('allowScaleUp'), allowScaleUp);
    }
  });
  Object.defineProperty(GridLayout.prototype, 'colWidths', {
    get: function () {
      return this._measuredColWidths_0;
    }
  });
  Object.defineProperty(GridLayout.prototype, 'rowHeights', {
    get: function () {
      return this._measuredRowHeights_0;
    }
  });
  Object.defineProperty(GridLayout.prototype, 'columns', {
    get: function () {
      return this._columns_0;
    }
  });
  GridLayout.prototype.clearColumns = function () {
    var tmp$;
    tmp$ = this._columns_0.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      c.changed.remove_trkh7z$(this.columnChangedHandler_0);
    }
    this._columns_0.clear();
  };
  GridLayout.prototype.setColumns_lejawd$ = function (columns) {
    var tmp$;
    if (columns.length === 0)
      throw new Exception('columns may not be empty.');
    this.clearColumns();
    addAll(this._columns_0, columns);
    for (tmp$ = 0; tmp$ !== columns.length; ++tmp$) {
      var c = columns[tmp$];
      c.changed.add_trkh7z$(this.columnChangedHandler_0);
    }
    this.changed.dispatch();
  };
  GridLayout.prototype.addColumn_o34s8g$ = function (column) {
    this.addColumn_dkxhl2$(this._columns_0.size, column);
  };
  GridLayout.prototype.addColumn_dkxhl2$ = function (index, column) {
    column.changed.add_trkh7z$(this.columnChangedHandler_0);
    this._columns_0.add_wxm5ur$(index, column);
    this.changed.dispatch();
  };
  GridLayout.prototype.removeColumn_o34s8g$ = function (column) {
    var index = this._columns_0.indexOf_11rb$(column);
    if (index === -1)
      return false;
    this.removeColumn_za3lpa$(index);
    return true;
  };
  GridLayout.prototype.removeColumn_za3lpa$ = function (index) {
    var c = this._columns_0.removeAt_za3lpa$(index);
    c.changed.remove_trkh7z$(this.columnChangedHandler_0);
    this.changed.dispatch();
  };
  GridLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
    var tmp$, tmp$_0;
    var minWidth = 0.0;
    tmp$ = this._columns_0.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      if (c.minWidth != null)
        minWidth += (tmp$_0 = c.minWidth) != null ? tmp$_0 : Kotlin.throwNPE();
    }
    out.width.min = minWidth;
  };
  GridLayout.prototype.cellWalk_0 = function (elements, callback) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    var colIndex = 0;
    var rowIndex = 0;
    this.rowOccupancy_0.clear();
    var $receiver = this.rowOccupancy_0;
    var newSize = this._columns_0.size;
    var tmp$_5, tmp$_6;
    tmp$_5 = $receiver.size;
    tmp$_6 = newSize - 1 | 0;
    for (var i_0 = tmp$_5; i_0 <= tmp$_6; i_0++) {
      $receiver.add_11rb$(0);
    }
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var e = elements.get_za3lpa$(i);
      callback(e, rowIndex, colIndex);
      var layoutData = (tmp$_0 = e.layoutData) == null || Kotlin.isType(tmp$_0, GridLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      var colSpan = (tmp$_1 = layoutData != null ? layoutData.colSpan : null) != null ? tmp$_1 : 1;
      var rowSpan = (tmp$_2 = layoutData != null ? layoutData.rowSpan : null) != null ? tmp$_2 : 1;
      var x = colIndex + colSpan - 1 | 0;
      var y = get_lastIndex(this._columns_0);
      var min_sdesaw$result;
      if (Kotlin.compareTo(x, y) <= 0) {
        min_sdesaw$result = x;
      }
       else {
        min_sdesaw$result = y;
      }
      tmp$_3 = min_sdesaw$result;
      for (var j = colIndex; j <= tmp$_3; j++) {
        var tmp$_7 = this.rowOccupancy_0;
        var a = this.rowOccupancy_0.get_za3lpa$(j);
        tmp$_7.set_wxm5ur$(j, Math.max(a, rowSpan));
      }
      while (true) {
        if (this.rowOccupancy_0.get_za3lpa$(colIndex) > 0) {
          var tmp$_4;
          tmp$_4 = this.rowOccupancy_0;
          tmp$_4.set_wxm5ur$(colIndex, tmp$_4.get_za3lpa$(colIndex) - 1 | 0);
          colIndex = colIndex + 1 | 0;
          if (colIndex >= this._columns_0.size) {
            colIndex = 0;
            rowIndex = rowIndex + 1 | 0;
          }
        }
         else {
          break;
        }
      }
    }
  };
  GridLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    this.basicLayout_tva9ox$(explicitWidth, explicitHeight, elements, out);
  };
  function GridLayout$basicLayout$lambda(this$GridLayout, closure$childAvailableWidth) {
    return function (element, rowIndex, colIndex) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      var layoutData = (tmp$ = element.layoutData) == null || Kotlin.isType(tmp$, GridLayoutData) ? tmp$ : Kotlin.throwCCE();
      var colSpan = (tmp$_0 = layoutData != null ? layoutData.colSpan : null) != null ? tmp$_0 : 1;
      var notFlexible = true;
      var availableSpanWidth = 0.0;
      tmp$_1 = colIndex + colSpan - 1 | 0;
      for (var i = colIndex; i <= tmp$_1; i++) {
        var col = this$GridLayout._columns_0.get_za3lpa$(colIndex);
        if (closure$childAvailableWidth != null && col.getIsFlexible()) {
          notFlexible = false;
          break;
        }
         else {
          if (this$GridLayout._columnPreferredWidths_0.get_za3lpa$(colIndex) == null)
            availableSpanWidth = null;
          else {
            availableSpanWidth = (availableSpanWidth != null ? availableSpanWidth : Kotlin.throwNPE()) + ((tmp$_2 = this$GridLayout._columnPreferredWidths_0.get_za3lpa$(colIndex)) != null ? tmp$_2 : Kotlin.throwNPE()) + this$GridLayout.horizontalGap;
          }
        }
      }
      if (notFlexible) {
        if (availableSpanWidth != null)
          availableSpanWidth -= this$GridLayout.horizontalGap;
        var cellW = layoutData != null ? layoutData.getPreferredWidth_81sz4$(availableSpanWidth) : null;
        var cellH = layoutData != null ? layoutData.getPreferredHeight_81sz4$(this$GridLayout.rowHeight) : null;
        element.setSize_yxjqmk$(cellW, cellH);
        var rowSpan = (tmp$_3 = layoutData != null ? layoutData.rowSpan : null) != null ? tmp$_3 : 1;
        var h = (element.height - (rowSpan - 1 | 0) * this$GridLayout.verticalGap) / rowSpan;
        var $receiver = this$GridLayout._measuredRowHeights_0;
        var newSize = rowIndex + rowSpan | 0;
        var tmp$_5, tmp$_6;
        tmp$_5 = $receiver.size;
        tmp$_6 = newSize - 1 | 0;
        for (var i_1 = tmp$_5; i_1 <= tmp$_6; i_1++) {
          var tmp$_7;
          $receiver.add_11rb$((tmp$_7 = this$GridLayout.rowHeight) != null ? tmp$_7 : 0.0);
        }
        tmp$_4 = rowIndex + rowSpan - 1 | 0;
        for (var i_0 = rowIndex; i_0 <= tmp$_4; i_0++) {
          var tmp$_8 = this$GridLayout._measuredRowHeights_0;
          var a = this$GridLayout._measuredRowHeights_0.get_za3lpa$(i_0);
          tmp$_8.set_wxm5ur$(i_0, Math.max(a, h));
        }
        this$GridLayout.fitMeasuredSizeIntoColumns_0(colIndex, colSpan, element.width);
      }
    };
  }
  function GridLayout$basicLayout$lambda_0(this$GridLayout) {
    return function (element, rowIndex, colIndex) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      var layoutData = (tmp$ = element.layoutData) == null || Kotlin.isType(tmp$, GridLayoutData) ? tmp$ : Kotlin.throwCCE();
      var colSpan = (tmp$_0 = layoutData != null ? layoutData.colSpan : null) != null ? tmp$_0 : 1;
      var isFlexible = false;
      var availableSpanWidth = 0.0;
      tmp$_1 = colIndex + colSpan - 1 | 0;
      for (var i = colIndex; i <= tmp$_1; i++) {
        var col = this$GridLayout._columns_0.get_za3lpa$(i);
        if (col.getIsFlexible())
          isFlexible = true;
        availableSpanWidth += ((tmp$_2 = this$GridLayout._columnPreferredWidths_0.get_za3lpa$(i)) != null ? tmp$_2 : Kotlin.throwNPE()) + this$GridLayout.horizontalGap;
      }
      availableSpanWidth -= this$GridLayout.horizontalGap;
      if (isFlexible) {
        var cellW = layoutData != null ? layoutData.getPreferredWidth_81sz4$(availableSpanWidth) : null;
        var cellH = layoutData != null ? layoutData.getPreferredHeight_81sz4$(this$GridLayout.rowHeight) : null;
        element.setSize_yxjqmk$(cellW, cellH);
        var rowSpan = (tmp$_3 = layoutData != null ? layoutData.rowSpan : null) != null ? tmp$_3 : 1;
        var h = (element.height - (rowSpan - 1 | 0) * this$GridLayout.verticalGap) / rowSpan;
        var $receiver = this$GridLayout._measuredRowHeights_0;
        var newSize = rowIndex + rowSpan | 0;
        var tmp$_5, tmp$_6;
        tmp$_5 = $receiver.size;
        tmp$_6 = newSize - 1 | 0;
        for (var i_1 = tmp$_5; i_1 <= tmp$_6; i_1++) {
          var tmp$_7;
          $receiver.add_11rb$((tmp$_7 = this$GridLayout.rowHeight) != null ? tmp$_7 : 0.0);
        }
        tmp$_4 = rowIndex + rowSpan - 1 | 0;
        for (var i_0 = rowIndex; i_0 <= tmp$_4; i_0++) {
          var tmp$_8 = this$GridLayout._measuredRowHeights_0;
          var a = this$GridLayout._measuredRowHeights_0.get_za3lpa$(i_0);
          tmp$_8.set_wxm5ur$(i_0, Math.max(a, h));
        }
        this$GridLayout.fitMeasuredSizeIntoColumns_0(colIndex, colSpan, element.width);
      }
    };
  }
  function GridLayout$basicLayout$lambda_1(closure$lastRowIndex, this$GridLayout, closure$x, closure$y) {
    return function (element, rowIndex, colIndex) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12;
      if (rowIndex !== closure$lastRowIndex.v) {
        closure$x.v = this$GridLayout.padding.left;
        tmp$ = colIndex - 1 | 0;
        for (var i = 0; i <= tmp$; i++) {
          closure$x.v += this$GridLayout._measuredColWidths_0.get_za3lpa$(i) + this$GridLayout.horizontalGap;
        }
        tmp$_0 = closure$lastRowIndex.v;
        tmp$_1 = rowIndex - 1 | 0;
        for (var i_0 = tmp$_0; i_0 <= tmp$_1; i_0++) {
          closure$y.v += this$GridLayout._measuredRowHeights_0.get_za3lpa$(i_0) + this$GridLayout.verticalGap;
        }
        closure$lastRowIndex.v = rowIndex;
      }
      var layoutData = (tmp$_2 = element.layoutData) == null || Kotlin.isType(tmp$_2, GridLayoutData) ? tmp$_2 : Kotlin.throwCCE();
      var colSpan = (tmp$_3 = layoutData != null ? layoutData.colSpan : null) != null ? tmp$_3 : 1;
      var measuredSpanWidth = 0.0;
      tmp$_4 = colIndex + colSpan - 1 | 0;
      for (var i_1 = colIndex; i_1 <= tmp$_4; i_1++) {
        measuredSpanWidth += this$GridLayout._measuredColWidths_0.get_za3lpa$(i_1) + this$GridLayout.horizontalGap;
      }
      measuredSpanWidth -= this$GridLayout.horizontalGap;
      tmp$_6 = (tmp$_5 = layoutData != null ? layoutData.horizontalAlign : null) != null ? tmp$_5 : this$GridLayout._columns_0.get_za3lpa$(colIndex).hAlign;
      if (Kotlin.equals(tmp$_6, HAlign$LEFT_getInstance()))
        tmp$_7 = 0.0;
      else if (Kotlin.equals(tmp$_6, HAlign$CENTER_getInstance()))
        tmp$_7 = (measuredSpanWidth - element.width) * 0.5;
      else if (Kotlin.equals(tmp$_6, HAlign$RIGHT_getInstance()))
        tmp$_7 = measuredSpanWidth - element.width;
      else
        tmp$_7 = Kotlin.noWhenBranchMatched();
      var xOffset = tmp$_7;
      var rowSpan = (tmp$_8 = layoutData != null ? layoutData.rowSpan : null) != null ? tmp$_8 : 1;
      var measuredSpanHeight = 0.0;
      tmp$_9 = rowIndex + rowSpan - 1 | 0;
      for (var i_2 = rowIndex; i_2 <= tmp$_9; i_2++) {
        measuredSpanHeight += this$GridLayout._measuredRowHeights_0.get_za3lpa$(i_2) + this$GridLayout.verticalGap;
      }
      measuredSpanHeight -= this$GridLayout.verticalGap;
      tmp$_11 = (tmp$_10 = layoutData != null ? layoutData.verticalAlign : null) != null ? tmp$_10 : this$GridLayout.verticalAlign;
      if (Kotlin.equals(tmp$_11, VAlign$TOP_getInstance()))
        tmp$_12 = 0.0;
      else if (Kotlin.equals(tmp$_11, VAlign$MIDDLE_getInstance()))
        tmp$_12 = (measuredSpanHeight - element.height) * 0.5;
      else if (Kotlin.equals(tmp$_11, VAlign$BOTTOM_getInstance()))
        tmp$_12 = measuredSpanHeight - element.height;
      else
        tmp$_12 = Kotlin.noWhenBranchMatched();
      var yOffset = tmp$_12;
      element.moveTo_y2kzbl$(closure$x.v + xOffset, closure$y.v + yOffset);
      closure$x.v += measuredSpanWidth + this$GridLayout.horizontalGap;
    };
  }
  GridLayout.prototype.basicLayout_tva9ox$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_9, tmp$_8, tmp$_10, tmp$_11, tmp$_12;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    this._measuredColWidths_0.clear();
    this._measuredRowHeights_0.clear();
    this._columnPreferredWidths_0.clear();
    tmp$ = get_lastIndex(this._columns_0);
    for (var i = 0; i <= tmp$; i++) {
      var col = this._columns_0.get_za3lpa$(i);
      this._columnPreferredWidths_0.add_11rb$(col.getPreferredWidth_81sz4$(childAvailableWidth));
      var w = childAvailableWidth != null && col.getIsFlexible() ? 0.0 : (tmp$_0 = this._columnPreferredWidths_0.get_za3lpa$(i)) != null ? tmp$_0 : 0.0;
      tmp$_2 = this._measuredColWidths_0;
      var a = (tmp$_1 = col.minWidth) != null ? tmp$_1 : 0.0;
      addOrSet(tmp$_2, i, Math.max(a, w));
    }
    this.cellWalk_0(elements, GridLayout$basicLayout$lambda(this, childAvailableWidth));
    tmp$_3 = get_lastIndex(this._columns_0);
    for (var i_0 = 0; i_0 <= tmp$_3; i_0++) {
      var col_0 = this._columns_0.get_za3lpa$(i_0);
      if (childAvailableWidth == null || !col_0.getIsFlexible())
        this._columnPreferredWidths_0.set_wxm5ur$(i_0, this._measuredColWidths_0.get_za3lpa$(i_0));
    }
    if (childAvailableWidth != null) {
      var inflexibleWidth = 0.0;
      var flexibleWidth = 0.0;
      tmp$_4 = get_lastIndex(this._columns_0);
      for (var i_1 = 0; i_1 <= tmp$_4; i_1++) {
        var col_1 = this._columns_0.get_za3lpa$(i_1);
        var preferredWidth = (tmp$_5 = this._columnPreferredWidths_0.get_za3lpa$(i_1)) != null ? tmp$_5 : Kotlin.throwNPE();
        if (col_1.getIsFlexible()) {
          flexibleWidth += preferredWidth;
        }
         else {
          inflexibleWidth += preferredWidth;
        }
        inflexibleWidth += this.horizontalGap;
      }
      inflexibleWidth -= this.horizontalGap;
      var tmp$_13;
      if (flexibleWidth > 0.0) {
        var value = (childAvailableWidth - inflexibleWidth) / flexibleWidth;
        var max = this.allowScaleUp ? 10000.0 : 1.0;
        var clamp_73gzaq$result;
        clamp_73gzaq$break: {
          if (Kotlin.compareTo(value, 0.0) <= 0) {
            clamp_73gzaq$result = 0.0;
            break clamp_73gzaq$break;
          }
          if (Kotlin.compareTo(value, max) >= 0) {
            clamp_73gzaq$result = max;
            break clamp_73gzaq$break;
          }
          clamp_73gzaq$result = value;
        }
        tmp$_13 = clamp_73gzaq$result;
      }
       else
        tmp$_13 = 1.0;
      var colScale = tmp$_13;
      tmp$_6 = get_lastIndex(this._columns_0);
      for (var i_2 = 0; i_2 <= tmp$_6; i_2++) {
        var col_2 = this._columns_0.get_za3lpa$(i_2);
        if (col_2.getIsFlexible()) {
          this._columnPreferredWidths_0.set_wxm5ur$(i_2, colScale * ((tmp$_7 = col_2.getPreferredWidth_81sz4$(childAvailableWidth)) != null ? tmp$_7 : Kotlin.throwNPE()));
          tmp$_9 = this._measuredColWidths_0.get_za3lpa$(i_2);
          tmp$_10 = (tmp$_8 = this._columnPreferredWidths_0.get_za3lpa$(i_2)) != null ? tmp$_8 : Kotlin.throwNPE();
          this._measuredColWidths_0.set_wxm5ur$(i_2, Math.max(tmp$_9, tmp$_10));
        }
      }
    }
    if (childAvailableWidth != null) {
      this.cellWalk_0(elements, GridLayout$basicLayout$lambda_0(this));
    }
    var x = {v: this.padding.left};
    var y = {v: this.padding.top};
    var lastRowIndex = {v: 0};
    this.cellWalk_0(elements, GridLayout$basicLayout$lambda_1(lastRowIndex, this, x, y));
    tmp$_11 = get_lastIndex(this._measuredRowHeights_0);
    for (var i_3 = lastRowIndex.v; i_3 <= tmp$_11; i_3++) {
      y.v += this._measuredRowHeights_0.get_za3lpa$(i_3) + this.verticalGap;
    }
    y.v += this.padding.bottom - this.verticalGap;
    var maxWidth = this.padding.left;
    tmp$_12 = get_lastIndex(this._columns_0);
    for (var i_4 = 0; i_4 <= tmp$_12; i_4++) {
      maxWidth += this._measuredColWidths_0.get_za3lpa$(i_4) + this.horizontalGap;
    }
    maxWidth += this.padding.right - this.horizontalGap;
    out.set_dleff0$(maxWidth, y.v);
  };
  GridLayout.prototype.fitMeasuredSizeIntoColumns_0 = function (colIndex, colSpan, measuredWidth) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    if (colSpan === 1) {
      var tmp$_4 = this._measuredColWidths_0;
      var a = this._measuredColWidths_0.get_za3lpa$(colIndex);
      tmp$_4.set_wxm5ur$(colIndex, Math.max(a, measuredWidth));
      return;
    }
    var totalActual = measuredWidth - this.horizontalGap * (colSpan - 1 | 0);
    var evenSplit = totalActual / colSpan;
    var totalPreferred = 0.0;
    tmp$ = colIndex + colSpan - 1 | 0;
    for (var i = colIndex; i <= tmp$; i++) {
      totalPreferred += (tmp$_0 = this._columnPreferredWidths_0.get_za3lpa$(i)) != null ? tmp$_0 : evenSplit;
    }
    tmp$_1 = colIndex + colSpan - 1 | 0;
    for (var i_0 = colIndex; i_0 <= tmp$_1; i_0++) {
      if (totalPreferred <= 0.0) {
        tmp$_3 = 1.0 / colSpan;
      }
       else {
        tmp$_3 = ((tmp$_2 = this._columnPreferredWidths_0.get_za3lpa$(i_0)) != null ? tmp$_2 : evenSplit) / totalPreferred;
      }
      var p = tmp$_3;
      var tmp$_5 = this._measuredColWidths_0;
      var a_0 = this._measuredColWidths_0.get_za3lpa$(i_0);
      var b = totalActual * p;
      tmp$_5.set_wxm5ur$(i_0, Math.max(a_0, b));
    }
  };
  GridLayout.prototype.createLayoutData = function () {
    return new GridLayoutData();
  };
  function GridLayout$columnChangedHandler$lambda(this$GridLayout) {
    return function () {
      this$GridLayout.changed.dispatch();
    };
  }
  GridLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GridLayout',
    interfaces: [BasicLayoutAlgorithm, LayoutAlgorithm]
  };
  function GridColumn() {
    this._changed_0 = new Signal0();
    this.width$delegate = this.bindable_0(null);
    this.widthPercent$delegate = this.bindable_0(null);
    this.minWidth$delegate = this.bindable_0(null);
    this.hAlign$delegate = this.bindable_0(HAlign$LEFT_getInstance());
    this.isFlexible$delegate = this.bindable_0(null);
  }
  Object.defineProperty(GridColumn.prototype, 'changed', {
    get: function () {
      return this._changed_0;
    }
  });
  Object.defineProperty(GridColumn.prototype, 'width', {
    get: function () {
      return this.width$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('width'));
    },
    set: function (width) {
      this.width$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('width'), width);
    }
  });
  Object.defineProperty(GridColumn.prototype, 'widthPercent', {
    get: function () {
      return this.widthPercent$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('widthPercent'));
    },
    set: function (widthPercent) {
      this.widthPercent$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('widthPercent'), widthPercent);
    }
  });
  Object.defineProperty(GridColumn.prototype, 'minWidth', {
    get: function () {
      return this.minWidth$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('minWidth'));
    },
    set: function (minWidth) {
      this.minWidth$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('minWidth'), minWidth);
    }
  });
  Object.defineProperty(GridColumn.prototype, 'hAlign', {
    get: function () {
      return this.hAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('hAlign'));
    },
    set: function (hAlign) {
      this.hAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('hAlign'), hAlign);
    }
  });
  Object.defineProperty(GridColumn.prototype, 'isFlexible', {
    get: function () {
      return this.isFlexible$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('isFlexible'));
    },
    set: function (isFlexible) {
      this.isFlexible$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('isFlexible'), isFlexible);
    }
  });
  GridColumn.prototype.getIsFlexible = function () {
    var tmp$;
    return (this.width != null || this.widthPercent != null) && ((tmp$ = this.isFlexible) != null ? tmp$ : this.widthPercent != null);
  };
  GridColumn.prototype.getPreferredWidth_81sz4$ = function (availableWidth) {
    var tmp$, tmp$_0;
    var w = availableWidth == null || this.widthPercent == null ? this.width : ((tmp$ = this.widthPercent) != null ? tmp$ : Kotlin.throwNPE()) * availableWidth;
    if (this.minWidth != null && w != null && ((tmp$_0 = this.minWidth) != null ? tmp$_0 : Kotlin.throwNPE()) > w)
      w = this.minWidth;
    return w;
  };
  function GridColumn$bindable$ObjectLiteral(this$GridColumn, initialValue) {
    this.this$GridColumn = this$GridColumn;
    ObservableProperty.call(this, initialValue);
  }
  GridColumn$bindable$ObjectLiteral.prototype.afterChange_jxtfl0$ = function (property, oldValue, newValue) {
    this.this$GridColumn._changed_0.dispatch();
  };
  GridColumn$bindable$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [ObservableProperty]
  };
  GridColumn.prototype.bindable_0 = function (initialValue) {
    return new GridColumn$bindable$ObjectLiteral(this, initialValue);
  };
  GridColumn.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GridColumn',
    interfaces: []
  };
  function gridColumn$lambda($receiver) {
  }
  function gridColumn(init) {
    if (init === void 0)
      init = gridColumn$lambda;
    var c = new GridColumn();
    init(c);
    return c;
  }
  function GridLayoutData() {
    BasicLayoutData.call(this);
    this.colSpan$delegate = this.bindable_mh5how$(1);
    this.rowSpan$delegate = this.bindable_mh5how$(1);
    this.horizontalAlign$delegate = this.bindable_mh5how$(null);
    this.verticalAlign$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(GridLayoutData.prototype, 'colSpan', {
    get: function () {
      return this.colSpan$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('colSpan'));
    },
    set: function (colSpan) {
      this.colSpan$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('colSpan'), colSpan);
    }
  });
  Object.defineProperty(GridLayoutData.prototype, 'rowSpan', {
    get: function () {
      return this.rowSpan$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('rowSpan'));
    },
    set: function (rowSpan) {
      this.rowSpan$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('rowSpan'), rowSpan);
    }
  });
  Object.defineProperty(GridLayoutData.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(GridLayoutData.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  GridLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GridLayoutData',
    interfaces: [BasicLayoutData]
  };
  function gridLayoutData(init) {
    var g = new GridLayoutData();
    init(g);
    return g;
  }
  function GridLayoutContainer(owner) {
    LayoutContainerImpl.call(this, owner, new GridLayout());
  }
  GridLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GridLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function grid$lambda($receiver) {
  }
  function grid($receiver, init) {
    if (init === void 0)
      init = grid$lambda;
    var c = new GridLayoutContainer($receiver);
    init(c);
    return c;
  }
  function FormContainer(owner) {
    FormContainer$Companion_getInstance();
    GridLayoutContainer.call(this, owner);
    addTag(this, FormContainer$Companion_getInstance());
    this.layoutAlgorithm.setColumns_lejawd$([gridColumn(FormContainer_init$lambda), gridColumn(FormContainer_init$lambda_0)]);
    this.layoutAlgorithm.horizontalGap = 5.0;
    this.layoutAlgorithm.verticalAlign = VAlign$TOP_getInstance();
  }
  function FormContainer$Companion() {
    FormContainer$Companion_instance = this;
  }
  FormContainer$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var FormContainer$Companion_instance = null;
  function FormContainer$Companion_getInstance() {
    if (FormContainer$Companion_instance === null) {
      new FormContainer$Companion();
    }
    return FormContainer$Companion_instance;
  }
  function FormContainer_init$lambda($receiver) {
    $receiver.hAlign = HAlign$RIGHT_getInstance();
    $receiver.widthPercent = 0.4;
  }
  function FormContainer_init$lambda_0($receiver) {
    $receiver.widthPercent = 0.6;
  }
  FormContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FormContainer',
    interfaces: [GridLayoutContainer]
  };
  function form$lambda($receiver) {
  }
  function form($receiver, init) {
    if (init === void 0)
      init = form$lambda;
    var c = new FormContainer($receiver);
    init(c);
    return c;
  }
  var formLabelStyle;
  function formLabel$lambda($receiver) {
  }
  function formLabel$lambda_0(closure$init) {
    return function ($receiver) {
      addTag($receiver, formLabelStyle);
      closure$init($receiver);
    };
  }
  function formLabel($receiver, text_2, init) {
    if (text_2 === void 0)
      text_2 = '';
    if (init === void 0)
      init = formLabel$lambda;
    return text_1($receiver, text_2, formLabel$lambda_0(init));
  }
  function HorizontalLayout() {
    this.changed_dxhkqg$_0 = new Signal0();
    this.gap$delegate = bindable(this.changed, 5.0);
    this.padding$delegate = bindable(this.changed, Pad_init());
    this.horizontalAlign$delegate = bindable(this.changed, HAlign$LEFT_getInstance());
    this.verticalAlign$delegate = bindable(this.changed, VAlign$BOTTOM_getInstance());
  }
  Object.defineProperty(HorizontalLayout.prototype, 'changed', {
    get: function () {
      return this.changed_dxhkqg$_0;
    }
  });
  Object.defineProperty(HorizontalLayout.prototype, 'gap', {
    get: function () {
      return this.gap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('gap'));
    },
    set: function (gap) {
      this.gap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('gap'), gap);
    }
  });
  Object.defineProperty(HorizontalLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(HorizontalLayout.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(HorizontalLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  HorizontalLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
    var tmp$;
    var minHeight = 0.0;
    var minWidth = 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var sC = element.sizeConstraints;
      var iMinHeight = sC.height.min;
      if (iMinHeight != null) {
        var y = minHeight;
        var max_sdesaw$result;
        if (Kotlin.compareTo(iMinHeight, y) >= 0) {
          max_sdesaw$result = iMinHeight;
        }
         else {
          max_sdesaw$result = y;
        }
        minHeight = max_sdesaw$result;
      }
      var iMinWidth = sC.width.min;
      if (iMinWidth != null)
        minWidth += iMinWidth;
    }
    minHeight += this.padding.bottom + this.padding.top;
    minWidth += this.gap * get_lastIndex(elements) + this.padding.left + this.padding.right;
    out.height.min = minHeight;
    out.width.min = minWidth;
  };
  HorizontalLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    this.basicLayout_tva9ox$(explicitWidth, explicitHeight, elements, out);
  };
  HorizontalLayout.prototype.basicLayout_tva9ox$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    var maxHeight = childAvailableHeight != null ? childAvailableHeight : 0.0;
    var inflexibleWidth = 0.0;
    var flexibleWidth = 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var layoutData = (tmp$_0 = element.layoutData) == null || Kotlin.isType(tmp$_0, HorizontalLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      if (childAvailableWidth == null || (layoutData != null ? layoutData.widthPercent : null) == null) {
        var w = layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null;
        var h = layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null;
        element.setSize_yxjqmk$(w, h);
        inflexibleWidth += element.width;
        if (element.height > maxHeight)
          maxHeight = element.height;
      }
       else {
        flexibleWidth += ((tmp$_1 = layoutData.widthPercent) != null ? tmp$_1 : Kotlin.throwNPE()) * childAvailableWidth;
      }
      inflexibleWidth += this.gap;
    }
    inflexibleWidth -= this.gap;
    if (childAvailableWidth != null) {
      var tmp$_10;
      if (flexibleWidth > 0) {
        var value = (childAvailableWidth - inflexibleWidth) / flexibleWidth;
        var clamp_73gzaq$result;
        clamp_73gzaq$break: {
          if (Kotlin.compareTo(value, 0.0) <= 0) {
            clamp_73gzaq$result = 0.0;
            break clamp_73gzaq$break;
          }
          if (Kotlin.compareTo(value, 1.0) >= 0) {
            clamp_73gzaq$result = 1.0;
            break clamp_73gzaq$break;
          }
          clamp_73gzaq$result = value;
        }
        tmp$_10 = clamp_73gzaq$result;
      }
       else
        tmp$_10 = 1.0;
      var scale = tmp$_10;
      tmp$_2 = get_lastIndex(elements);
      for (var i_0 = 0; i_0 <= tmp$_2; i_0++) {
        var element_0 = elements.get_za3lpa$(i_0);
        var layoutData_0 = (tmp$_3 = element_0.layoutData) == null || Kotlin.isType(tmp$_3, HorizontalLayoutData) ? tmp$_3 : Kotlin.throwCCE();
        if ((layoutData_0 != null ? layoutData_0.widthPercent : null) != null) {
          var h_0 = layoutData_0.getPreferredHeight_81sz4$(childAvailableHeight);
          var w_0 = scale * ((tmp$_4 = layoutData_0.widthPercent) != null ? tmp$_4 : Kotlin.throwNPE()) * childAvailableWidth;
          element_0.setSize_yxjqmk$(w_0, h_0);
          if (element_0.height > maxHeight)
            maxHeight = element_0.height;
        }
      }
    }
    var x = this.padding.left;
    if (childAvailableWidth != null && this.horizontalAlign !== HAlign$LEFT_getInstance()) {
      var d = childAvailableWidth - (inflexibleWidth + flexibleWidth);
      if (d > 0.0) {
        if (this.horizontalAlign === HAlign$RIGHT_getInstance()) {
          x += d;
        }
         else if (this.horizontalAlign === HAlign$CENTER_getInstance()) {
          var v = d * 0.5;
          x += Math.floor(v);
        }
      }
    }
    tmp$_5 = get_lastIndex(elements);
    for (var i_1 = 0; i_1 <= tmp$_5; i_1++) {
      var element_1 = elements.get_za3lpa$(i_1);
      var layoutData_1 = (tmp$_6 = element_1.layoutData) == null || Kotlin.isType(tmp$_6, HorizontalLayoutData) ? tmp$_6 : Kotlin.throwCCE();
      tmp$_8 = (tmp$_7 = layoutData_1 != null ? layoutData_1.verticalAlign : null) != null ? tmp$_7 : this.verticalAlign;
      if (Kotlin.equals(tmp$_8, VAlign$TOP_getInstance()))
        tmp$_9 = this.padding.bottom;
      else if (Kotlin.equals(tmp$_8, VAlign$MIDDLE_getInstance()))
        tmp$_9 = (maxHeight - element_1.height) * 0.5 + this.padding.bottom;
      else if (Kotlin.equals(tmp$_8, VAlign$BOTTOM_getInstance()))
        tmp$_9 = maxHeight - element_1.height + this.padding.bottom;
      else
        throw new Exception();
      var y = tmp$_9;
      element_1.moveTo_y2kzbl$(x, y);
      x += element_1.width + this.gap;
    }
    x += this.padding.right - this.gap;
    out.set_dleff0$(x, maxHeight + this.padding.bottom + this.padding.top);
  };
  HorizontalLayout.prototype.createLayoutData = function () {
    return new HorizontalLayoutData();
  };
  HorizontalLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HorizontalLayout',
    interfaces: [BasicLayoutAlgorithm, LayoutAlgorithm]
  };
  function HorizontalLayoutData() {
    BasicLayoutData.call(this);
    this.verticalAlign$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(HorizontalLayoutData.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  HorizontalLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HorizontalLayoutData',
    interfaces: [BasicLayoutData]
  };
  function HorizontalLayoutContainer(owner) {
    LayoutContainerImpl.call(this, owner, new HorizontalLayout());
  }
  HorizontalLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HorizontalLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function hGroup$lambda($receiver) {
  }
  function hGroup($receiver, init) {
    if (init === void 0)
      init = hGroup$lambda;
    var horizontalGroup = new HorizontalLayoutContainer($receiver);
    init(horizontalGroup);
    return horizontalGroup;
  }
  function LayoutAlgorithm() {
  }
  LayoutAlgorithm.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'LayoutAlgorithm',
    interfaces: [LayoutDataProvider]
  };
  function LayoutDataProvider() {
  }
  LayoutDataProvider.prototype.layout_ge8abi$ = function ($receiver, init) {
    var layoutData = this.createLayoutData();
    init(layoutData);
    $receiver.layoutData = layoutData;
    return $receiver;
  };
  LayoutDataProvider.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'LayoutDataProvider',
    interfaces: []
  };
  function bindable$ObjectLiteral(closure$changed, initialValue) {
    this.closure$changed = closure$changed;
    ObservableProperty.call(this, initialValue);
  }
  bindable$ObjectLiteral.prototype.afterChange_jxtfl0$ = function (property, oldValue, newValue) {
    this.closure$changed.dispatch();
  };
  bindable$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [ObservableProperty]
  };
  function bindable(changed, initialValue) {
    return new bindable$ObjectLiteral(changed, initialValue);
  }
  function BasicLayoutAlgorithm() {
  }
  BasicLayoutAlgorithm.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'BasicLayoutAlgorithm',
    interfaces: [LayoutDataProvider]
  };
  function ScaleLayout() {
    this.changed_hi61kq$_0 = new Signal0();
    this.padding$delegate = bindable(this.changed, Pad_init());
    this.verticalAlign$delegate = bindable(this.changed, VAlign$MIDDLE_getInstance());
    this.horizontalAlign$delegate = bindable(this.changed, HAlign$CENTER_getInstance());
    this.scaling$delegate = bindable(this.changed, Scaling$FIT_getInstance());
    this.size_0 = new Vector2();
  }
  ScaleLayout.prototype.createLayoutData = function () {
    return new ScaleLayoutData();
  };
  Object.defineProperty(ScaleLayout.prototype, 'changed', {
    get: function () {
      return this.changed_hi61kq$_0;
    }
  });
  Object.defineProperty(ScaleLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(ScaleLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(ScaleLayout.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(ScaleLayout.prototype, 'scaling', {
    get: function () {
      return this.scaling$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('scaling'));
    },
    set: function (scaling) {
      this.scaling$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('scaling'), scaling);
    }
  });
  ScaleLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
  };
  ScaleLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var child = elements.get_za3lpa$(i);
      var layoutData = (tmp$_0 = child.layoutData) == null || Kotlin.isType(tmp$_0, ScaleLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      child.setSize_yxjqmk$(layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null, layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null);
      var b = child.width;
      var w = Math.max(1.0, b);
      var b_0 = child.height;
      var h = Math.max(1.0, b_0);
      var scaling = (tmp$_1 = layoutData != null ? layoutData.scaling : null) != null ? tmp$_1 : this.scaling;
      scaling.apply_kjsed5$(w, h, childAvailableWidth != null ? childAvailableWidth : w, childAvailableHeight != null ? childAvailableHeight : h, this.size_0);
      var scaleX = this.size_0.x / w;
      var scaleY = this.size_0.y / h;
      if (layoutData != null) {
        if (layoutData.minScaleX != null) {
          tmp$_3 = (tmp$_2 = layoutData.minScaleX) != null ? tmp$_2 : Kotlin.throwNPE();
          var a = scaleX;
          scaleX = Math.max(a, tmp$_3);
        }
        if (layoutData.minScaleY != null) {
          tmp$_5 = (tmp$_4 = layoutData.minScaleY) != null ? tmp$_4 : Kotlin.throwNPE();
          var a_0 = scaleY;
          scaleY = Math.max(a_0, tmp$_5);
        }
        if (layoutData.maxScaleX != null) {
          tmp$_7 = (tmp$_6 = layoutData.maxScaleX) != null ? tmp$_6 : Kotlin.throwNPE();
          var a_1 = scaleX;
          scaleX = Math.min(a_1, tmp$_7);
        }
        if (layoutData.maxScaleY != null) {
          tmp$_9 = (tmp$_8 = layoutData.maxScaleY) != null ? tmp$_8 : Kotlin.throwNPE();
          var a_2 = scaleY;
          scaleY = Math.min(a_2, tmp$_9);
        }
      }
      var tmp$_14 = scaleX;
      var tmp$_15 = scaleY;
      var a_3 = scaleX;
      var b_1 = scaleY;
      child.setScaling_y2kzbl$(tmp$_14, tmp$_15, Math.max(a_3, b_1));
      child.moveTo_y2kzbl$(this.padding.left, this.padding.top);
      if (explicitWidth != null) {
        var remainingSpace = (childAvailableWidth != null ? childAvailableWidth : Kotlin.throwNPE()) - w * scaleX;
        if (remainingSpace > 0.0) {
          tmp$_11 = (tmp$_10 = layoutData != null ? layoutData.horizontalAlign : null) != null ? tmp$_10 : this.horizontalAlign;
          if (!Kotlin.equals(tmp$_11, HAlign$LEFT_getInstance()))
            if (Kotlin.equals(tmp$_11, HAlign$CENTER_getInstance())) {
              var halfSpace = floor(remainingSpace * 0.5);
              child.x = halfSpace + this.padding.left;
            }
             else if (Kotlin.equals(tmp$_11, HAlign$RIGHT_getInstance()))
              child.x = remainingSpace + this.padding.left;
        }
      }
      if (explicitHeight != null) {
        var remainingSpace_0 = (childAvailableHeight != null ? childAvailableHeight : Kotlin.throwNPE()) - h * scaleY;
        if (remainingSpace_0 > 0.0) {
          tmp$_13 = (tmp$_12 = layoutData != null ? layoutData.verticalAlign : null) != null ? tmp$_12 : this.verticalAlign;
          if (!Kotlin.equals(tmp$_13, VAlign$TOP_getInstance()))
            if (Kotlin.equals(tmp$_13, VAlign$MIDDLE_getInstance())) {
              var halfSpace_0 = floor(remainingSpace_0 * 0.5);
              child.y = halfSpace_0 + this.padding.top;
            }
             else if (Kotlin.equals(tmp$_13, VAlign$BOTTOM_getInstance()))
              child.y = remainingSpace_0 + this.padding.top;
        }
      }
      if (explicitWidth == null) {
        var a_4 = out.width;
        var b_2 = this.size_0.x + this.padding.left + this.padding.right;
        out.width = Math.max(a_4, b_2);
      }
      if (explicitHeight == null) {
        var a_5 = out.height;
        var b_3 = this.size_0.y + this.padding.top + this.padding.bottom;
        out.height = Math.max(a_5, b_3);
      }
    }
  };
  ScaleLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScaleLayout',
    interfaces: [LayoutAlgorithm]
  };
  function ScaleLayoutData() {
    BasicLayoutData.call(this);
    this.minScaleX$delegate = this.bindable_mh5how$(null);
    this.minScaleY$delegate = this.bindable_mh5how$(null);
    this.maxScaleX$delegate = this.bindable_mh5how$(null);
    this.maxScaleY$delegate = this.bindable_mh5how$(null);
    this.verticalAlign$delegate = this.bindable_mh5how$(null);
    this.horizontalAlign$delegate = this.bindable_mh5how$(null);
    this.scaling$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(ScaleLayoutData.prototype, 'minScaleX', {
    get: function () {
      return this.minScaleX$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('minScaleX'));
    },
    set: function (minScaleX) {
      this.minScaleX$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('minScaleX'), minScaleX);
    }
  });
  Object.defineProperty(ScaleLayoutData.prototype, 'minScaleY', {
    get: function () {
      return this.minScaleY$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('minScaleY'));
    },
    set: function (minScaleY) {
      this.minScaleY$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('minScaleY'), minScaleY);
    }
  });
  Object.defineProperty(ScaleLayoutData.prototype, 'maxScaleX', {
    get: function () {
      return this.maxScaleX$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('maxScaleX'));
    },
    set: function (maxScaleX) {
      this.maxScaleX$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('maxScaleX'), maxScaleX);
    }
  });
  Object.defineProperty(ScaleLayoutData.prototype, 'maxScaleY', {
    get: function () {
      return this.maxScaleY$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('maxScaleY'));
    },
    set: function (maxScaleY) {
      this.maxScaleY$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('maxScaleY'), maxScaleY);
    }
  });
  Object.defineProperty(ScaleLayoutData.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(ScaleLayoutData.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(ScaleLayoutData.prototype, 'scaling', {
    get: function () {
      return this.scaling$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('scaling'));
    },
    set: function (scaling) {
      this.scaling$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('scaling'), scaling);
    }
  });
  ScaleLayoutData.prototype.center = function () {
    this.verticalAlign = VAlign$MIDDLE_getInstance();
    this.horizontalAlign = HAlign$CENTER_getInstance();
  };
  ScaleLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScaleLayoutData',
    interfaces: [BasicLayoutData]
  };
  function ScaleBoxLayoutContainer(owner) {
    LayoutContainerImpl.call(this, owner, new ScaleLayout());
  }
  ScaleBoxLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScaleBoxLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function scaleBox$lambda($receiver) {
  }
  function scaleBox($receiver, init) {
    if (init === void 0)
      init = scaleBox$lambda;
    var boxContainer = new ScaleBoxLayoutContainer($receiver);
    init(boxContainer);
    return boxContainer;
  }
  function VerticalLayout() {
    this.changed_a9itnq$_0 = new Signal0();
    this.gap$delegate = bindable(this.changed, 5.0);
    this.padding$delegate = bindable(this.changed, Pad_init());
    this.horizontalAlign$delegate = bindable(this.changed, HAlign$LEFT_getInstance());
    this.verticalAlign$delegate = bindable(this.changed, VAlign$TOP_getInstance());
  }
  Object.defineProperty(VerticalLayout.prototype, 'changed', {
    get: function () {
      return this.changed_a9itnq$_0;
    }
  });
  Object.defineProperty(VerticalLayout.prototype, 'gap', {
    get: function () {
      return this.gap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('gap'));
    },
    set: function (gap) {
      this.gap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('gap'), gap);
    }
  });
  Object.defineProperty(VerticalLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(VerticalLayout.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(VerticalLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  VerticalLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
    var tmp$;
    var minWidth = 0.0;
    var minHeight = 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var sC = element.sizeConstraints;
      var iMinWidth = sC.width.min;
      if (iMinWidth != null) {
        var y = minWidth;
        var max_sdesaw$result;
        if (Kotlin.compareTo(iMinWidth, y) >= 0) {
          max_sdesaw$result = iMinWidth;
        }
         else {
          max_sdesaw$result = y;
        }
        minWidth = max_sdesaw$result;
      }
      var iMinHeight = sC.height.min;
      if (iMinHeight != null)
        minHeight += iMinHeight;
    }
    minWidth += this.padding.left + this.padding.right;
    minHeight += this.gap * get_lastIndex(elements) + this.padding.top + this.padding.bottom;
    out.width.min = minWidth;
    out.height.min = minHeight;
  };
  VerticalLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    this.basicLayout_tva9ox$(explicitWidth, explicitHeight, elements, out);
  };
  VerticalLayout.prototype.basicLayout_tva9ox$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    var maxWidth = childAvailableWidth != null ? childAvailableWidth : 0.0;
    var inflexibleHeight = 0.0;
    var flexibleHeight = 0.0;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var layoutData = (tmp$_0 = element.layoutData) == null || Kotlin.isType(tmp$_0, VerticalLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      if (childAvailableHeight == null || (layoutData != null ? layoutData.heightPercent : null) == null) {
        var w = layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null;
        var h = layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null;
        element.setSize_yxjqmk$(w, h);
        inflexibleHeight += element.height;
        if (element.width > maxWidth)
          maxWidth = element.width;
      }
       else {
        flexibleHeight += ((tmp$_1 = layoutData.heightPercent) != null ? tmp$_1 : Kotlin.throwNPE()) * childAvailableHeight;
      }
      inflexibleHeight += this.gap;
    }
    inflexibleHeight -= this.gap;
    if (childAvailableHeight != null) {
      var tmp$_10;
      if (flexibleHeight > 0) {
        var value = (childAvailableHeight - inflexibleHeight) / flexibleHeight;
        var clamp_73gzaq$result;
        clamp_73gzaq$break: {
          if (Kotlin.compareTo(value, 0.0) <= 0) {
            clamp_73gzaq$result = 0.0;
            break clamp_73gzaq$break;
          }
          if (Kotlin.compareTo(value, 1.0) >= 0) {
            clamp_73gzaq$result = 1.0;
            break clamp_73gzaq$break;
          }
          clamp_73gzaq$result = value;
        }
        tmp$_10 = clamp_73gzaq$result;
      }
       else
        tmp$_10 = 1.0;
      var scale = tmp$_10;
      tmp$_2 = get_lastIndex(elements);
      for (var i_0 = 0; i_0 <= tmp$_2; i_0++) {
        var element_0 = elements.get_za3lpa$(i_0);
        var layoutData_0 = (tmp$_3 = element_0.layoutData) == null || Kotlin.isType(tmp$_3, VerticalLayoutData) ? tmp$_3 : Kotlin.throwCCE();
        if ((layoutData_0 != null ? layoutData_0.heightPercent : null) != null) {
          var w_0 = layoutData_0.getPreferredWidth_81sz4$(childAvailableWidth);
          var h_0 = scale * ((tmp$_4 = layoutData_0.heightPercent) != null ? tmp$_4 : Kotlin.throwNPE()) * childAvailableHeight;
          element_0.setSize_yxjqmk$(w_0, h_0);
          if (element_0.width > maxWidth)
            maxWidth = element_0.width;
        }
      }
    }
    var y = this.padding.top;
    if (childAvailableHeight != null && this.verticalAlign !== VAlign$TOP_getInstance()) {
      var d = childAvailableHeight - (inflexibleHeight + flexibleHeight);
      if (d > 0.0) {
        if (this.verticalAlign === VAlign$BOTTOM_getInstance()) {
          y += d;
        }
         else if (this.verticalAlign === VAlign$MIDDLE_getInstance()) {
          var v = d * 0.5;
          y += Math.floor(v);
        }
      }
    }
    tmp$_5 = get_lastIndex(elements);
    for (var i_1 = 0; i_1 <= tmp$_5; i_1++) {
      var element_1 = elements.get_za3lpa$(i_1);
      var layoutData_1 = (tmp$_6 = element_1.layoutData) == null || Kotlin.isType(tmp$_6, VerticalLayoutData) ? tmp$_6 : Kotlin.throwCCE();
      tmp$_8 = (tmp$_7 = layoutData_1 != null ? layoutData_1.horizontalAlign : null) != null ? tmp$_7 : this.horizontalAlign;
      if (Kotlin.equals(tmp$_8, HAlign$LEFT_getInstance()))
        tmp$_9 = this.padding.left;
      else if (Kotlin.equals(tmp$_8, HAlign$CENTER_getInstance()))
        tmp$_9 = (maxWidth - element_1.width) * 0.5 + this.padding.left;
      else if (Kotlin.equals(tmp$_8, HAlign$RIGHT_getInstance()))
        tmp$_9 = maxWidth - element_1.width + this.padding.left;
      else
        tmp$_9 = Kotlin.noWhenBranchMatched();
      var x = tmp$_9;
      element_1.moveTo_y2kzbl$(x, y);
      y += element_1.height + this.gap;
    }
    y += this.padding.bottom - this.gap;
    out.set_dleff0$(maxWidth + this.padding.left + this.padding.right, y);
  };
  VerticalLayout.prototype.createLayoutData = function () {
    return new VerticalLayoutData();
  };
  VerticalLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VerticalLayout',
    interfaces: [BasicLayoutAlgorithm, LayoutAlgorithm]
  };
  function VerticalLayoutData() {
    BasicLayoutData.call(this);
    this.horizontalAlign$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(VerticalLayoutData.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  VerticalLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VerticalLayoutData',
    interfaces: [BasicLayoutData]
  };
  function VerticalLayoutContainer(owner) {
    LayoutContainerImpl.call(this, owner, new VerticalLayout());
  }
  VerticalLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VerticalLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function vGroup$lambda($receiver) {
  }
  function vGroup($receiver, init) {
    if (init === void 0)
      init = vGroup$lambda;
    var verticalGroup = new VerticalLayoutContainer($receiver);
    init(verticalGroup);
    return verticalGroup;
  }
  function VirtualHorizontalLayout() {
    this.changed_lo5xy0$_0 = new Signal0();
    this.direction_lo5xy0$_0 = VirtualDirection$HORIZONTAL_getInstance();
    this.gap$delegate = bindable_0(this, 5.0);
    this.buffer$delegate = bindable_0(this, 0.15);
    this.padding$delegate = bindable_0(this, Pad_init());
    this.verticalAlign$delegate = bindable_0(this, VAlign$BOTTOM_getInstance());
  }
  Object.defineProperty(VirtualHorizontalLayout.prototype, 'changed', {
    get: function () {
      return this.changed_lo5xy0$_0;
    }
  });
  Object.defineProperty(VirtualHorizontalLayout.prototype, 'direction', {
    get: function () {
      return this.direction_lo5xy0$_0;
    }
  });
  Object.defineProperty(VirtualHorizontalLayout.prototype, 'gap', {
    get: function () {
      return this.gap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('gap'));
    },
    set: function (gap) {
      this.gap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('gap'), gap);
    }
  });
  Object.defineProperty(VirtualHorizontalLayout.prototype, 'buffer', {
    get: function () {
      return this.buffer$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('buffer'));
    },
    set: function (buffer) {
      this.buffer$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('buffer'), buffer);
    }
  });
  Object.defineProperty(VirtualHorizontalLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(VirtualHorizontalLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  VirtualHorizontalLayout.prototype.getOffset_ykoopi$ = function (width, height, element, index, lastIndex, isReversed) {
    if (isReversed) {
      return (width - this.padding.right - (element.x + element.width)) / (element.width + this.gap);
    }
     else {
      return (element.x - this.padding.bottom) / (element.width + this.gap);
    }
  };
  VirtualHorizontalLayout.prototype.updateLayoutEntry_g11et$ = function (explicitWidth, explicitHeight, element, currentIndex, startIndex, lastIndex, previousElement, isReversed) {
    var tmp$, tmp$_0, tmp$_1;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    var layoutData = (tmp$ = element.layoutData) == null || Kotlin.isType(tmp$, HorizontalLayoutData) ? tmp$ : Kotlin.throwCCE();
    var w = layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null;
    var h = layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null;
    element.setSize_yxjqmk$(w, h);
    var x;
    if (previousElement == null) {
      var startX = (currentIndex - startIndex) * (element.width + this.gap);
      if (isReversed) {
        x = (childAvailableWidth != null ? childAvailableWidth : 0.0) - this.padding.right + startX - element.width;
      }
       else {
        x = this.padding.left + startX;
      }
    }
     else {
      if (isReversed) {
        x = previousElement.x - this.gap - element.width;
      }
       else {
        x = previousElement.x + previousElement.width + this.gap;
      }
    }
    if (childAvailableHeight == null) {
      element.setPosition_y2kzbl$(x, this.padding.top);
    }
     else {
      tmp$_1 = (tmp$_0 = layoutData != null ? layoutData.verticalAlign : null) != null ? tmp$_0 : this.verticalAlign;
      if (Kotlin.equals(tmp$_1, VAlign$TOP_getInstance()))
        element.setPosition_y2kzbl$(x, this.padding.top);
      else if (Kotlin.equals(tmp$_1, VAlign$MIDDLE_getInstance()))
        element.setPosition_y2kzbl$(x, this.padding.top + (childAvailableHeight - element.height) * 0.5);
      else if (Kotlin.equals(tmp$_1, VAlign$BOTTOM_getInstance()))
        element.setPosition_y2kzbl$(x, this.padding.top + (childAvailableHeight - element.height));
    }
  };
  VirtualHorizontalLayout.prototype.measure_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    VirtualLayoutAlgorithm.prototype.measure_dyymdl$.call(this, explicitWidth, explicitHeight, elements, out);
    out.add_dleff0$(this.padding.right, this.padding.bottom);
  };
  VirtualHorizontalLayout.prototype.shouldShowRenderer_vse3it$ = function (explicitWidth, explicitHeight, element) {
    if (explicitWidth != null) {
      var right = element.x + element.width;
      var bufferX = explicitWidth * this.buffer;
      if (right < -bufferX || element.x > explicitWidth + bufferX) {
        return false;
      }
    }
    return true;
  };
  VirtualHorizontalLayout.prototype.createLayoutData = function () {
    return new HorizontalLayoutData();
  };
  VirtualHorizontalLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VirtualHorizontalLayout',
    interfaces: [VirtualLayoutAlgorithm]
  };
  function hDataScroller$lambda($receiver) {
  }
  function hDataScroller($receiver, rendererFactory, data, init) {
    if (data === void 0)
      data = ActiveList_init(ArrayList_init());
    if (init === void 0)
      init = hDataScroller$lambda;
    var layoutAlgorithm = new VirtualHorizontalLayout();
    var c = new DataScroller($receiver, rendererFactory, layoutAlgorithm, data);
    init(c);
    return c;
  }
  function VirtualizedVerticalLayout() {
    this.changed_foicqe$_0 = new Signal0();
    this.direction_foicqe$_0 = VirtualDirection$VERTICAL_getInstance();
    this.gap$delegate = bindable_0(this, 5.0);
    this.buffer$delegate = bindable_0(this, 0.15);
    this.padding$delegate = bindable_0(this, Pad_init());
    this.horizontalAlign$delegate = bindable_0(this, HAlign$LEFT_getInstance());
  }
  Object.defineProperty(VirtualizedVerticalLayout.prototype, 'changed', {
    get: function () {
      return this.changed_foicqe$_0;
    }
  });
  Object.defineProperty(VirtualizedVerticalLayout.prototype, 'direction', {
    get: function () {
      return this.direction_foicqe$_0;
    }
  });
  Object.defineProperty(VirtualizedVerticalLayout.prototype, 'gap', {
    get: function () {
      return this.gap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('gap'));
    },
    set: function (gap) {
      this.gap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('gap'), gap);
    }
  });
  Object.defineProperty(VirtualizedVerticalLayout.prototype, 'buffer', {
    get: function () {
      return this.buffer$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('buffer'));
    },
    set: function (buffer) {
      this.buffer$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('buffer'), buffer);
    }
  });
  Object.defineProperty(VirtualizedVerticalLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(VirtualizedVerticalLayout.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  VirtualizedVerticalLayout.prototype.getOffset_ykoopi$ = function (width, height, element, index, lastIndex, isReversed) {
    if (isReversed) {
      return (height - this.padding.bottom - (element.y + element.height)) / (element.height + this.gap);
    }
     else {
      return (element.y - this.padding.top) / (element.height + this.gap);
    }
  };
  VirtualizedVerticalLayout.prototype.updateLayoutEntry_g11et$ = function (explicitWidth, explicitHeight, element, currentIndex, startIndex, lastIndex, previousElement, isReversed) {
    var tmp$, tmp$_0, tmp$_1;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    var layoutData = (tmp$ = element.layoutData) == null || Kotlin.isType(tmp$, VerticalLayoutData) ? tmp$ : Kotlin.throwCCE();
    var w = layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null;
    var h = layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null;
    element.setSize_yxjqmk$(w, h);
    var y;
    if (previousElement == null) {
      var startY = (currentIndex - startIndex) * (element.height + this.gap);
      if (isReversed) {
        y = (childAvailableHeight != null ? childAvailableHeight : 0.0) - this.padding.bottom + startY - element.height;
      }
       else {
        y = this.padding.top + startY;
      }
    }
     else {
      if (isReversed) {
        y = previousElement.y - this.gap - element.height;
      }
       else {
        y = previousElement.y + previousElement.height + this.gap;
      }
    }
    if (childAvailableWidth == null) {
      element.setPosition_y2kzbl$(this.padding.left, y);
    }
     else {
      tmp$_1 = (tmp$_0 = layoutData != null ? layoutData.horizontalAlign : null) != null ? tmp$_0 : this.horizontalAlign;
      if (Kotlin.equals(tmp$_1, HAlign$LEFT_getInstance()))
        element.setPosition_y2kzbl$(this.padding.left, y);
      else if (Kotlin.equals(tmp$_1, HAlign$CENTER_getInstance()))
        element.setPosition_y2kzbl$(this.padding.left + floor((childAvailableWidth - element.width) * 0.5), y);
      else if (Kotlin.equals(tmp$_1, HAlign$RIGHT_getInstance()))
        element.setPosition_y2kzbl$(this.padding.left + (childAvailableWidth - element.width), y);
    }
  };
  VirtualizedVerticalLayout.prototype.measure_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    VirtualLayoutAlgorithm.prototype.measure_dyymdl$.call(this, explicitWidth, explicitHeight, elements, out);
    out.add_dleff0$(this.padding.right, this.padding.bottom);
  };
  VirtualizedVerticalLayout.prototype.shouldShowRenderer_vse3it$ = function (explicitWidth, explicitHeight, element) {
    if (explicitHeight != null) {
      var bottom = element.y + element.height;
      var bufferY = explicitHeight * this.buffer;
      if (bottom < -bufferY || element.y > explicitHeight + bufferY) {
        return false;
      }
    }
    return true;
  };
  VirtualizedVerticalLayout.prototype.createLayoutData = function () {
    return new VerticalLayoutData();
  };
  VirtualizedVerticalLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VirtualizedVerticalLayout',
    interfaces: [VirtualLayoutAlgorithm]
  };
  function vDataScroller$lambda($receiver) {
  }
  function vDataScroller($receiver, rendererFactory, data, init) {
    if (data === void 0)
      data = ActiveList_init(ArrayList_init());
    if (init === void 0)
      init = vDataScroller$lambda;
    var layoutAlgorithm = new VirtualizedVerticalLayout();
    var c = new DataScroller($receiver, rendererFactory, layoutAlgorithm, data);
    init(c);
    return c;
  }
  function VirtualLayoutAlgorithm() {
  }
  VirtualLayoutAlgorithm.prototype.measure_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var element = elements.get_za3lpa$(i);
      var r = element.right;
      if (r > out.width)
        out.width = r;
      var b = element.bottom;
      if (b > out.height)
        out.height = b;
    }
  };
  VirtualLayoutAlgorithm.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'VirtualLayoutAlgorithm',
    interfaces: [LayoutDataProvider]
  };
  function ItemRendererOwner() {
  }
  ItemRendererOwner.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ItemRendererOwner',
    interfaces: [LayoutDataProvider, Owned]
  };
  function VirtualDirection(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VirtualDirection_initFields() {
    VirtualDirection_initFields = function () {
    };
    VirtualDirection$VERTICAL_instance = new VirtualDirection('VERTICAL', 0);
    VirtualDirection$HORIZONTAL_instance = new VirtualDirection('HORIZONTAL', 1);
  }
  var VirtualDirection$VERTICAL_instance;
  function VirtualDirection$VERTICAL_getInstance() {
    VirtualDirection_initFields();
    return VirtualDirection$VERTICAL_instance;
  }
  var VirtualDirection$HORIZONTAL_instance;
  function VirtualDirection$HORIZONTAL_getInstance() {
    VirtualDirection_initFields();
    return VirtualDirection$HORIZONTAL_instance;
  }
  VirtualDirection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VirtualDirection',
    interfaces: [Enum]
  };
  function VirtualDirection$values() {
    return [VirtualDirection$VERTICAL_getInstance(), VirtualDirection$HORIZONTAL_getInstance()];
  }
  VirtualDirection.values = VirtualDirection$values;
  function VirtualDirection$valueOf(name) {
    switch (name) {
      case 'VERTICAL':
        return VirtualDirection$VERTICAL_getInstance();
      case 'HORIZONTAL':
        return VirtualDirection$HORIZONTAL_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.layout.algorithm.virtual.VirtualDirection.' + name);
    }
  }
  VirtualDirection.valueOf_61zpoe$ = VirtualDirection$valueOf;
  function bindable$ObjectLiteral_0(this$bindable, initialValue) {
    this.this$bindable = this$bindable;
    ObservableProperty.call(this, initialValue);
  }
  bindable$ObjectLiteral_0.prototype.afterChange_jxtfl0$ = function (property, oldValue, newValue) {
    this.this$bindable.changed.dispatch();
  };
  bindable$ObjectLiteral_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [ObservableProperty]
  };
  function bindable_0($receiver, initialValue) {
    return new bindable$ObjectLiteral_0($receiver, initialValue);
  }
  function HAlign(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function HAlign_initFields() {
    HAlign_initFields = function () {
    };
    HAlign$LEFT_instance = new HAlign('LEFT', 0);
    HAlign$CENTER_instance = new HAlign('CENTER', 1);
    HAlign$RIGHT_instance = new HAlign('RIGHT', 2);
  }
  var HAlign$LEFT_instance;
  function HAlign$LEFT_getInstance() {
    HAlign_initFields();
    return HAlign$LEFT_instance;
  }
  var HAlign$CENTER_instance;
  function HAlign$CENTER_getInstance() {
    HAlign_initFields();
    return HAlign$CENTER_instance;
  }
  var HAlign$RIGHT_instance;
  function HAlign$RIGHT_getInstance() {
    HAlign_initFields();
    return HAlign$RIGHT_instance;
  }
  HAlign.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HAlign',
    interfaces: [Enum]
  };
  function HAlign$values() {
    return [HAlign$LEFT_getInstance(), HAlign$CENTER_getInstance(), HAlign$RIGHT_getInstance()];
  }
  HAlign.values = HAlign$values;
  function HAlign$valueOf(name) {
    switch (name) {
      case 'LEFT':
        return HAlign$LEFT_getInstance();
      case 'CENTER':
        return HAlign$CENTER_getInstance();
      case 'RIGHT':
        return HAlign$RIGHT_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.layout.HAlign.' + name);
    }
  }
  HAlign.valueOf_61zpoe$ = HAlign$valueOf;
  function VAlign(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VAlign_initFields() {
    VAlign_initFields = function () {
    };
    VAlign$TOP_instance = new VAlign('TOP', 0);
    VAlign$MIDDLE_instance = new VAlign('MIDDLE', 1);
    VAlign$BOTTOM_instance = new VAlign('BOTTOM', 2);
  }
  var VAlign$TOP_instance;
  function VAlign$TOP_getInstance() {
    VAlign_initFields();
    return VAlign$TOP_instance;
  }
  var VAlign$MIDDLE_instance;
  function VAlign$MIDDLE_getInstance() {
    VAlign_initFields();
    return VAlign$MIDDLE_instance;
  }
  var VAlign$BOTTOM_instance;
  function VAlign$BOTTOM_getInstance() {
    VAlign_initFields();
    return VAlign$BOTTOM_instance;
  }
  VAlign.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VAlign',
    interfaces: [Enum]
  };
  function VAlign$values() {
    return [VAlign$TOP_getInstance(), VAlign$MIDDLE_getInstance(), VAlign$BOTTOM_getInstance()];
  }
  VAlign.values = VAlign$values;
  function VAlign$valueOf(name) {
    switch (name) {
      case 'TOP':
        return VAlign$TOP_getInstance();
      case 'MIDDLE':
        return VAlign$MIDDLE_getInstance();
      case 'BOTTOM':
        return VAlign$BOTTOM_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.layout.VAlign.' + name);
    }
  }
  VAlign.valueOf_61zpoe$ = VAlign$valueOf;
  function VirtualLayoutContainer() {
  }
  VirtualLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'VirtualLayoutContainer',
    interfaces: [Focusable, Container]
  };
  function DataScroller(owner, rendererFactory, layoutAlgorithm, data) {
    DataScroller$Companion_getInstance();
    if (data === void 0)
      data = ActiveList_init_0();
    ContainerImpl.call(this, owner);
    this.layoutAlgorithm_cumoin$_0 = layoutAlgorithm;
    this.data = data;
    this.focusEnabled_cumoin$_0 = false;
    this.focusOrder_cumoin$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.style = style(this, new DataScrollerStyle());
    this.bottomContents = this.addChild_mxweac$(virtualList(this, rendererFactory, this.layoutAlgorithm, this.data, DataScroller$bottomContents$lambda));
    this.contents = virtualList(this, rendererFactory, this.layoutAlgorithm, this.data);
    this.selection = new DataScrollerSelection(this.data, this.contents, this.bottomContents);
    this.isVertical_0 = this.layoutAlgorithm.direction === VirtualDirection$VERTICAL_getInstance();
    this.scrollBar_0 = this.addChild_mxweac$(this.isVertical_0 ? vScrollBar(this) : hScrollBar(this));
    this._scrollArea_0 = this.addChild_mxweac$(scrollArea(this, DataScroller$_scrollArea$lambda(this)));
    this.scrollPolicy$delegate = validationProp(this, ScrollPolicy$AUTO_getInstance(), ValidationFlags_getInstance().LAYOUT);
    this.tossScroller_0 = enableTossScrolling(this.contents);
    this.tossBinding_0 = own(this, new TossScrollModelBinding(this.tossScroller_0, this.isVertical_0 ? new ScrollModelImpl() : this.scrollBar_0.scrollModel, !this.isVertical_0 ? new ScrollModelImpl() : this.scrollBar_0.scrollModel));
    this.background_0 = null;
    addTag(this, DataScroller$Companion_getInstance());
    this.maxItems = 15;
    this.scrollModel.changed.add_trkh7z$(DataScroller_init$lambda(this));
    onChanged(this.style, DataScroller_init$lambda_0(this));
  }
  Object.defineProperty(DataScroller.prototype, 'layoutAlgorithm', {
    get: function () {
      return this.layoutAlgorithm_cumoin$_0;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_cumoin$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_cumoin$_0 = focusEnabled;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_cumoin$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_cumoin$_0 = focusOrder;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(DataScroller.prototype, 'scrollModel', {
    get: function () {
      return this.scrollBar_0.scrollModel;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'scrollPolicy', {
    get: function () {
      return this.scrollPolicy$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('scrollPolicy'));
    },
    set: function (scrollPolicy) {
      this.scrollPolicy$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('scrollPolicy'), scrollPolicy);
    }
  });
  Object.defineProperty(DataScroller.prototype, 'maxItems', {
    get: function () {
      return this.bottomContents.maxItems;
    },
    set: function (value) {
      this.contents.maxItems = value + 1 | 0;
      this.bottomContents.maxItems = value;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'onRendererObtained', {
    get: function () {
      return this.contents.onRendererObtained;
    },
    set: function (value) {
      this.contents.onRendererObtained = value;
      this.bottomContents.onRendererObtained = value;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'onRendererFreed', {
    get: function () {
      return this.contents.onRendererFreed;
    },
    set: function (value) {
      this.contents.onRendererFreed = value;
      this.bottomContents.onRendererFreed = value;
    }
  });
  Object.defineProperty(DataScroller.prototype, 'activeRenderers', {
    get: function () {
      return this.contents.activeRenderers;
    }
  });
  DataScroller.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$_0, tmp$;
    var tmp$_2, tmp$_1;
    var tmp$_3, tmp$_4;
    if (this.isVertical_0) {
      if (this.scrollPolicy !== ScrollPolicy$OFF_getInstance()) {
        math_0.MathUtils;
        tmp$_0 = explicitWidth != null ? explicitWidth : 0.0;
        var y = (tmp$ = this.scrollBar_0.minWidth) != null ? tmp$ : 0.0;
        var min_sdesaw$result;
        if (Kotlin.compareTo(tmp$_0, y) <= 0) {
          min_sdesaw$result = tmp$_0;
        }
         else {
          min_sdesaw$result = y;
        }
        var vScrollBarW = min_sdesaw$result;
        var scrollAreaW = explicitWidth == null ? null : explicitWidth - vScrollBarW;
        if (explicitHeight == null) {
          var tmp$_5 = this.bottomContents;
          var y_0 = this.data.size - this.maxItems | 0;
          var max_sdesaw$result;
          if (Kotlin.compareTo(0.0, y_0) >= 0) {
            max_sdesaw$result = 0.0;
          }
           else {
            max_sdesaw$result = y_0;
          }
          tmp$_5.indexPosition = max_sdesaw$result;
        }
         else {
          this.bottomContents.bottomIndexPosition = get_lastIndex(this.data);
        }
        this.bottomContents.setSize_yxjqmk$(scrollAreaW, explicitHeight);
        if (this.scrollPolicy === ScrollPolicy$ON_getInstance() || this.bottomContents.visiblePosition > 0.0) {
          this._scrollArea_0.setSize_yxjqmk$(this.bottomContents.width, explicitHeight != null ? explicitHeight : this.bottomContents.height);
          this.scrollBar_0.visible = true;
          this.scrollBar_0.setSize_yxjqmk$(vScrollBarW, this.bottomContents.height);
          this.scrollBar_0.setPosition_y2kzbl$(this.bottomContents.width, 0.0);
        }
         else {
          this.scrollBar_0.visible = false;
        }
      }
       else {
        this.scrollBar_0.visible = false;
      }
      if (!this.scrollBar_0.visible) {
        this._scrollArea_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
        this.bottomContents.setSize_yxjqmk$(explicitWidth, explicitHeight);
      }
      out.set_dleff0$(this.bottomContents.width + (this.scrollBar_0.visible ? this.scrollBar_0.width : 0.0), this.bottomContents.height);
      this.scrollBar_0.modelToPixels = out.height / (this.bottomContents.visibleBottomPosition - this.bottomContents.visiblePosition);
    }
     else {
      if (this.scrollPolicy !== ScrollPolicy$OFF_getInstance()) {
        math_0.MathUtils;
        tmp$_2 = explicitHeight != null ? explicitHeight : 0.0;
        var y_1 = (tmp$_1 = this.scrollBar_0.minHeight) != null ? tmp$_1 : 0.0;
        var min_sdesaw$result_0;
        if (Kotlin.compareTo(tmp$_2, y_1) <= 0) {
          min_sdesaw$result_0 = tmp$_2;
        }
         else {
          min_sdesaw$result_0 = y_1;
        }
        var hScrollBarH = min_sdesaw$result_0;
        var scrollAreaH = explicitHeight == null ? null : explicitHeight - hScrollBarH;
        if (explicitWidth == null) {
          var tmp$_6 = this.bottomContents;
          var y_2 = this.data.size - this.maxItems | 0;
          var max_sdesaw$result_0;
          if (Kotlin.compareTo(0.0, y_2) >= 0) {
            max_sdesaw$result_0 = 0.0;
          }
           else {
            max_sdesaw$result_0 = y_2;
          }
          tmp$_6.indexPosition = max_sdesaw$result_0;
        }
         else {
          this.bottomContents.bottomIndexPosition = get_lastIndex(this.data);
        }
        this.bottomContents.setSize_yxjqmk$(explicitWidth, scrollAreaH);
        if (this.scrollPolicy === ScrollPolicy$ON_getInstance() || this.bottomContents.visiblePosition > 0.0) {
          this._scrollArea_0.setSize_yxjqmk$(explicitWidth != null ? explicitWidth : this.bottomContents.width, this.bottomContents.height);
          this.scrollBar_0.visible = true;
          this.scrollBar_0.setSize_yxjqmk$(this.bottomContents.width, hScrollBarH);
          this.scrollBar_0.setPosition_y2kzbl$(0.0, this.bottomContents.height);
        }
         else {
          this.scrollBar_0.visible = false;
        }
      }
       else {
        this.scrollBar_0.visible = false;
      }
      if (!this.scrollBar_0.visible) {
        this._scrollArea_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
        this.bottomContents.setSize_yxjqmk$(explicitWidth, explicitHeight);
      }
      out.set_dleff0$(this.bottomContents.width, this.bottomContents.height + (this.scrollBar_0.visible ? this.scrollBar_0.height : 0.0));
      this.scrollBar_0.modelToPixels = out.width / (this.bottomContents.visibleBottomPosition - this.bottomContents.visiblePosition);
    }
    this.tossBinding_0.modelToPixelsX = this.scrollBar_0.modelToPixels;
    this.tossBinding_0.modelToPixelsY = this.scrollBar_0.modelToPixels;
    this.scrollBar_0.scrollModel.max = this.bottomContents.visiblePosition;
    (tmp$_3 = this.background_0) != null ? tmp$_3.setSize_i12l7q$(out) : null;
    (tmp$_4 = this.highlight) != null ? tmp$_4.setSize_i12l7q$(out) : null;
  };
  DataScroller.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    this.selection.dispose();
  };
  function DataScroller$Companion() {
    DataScroller$Companion_instance = this;
  }
  DataScroller$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var DataScroller$Companion_instance = null;
  function DataScroller$Companion_getInstance() {
    if (DataScroller$Companion_instance === null) {
      new DataScroller$Companion();
    }
    return DataScroller$Companion_instance;
  }
  function DataScroller$bottomContents$lambda($receiver) {
    $receiver.alpha = 0.0;
    $receiver.includeInLayout = false;
    $receiver.interactivityMode = InteractivityMode$NONE_getInstance();
  }
  function DataScroller$_scrollArea$lambda$lambda($receiver) {
    $receiver.widthPercent = 1.0;
    $receiver.heightPercent = 1.0;
  }
  function DataScroller$_scrollArea$lambda(this$DataScroller) {
    return function ($receiver) {
      $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(this$DataScroller.contents), DataScroller$_scrollArea$lambda$lambda);
      $receiver.hScrollPolicy = ScrollPolicy$OFF_getInstance();
      $receiver.vScrollPolicy = ScrollPolicy$OFF_getInstance();
    };
  }
  function DataScroller_init$lambda(this$DataScroller) {
    return function (it) {
      this$DataScroller.contents.indexPosition = this$DataScroller.scrollModel.value;
    };
  }
  function DataScroller_init$lambda_0(this$DataScroller) {
    return function (it) {
      this$DataScroller.dispose_erfg6z$(this$DataScroller.background_0);
      this$DataScroller.background_0 = this$DataScroller.addOptionalChild_3i6itm$(0, it.background(this$DataScroller));
    };
  }
  DataScroller.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DataScroller',
    interfaces: [VirtualLayoutContainer, ContainerImpl]
  };
  function DataScrollerStyle() {
    DataScrollerStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_tmpptu$_0 = DataScrollerStyle$Companion_getInstance();
    this.background$delegate = this.prop_umlfku$('background', noSkinOptional);
  }
  Object.defineProperty(DataScrollerStyle.prototype, 'type', {
    get: function () {
      return this.type_tmpptu$_0;
    }
  });
  Object.defineProperty(DataScrollerStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  function DataScrollerStyle$Companion() {
    DataScrollerStyle$Companion_instance = this;
  }
  DataScrollerStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var DataScrollerStyle$Companion_instance = null;
  function DataScrollerStyle$Companion_getInstance() {
    if (DataScrollerStyle$Companion_instance === null) {
      new DataScrollerStyle$Companion();
    }
    return DataScrollerStyle$Companion_instance;
  }
  DataScrollerStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DataScrollerStyle',
    interfaces: [StyleBase]
  };
  function DataScrollerSelection(data, listA, listB) {
    Selection.call(this);
    this.data_0 = data;
    this.listA_0 = listA;
    this.listB_0 = listB;
  }
  DataScrollerSelection.prototype.walkSelectableItems_qlkmfe$ = function (callback) {
    var tmp$;
    tmp$ = get_lastIndex(this.data_0);
    for (var i = 0; i <= tmp$; i++) {
      callback(this.data_0.get_za3lpa$(i));
    }
  };
  DataScrollerSelection.prototype.onItemSelectionChanged_iuyhfk$ = function (item, selected) {
    this.listA_0.selection.setItemIsSelected_iuyhfk$(item, selected);
    this.listB_0.selection.setItemIsSelected_iuyhfk$(item, selected);
  };
  DataScrollerSelection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DataScrollerSelection',
    interfaces: [Selection]
  };
  function LayoutContainer() {
  }
  LayoutContainer.prototype.createLayoutData = function () {
    return this.layoutAlgorithm.createLayoutData();
  };
  LayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'LayoutContainer',
    interfaces: [ElementContainer, LayoutDataProvider]
  };
  function LayoutContainerImpl(owner, layoutAlgorithm, native) {
    if (native === void 0)
      native = inject(owner, NativeContainer$Companion_getInstance().FACTORY_KEY)(owner);
    ElementContainerImpl.call(this, owner, native);
    this.layoutAlgorithm_mp5zh4$_0 = layoutAlgorithm;
    this.focusEnabled_mp5zh4$_0 = false;
    this.focusOrder_mp5zh4$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.elementsToLayout = ArrayList_init();
    this.layoutAlgorithmChangedHandler_mp5zh4$_0 = LayoutContainerImpl$layoutAlgorithmChangedHandler$lambda(this);
    this.layoutAlgorithm.changed.add_trkh7z$(this.layoutAlgorithmChangedHandler_mp5zh4$_0);
  }
  Object.defineProperty(LayoutContainerImpl.prototype, 'layoutAlgorithm', {
    get: function () {
      return this.layoutAlgorithm_mp5zh4$_0;
    }
  });
  Object.defineProperty(LayoutContainerImpl.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_mp5zh4$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_mp5zh4$_0 = focusEnabled;
    }
  });
  Object.defineProperty(LayoutContainerImpl.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_mp5zh4$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_mp5zh4$_0 = focusOrder;
    }
  });
  Object.defineProperty(LayoutContainerImpl.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  LayoutContainerImpl.prototype.updateSizeConstraints_mby7og$ = function (out) {
    this.elementsToLayout.clear();
    var $receiver = this.elements;
    var destination = this.elementsToLayout;
    var predicate = Kotlin.getPropertyCallableRef('shouldLayout', 1, function ($receiver_0) {
      return $receiver_0.shouldLayout;
    });
    var tmp$;
    tmp$ = Kotlin.kotlin.collections.get_lastIndex_55thoc$($receiver);
    for (var i = 0; i <= tmp$; i++) {
      var element = $receiver.get_za3lpa$(i);
      if (predicate(element))
        destination.add_11rb$(element);
    }
    if (!this.elementsToLayout.isEmpty())
      this.layoutAlgorithm.calculateSizeConstraints_raz34u$(this.elementsToLayout, out);
  };
  LayoutContainerImpl.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    this.elementsToLayout.clear();
    var $receiver = this.elements;
    var destination = this.elementsToLayout;
    var predicate = Kotlin.getPropertyCallableRef('shouldLayout', 1, function ($receiver_0) {
      return $receiver_0.shouldLayout;
    });
    var tmp$_0;
    tmp$_0 = Kotlin.kotlin.collections.get_lastIndex_55thoc$($receiver);
    for (var i = 0; i <= tmp$_0; i++) {
      var element = $receiver.get_za3lpa$(i);
      if (predicate(element))
        destination.add_11rb$(element);
    }
    if (!this.elementsToLayout.isEmpty()) {
      this.layoutAlgorithm.layout_dyymdl$(explicitWidth, explicitHeight, this.elementsToLayout, out);
      if (explicitWidth != null && explicitWidth > out.width)
        out.width = explicitWidth;
      if (explicitHeight != null && explicitHeight > out.height)
        out.height = explicitHeight;
    }
    (tmp$ = this.highlight) != null ? tmp$.setSize_yxjqmk$(out.width, out.height) : null;
  };
  LayoutContainerImpl.prototype.dispose = function () {
    ElementContainerImpl.prototype.dispose.call(this);
    this.layoutAlgorithm.changed.remove_trkh7z$(this.layoutAlgorithmChangedHandler_mp5zh4$_0);
  };
  function LayoutContainerImpl$layoutAlgorithmChangedHandler$lambda(this$LayoutContainerImpl) {
    return function () {
      this$LayoutContainerImpl.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      kotlin_0.Unit;
    };
  }
  LayoutContainerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LayoutContainerImpl',
    interfaces: [Focusable, LayoutContainer, ElementContainerImpl]
  };
  function layoutContainer$lambda($receiver) {
  }
  function layoutContainer($receiver, initialLayout, init) {
    if (init === void 0)
      init = layoutContainer$lambda;
    var l = new LayoutContainerImpl($receiver, initialLayout);
    init(l);
    return l;
  }
  function LayoutData() {
    this.changed = new Signal0();
  }
  function LayoutData$bindable$lambda(this$LayoutData) {
    return function (meta, old, new_0) {
      if (!Kotlin.equals(old, new_0))
        this$LayoutData.changed.dispatch();
    };
  }
  LayoutData.prototype.bindable_mh5how$ = function (initial) {
    return new Kotlin.kotlin.properties.Delegates.observable$f(LayoutData$bindable$lambda(this), initial);
  };
  LayoutData.prototype.dispose = function () {
    this.changed.dispose();
  };
  LayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LayoutData',
    interfaces: [Disposable]
  };
  function LayoutElement() {
  }
  LayoutElement.prototype.intersectsGlobalRay_ujzndq$ = function (globalRay) {
    var v = Vector3.Companion.obtain();
    var ret = this.intersectsGlobalRay_94uff6$(globalRay, v);
    v.free();
    return ret;
  };
  LayoutElement.prototype.intersectsGlobalRay_94uff6$ = function (globalRay, intersection) {
    var bounds = this.bounds;
    var topLeft = Vector3.Companion.obtain();
    var topRight = Vector3.Companion.obtain();
    var bottomRight = Vector3.Companion.obtain();
    var bottomLeft = Vector3.Companion.obtain();
    topLeft.clear();
    topRight.set_y2kzbl$(bounds.width, 0.0, 0.0);
    bottomRight.set_y2kzbl$(bounds.width, bounds.height, 0.0);
    bottomLeft.set_y2kzbl$(0.0, bounds.height, 0.0);
    this.localToGlobal_9wm29k$(topLeft);
    this.localToGlobal_9wm29k$(topRight);
    this.localToGlobal_9wm29k$(bottomRight);
    this.localToGlobal_9wm29k$(bottomLeft);
    var intersects = globalRay.intersects_fvcu7h$(topLeft, topRight, bottomRight, intersection) || globalRay.intersects_fvcu7h$(topLeft, bottomLeft, bottomRight, intersection);
    topLeft.free();
    topRight.free();
    bottomRight.free();
    bottomLeft.free();
    return intersects;
  };
  LayoutElement.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'LayoutElement',
    interfaces: [Transformable, BasicLayoutElement]
  };
  function BasicLayoutElement() {
  }
  Object.defineProperty(BasicLayoutElement.prototype, 'right', {
    get: function () {
      return this.x + this.width;
    }
  });
  Object.defineProperty(BasicLayoutElement.prototype, 'bottom', {
    get: function () {
      return this.y + this.height;
    }
  });
  BasicLayoutElement.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'BasicLayoutElement',
    interfaces: [Positionable, Sizable]
  };
  function clampWidth($receiver, value) {
    return $receiver.sizeConstraints.width.clamp_mef7kx$(value);
  }
  function clampHeight($receiver, value) {
    return $receiver.sizeConstraints.height.clamp_mef7kx$(value);
  }
  function Sizable() {
  }
  Object.defineProperty(Sizable.prototype, 'width', {
    get: function () {
      return this.bounds.width;
    }
  });
  Object.defineProperty(Sizable.prototype, 'height', {
    get: function () {
      return this.bounds.height;
    }
  });
  Sizable.prototype.setSize_yxjqmk$ = function (width, height, callback$default) {
    if (width === void 0)
      width = null;
    if (height === void 0)
      height = null;
    callback$default ? callback$default(width, height) : this.setSize_yxjqmk$$default(width, height);
  };
  Sizable.prototype.setSize_i12l7q$ = function (bounds) {
    this.setSize_yxjqmk$(bounds.width, bounds.height);
  };
  Sizable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Sizable',
    interfaces: []
  };
  function BasicLayoutElementImpl() {
    this.layoutData_2u2lxd$_0 = null;
    this._bounds = new Bounds();
    this._explicitWidth_2u2lxd$_0 = null;
    this._explicitHeight_2u2lxd$_0 = null;
    this.position_2u2lxd$_0 = new Vector3();
    this.layoutIsValid = false;
  }
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'layoutData', {
    get: function () {
      return this.layoutData_2u2lxd$_0;
    },
    set: function (layoutData) {
      this.layoutData_2u2lxd$_0 = layoutData;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'bounds', {
    get: function () {
      return this._bounds;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'explicitWidth', {
    get: function () {
      return this._explicitWidth_2u2lxd$_0;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'explicitHeight', {
    get: function () {
      return this._explicitHeight_2u2lxd$_0;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'x', {
    get: function () {
      return this.position.x;
    },
    set: function (value) {
      this.position.x = value;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'y', {
    get: function () {
      return this.position.y;
    },
    set: function (value) {
      this.position.y = value;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'z', {
    get: function () {
      return this.position.z;
    },
    set: function (value) {
      this.position.z = value;
    }
  });
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'position', {
    get: function () {
      return this.position_2u2lxd$_0;
    }
  });
  BasicLayoutElementImpl.prototype.setSize_yxjqmk$$default = function (width, height) {
    if (this.layoutIsValid && this._explicitWidth_2u2lxd$_0 === width && this._explicitHeight_2u2lxd$_0 === height)
      return;
    this.layoutIsValid = true;
    this._explicitWidth_2u2lxd$_0 = width;
    this._explicitHeight_2u2lxd$_0 = height;
    this.updateLayout_64u75x$(width, height, this._bounds);
  };
  BasicLayoutElementImpl.prototype.setPosition_y2kzbl$$default = function (x, y, z) {
    this.position.set_y2kzbl$(x, y, z);
  };
  BasicLayoutElementImpl.prototype.width_81sz4$ = function (value) {
    this.setSize_yxjqmk$(value, this._explicitHeight_2u2lxd$_0);
  };
  BasicLayoutElementImpl.prototype.height_81sz4$ = function (value) {
    this.setSize_yxjqmk$(this._explicitWidth_2u2lxd$_0, value);
  };
  BasicLayoutElementImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BasicLayoutElementImpl',
    interfaces: [BasicLayoutElement]
  };
  function SizeConstraints(width, height) {
    if (width === void 0)
      width = new Range2();
    if (height === void 0)
      height = new Range2();
    this.width = width;
    this.height = height;
  }
  SizeConstraints.prototype.bound_mby7og$ = function (sizeConstraints) {
    this.width.bound_66lwr4$(sizeConstraints.width);
    this.height.bound_66lwr4$(sizeConstraints.height);
  };
  SizeConstraints.prototype.set_mby7og$ = function (other) {
    this.width.set_66lwr4$(other.width);
    this.height.set_66lwr4$(other.height);
    return this;
  };
  SizeConstraints.prototype.clear = function () {
    this.width.clear();
    this.height.clear();
  };
  SizeConstraints.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'SizeConstraints',
    interfaces: [Clearable]
  };
  SizeConstraints.prototype.component1 = function () {
    return this.width;
  };
  SizeConstraints.prototype.component2 = function () {
    return this.height;
  };
  SizeConstraints.prototype.copy_kuo6oc$ = function (width, height) {
    return new SizeConstraints(width === void 0 ? this.width : width, height === void 0 ? this.height : height);
  };
  SizeConstraints.prototype.toString = function () {
    return 'SizeConstraints(width=' + Kotlin.toString(this.width) + (', height=' + Kotlin.toString(this.height)) + ')';
  };
  SizeConstraints.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.width) | 0;
    result = result * 31 + Kotlin.hashCode(this.height) | 0;
    return result;
  };
  SizeConstraints.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.width, other.width) && Kotlin.equals(this.height, other.height)))));
  };
  function Spacer(owner, spacerWidth, spacerHeight) {
    if (spacerWidth === void 0)
      spacerWidth = 0.0;
    if (spacerHeight === void 0)
      spacerHeight = 0.0;
    UiComponentImpl.call(this, owner);
    this.spacerWidth_dj4whz$_0 = spacerWidth;
    this.spacerHeight_dj4whz$_0 = spacerHeight;
    this.interactivityMode = InteractivityMode$NONE_getInstance();
  }
  Spacer.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    if (explicitWidth == null)
      out.width = this.spacerWidth_dj4whz$_0;
    if (explicitHeight == null)
      out.height = this.spacerHeight_dj4whz$_0;
  };
  Spacer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Spacer',
    interfaces: [UiComponentImpl]
  };
  function spacer$lambda($receiver) {
  }
  function spacer($receiver, width, height, init) {
    if (width === void 0)
      width = 0.0;
    if (height === void 0)
      height = 0.0;
    if (init === void 0)
      init = spacer$lambda;
    var s = new Spacer($receiver, width, height);
    init(s);
    return s;
  }
  function Transformable() {
  }
  Transformable.prototype.setRotation_y2kzbl$ = function (x, y, z, callback$default) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (z === void 0)
      z = 0.0;
    callback$default ? callback$default(x, y, z) : this.setRotation_y2kzbl$$default(x, y, z);
  };
  Transformable.prototype.setScaling_y2kzbl$ = function (x, y, z, callback$default) {
    if (x === void 0)
      x = 1.0;
    if (y === void 0)
      y = 1.0;
    if (z === void 0)
      z = 1.0;
    callback$default ? callback$default(x, y, z) : this.setScaling_y2kzbl$$default(x, y, z);
  };
  Transformable.prototype.setOrigin_y2kzbl$ = function (x, y, z, callback$default) {
    if (z === void 0)
      z = 0.0;
    callback$default ? callback$default(x, y, z) : this.setOrigin_y2kzbl$$default(x, y, z);
  };
  Transformable.prototype.localToGlobal_9wm29k$ = function (localCoord) {
    this.concatenatedTransform.prj_9wm29k$(localCoord);
    return localCoord;
  };
  Transformable.prototype.globalToLocal_9wm29k$ = function (globalCoord) {
    this.concatenatedTransformInv.prj_9wm29k$(globalCoord);
    return globalCoord;
  };
  Transformable.prototype.localToGlobal_ujzndq$ = function (ray) {
    ray.mul_1ktw39$(this.concatenatedTransform);
    return ray;
  };
  Transformable.prototype.globalToLocal_ujzndq$ = function (ray) {
    ray.mul_1ktw39$(this.concatenatedTransformInv);
    return ray;
  };
  Transformable.prototype.rayToPlane_94uff5$ = function (ray, out) {
    if (ray.direction.z === 0.0)
      return false;
    var m = -ray.origin.z * ray.directionInv.z;
    out.x = ray.origin.x + m * ray.direction.x;
    out.y = ray.origin.y + m * ray.direction.y;
    return true;
  };
  Transformable.prototype.convertCoord_jsa5cl$ = function (coord, targetCoordSpace) {
    return targetCoordSpace.globalToLocal_9wm29k$(this.localToGlobal_9wm29k$(coord));
  };
  Transformable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Transformable',
    interfaces: [Positionable]
  };
  function Positionable() {
  }
  Positionable.prototype.moveTo_1fv2cb$ = function (value) {
    this.moveTo_y2kzbl$(value.x, value.y, value.z);
  };
  Positionable.prototype.moveTo_y2kzbl$$default = function (x, y, z) {
    this.setPosition_y2kzbl$(x | 0, y | 0, z);
  };
  Positionable.prototype.moveTo_y2kzbl$ = function (x, y, z, callback$default) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (z === void 0)
      z = 0.0;
    callback$default ? callback$default(x, y, z) : this.moveTo_y2kzbl$$default(x, y, z);
  };
  Positionable.prototype.setPosition_y2kzbl$ = function (x, y, z, callback$default) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (z === void 0)
      z = 0.0;
    callback$default ? callback$default(x, y, z) : this.setPosition_y2kzbl$$default(x, y, z);
  };
  Positionable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Positionable',
    interfaces: []
  };
  function VirtualList(owner, rendererFactory, layoutAlgorithm, data) {
    VirtualList$Companion_getInstance();
    ContainerImpl.call(this, owner);
    this.layoutAlgorithm = layoutAlgorithm;
    this.data = data;
    this.focusOrder_rynrba$_0 = 0.0;
    this._visiblePosition_0 = null;
    this._visibleBottomPosition_0 = null;
    this.maxItems$delegate = validationProp(this, 15, ValidationFlags_getInstance().LAYOUT);
    this.buffer$delegate = validationProp(this, 0.15, ValidationFlags_getInstance().LAYOUT);
    this._indexPosition_0 = null;
    this._bottomIndexPosition_0 = null;
    this.pool_0 = new VirtualListPool(VirtualList$pool$lambda(rendererFactory, this));
    this.cache_0 = new SmartCache(this.pool_0);
    this._activeRenderers_0 = ArrayList_init();
    this.selection = new VirtualListSelection(this.data, this._activeRenderers_0);
    this.layoutAlgorithmChangedHandler_0 = VirtualList$layoutAlgorithmChangedHandler$lambda(this);
    this.dataAddedHandler_0 = VirtualList$dataAddedHandler$lambda(this);
    this.dataRemovedHandler_0 = VirtualList$dataRemovedHandler$lambda(this);
    this.dataChangedHandler_0 = VirtualList$dataChangedHandler$lambda(this);
    this.dataResetHandler_0 = VirtualList$dataResetHandler$lambda(this);
    this.layoutAlgorithm.changed.add_trkh7z$(this.layoutAlgorithmChangedHandler_0);
    this.data.added.add_trkh7z$(this.dataAddedHandler_0);
    this.data.removed.add_trkh7z$(this.dataRemovedHandler_0);
    this.data.changed.add_trkh7z$(this.dataChangedHandler_0);
    this.data.reset.add_trkh7z$(this.dataResetHandler_0);
    this.laidOutRenderers_0 = ArrayList_init();
  }
  VirtualList.prototype.createLayoutData = function () {
    return this.layoutAlgorithm.createLayoutData();
  };
  Object.defineProperty(VirtualList.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_rynrba$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_rynrba$_0 = focusOrder;
    }
  });
  Object.defineProperty(VirtualList.prototype, 'visiblePosition', {
    get: function () {
      var tmp$, tmp$_0;
      if (this._visiblePosition_0 == null) {
        this.validate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
        var lastIndex = get_lastIndex(this.data);
        this._visiblePosition_0 = 0.0;
        tmp$ = get_lastIndex(this._activeRenderers_0);
        for (var i = 0; i <= tmp$; i++) {
          var renderer = this._activeRenderers_0.get_za3lpa$(i);
          var itemOffset = this.layoutAlgorithm.getOffset_ykoopi$(this.width, this.height, renderer, renderer.index, lastIndex, false);
          this._visiblePosition_0 = renderer.index - itemOffset;
          if (itemOffset > -1) {
            break;
          }
        }
      }
      return (tmp$_0 = this._visiblePosition_0) != null ? tmp$_0 : Kotlin.throwNPE();
    }
  });
  Object.defineProperty(VirtualList.prototype, 'visibleBottomPosition', {
    get: function () {
      var tmp$, tmp$_0;
      if (this._visibleBottomPosition_0 == null) {
        this.validate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
        this._visibleBottomPosition_0 = get_lastIndex(this.data);
        var lastIndex = get_lastIndex(this.data);
        tmp$ = downTo(get_lastIndex(this._activeRenderers_0), 0).iterator();
        while (tmp$.hasNext()) {
          var i = tmp$.next();
          var renderer = this._activeRenderers_0.get_za3lpa$(i);
          var itemOffset = this.layoutAlgorithm.getOffset_ykoopi$(this.width, this.height, renderer, renderer.index, lastIndex, true);
          this._visibleBottomPosition_0 = renderer.index + itemOffset;
          if (itemOffset > -1) {
            break;
          }
        }
      }
      return (tmp$_0 = this._visibleBottomPosition_0) != null ? tmp$_0 : Kotlin.throwNPE();
    }
  });
  Object.defineProperty(VirtualList.prototype, 'maxItems', {
    get: function () {
      return this.maxItems$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('maxItems'));
    },
    set: function (maxItems) {
      this.maxItems$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('maxItems'), maxItems);
    }
  });
  Object.defineProperty(VirtualList.prototype, 'buffer', {
    get: function () {
      return this.buffer$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('buffer'));
    },
    set: function (buffer) {
      this.buffer$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('buffer'), buffer);
    }
  });
  Object.defineProperty(VirtualList.prototype, 'indexPosition', {
    get: function () {
      return this._indexPosition_0;
    },
    set: function (value) {
      if (this._indexPosition_0 === value)
        return;
      this._indexPosition_0 = value;
      this._bottomIndexPosition_0 = null;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  Object.defineProperty(VirtualList.prototype, 'bottomIndexPosition', {
    get: function () {
      return this._bottomIndexPosition_0;
    },
    set: function (value) {
      if (this._bottomIndexPosition_0 === value)
        return;
      this._bottomIndexPosition_0 = value;
      this._indexPosition_0 = null;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  Object.defineProperty(VirtualList.prototype, 'onRendererObtained', {
    get: function () {
      return this.pool_0.onObtained;
    },
    set: function (value) {
      this.pool_0.onObtained = value;
    }
  });
  Object.defineProperty(VirtualList.prototype, 'onRendererFreed', {
    get: function () {
      return this.pool_0.onFreed;
    },
    set: function (value) {
      this.pool_0.onFreed = value;
    }
  });
  Object.defineProperty(VirtualList.prototype, 'activeRenderers', {
    get: function () {
      return this._activeRenderers_0;
    }
  });
  function VirtualList$updateLayout$lambda(this$VirtualList) {
    return function (it) {
      this$VirtualList.removeChild_erfg6z$(it);
    };
  }
  VirtualList.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1;
    this._visiblePosition_0 = null;
    this._visibleBottomPosition_0 = null;
    this.cache_0.hold_vd6rgd$(this._activeRenderers_0);
    this._activeRenderers_0.clear();
    var isReversed = this._bottomIndexPosition_0 != null;
    math_0.MathUtils;
    tmp$_1 = isReversed ? (tmp$ = this._bottomIndexPosition_0) != null ? tmp$ : Kotlin.throwNPE() : (tmp$_0 = this._indexPosition_0) != null ? tmp$_0 : 0.0;
    var max = get_lastIndex(this.data);
    var clamp_73gzaq$result;
    clamp_73gzaq$break: {
      if (Kotlin.compareTo(tmp$_1, 0.0) <= 0) {
        clamp_73gzaq$result = 0.0;
        break clamp_73gzaq$break;
      }
      if (Kotlin.compareTo(tmp$_1, max) >= 0) {
        clamp_73gzaq$result = max;
        break clamp_73gzaq$break;
      }
      clamp_73gzaq$result = tmp$_1;
    }
    var startIndex = clamp_73gzaq$result;
    var currentIndex = isReversed ? Math.ceil(startIndex) : Math.floor(startIndex);
    this.renderItems_0(explicitWidth, explicitHeight, currentIndex, startIndex, isReversed, null, this.laidOutRenderers_0);
    var first_0 = isReversed ? lastOrNull(this.laidOutRenderers_0) : firstOrNull(this.laidOutRenderers_0);
    var resumeIndex = isReversed ? currentIndex + 1 | 0 : currentIndex - 1 | 0;
    this.renderItems_0(explicitWidth, explicitHeight, resumeIndex, startIndex, !isReversed, first_0, this.laidOutRenderers_0);
    out.clear();
    this.layoutAlgorithm.measure_dyymdl$(explicitWidth, explicitHeight, this.laidOutRenderers_0, out);
    if (explicitWidth != null && explicitWidth > out.width)
      out.width = explicitWidth;
    if (explicitHeight != null && explicitHeight > out.height)
      out.height = explicitHeight;
    this.laidOutRenderers_0.clear();
    this.cache_0.forEach_wncgqr$(VirtualList$updateLayout$lambda(this));
    this.cache_0.flush();
  };
  VirtualList.prototype.renderItems_0 = function (explicitWidth, explicitHeight, currentIndex, startIndex, isReversed, previousElement, laidOutRenderers) {
    var n = this.data.size;
    var skipped = 0;
    var d = isReversed ? -1 : 1;
    var previousElement_0 = previousElement;
    var currentIndex_0 = currentIndex;
    var displayIndex = currentIndex_0;
    while (currentIndex_0 >= 0 && currentIndex_0 < n && skipped < VirtualList$Companion_getInstance().MAX_SKIPPED_0 && this._activeRenderers_0.size < this.maxItems) {
      var data = this.data.get_za3lpa$(currentIndex_0);
      var element = this.cache_0.obtain_fzusl$(currentIndex_0, isReversed);
      if (currentIndex_0 !== element.index)
        element.index = currentIndex_0;
      if (!Kotlin.equals(data, element.data))
        element.data = data;
      var elementSelected = this.selection.getItemIsSelected_11rb$(data);
      if (!Kotlin.equals(element.selected, elementSelected)) {
        element.selected = elementSelected;
      }
      if (element.parent == null)
        this.addChild_mxweac$(element);
      if (isReversed)
        this._activeRenderers_0.add_wxm5ur$(0, element);
      else
        this._activeRenderers_0.add_11rb$(element);
      if (element.shouldLayout) {
        this.layoutAlgorithm.updateLayoutEntry_g11et$(explicitWidth, explicitHeight, element, displayIndex, startIndex, n - 1 | 0, previousElement_0, isReversed);
        previousElement_0 = element;
        if (this.layoutAlgorithm.shouldShowRenderer_vse3it$(explicitWidth, explicitHeight, element)) {
          skipped = 0;
          if (isReversed)
            laidOutRenderers.add_wxm5ur$(0, element);
          else
            laidOutRenderers.add_11rb$(element);
          displayIndex = displayIndex + d | 0;
        }
         else {
          break;
        }
      }
       else {
        skipped = skipped + 1 | 0;
      }
      currentIndex_0 = currentIndex_0 + d | 0;
    }
  };
  VirtualList.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    this.layoutAlgorithm.changed.remove_trkh7z$(this.layoutAlgorithmChangedHandler_0);
    this.data.added.remove_trkh7z$(this.dataAddedHandler_0);
    this.data.removed.remove_trkh7z$(this.dataRemovedHandler_0);
    this.data.changed.remove_trkh7z$(this.dataChangedHandler_0);
    this.data.reset.remove_trkh7z$(this.dataResetHandler_0);
    this.selection.dispose();
    this.pool_0.dispose();
  };
  function VirtualList$Companion() {
    VirtualList$Companion_instance = this;
    this.MAX_SKIPPED_0 = 5;
  }
  VirtualList$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var VirtualList$Companion_instance = null;
  function VirtualList$Companion_getInstance() {
    if (VirtualList$Companion_instance === null) {
      new VirtualList$Companion();
    }
    return VirtualList$Companion_instance;
  }
  function VirtualList$pool$lambda(closure$rendererFactory, this$VirtualList) {
    return function () {
      return closure$rendererFactory(this$VirtualList);
    };
  }
  function VirtualList$layoutAlgorithmChangedHandler$lambda(this$VirtualList) {
    return function () {
      this$VirtualList.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      kotlin_0.Unit;
    };
  }
  function VirtualList$dataAddedHandler$lambda(this$VirtualList) {
    return function (index, element) {
      this$VirtualList.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      kotlin_0.Unit;
    };
  }
  function VirtualList$dataRemovedHandler$lambda(this$VirtualList) {
    return function (index, element) {
      this$VirtualList.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      kotlin_0.Unit;
    };
  }
  function VirtualList$dataChangedHandler$lambda(this$VirtualList) {
    return function (index, oldElement, newElement) {
      this$VirtualList.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      kotlin_0.Unit;
    };
  }
  function VirtualList$dataResetHandler$lambda(this$VirtualList) {
    return function () {
      this$VirtualList.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      kotlin_0.Unit;
    };
  }
  VirtualList.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VirtualList',
    interfaces: [ItemRendererOwner, FocusContainer, ContainerImpl]
  };
  function SmartCache(pool) {
    this.pool_0 = pool;
    this.enabled = true;
    this.cache_0 = HashMap_init();
    this.indices_0 = ArrayList_init();
  }
  SmartCache.prototype.obtain_fzusl$ = function (index, isReversed) {
    var tmp$;
    if (!this.enabled)
      return this.pool_0.obtain();
    var existing = this.cache_0.get_11rb$(index);
    if (existing == null) {
      if (this.cache_0.isEmpty()) {
        return this.pool_0.obtain();
      }
       else {
        var tmp$_0 = this.indices_0;
        var tmp$_1;
        if (isReversed) {
          var $receiver = this.indices_0;
          var indexOfFirst$result;
          indexOfFirst$break: {
            var tmp$_2;
            var index_0 = 0;
            tmp$_2 = $receiver.iterator();
            while (tmp$_2.hasNext()) {
              var item = tmp$_2.next();
              if (this.cache_0.containsKey_11rb$(item)) {
                indexOfFirst$result = index_0;
                break indexOfFirst$break;
              }
              index_0 = index_0 + 1 | 0;
            }
            indexOfFirst$result = -1;
          }
          tmp$_1 = indexOfFirst$result;
        }
         else {
          var $receiver_0 = this.indices_0;
          var indexOfLast$result;
          indexOfLast$break: {
            var iterator_3 = $receiver_0.listIterator_za3lpa$($receiver_0.size);
            while (iterator_3.hasPrevious()) {
              if (this.cache_0.containsKey_11rb$(iterator_3.previous())) {
                indexOfLast$result = iterator_3.nextIndex();
                break indexOfLast$break;
              }
            }
            indexOfLast$result = -1;
          }
          tmp$_1 = indexOfLast$result;
        }
        var index2 = tmp$_0.get_za3lpa$(tmp$_1);
        var existing2 = (tmp$ = this.cache_0.get_11rb$(index2)) != null ? tmp$ : Kotlin.throwNPE();
        this.cache_0.remove_11rb$(index2);
        return existing2;
      }
    }
     else {
      this.cache_0.remove_11rb$(index);
      return existing;
    }
  };
  SmartCache.prototype.hold_vd6rgd$ = function (elements) {
    var tmp$;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      this.hold_53qx7y$(elements.get_za3lpa$(i));
    }
  };
  SmartCache.prototype.hold_53qx7y$ = function (element) {
    var i = element.index;
    this.cache_0.put_xwzc9p$(i, element);
    this.indices_0.add_11rb$(i);
  };
  SmartCache.prototype.forEach_wncgqr$ = function (callback) {
    var tmp$;
    tmp$ = get_lastIndex(this.indices_0);
    for (var i = 0; i <= tmp$; i++) {
      var index = this.indices_0.get_za3lpa$(i);
      var element = this.cache_0.get_11rb$(index);
      if (element != null)
        callback(element);
    }
  };
  SmartCache.prototype.flush = function () {
    var tmp$;
    if (!this.indices_0.isEmpty()) {
      tmp$ = get_lastIndex(this.indices_0);
      for (var i = 0; i <= tmp$; i++) {
        var index = this.indices_0.get_za3lpa$(i);
        var element = this.cache_0.get_11rb$(index);
        if (element != null) {
          element.index = -1;
          element.data = null;
          this.pool_0.free_11rb$(element);
        }
      }
      this.cache_0.clear();
      this.indices_0.clear();
    }
  };
  SmartCache.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'SmartCache',
    interfaces: []
  };
  function virtualList$lambda($receiver) {
  }
  function virtualList($receiver, rendererFactory, layoutAlgorithm, data, init) {
    if (init === void 0)
      init = virtualList$lambda;
    var c = new VirtualList($receiver, rendererFactory, layoutAlgorithm, data);
    init(c);
    return c;
  }
  function VirtualListSelection(data, activeRenderers) {
    Selection.call(this);
    this.data_0 = data;
    this.activeRenderers_0 = activeRenderers;
  }
  VirtualListSelection.prototype.walkSelectableItems_qlkmfe$ = function (callback) {
    var tmp$;
    tmp$ = get_lastIndex(this.data_0);
    for (var i = 0; i <= tmp$; i++) {
      callback(this.data_0.get_za3lpa$(i));
    }
  };
  VirtualListSelection.prototype.onItemSelectionChanged_iuyhfk$ = function (item, selected) {
    var tmp$;
    tmp$ = get_lastIndex(this.activeRenderers_0);
    for (var i = 0; i <= tmp$; i++) {
      var renderer = this.activeRenderers_0.get_za3lpa$(i);
      if (Kotlin.equals(renderer.data, item)) {
        renderer.selected = selected;
        break;
      }
    }
  };
  VirtualListSelection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VirtualListSelection',
    interfaces: [Selection]
  };
  function VirtualListPool(factory_0) {
    ObjectPool.call(this, 8, factory_0);
    this.onObtained = null;
    this.onFreed = null;
  }
  VirtualListPool.prototype.obtain = function () {
    var tmp$;
    var obj_3 = ObjectPool.prototype.obtain.call(this);
    (tmp$ = this.onObtained) != null ? tmp$(obj_3) : null;
    return obj_3;
  };
  VirtualListPool.prototype.free_11rb$ = function (obj_3) {
    var tmp$;
    (tmp$ = this.onFreed) != null ? tmp$(obj_3) : null;
    ObjectPool.prototype.free_11rb$.call(this, obj_3);
  };
  VirtualListPool.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VirtualListPool',
    interfaces: [ObjectPool]
  };
  function NinePatchComponent(owner) {
    ElementContainerImpl.call(this, owner);
    this._isRotated_0 = false;
    this._region_0 = [0.0, 0.0, 0.0, 0.0];
    this._splitLeft_0 = 0.0;
    this._splitTop_0 = 0.0;
    this._splitRight_0 = 0.0;
    this._splitBottom_0 = 0.0;
    this.leftC_0 = textureC(this);
    this.topLeftC_0 = textureC(this);
    this.topC_0 = textureC(this);
    this.topRightC_0 = textureC(this);
    this.rightC_0 = textureC(this);
    this.bottomRightC_0 = textureC(this);
    this.bottomC_0 = textureC(this);
    this.bottomLeftC_0 = textureC(this);
    this.midC_0 = textureC(this);
    this.regions_0 = [this.leftC_0, this.topLeftC_0, this.topC_0, this.topRightC_0, this.rightC_0, this.bottomRightC_0, this.bottomC_0, this.bottomLeftC_0, this.midC_0];
    this._naturalWidth_0 = 0.0;
    this._naturalHeight_0 = 0.0;
    this._texture_0 = null;
    this._path_0 = null;
    var tmp$, tmp$_0;
    tmp$ = this.regions_0;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var i = tmp$[tmp$_0];
      this.addElement_3i6itm$(this.numChildren, i);
    }
  }
  Object.defineProperty(NinePatchComponent.prototype, 'path', {
    get: function () {
      return this._path_0;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      if (Kotlin.equals(this._path_0, value))
        return;
      this._texture_0 = null;
      this._path_0 = value;
      tmp$ = this.regions_0;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var i = tmp$[tmp$_0];
        i.path = value;
      }
    }
  });
  Object.defineProperty(NinePatchComponent.prototype, 'texture', {
    get: function () {
      return this._texture_0;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      if (Kotlin.equals(this._texture_0, value))
        return;
      this._path_0 = null;
      this._texture_0 = value;
      tmp$ = this.regions_0;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var i = tmp$[tmp$_0];
        i.texture = value;
      }
    }
  });
  NinePatchComponent.prototype.setRegion_k2cm68$ = function (region, isRotated) {
    this.setRegion_sczwbf$(region.x, region.y, region.width, region.height, isRotated);
  };
  NinePatchComponent.prototype.setRegion_vyn4n2$ = function (region, isRotated) {
    this.setRegion_sczwbf$(region.x, region.y, region.width, region.height, isRotated);
  };
  NinePatchComponent.prototype.setRegion_sczwbf$ = function (x, y, width, height, isRotated) {
    var tmp$;
    this._region_0[0] = x;
    this._region_0[1] = y;
    this._region_0[2] = width + x;
    this._region_0[3] = height + y;
    this._isRotated_0 = isRotated;
    tmp$ = get_lastIndex_0(this.regions_0);
    for (var i = 0; i <= tmp$; i++) {
      this.regions_0[i].isRotated = isRotated;
    }
    this.invalidate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
  };
  NinePatchComponent.prototype.isRotated = function () {
    return this._isRotated_0;
  };
  Object.defineProperty(NinePatchComponent.prototype, 'splitLeft', {
    get: function () {
      return this._splitLeft_0;
    }
  });
  Object.defineProperty(NinePatchComponent.prototype, 'splitTop', {
    get: function () {
      return this._splitTop_0;
    }
  });
  Object.defineProperty(NinePatchComponent.prototype, 'splitRight', {
    get: function () {
      return this._splitRight_0;
    }
  });
  Object.defineProperty(NinePatchComponent.prototype, 'splitBottom', {
    get: function () {
      return this._splitBottom_0;
    }
  });
  NinePatchComponent.prototype.split_tjonv8$ = function (splitLeft, splitTop, splitRight, splitBottom) {
    this.split_7b5o5w$(splitLeft, splitTop, splitRight, splitBottom);
  };
  NinePatchComponent.prototype.split_7b5o5w$ = function (splitLeft, splitTop, splitRight, splitBottom) {
    this._splitLeft_0 = splitLeft;
    this._splitTop_0 = splitTop;
    this._splitRight_0 = splitRight;
    this._splitBottom_0 = splitBottom;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
  };
  NinePatchComponent.prototype.naturalWidth = function () {
    this.validate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
    return this._naturalWidth_0;
  };
  NinePatchComponent.prototype.naturalHeight = function () {
    this.validate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
    return this._naturalHeight_0;
  };
  NinePatchComponent.prototype.updateProperties = function () {
    this.validateRegions_0();
  };
  NinePatchComponent.prototype.validateRegions_0 = function () {
    var x = this._region_0[0];
    var y = this._region_0[1];
    var w = this._region_0[2] - x;
    var h = this._region_0[3] - y;
    if (this.isRotated()) {
      var x2 = this._region_0[2] - this._splitTop_0;
      var y2 = this._region_0[3] - this._splitRight_0;
      var midW = w - this._splitBottom_0 - this._splitTop_0;
      var midH = h - this._splitLeft_0 - this._splitRight_0;
      this.leftC_0.setRegion_7b5o5w$(x + this._splitBottom_0, y, midW, this._splitLeft_0);
      this.topLeftC_0.setRegion_7b5o5w$(x2, y, this._splitTop_0, this._splitLeft_0);
      this.topC_0.setRegion_7b5o5w$(x2, y + this._splitLeft_0, this._splitTop_0, midH);
      this.topRightC_0.setRegion_7b5o5w$(x2, y2, this._splitTop_0, this._splitRight_0);
      this.rightC_0.setRegion_7b5o5w$(x + this._splitBottom_0, y2, midW, this._splitRight_0);
      this.bottomRightC_0.setRegion_7b5o5w$(x, y2, this._splitBottom_0, this._splitRight_0);
      this.bottomC_0.setRegion_7b5o5w$(x, y + this._splitLeft_0, this._splitBottom_0, midH);
      this.bottomLeftC_0.setRegion_7b5o5w$(x, y, this._splitBottom_0, this._splitLeft_0);
      this.midC_0.setRegion_7b5o5w$(x + this._splitBottom_0, y + this._splitLeft_0, midW, midH);
      this._naturalWidth_0 = h;
      this._naturalHeight_0 = w;
    }
     else {
      var x2_0 = this._region_0[2] - this._splitRight_0;
      var y2_0 = this._region_0[3] - this._splitBottom_0;
      var midW_0 = w - this._splitLeft_0 - this._splitRight_0;
      var midH_0 = h - this._splitBottom_0 - this._splitTop_0;
      this.leftC_0.setRegion_7b5o5w$(x, y + this._splitTop_0, this._splitLeft_0, midH_0);
      this.topLeftC_0.setRegion_7b5o5w$(x, y, this._splitLeft_0, this._splitTop_0);
      this.topC_0.setRegion_7b5o5w$(x + this._splitLeft_0, y, midW_0, this._splitTop_0);
      this.topRightC_0.setRegion_7b5o5w$(x2_0, y, this._splitRight_0, this._splitTop_0);
      this.rightC_0.setRegion_7b5o5w$(x2_0, y + this._splitTop_0, this._splitRight_0, midH_0);
      this.bottomRightC_0.setRegion_7b5o5w$(x2_0, y2_0, this._splitRight_0, this._splitBottom_0);
      this.bottomC_0.setRegion_7b5o5w$(x + this._splitLeft_0, y2_0, midW_0, this._splitBottom_0);
      this.bottomLeftC_0.setRegion_7b5o5w$(x, y2_0, this._splitLeft_0, this._splitBottom_0);
      this.midC_0.setRegion_7b5o5w$(x + this._splitLeft_0, y + this._splitTop_0, midW_0, midH_0);
      this._naturalWidth_0 = w;
      this._naturalHeight_0 = h;
    }
  };
  NinePatchComponent.prototype.updateSizeConstraints_mby7og$ = function (out) {
    out.width.min = this._splitLeft_0 + this._splitRight_0;
    out.height.min = this._splitTop_0 + this._splitBottom_0;
  };
  NinePatchComponent.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var scaledW = explicitWidth != null ? explicitWidth : this.naturalWidth();
    var scaledH = explicitHeight != null ? explicitHeight : this.naturalHeight();
    var scaledX2 = scaledW - this._splitRight_0;
    var scaledY2 = scaledH - this._splitBottom_0;
    var scaledMidW = scaledW - this._splitLeft_0 - this._splitRight_0;
    var scaledMidH = scaledH - this._splitBottom_0 - this._splitTop_0;
    this.leftC_0.moveTo_y2kzbl$(0.0, this._splitTop_0);
    this.leftC_0.setSize_yxjqmk$(null, scaledMidH);
    this.topLeftC_0.moveTo_y2kzbl$(0.0, 0.0);
    this.topC_0.moveTo_y2kzbl$(this._splitLeft_0, 0.0);
    this.topC_0.setSize_yxjqmk$(scaledMidW, null);
    this.topRightC_0.moveTo_y2kzbl$(scaledX2, 0.0);
    this.rightC_0.moveTo_y2kzbl$(scaledX2, this._splitTop_0);
    this.rightC_0.setSize_yxjqmk$(null, scaledMidH);
    this.bottomRightC_0.moveTo_y2kzbl$(scaledX2, scaledY2);
    this.bottomC_0.moveTo_y2kzbl$(this._splitLeft_0, scaledY2);
    this.bottomC_0.setSize_yxjqmk$(scaledMidW, null);
    this.bottomLeftC_0.moveTo_y2kzbl$(0.0, scaledY2);
    this.midC_0.moveTo_y2kzbl$(this._splitLeft_0, this._splitTop_0);
    this.midC_0.setSize_yxjqmk$(scaledMidW, scaledMidH);
    out.set_dleff0$(scaledW, scaledH);
  };
  NinePatchComponent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NinePatchComponent',
    interfaces: [ElementContainerImpl]
  };
  function ninePatch$lambda($receiver) {
  }
  function ninePatch($receiver, init) {
    if (init === void 0)
      init = ninePatch$lambda;
    var ninePatch_0 = new NinePatchComponent($receiver);
    init(ninePatch_0);
    return ninePatch_0;
  }
  function NumericStepper(owner) {
    NumericStepper$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.style = style(this, new NumericStepperStyle());
    this.userChanged = new Signal4();
    this.changed = new Signal3();
    this._formatter_0 = ToStringFormatter_getInstance();
    this.step = 1.0;
    this._max_0 = FloatCompanionObject.POSITIVE_INFINITY;
    this._min_0 = FloatCompanionObject.NEGATIVE_INFINITY;
    this.textInput = this.unaryPlus_8db8yx$(textInput(this, NumericStepper$textInput$lambda(this)));
    this.stepUpButton = this.unaryPlus_8db8yx$(button(this, NumericStepper$stepUpButton$lambda(this)));
    this.stepDownButton = this.unaryPlus_8db8yx$(button(this, NumericStepper$stepDownButton$lambda(this)));
    this._value_0 = 0.0;
    this.cancel_0 = new Cancel();
    this.keyDownHandler_0 = NumericStepper$keyDownHandler$lambda(this);
    addTag(this, NumericStepper$Companion_getInstance());
    keyDown(this).add_trkh7z$(this.keyDownHandler_0);
  }
  Object.defineProperty(NumericStepper.prototype, 'formatter', {
    get: function () {
      return this._formatter_0;
    },
    set: function (value) {
      this._formatter_0 = value;
      this.textInput.text = value.format_trkh7z$(this.value);
    }
  });
  Object.defineProperty(NumericStepper.prototype, 'max', {
    get: function () {
      return this._max_0;
    },
    set: function (newMax) {
      if (newMax === this._max_0)
        return;
      this._max_0 = newMax;
      if (this._value_0 > this._max_0) {
        this.value = this._max_0;
      }
      this.textInput.maxLength = newMax.toString().length;
    }
  });
  Object.defineProperty(NumericStepper.prototype, 'min', {
    get: function () {
      return this._min_0;
    },
    set: function (newMin) {
      if (newMin === this._min_0)
        return;
      this._min_0 = newMin;
      if (this._value_0 < this._min_0) {
        this.value = this._min_0;
      }
    }
  });
  Object.defineProperty(NumericStepper.prototype, 'value', {
    get: function () {
      return this._value_0;
    },
    set: function (value) {
      var oldValue = this._value_0;
      var min = this._min_0;
      var max = this._max_0;
      var clamp_73gzaq$result;
      clamp_73gzaq$break: {
        if (Kotlin.compareTo(value, min) <= 0) {
          clamp_73gzaq$result = min;
          break clamp_73gzaq$break;
        }
        if (Kotlin.compareTo(value, max) >= 0) {
          clamp_73gzaq$result = max;
          break clamp_73gzaq$break;
        }
        clamp_73gzaq$result = value;
      }
      var newValue = clamp_73gzaq$result;
      if (oldValue === newValue)
        return;
      this._value_0 = newValue;
      this.changed.dispatch_1llc0w$(this, oldValue, newValue);
      this.invalidate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
    }
  });
  NumericStepper.prototype.userChange_mx4ult$ = function (value) {
    var oldValue = this._value_0;
    var min = this._min_0;
    var max = this._max_0;
    var clamp_73gzaq$result;
    clamp_73gzaq$break: {
      if (Kotlin.compareTo(value, min) <= 0) {
        clamp_73gzaq$result = min;
        break clamp_73gzaq$break;
      }
      if (Kotlin.compareTo(value, max) >= 0) {
        clamp_73gzaq$result = max;
        break clamp_73gzaq$break;
      }
      clamp_73gzaq$result = value;
    }
    var newValue = clamp_73gzaq$result;
    if (oldValue === newValue)
      return;
    this.userChanged.dispatch_18alr2$(this, oldValue, newValue, this.cancel_0.reset());
    if (!this.cancel_0.canceled()) {
      this.value = newValue;
    }
  };
  NumericStepper.prototype.updateProperties = function () {
    this.textInput.text = this.formatter.format_trkh7z$(this.value);
    this.stepUpButton.disabled = this.value >= this._max_0;
    this.stepDownButton.disabled = this.value <= this._min_0;
  };
  NumericStepper.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_0;
    var tmp$_1, tmp$_2;
    tmp$_1 = out.height;
    math_0.MathUtils;
    tmp$_0 = (tmp$ = this.textInput.minHeight) != null ? tmp$ : 0.0;
    var y = this.stepUpButton.height + this.style.vGap + this.stepDownButton.height;
    var max_sdesaw$result;
    if (Kotlin.compareTo(tmp$_0, y) >= 0) {
      max_sdesaw$result = tmp$_0;
    }
     else {
      max_sdesaw$result = y;
    }
    tmp$_1.min = max_sdesaw$result;
    var tmp$_3 = out.width;
    var tmp$_4 = ((tmp$_2 = this.textInput.minWidth) != null ? tmp$_2 : 0.0) + this.style.hGap;
    var x = this.stepUpButton.width;
    var y_0 = this.stepDownButton.width;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(x, y_0) >= 0) {
      max_sdesaw$result_0 = x;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    tmp$_3.min = tmp$_4 + max_sdesaw$result_0;
  };
  NumericStepper.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0;
    var hGap = this.style.hGap;
    var vGap = this.style.vGap;
    var x = this.stepUpButton.width;
    var y = this.stepDownButton.width;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    var stepperWidths = max_sdesaw$result;
    var stepperHeights = this.stepUpButton.height + vGap + this.stepDownButton.height;
    if (explicitWidth == null) {
      var layoutData = (tmp$ = this.textInput.layoutData) == null || Kotlin.isType(tmp$, BasicLayoutData) ? tmp$ : Kotlin.throwCCE();
      tmp$_0 = layoutData != null ? layoutData.width : null;
    }
     else {
      tmp$_0 = explicitWidth - hGap - stepperWidths;
    }
    var textWidth = tmp$_0;
    this.textInput.setSize_yxjqmk$(textWidth, explicitHeight != null ? explicitHeight : stepperHeights);
    var y_0 = this.textInput.height;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(stepperHeights, y_0) >= 0) {
      max_sdesaw$result_0 = stepperHeights;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    out.height = max_sdesaw$result_0;
    out.width = this.textInput.width + hGap + stepperWidths;
    var tIW = this.textInput.width;
    this.stepUpButton.moveTo_y2kzbl$(tIW + hGap, 0.0);
    this.stepDownButton.moveTo_y2kzbl$(tIW + hGap, this.stepUpButton.height + vGap);
  };
  NumericStepper.prototype.dispose = function () {
    ElementContainerImpl.prototype.dispose.call(this);
    this.changed.dispose();
  };
  function NumericStepper$Companion() {
    NumericStepper$Companion_instance = this;
    this.STEP_UP_STYLE = styleTag();
    this.STEP_DOWN_STYLE = styleTag();
  }
  NumericStepper$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var NumericStepper$Companion_instance = null;
  function NumericStepper$Companion_getInstance() {
    if (NumericStepper$Companion_instance === null) {
      new NumericStepper$Companion();
    }
    return NumericStepper$Companion_instance;
  }
  function NumericStepper$textInput$lambda$lambda(this$, this$NumericStepper) {
    return function () {
      var tmp$;
      var $receiver = this$.text;
      var newValue = (tmp$ = Kotlin.kotlin.text.toDoubleOrNull_pdl1vz$($receiver)) != null ? tmp$ : 0.0;
      this$NumericStepper.userChange_mx4ult$(newValue);
    };
  }
  function NumericStepper$textInput$lambda(this$NumericStepper) {
    return function ($receiver) {
      $receiver.changed.add_trkh7z$(NumericStepper$textInput$lambda$lambda($receiver, this$NumericStepper));
    };
  }
  function NumericStepper$stepUpButton$lambda$lambda(this$NumericStepper) {
    return function (it) {
      this$NumericStepper.userChange_mx4ult$(this$NumericStepper.value + this$NumericStepper.step);
    };
  }
  function NumericStepper$stepUpButton$lambda(this$NumericStepper) {
    return function ($receiver) {
      addTag($receiver, NumericStepper$Companion_getInstance().STEP_UP_STYLE);
      mouseDown($receiver).add_trkh7z$(NumericStepper$stepUpButton$lambda$lambda(this$NumericStepper));
      enableDownRepeat($receiver);
    };
  }
  function NumericStepper$stepDownButton$lambda$lambda(this$NumericStepper) {
    return function (it) {
      this$NumericStepper.userChange_mx4ult$(this$NumericStepper.value - this$NumericStepper.step);
    };
  }
  function NumericStepper$stepDownButton$lambda(this$NumericStepper) {
    return function ($receiver) {
      addTag($receiver, NumericStepper$Companion_getInstance().STEP_DOWN_STYLE);
      mouseDown($receiver).add_trkh7z$(NumericStepper$stepDownButton$lambda$lambda(this$NumericStepper));
      enableDownRepeat($receiver);
    };
  }
  function NumericStepper$keyDownHandler$lambda(this$NumericStepper) {
    return function (e) {
      if (e.keyCode === Ascii_getInstance().UP) {
        this$NumericStepper.userChange_mx4ult$(this$NumericStepper.value + this$NumericStepper.step);
      }
       else if (e.keyCode === Ascii_getInstance().DOWN) {
        this$NumericStepper.userChange_mx4ult$(this$NumericStepper.value - this$NumericStepper.step);
      }
    };
  }
  NumericStepper.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NumericStepper',
    interfaces: [ElementContainerImpl]
  };
  function NumericStepperStyle() {
    NumericStepperStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_doepvg$_0 = NumericStepperStyle$Companion_getInstance();
    this.hGap$delegate = this.prop_umlfku$('hGap', 0.0);
    this.vGap$delegate = this.prop_umlfku$('vGap', 0.0);
  }
  Object.defineProperty(NumericStepperStyle.prototype, 'type', {
    get: function () {
      return this.type_doepvg$_0;
    }
  });
  Object.defineProperty(NumericStepperStyle.prototype, 'hGap', {
    get: function () {
      return this.hGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('hGap'));
    },
    set: function (hGap) {
      this.hGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('hGap'), hGap);
    }
  });
  Object.defineProperty(NumericStepperStyle.prototype, 'vGap', {
    get: function () {
      return this.vGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('vGap'));
    },
    set: function (vGap) {
      this.vGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('vGap'), vGap);
    }
  });
  function NumericStepperStyle$Companion() {
    NumericStepperStyle$Companion_instance = this;
  }
  NumericStepperStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var NumericStepperStyle$Companion_instance = null;
  function NumericStepperStyle$Companion_getInstance() {
    if (NumericStepperStyle$Companion_instance === null) {
      new NumericStepperStyle$Companion();
    }
    return NumericStepperStyle$Companion_instance;
  }
  NumericStepperStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NumericStepperStyle',
    interfaces: [StyleBase]
  };
  function numericStepper$lambda($receiver) {
  }
  function numericStepper($receiver, init) {
    if (init === void 0)
      init = numericStepper$lambda;
    var c = new NumericStepper($receiver);
    init(c);
    return c;
  }
  function OptionsList(owner, data, rendererFactory) {
    OptionsList$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.data = data;
    this.caseInsensitive = true;
    this.formatter = ToStringFormatter_getInstance();
    this.style = style(this, new OptionsListStyle());
    this.textInput = null;
    this.downArrow_r9ijgt$_0 = null;
    this.dataView_r9ijgt$_0 = new ListView(this.data);
    this.elementClickedHandler_r9ijgt$_0 = OptionsList$elementClickedHandler$lambda(this);
    this.dataScroller = vDataScroller(this, rendererFactory, this.dataView_r9ijgt$_0, OptionsList$dataScroller$lambda(this));
    this.listLift_r9ijgt$_0 = lift(this, OptionsList$listLift$lambda(this));
    this.stageMouseDownHandler_r9ijgt$_0 = OptionsList$stageMouseDownHandler$lambda(this);
    this.isUserInput_r9ijgt$_0 = false;
    addTag(this, OptionsList$Companion_getInstance());
    this.maxItems = 10;
    this.textInput = this.unaryPlus_8db8yx$(textInput(this, OptionsList_init$lambda(this)));
    keyDown(this).add_trkh7z$(OptionsList_init$lambda_0(this));
    this.dataView_r9ijgt$_0.sortComparator = OptionsList_init$lambda_1(this);
    this.dataScroller.selection.changed.add_trkh7z$(OptionsList_init$lambda_2(this));
    onChanged(this.style, OptionsList_init$lambda_3(this));
    this._isOpen_r9ijgt$_0 = false;
    this._listWidth_r9ijgt$_0 = null;
    this._listHeight_r9ijgt$_0 = null;
  }
  Object.defineProperty(OptionsList.prototype, 'input', {
    get: function () {
      return this.textInput.input;
    }
  });
  Object.defineProperty(OptionsList.prototype, 'changed', {
    get: function () {
      return this.textInput.changed;
    }
  });
  Object.defineProperty(OptionsList.prototype, 'selected', {
    get: function () {
      return this.dataScroller.selection.selectedItem;
    },
    set: function (value) {
      this.dataScroller.selection.selectedItem = value;
    }
  });
  Object.defineProperty(OptionsList.prototype, 'maxItems', {
    get: function () {
      return this.dataScroller.maxItems;
    },
    set: function (value) {
      this.dataScroller.maxItems = value;
    }
  });
  OptionsList.prototype.searchScore_oxbpf0$_0 = function (obj_3, str) {
    var itemStr = this.formatter.format_trkh7z$(obj_3);
    if (this.caseInsensitive) {
      itemStr = itemStr.toLowerCase();
    }
    var i = indexOf(itemStr, str);
    if (i === -1)
      return 10000;
    return i;
  };
  OptionsList.prototype.open = function () {
    if (this._isOpen_r9ijgt$_0)
      return;
    this._isOpen_r9ijgt$_0 = true;
    this.unaryPlus_8db8yx$(this.listLift_r9ijgt$_0);
    mouseDown(get_stage(this), true).add_trkh7z$(this.stageMouseDownHandler_r9ijgt$_0);
    this.textInput.focus();
  };
  OptionsList.prototype.close = function () {
    if (!this._isOpen_r9ijgt$_0)
      return;
    this._isOpen_r9ijgt$_0 = false;
    this.unaryMinus_8db8yx$(this.listLift_r9ijgt$_0);
    mouseDown(get_stage(this), true).remove_trkh7z$(this.stageMouseDownHandler_r9ijgt$_0);
  };
  OptionsList.prototype.toggleOpen = function () {
    if (this._isOpen_r9ijgt$_0)
      this.close();
    else
      this.open();
  };
  OptionsList.prototype.onAncestorVisibleChanged_hv8cvn$ = function (uiComponent, value) {
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  Object.defineProperty(OptionsList.prototype, 'text', {
    get: function () {
      return this.textInput.text;
    },
    set: function (value) {
      this.textInput.text = value;
    }
  });
  Object.defineProperty(OptionsList.prototype, 'listWidth', {
    get: function () {
      return this._listWidth_r9ijgt$_0;
    },
    set: function (value) {
      if (this._listWidth_r9ijgt$_0 === value)
        return;
      this._listWidth_r9ijgt$_0 = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  Object.defineProperty(OptionsList.prototype, 'listHeight', {
    get: function () {
      return this._listHeight_r9ijgt$_0;
    },
    set: function (value) {
      if (this._listHeight_r9ijgt$_0 === value)
        return;
      this._listHeight_r9ijgt$_0 = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  OptionsList.prototype.setListSize_yxjqmk$ = function (explicitWidth, explicitHeight) {
    this._listWidth_r9ijgt$_0 = explicitWidth;
    this._listHeight_r9ijgt$_0 = explicitHeight;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  OptionsList.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0;
    var downArrow = (tmp$ = this.downArrow_r9ijgt$_0) != null ? tmp$ : Kotlin.throwNPE();
    this.textInput.boxStyle.padding = new Pad(2.0, downArrow.width, 2.0, 2.0);
    this.textInput.setSize_yxjqmk$(explicitWidth, explicitHeight);
    downArrow.setPosition_y2kzbl$(this.textInput.width - downArrow.width, (this.textInput.height - downArrow.height) * 0.5);
    out.set_i12l7q$(this.textInput.bounds);
    this.listLift_r9ijgt$_0.setSize_yxjqmk$((tmp$_0 = this._listWidth_r9ijgt$_0) != null ? tmp$_0 : this.textInput.width, this._listHeight_r9ijgt$_0);
    this.listLift_r9ijgt$_0.moveTo_y2kzbl$(0.0, this.textInput.height);
  };
  OptionsList.prototype.dispose = function () {
    ElementContainerImpl.prototype.dispose.call(this);
  };
  function OptionsList$Companion() {
    OptionsList$Companion_instance = this;
  }
  OptionsList$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var OptionsList$Companion_instance = null;
  function OptionsList$Companion_getInstance() {
    if (OptionsList$Companion_instance === null) {
      new OptionsList$Companion();
    }
    return OptionsList$Companion_instance;
  }
  function OptionsList$elementClickedHandler$lambda(this$OptionsList) {
    return function (e) {
      var tmp$;
      this$OptionsList.selected = (Kotlin.isType(tmp$ = e.currentTarget, ItemRenderer) ? tmp$ : Kotlin.throwCCE()).data;
      this$OptionsList.close();
    };
  }
  function OptionsList$dataScroller$lambda$lambda(this$OptionsList) {
    return function (it) {
      click(it).add_trkh7z$(this$OptionsList.elementClickedHandler_r9ijgt$_0);
    };
  }
  function OptionsList$dataScroller$lambda$lambda_0(this$OptionsList) {
    return function (it) {
      click(it).remove_trkh7z$(this$OptionsList.elementClickedHandler_r9ijgt$_0);
    };
  }
  function OptionsList$dataScroller$lambda(this$OptionsList) {
    return function ($receiver) {
      $receiver.layoutAlgorithm.padding = Pad_init_0(5.0);
      $receiver.onRendererObtained = OptionsList$dataScroller$lambda$lambda(this$OptionsList);
      $receiver.onRendererFreed = OptionsList$dataScroller$lambda$lambda_0(this$OptionsList);
    };
  }
  function OptionsList$listLift$lambda$lambda($receiver) {
    $receiver.widthPercent = 1.0;
    $receiver.heightPercent = 1.0;
  }
  function OptionsList$listLift$lambda$lambda_0(this$OptionsList) {
    return function () {
      this$OptionsList.close();
    };
  }
  function OptionsList$listLift$lambda(this$OptionsList) {
    return function ($receiver) {
      $receiver.focusEnabled = true;
      $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(this$OptionsList.dataScroller), OptionsList$listLift$lambda$lambda);
      $receiver.onClosed = OptionsList$listLift$lambda$lambda_0(this$OptionsList);
    };
  }
  function OptionsList$stageMouseDownHandler$lambda(this$OptionsList) {
    return function (event) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      if (!(event.target == null)) {
        tmp$_4 = !isDescendantOf(tmp$_3, tmp$_2);
        if (!isDescendantOf((tmp$ = event.target) != null ? tmp$ : Kotlin.throwNPE(), this$OptionsList.dataScroller)) {
          tmp$_3 = (tmp$_0 = event.target) != null ? tmp$_0 : Kotlin.throwNPE();
          tmp$_2 = (tmp$_1 = this$OptionsList.downArrow_r9ijgt$_0) != null ? tmp$_1 : Kotlin.throwNPE();
        }
         else
          tmp$_4 = false;
      }
       else
        tmp$_4 = true;
      if (tmp$_4) {
        this$OptionsList.close();
      }
    };
  }
  function OptionsList_init$lambda$lambda(this$OptionsList, this$) {
    return function () {
      this$OptionsList.dataView_r9ijgt$_0.dirty();
      this$OptionsList.open();
      this$OptionsList.dataScroller.scrollModel.value = 0.0;
      this$OptionsList.isUserInput_r9ijgt$_0 = true;
      var textLower = this$.text.toLowerCase();
      var tmp$ = this$OptionsList;
      var $receiver = this$OptionsList.data;
      var firstOrNull$result;
      firstOrNull$break: {
        var tmp$_0;
        tmp$_0 = $receiver.iterator();
        while (tmp$_0.hasNext()) {
          var element = tmp$_0.next();
          if (Kotlin.equals(this$OptionsList.formatter.format_trkh7z$(element).toLowerCase(), textLower)) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
      tmp$.selected = firstOrNull$result;
      this$OptionsList.isUserInput_r9ijgt$_0 = false;
    };
  }
  function OptionsList_init$lambda(this$OptionsList) {
    return function ($receiver) {
      $receiver.input.add_trkh7z$(OptionsList_init$lambda$lambda(this$OptionsList, $receiver));
    };
  }
  function OptionsList_init$lambda_0(this$OptionsList) {
    return function (it) {
      if (it.keyCode === Ascii_getInstance().ESCAPE || it.keyCode === Ascii_getInstance().RETURN) {
        this$OptionsList.close();
      }
    };
  }
  function OptionsList_init$lambda_1(this$OptionsList) {
    return function (o1, o2) {
      var str = this$OptionsList.textInput.text;
      if (this$OptionsList.caseInsensitive) {
        str = str.toLowerCase();
      }
      var score1 = this$OptionsList.searchScore_oxbpf0$_0(o1, str);
      var score2 = this$OptionsList.searchScore_oxbpf0$_0(o2, str);
      return Kotlin.primitiveCompareTo(score1, score2);
    };
  }
  function OptionsList_init$lambda_2(this$OptionsList) {
    return function (item, selected) {
      if (!this$OptionsList.isUserInput_r9ijgt$_0) {
        if (selected)
          this$OptionsList.textInput.text = this$OptionsList.formatter.format_trkh7z$(item);
        else
          this$OptionsList.textInput.text = '';
      }
    };
  }
  function OptionsList_init$lambda$lambda_0(this$OptionsList) {
    return function (it) {
      this$OptionsList.toggleOpen();
    };
  }
  function OptionsList_init$lambda_3(this$OptionsList) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1;
      this$OptionsList.dispose_erfg6z$(this$OptionsList.downArrow_r9ijgt$_0);
      this$OptionsList.downArrow_r9ijgt$_0 = it.downArrow(this$OptionsList);
      tmp$_0 = (tmp$ = this$OptionsList.downArrow_r9ijgt$_0) != null ? tmp$ : Kotlin.throwNPE();
      this$OptionsList.addElement_mxweac$(tmp$_0);
      click((tmp$_1 = this$OptionsList.downArrow_r9ijgt$_0) != null ? tmp$_1 : Kotlin.throwNPE()).add_trkh7z$(OptionsList_init$lambda$lambda_0(this$OptionsList));
    };
  }
  OptionsList.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'OptionsList',
    interfaces: [ElementContainerImpl]
  };
  function OptionsListStyle() {
    OptionsListStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_6wtxw6$_0 = OptionsListStyle$Companion_getInstance();
    this.downArrow$delegate = this.prop_umlfku$('downArrow', noSkin);
  }
  Object.defineProperty(OptionsListStyle.prototype, 'type', {
    get: function () {
      return this.type_6wtxw6$_0;
    }
  });
  Object.defineProperty(OptionsListStyle.prototype, 'downArrow', {
    get: function () {
      return this.downArrow$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('downArrow'));
    },
    set: function (downArrow) {
      this.downArrow$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('downArrow'), downArrow);
    }
  });
  function OptionsListStyle$Companion() {
    OptionsListStyle$Companion_instance = this;
  }
  OptionsListStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var OptionsListStyle$Companion_instance = null;
  function OptionsListStyle$Companion_getInstance() {
    if (OptionsListStyle$Companion_instance === null) {
      new OptionsListStyle$Companion();
    }
    return OptionsListStyle$Companion_instance;
  }
  OptionsListStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'OptionsListStyle',
    interfaces: [StyleBase]
  };
  function optionsList$lambda(this$optionsList) {
    return function ($receiver) {
      return simpleItemRenderer(this$optionsList);
    };
  }
  function optionsList$lambda_0($receiver) {
  }
  function optionsList($receiver, data, rendererFactory, init) {
    if (rendererFactory === void 0)
      rendererFactory = optionsList$lambda($receiver);
    if (init === void 0)
      init = optionsList$lambda_0;
    var t = new OptionsList($receiver, data, rendererFactory);
    init(t);
    return t;
  }
  function Panel(owner) {
    Panel$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.closing_xrxmxn$_0 = own(this, new Signal2());
    this.closed_xrxmxn$_0 = own(this, new Signal1());
    this.cancel = new Cancel();
    this.style = style(this, new PanelStyle());
    this.contents_xrxmxn$_0 = this.addChild_mxweac$(stack(this));
    this.background_xrxmxn$_0 = null;
    addTag(this, Panel$Companion_getInstance());
    onChanged(this.style, Panel_init$lambda(this));
  }
  Object.defineProperty(Panel.prototype, 'closing', {
    get: function () {
      return this.closing_xrxmxn$_0;
    }
  });
  Object.defineProperty(Panel.prototype, 'closed', {
    get: function () {
      return this.closed_xrxmxn$_0;
    }
  });
  Panel.prototype.createLayoutData = function () {
    return new StackLayoutData();
  };
  Panel.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.contents_xrxmxn$_0.addElement_3i6itm$(index, element);
  };
  Panel.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.contents_xrxmxn$_0.removeElement_erfg6z$(element);
  };
  Panel.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.contents_xrxmxn$_0.swapElements_tu2188$(elementA, elementB);
  };
  Panel.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    this.contents_xrxmxn$_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    out.set_i12l7q$(this.contents_xrxmxn$_0.bounds);
    (tmp$ = this.background_xrxmxn$_0) != null ? tmp$.setSize_yxjqmk$(out.width, out.height) : null;
  };
  Panel.prototype.close = function () {
    this.closing.dispatch_xwzc9p$(this, this.cancel.reset());
    if (!this.cancel.canceled()) {
      this.closed.dispatch_11rb$(this);
    }
  };
  function Panel$Companion() {
    Panel$Companion_instance = this;
  }
  Panel$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var Panel$Companion_instance = null;
  function Panel$Companion_getInstance() {
    if (Panel$Companion_instance === null) {
      new Panel$Companion();
    }
    return Panel$Companion_instance;
  }
  function Panel_init$lambda(this$Panel) {
    return function (it) {
      this$Panel.contents_xrxmxn$_0.layoutAlgorithm.padding.set_ujzovp$(it.padding);
      this$Panel.dispose_erfg6z$(this$Panel.background_xrxmxn$_0);
      this$Panel.background_xrxmxn$_0 = this$Panel.addChild_3i6itm$(0, it.background(this$Panel));
    };
  }
  Panel.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Panel',
    interfaces: [LayoutDataProvider, Closeable, ElementContainerImpl]
  };
  function PanelStyle() {
    PanelStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_dfza66$_0 = PanelStyle$Companion_getInstance();
    this.background$delegate = this.prop_umlfku$('background', noSkin);
    this.padding$delegate = this.prop_umlfku$('padding', Pad_init_0(5.0));
  }
  Object.defineProperty(PanelStyle.prototype, 'type', {
    get: function () {
      return this.type_dfza66$_0;
    }
  });
  Object.defineProperty(PanelStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  Object.defineProperty(PanelStyle.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  function PanelStyle$Companion() {
    PanelStyle$Companion_instance = this;
  }
  PanelStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var PanelStyle$Companion_instance = null;
  function PanelStyle$Companion_getInstance() {
    if (PanelStyle$Companion_instance === null) {
      new PanelStyle$Companion();
    }
    return PanelStyle$Companion_instance;
  }
  PanelStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PanelStyle',
    interfaces: [StyleBase]
  };
  function panel$lambda($receiver) {
  }
  function panel($receiver, init) {
    if (init === void 0)
      init = panel$lambda;
    var p = new Panel($receiver);
    init(p);
    return p;
  }
  function ProgressBarRect(owner) {
    ProgressBarRect$Companion_getInstance();
    ContainerImpl.call(this, owner);
    this.style = style(this, new ProgressBarRectStyle());
    this.backRect = this.addChild_mxweac$(rect(this));
    this.frontRect = this.addChild_mxweac$(rect(this));
    addTag(this, ProgressBarRect$Companion_getInstance());
    onChanged(this.style, ProgressBarRect_init$lambda(this));
    this._progress_0 = 0.0;
    this._watched_0 = null;
    this.targetP_0 = 0.0;
  }
  Object.defineProperty(ProgressBarRect.prototype, 'progress', {
    get: function () {
      return this._progress_0;
    },
    set: function (value) {
      if (this._progress_0 === value)
        return;
      this._progress_0 = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  function ProgressBarRect$watch$lambda(closure$target, this$ProgressBarRect) {
    return function (it) {
      if (closure$target.secondsTotal === 0.0)
        this$ProgressBarRect.targetP_0 = 0.0;
      else
        this$ProgressBarRect.targetP_0 = closure$target.secondsLoaded / closure$target.secondsTotal;
      this$ProgressBarRect.progress = this$ProgressBarRect.progress + (this$ProgressBarRect.targetP_0 - this$ProgressBarRect.progress) * 0.1;
    };
  }
  ProgressBarRect.prototype.watch_mmrbsp$ = function (target) {
    var tmp$;
    (tmp$ = this._watched_0) != null ? tmp$.dispose() : null;
    this._watched_0 = onTick(this, ProgressBarRect$watch$lambda(target, this));
  };
  ProgressBarRect.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var s = this.style;
    var w = explicitWidth != null ? explicitWidth : s.defaultWidth;
    var h = explicitHeight != null ? explicitHeight : s.defaultHeight;
    this.backRect.setSize_yxjqmk$(w, h);
    var fillMaxW = s.borderThickness.reduceWidth2_mx4ult$(w);
    var fillH = s.borderThickness.reduceHeight2_mx4ult$(h);
    this.frontRect.setSize_yxjqmk$(fillMaxW * this._progress_0, fillH);
    this.frontRect.setPosition_y2kzbl$(s.borderThickness.left, s.borderThickness.top);
    out.set_dleff0$(w, h);
  };
  ProgressBarRect.prototype.reset = function () {
    this.progress = 0.0;
  };
  function ProgressBarRect$Companion() {
    ProgressBarRect$Companion_instance = this;
  }
  ProgressBarRect$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var ProgressBarRect$Companion_instance = null;
  function ProgressBarRect$Companion_getInstance() {
    if (ProgressBarRect$Companion_instance === null) {
      new ProgressBarRect$Companion();
    }
    return ProgressBarRect$Companion_instance;
  }
  function ProgressBarRect_init$lambda(this$ProgressBarRect) {
    return function (it) {
      this$ProgressBarRect.backRect.style.backgroundColor = it.bgColor;
      this$ProgressBarRect.backRect.style.borderColor = it.borderColor;
      this$ProgressBarRect.backRect.style.borderThickness = it.borderThickness;
      this$ProgressBarRect.backRect.style.borderRadius = it.borderRadius;
      this$ProgressBarRect.frontRect.style.backgroundColor = it.fillColor;
    };
  }
  ProgressBarRect.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ProgressBarRect',
    interfaces: [ContainerImpl]
  };
  function ProgressBarRectStyle() {
    ProgressBarRectStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_bm1t0k$_0 = ProgressBarRectStyle$Companion_getInstance();
    this.defaultWidth$delegate = this.prop_umlfku$('defaultWidth', 100.0);
    this.defaultHeight$delegate = this.prop_umlfku$('defaultHeight', 6.0);
    this.borderThickness$delegate = this.prop_umlfku$('borderThickness', Pad_init_0(2.0));
    this.borderRadius$delegate = this.prop_umlfku$('borderRadius', new Corners());
    this.borderColor$delegate = this.prop_umlfku$('borderColor', BorderColors_init(Color.Companion.BLUE));
    this.bgColor$delegate = this.prop_umlfku$('bgColor', Color.Companion.GREEN);
    this.fillColor$delegate = this.prop_umlfku$('fillColor', Color.Companion.RED);
  }
  Object.defineProperty(ProgressBarRectStyle.prototype, 'type', {
    get: function () {
      return this.type_bm1t0k$_0;
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'defaultWidth', {
    get: function () {
      return this.defaultWidth$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultWidth'));
    },
    set: function (defaultWidth) {
      this.defaultWidth$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultWidth'), defaultWidth);
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'defaultHeight', {
    get: function () {
      return this.defaultHeight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultHeight'));
    },
    set: function (defaultHeight) {
      this.defaultHeight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultHeight'), defaultHeight);
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'borderThickness', {
    get: function () {
      return this.borderThickness$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderThickness'));
    },
    set: function (borderThickness) {
      this.borderThickness$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderThickness'), borderThickness);
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'borderRadius', {
    get: function () {
      return this.borderRadius$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderRadius'));
    },
    set: function (borderRadius) {
      this.borderRadius$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderRadius'), borderRadius);
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'borderColor', {
    get: function () {
      return this.borderColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderColor'));
    },
    set: function (borderColor) {
      this.borderColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderColor'), borderColor);
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'bgColor', {
    get: function () {
      return this.bgColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('bgColor'));
    },
    set: function (bgColor) {
      this.bgColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('bgColor'), bgColor);
    }
  });
  Object.defineProperty(ProgressBarRectStyle.prototype, 'fillColor', {
    get: function () {
      return this.fillColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('fillColor'));
    },
    set: function (fillColor) {
      this.fillColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('fillColor'), fillColor);
    }
  });
  function ProgressBarRectStyle$Companion() {
    ProgressBarRectStyle$Companion_instance = this;
  }
  ProgressBarRectStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var ProgressBarRectStyle$Companion_instance = null;
  function ProgressBarRectStyle$Companion_getInstance() {
    if (ProgressBarRectStyle$Companion_instance === null) {
      new ProgressBarRectStyle$Companion();
    }
    return ProgressBarRectStyle$Companion_instance;
  }
  ProgressBarRectStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ProgressBarRectStyle',
    interfaces: [StyleBase]
  };
  function progressBarRectStyle$lambda($receiver) {
  }
  function progressBarRectStyle(init) {
    if (init === void 0)
      init = progressBarRectStyle$lambda;
    var s = new ProgressBarRectStyle();
    init(s);
    return s;
  }
  function progressBarRect$lambda($receiver) {
  }
  function progressBarRect($receiver, init) {
    if (init === void 0)
      init = progressBarRect$lambda;
    var p = new ProgressBarRect($receiver);
    init(p);
    return p;
  }
  var progressBar;
  function showAssetLoadingBar$lambda() {
  }
  function showAssetLoadingBar$lambda_0(closure$onCompleted) {
    return function (it) {
      closure$onCompleted();
    };
  }
  function showAssetLoadingBar$lambda_1(it) {
    return false;
  }
  function showAssetLoadingBar$lambda_2(closure$popUpManager, closure$popUp) {
    return function (f, f_0) {
      closure$popUpManager.removePopUp_k58t2y$(closure$popUp);
    };
  }
  function showAssetLoadingBar($receiver, onCompleted) {
    if (onCompleted === void 0)
      onCompleted = showAssetLoadingBar$lambda;
    var assetManager = inject($receiver, AssetManager$Companion_getInstance());
    if (assetManager.percentLoaded >= 0.9 || assetManager.loadingQueue.hasCompleted()) {
      onCompleted();
      return;
    }
    if (progressBar == null) {
      progressBar = progressBarRect($receiver);
      var bar = progressBar != null ? progressBar : Kotlin.throwNPE();
      bar.watch_mmrbsp$(assetManager);
    }
    onSuccess(assetManager.loadingQueue, showAssetLoadingBar$lambda_0(onCompleted));
    var progressBar_0 = progressBar != null ? progressBar : Kotlin.throwNPE();
    if (assetManager.percentLoaded >= 0.9 || assetManager.loadingQueue.hasCompleted()) {
      if (progressBar_0.parent == null) {
        progressBar_0.reset();
        var popUpManager = inject($receiver, PopUpManager$Companion_getInstance());
        var popUp = addPopUp($receiver, new PopUpInfo(progressBar_0, void 0, 1000.0, void 0, void 0, void 0, showAssetLoadingBar$lambda_1));
        assetManager.loadingQueue.completed.addOnce_trkh7z$(showAssetLoadingBar$lambda_2(popUpManager, popUp));
      }
    }
  }
  function RadioButton(owner, data) {
    RadioButton$Companion_getInstance();
    Button.call(this, owner);
    this.data = data;
    addTag(this, RadioButton$Companion_getInstance());
    click(this).add_trkh7z$(RadioButton_init$lambda(this));
  }
  function RadioButton$Companion() {
    RadioButton$Companion_instance = this;
  }
  RadioButton$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var RadioButton$Companion_instance = null;
  function RadioButton$Companion_getInstance() {
    if (RadioButton$Companion_instance === null) {
      new RadioButton$Companion();
    }
    return RadioButton$Companion_instance;
  }
  function RadioButton_init$lambda(this$RadioButton) {
    return function (it) {
      if (!this$RadioButton.selected)
        this$RadioButton.selected = true;
    };
  }
  RadioButton.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'RadioButton',
    interfaces: [Button]
  };
  function radioButton$lambda($receiver) {
  }
  function radioButton($receiver, group, data, init) {
    if (init === void 0)
      init = radioButton$lambda;
    var b = new RadioButton($receiver, data);
    group.register_5v5vn9$(b);
    init(b);
    return b;
  }
  function radioButton$lambda_0($receiver) {
  }
  function radioButton_0($receiver, group, data, label, init) {
    if (init === void 0)
      init = radioButton$lambda_0;
    var b = new RadioButton($receiver, data);
    group.register_5v5vn9$(b);
    b.label = label;
    init(b);
    return b;
  }
  function RadioGroup(owner) {
    this.owner = owner;
    own(this.owner, this);
    this._changed_0 = new Signal2();
    this._radioButtons_0 = ArrayList_init();
    this.selectedChangedHandler_0 = RadioGroup$selectedChangedHandler$lambda(this);
    this.disposedHandler_0 = RadioGroup$disposedHandler$lambda(this);
    this._selectedButton_0 = null;
  }
  Object.defineProperty(RadioGroup.prototype, 'changed', {
    get: function () {
      return this._changed_0;
    }
  });
  Object.defineProperty(RadioGroup.prototype, 'radioButtons', {
    get: function () {
      return this._radioButtons_0;
    }
  });
  RadioGroup.prototype.register_5v5vn9$ = function (button_1) {
    button_1.selectedChanged.add_trkh7z$(this.selectedChangedHandler_0);
    button_1.disposed.add_trkh7z$(this.disposedHandler_0);
    this._radioButtons_0.add_11rb$(button_1);
  };
  RadioGroup.prototype.unregister_5v5vn9$ = function (button_1) {
    button_1.selectedChanged.remove_trkh7z$(this.selectedChangedHandler_0);
    if (Kotlin.equals(this._selectedButton_0, button_1))
      this.selectedButton = null;
    this._radioButtons_0.remove_11rb$(button_1);
  };
  Object.defineProperty(RadioGroup.prototype, 'selectedButton', {
    get: function () {
      return this._selectedButton_0;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      if (Kotlin.equals(this._selectedButton_0, value))
        return;
      var old = this._selectedButton_0;
      (tmp$ = this._selectedButton_0) != null ? (tmp$.selected = false) : null;
      this._selectedButton_0 = value;
      (tmp$_0 = this._selectedButton_0) != null ? (tmp$_0.selected = true) : null;
      this._changed_0.dispatch_xwzc9p$(old, value);
    }
  });
  Object.defineProperty(RadioGroup.prototype, 'selectedData', {
    get: function () {
      var tmp$;
      return (tmp$ = this._selectedButton_0) != null ? tmp$.data : null;
    },
    set: function (value) {
      var tmp$;
      tmp$ = get_lastIndex(this._radioButtons_0);
      for (var i = 0; i <= tmp$; i++) {
        if (Kotlin.equals(this._radioButtons_0.get_za3lpa$(i).data, value)) {
          this.selectedButton = this._radioButtons_0.get_za3lpa$(i);
          break;
        }
      }
    }
  });
  function RadioGroup$radioButton$lambda($receiver) {
  }
  RadioGroup.prototype.radioButton_xg973l$ = function (data, label, init) {
    if (init === void 0)
      init = RadioGroup$radioButton$lambda;
    var b = new RadioButton(this.owner, data);
    this.register_5v5vn9$(b);
    b.label = label;
    init(b);
    return b;
  };
  RadioGroup.prototype.dispose = function () {
    this._changed_0.dispose();
    this._selectedButton_0 = null;
    this._radioButtons_0.clear();
  };
  function RadioGroup$selectedChangedHandler$lambda(this$RadioGroup) {
    return function (it) {
      var tmp$;
      this$RadioGroup.selectedButton = Kotlin.isType(tmp$ = it, RadioButton) ? tmp$ : Kotlin.throwCCE();
    };
  }
  function RadioGroup$disposedHandler$lambda(this$RadioGroup) {
    return function (it) {
      var tmp$, tmp$_0;
      tmp$_0 = Kotlin.isType(tmp$ = it, RadioButton) ? tmp$ : Kotlin.throwCCE();
      this$RadioGroup.unregister_5v5vn9$(tmp$_0);
    };
  }
  RadioGroup.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'RadioGroup',
    interfaces: [Disposable]
  };
  function radioGroup($receiver, init) {
    var group = new RadioGroup($receiver);
    init(group);
    return group;
  }
  function Rect() {
    Rect$Companion_getInstance();
  }
  function Rect$Companion() {
    Rect$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  Rect$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Rect$Companion_instance = null;
  function Rect$Companion_getInstance() {
    if (Rect$Companion_instance === null) {
      new Rect$Companion();
    }
    return Rect$Companion_instance;
  }
  Rect.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Rect',
    interfaces: [UiComponent]
  };
  function rect$lambda($receiver) {
  }
  function rect($receiver, init) {
    if (init === void 0)
      init = rect$lambda;
    var r = $receiver.injector.inject_li8edk$(Rect$Companion_getInstance().FACTORY_KEY)($receiver);
    init(r);
    return r;
  }
  function Rule(owned, isVertical) {
    Rule$Companion_getInstance();
    ElementContainerImpl.call(this, owned);
    this.isVertical_0 = isVertical;
    this.rect_0 = this.unaryPlus_8db8yx$(rect(this));
    this.style = style(this, new RuleStyle());
    if (this.isVertical_0)
      addTag(this, Rule$Companion_getInstance().VERTICAL_STYLE);
    else
      addTag(this, Rule$Companion_getInstance().HORIZONTAL_STYLE);
    onChanged(this.style, Rule_init$lambda(this));
  }
  Rule.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    if (this.isVertical_0) {
      this.rect_0.setSize_yxjqmk$(this.style.thickness, explicitHeight);
    }
     else {
      this.rect_0.setSize_yxjqmk$(explicitWidth, this.style.thickness);
    }
    out.set_i12l7q$(this.rect_0.bounds);
  };
  function Rule$Companion() {
    Rule$Companion_instance = this;
    this.VERTICAL_STYLE = styleTag();
    this.HORIZONTAL_STYLE = styleTag();
  }
  Rule$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Rule$Companion_instance = null;
  function Rule$Companion_getInstance() {
    if (Rule$Companion_instance === null) {
      new Rule$Companion();
    }
    return Rule$Companion_instance;
  }
  function Rule_init$lambda(this$Rule) {
    return function (it) {
      set_0(this$Rule.rect_0.style, it);
    };
  }
  Rule.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Rule',
    interfaces: [ElementContainerImpl]
  };
  function RuleStyle() {
    RuleStyle$Companion_getInstance();
    BoxStyle.call(this);
    this.type_ujw75g$_0 = RuleStyle$Companion_getInstance();
    this.thickness$delegate = this.prop_umlfku$('thickness', 1.0);
  }
  Object.defineProperty(RuleStyle.prototype, 'type', {
    get: function () {
      return this.type_ujw75g$_0;
    }
  });
  Object.defineProperty(RuleStyle.prototype, 'thickness', {
    get: function () {
      return this.thickness$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('thickness'));
    },
    set: function (thickness) {
      this.thickness$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('thickness'), thickness);
    }
  });
  function RuleStyle$Companion() {
    RuleStyle$Companion_instance = this;
    this.extends_iahzhy$_0 = BoxStyle$Companion_getInstance();
  }
  Object.defineProperty(RuleStyle$Companion.prototype, 'extends', {
    get: function () {
      return this.extends_iahzhy$_0;
    }
  });
  RuleStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var RuleStyle$Companion_instance = null;
  function RuleStyle$Companion_getInstance() {
    if (RuleStyle$Companion_instance === null) {
      new RuleStyle$Companion();
    }
    return RuleStyle$Companion_instance;
  }
  RuleStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'RuleStyle',
    interfaces: [BoxStyle]
  };
  function RuleStyleSerializer() {
    RuleStyleSerializer_instance = this;
  }
  RuleStyleSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    var tmp$;
    BoxStyleSerializer_getInstance().write_r4tkhj$($receiver, writer);
    (tmp$ = styleProperty(writer, $receiver, 'thickness')) != null ? tmp$.float_81sz4$($receiver.thickness) : null;
  };
  RuleStyleSerializer.prototype.read_gax0m7$ = function (reader) {
    var ruleStyle = new RuleStyle();
    BoxStyleSerializer_getInstance().read_vakiwy$(reader, ruleStyle);
    var name = 'thickness';
    var tmp$;
    if (reader.contains_61zpoe$(name)) {
      var tmp$_0;
      ruleStyle.thickness = (tmp$_0 = ((tmp$ = reader.get_61zpoe$(name)) != null ? tmp$ : Kotlin.throwNPE()).float()) != null ? tmp$_0 : Kotlin.throwNPE();
    }
    return ruleStyle;
  };
  RuleStyleSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'RuleStyleSerializer',
    interfaces: [From, To]
  };
  var RuleStyleSerializer_instance = null;
  function RuleStyleSerializer_getInstance() {
    if (RuleStyleSerializer_instance === null) {
      new RuleStyleSerializer();
    }
    return RuleStyleSerializer_instance;
  }
  function hr$lambda($receiver) {
  }
  function hr($receiver, init) {
    if (init === void 0)
      init = hr$lambda;
    var c = new Rule($receiver, false);
    init(c);
    return c;
  }
  function vr$lambda($receiver) {
  }
  function vr($receiver, init) {
    if (init === void 0)
      init = vr$lambda;
    var c = new Rule($receiver, true);
    init(c);
    return c;
  }
  function HScrollBar(owner) {
    HScrollBar$Companion_getInstance();
    ScrollBarBase.call(this, owner);
    addTag(this, HScrollBar$Companion_getInstance());
  }
  HScrollBar.prototype.getModelValue_9wm29l$ = function (position) {
    var tmp$;
    var thumb = (tmp$ = this.thumb) != null ? tmp$ : Kotlin.throwNPE();
    var minX = this.minTrack();
    var maxX = this.maxTrack();
    var pX = (position.x - minX) / (maxX - minX - thumb.width);
    if (pX > 0.99)
      pX = 1.0;
    if (pX < 0.01)
      pX = 0.0;
    return pX * (this.scrollModel.max - this.scrollModel.min) + this.scrollModel.min;
  };
  HScrollBar.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_0;
    var stepUpButton = (tmp$ = this.stepUpButton) != null ? tmp$ : Kotlin.throwNPE();
    var stepDownButton = (tmp$_0 = this.stepDownButton) != null ? tmp$_0 : Kotlin.throwNPE();
    out.width.min = stepUpButton.width + stepDownButton.width;
    var tmp$_1 = out.height;
    var x = stepUpButton.height;
    var y = stepDownButton.height;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    tmp$_1.min = max_sdesaw$result;
  };
  HScrollBar.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var tmp$_6;
    var stepUpButton = (tmp$ = this.stepUpButton) != null ? tmp$ : Kotlin.throwNPE();
    var stepDownButton = (tmp$_0 = this.stepDownButton) != null ? tmp$_0 : Kotlin.throwNPE();
    var track = (tmp$_1 = this.track) != null ? tmp$_1 : Kotlin.throwNPE();
    var thumb = (tmp$_2 = this.thumb) != null ? tmp$_2 : Kotlin.throwNPE();
    var minW = (tmp$_3 = this.minWidth) != null ? tmp$_3 : 0.0;
    var tmp$_7;
    if (explicitWidth != null)
      tmp$_7 = explicitWidth;
    else {
      var y = this.style.defaultSize;
      var max_sdesaw$result;
      if (Kotlin.compareTo(minW, y) >= 0) {
        max_sdesaw$result = minW;
      }
       else {
        max_sdesaw$result = y;
      }
      tmp$_7 = max_sdesaw$result;
    }
    var w = tmp$_7;
    var sUBW = stepUpButton.width;
    var sDBW = stepDownButton.width;
    var x = stepUpButton.height;
    var y_0 = stepDownButton.height;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(x, y_0) >= 0) {
      max_sdesaw$result_0 = x;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    var h = max_sdesaw$result_0;
    var trackLd = (tmp$_4 = track.layoutData) == null || Kotlin.isType(tmp$_4, BasicLayoutData) ? tmp$_4 : Kotlin.throwCCE();
    if (trackLd == null)
      track.setSize_yxjqmk$(w - sUBW - sDBW, h);
    else
      track.setSize_yxjqmk$(trackLd.getPreferredWidth_81sz4$(w - sUBW - sDBW), trackLd.getPreferredHeight_81sz4$(h));
    track.moveTo_y2kzbl$(sUBW, 0.0);
    stepDownButton.moveTo_y2kzbl$(w - stepDownButton.width, 0.0);
    var scrollDiff = this.scrollModel.max - this.scrollModel.min;
    var thumbAvailable = this.maxTrack() - this.minTrack();
    math_0.MathUtils;
    var y_1 = (tmp$_5 = thumb.minWidth) != null ? tmp$_5 : 0.0;
    var max_sdesaw$result_1;
    if (Kotlin.compareTo(1.0, y_1) >= 0) {
      max_sdesaw$result_1 = 1.0;
    }
     else {
      max_sdesaw$result_1 = y_1;
    }
    thumb.visible = thumbAvailable > max_sdesaw$result_1;
    if (thumb.visible) {
      var thumbWidth = thumbAvailable * thumbAvailable / (thumbAvailable + scrollDiff * this.modelToPixels);
      var thumbLd = (tmp$_6 = thumb.layoutData) == null || Kotlin.isType(tmp$_6, BasicLayoutData) ? tmp$_6 : Kotlin.throwCCE();
      if (thumbLd == null)
        thumb.setSize_yxjqmk$(thumbWidth, h);
      else
        thumb.setSize_yxjqmk$(thumbLd.getPreferredWidth_81sz4$(thumbWidth), thumbLd.getPreferredHeight_81sz4$(h));
      this.refreshThumbPosition();
    }
    var $this = math_0.MathUtils;
    var y_2 = track.height;
    var z = thumb.visible ? thumb.height : 0.0;
    $this.max_sdesaw$;
    var max_sdesaw$result_2;
    if (Kotlin.compareTo(h, y_2) >= 0) {
      max_sdesaw$result_2 = h;
    }
     else {
      max_sdesaw$result_2 = y_2;
    }
    var x_0 = max_sdesaw$result_2;
    var inline$result;
    if (Kotlin.compareTo(x_0, z) >= 0) {
      inline$result = x_0;
    }
     else {
      inline$result = z;
    }
    out.set_dleff0$(w, inline$result);
  };
  HScrollBar.prototype.refreshThumbPosition = function () {
    var tmp$;
    var thumb = (tmp$ = this.thumb) != null ? tmp$ : Kotlin.throwNPE();
    var scrollDiff = this.scrollModel.max - this.scrollModel.min;
    var p = scrollDiff <= 1.0E-6 ? 0.0 : (this.scrollModel.value - this.scrollModel.min) / scrollDiff;
    var minX = this.minTrack();
    var maxX = this.maxTrack();
    var w = Math.round(maxX - minX + 1.0E-6) - thumb.width;
    thumb.moveTo_y2kzbl$(p * w + minX, 0.0);
  };
  HScrollBar.prototype.minTrack = function () {
    var tmp$;
    return this.right_aqmtdt$_0((tmp$ = this.stepUpButton) != null ? tmp$ : Kotlin.throwNPE());
  };
  HScrollBar.prototype.right_aqmtdt$_0 = function ($receiver) {
    return $receiver.x + $receiver.width;
  };
  HScrollBar.prototype.maxTrack = function () {
    var tmp$;
    return ((tmp$ = this.stepDownButton) != null ? tmp$ : Kotlin.throwNPE()).x;
  };
  function HScrollBar$Companion() {
    HScrollBar$Companion_instance = this;
  }
  HScrollBar$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var HScrollBar$Companion_instance = null;
  function HScrollBar$Companion_getInstance() {
    if (HScrollBar$Companion_instance === null) {
      new HScrollBar$Companion();
    }
    return HScrollBar$Companion_instance;
  }
  HScrollBar.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HScrollBar',
    interfaces: [ScrollBarBase]
  };
  function hScrollBar$lambda($receiver) {
  }
  function hScrollBar($receiver, init) {
    if (init === void 0)
      init = hScrollBar$lambda;
    var h = new HScrollBar($receiver);
    init(h);
    return h;
  }
  function HSlider(owner) {
    HSlider$Companion_getInstance();
    HScrollBar.call(this, owner);
    addTag(this, HSlider$Companion_getInstance());
    this.pageSize_81sz4$(1.0);
  }
  function HSlider$Companion() {
    HSlider$Companion_instance = this;
  }
  HSlider$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var HSlider$Companion_instance = null;
  function HSlider$Companion_getInstance() {
    if (HSlider$Companion_instance === null) {
      new HSlider$Companion();
    }
    return HSlider$Companion_instance;
  }
  HSlider.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HSlider',
    interfaces: [HScrollBar]
  };
  function hSlider($receiver, init) {
    var h = new HSlider($receiver);
    init(h);
    return h;
  }
  function ScrollArea() {
    ScrollArea$Companion_getInstance();
  }
  ScrollArea.prototype.createLayoutData = function () {
    return new StackLayoutData();
  };
  function ScrollArea$Companion() {
    ScrollArea$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
    this.VBAR_STYLE = styleTag();
    this.HBAR_STYLE = styleTag();
    this.SCROLLING = 1 << 16;
  }
  ScrollArea$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var ScrollArea$Companion_instance = null;
  function ScrollArea$Companion_getInstance() {
    if (ScrollArea$Companion_instance === null) {
      new ScrollArea$Companion();
    }
    return ScrollArea$Companion_instance;
  }
  ScrollArea.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ScrollArea',
    interfaces: [LayoutContainer]
  };
  function ScrollPolicy(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ScrollPolicy_initFields() {
    ScrollPolicy_initFields = function () {
    };
    ScrollPolicy$OFF_instance = new ScrollPolicy('OFF', 0);
    ScrollPolicy$ON_instance = new ScrollPolicy('ON', 1);
    ScrollPolicy$AUTO_instance = new ScrollPolicy('AUTO', 2);
  }
  var ScrollPolicy$OFF_instance;
  function ScrollPolicy$OFF_getInstance() {
    ScrollPolicy_initFields();
    return ScrollPolicy$OFF_instance;
  }
  var ScrollPolicy$ON_instance;
  function ScrollPolicy$ON_getInstance() {
    ScrollPolicy_initFields();
    return ScrollPolicy$ON_instance;
  }
  var ScrollPolicy$AUTO_instance;
  function ScrollPolicy$AUTO_getInstance() {
    ScrollPolicy_initFields();
    return ScrollPolicy$AUTO_instance;
  }
  ScrollPolicy.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScrollPolicy',
    interfaces: [Enum]
  };
  function ScrollPolicy$values() {
    return [ScrollPolicy$OFF_getInstance(), ScrollPolicy$ON_getInstance(), ScrollPolicy$AUTO_getInstance()];
  }
  ScrollPolicy.values = ScrollPolicy$values;
  function ScrollPolicy$valueOf(name) {
    switch (name) {
      case 'OFF':
        return ScrollPolicy$OFF_getInstance();
      case 'ON':
        return ScrollPolicy$ON_getInstance();
      case 'AUTO':
        return ScrollPolicy$AUTO_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.scroll.ScrollPolicy.' + name);
    }
  }
  ScrollPolicy.valueOf_61zpoe$ = ScrollPolicy$valueOf;
  function toCssString($receiver) {
    var tmp$;
    if (Kotlin.equals($receiver, ScrollPolicy$OFF_getInstance()))
      tmp$ = 'hidden';
    else if (Kotlin.equals($receiver, ScrollPolicy$ON_getInstance()))
      tmp$ = 'scroll';
    else if (Kotlin.equals($receiver, ScrollPolicy$AUTO_getInstance()))
      tmp$ = 'auto';
    else
      tmp$ = Kotlin.noWhenBranchMatched();
    return tmp$;
  }
  function scrollArea$lambda($receiver) {
  }
  function scrollArea($receiver, init) {
    if (init === void 0)
      init = scrollArea$lambda;
    var s = $receiver.injector.inject_li8edk$(ScrollArea$Companion_getInstance().FACTORY_KEY)($receiver);
    init(s);
    return s;
  }
  function ScrollAreaStyle() {
    ScrollAreaStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_wugiob$_0 = ScrollAreaStyle$Companion_getInstance();
    this.corner$delegate = this.prop_umlfku$('corner', noSkin);
    this.borderRadius$delegate = this.prop_umlfku$('borderRadius', new Corners());
  }
  Object.defineProperty(ScrollAreaStyle.prototype, 'type', {
    get: function () {
      return this.type_wugiob$_0;
    }
  });
  Object.defineProperty(ScrollAreaStyle.prototype, 'corner', {
    get: function () {
      return this.corner$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('corner'));
    },
    set: function (corner) {
      this.corner$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('corner'), corner);
    }
  });
  Object.defineProperty(ScrollAreaStyle.prototype, 'borderRadius', {
    get: function () {
      return this.borderRadius$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderRadius'));
    },
    set: function (borderRadius) {
      this.borderRadius$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderRadius'), borderRadius);
    }
  });
  function ScrollAreaStyle$Companion() {
    ScrollAreaStyle$Companion_instance = this;
  }
  ScrollAreaStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var ScrollAreaStyle$Companion_instance = null;
  function ScrollAreaStyle$Companion_getInstance() {
    if (ScrollAreaStyle$Companion_instance === null) {
      new ScrollAreaStyle$Companion();
    }
    return ScrollAreaStyle$Companion_instance;
  }
  ScrollAreaStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScrollAreaStyle',
    interfaces: [StyleBase]
  };
  function ScrollBarBase(owner) {
    ContainerImpl.call(this, owner);
    this._scrollModel = own(this, new ScrollModelImpl());
    this.style = style(this, new ScrollBarStyle());
    this.stepSize = 5.0;
    this.modelToPixels = 1.0;
    this.thumbOffset_3sqwx7$_0 = new Vector2();
    this.positionTmp_3sqwx7$_0 = new Vector2();
    this.stepUpButton = null;
    this.stepDownButton = null;
    this.thumb = null;
    this.track = null;
    this.stepUpPressHandler_3sqwx7$_0 = ScrollBarBase$stepUpPressHandler$lambda(this);
    this.stepDownPressHandler_3sqwx7$_0 = ScrollBarBase$stepDownPressHandler$lambda(this);
    this.trackPressHandler_3sqwx7$_0 = ScrollBarBase$trackPressHandler$lambda(this);
    this.trackDragHandler_3sqwx7$_0 = ScrollBarBase$trackDragHandler$lambda(this);
    this.dragStartHandler_3sqwx7$_0 = ScrollBarBase$dragStartHandler$lambda(this);
    this.thumbDragHandler_3sqwx7$_0 = ScrollBarBase$thumbDragHandler$lambda(this);
    this.scrollModel.changed.add_trkh7z$(ScrollBarBase_init$lambda(this));
    onChanged(this.style, ScrollBarBase_init$lambda_0(this));
    this._explicitPageSize_3sqwx7$_0 = null;
  }
  Object.defineProperty(ScrollBarBase.prototype, 'scrollModel', {
    get: function () {
      return this._scrollModel;
    }
  });
  ScrollBarBase.prototype.stepUp = function () {
    this.scrollModel.value = this.scrollModel.rawValue - this.stepSize / this.modelToPixels;
  };
  ScrollBarBase.prototype.stepDown = function () {
    this.scrollModel.value = this.scrollModel.rawValue + this.stepSize / this.modelToPixels;
  };
  ScrollBarBase.prototype.pageUp = function () {
    this.scrollModel.value = this.scrollModel.rawValue - this.pageSize();
  };
  ScrollBarBase.prototype.pageDown = function () {
    this.scrollModel.value = this.scrollModel.rawValue + this.pageSize();
  };
  ScrollBarBase.prototype.pageSize = function () {
    var tmp$;
    if (this._explicitPageSize_3sqwx7$_0 != null)
      return (tmp$ = this._explicitPageSize_3sqwx7$_0) != null ? tmp$ : Kotlin.throwNPE();
    return (this.maxTrack() - this.minTrack()) / this.modelToPixels;
  };
  ScrollBarBase.prototype.pageSize_81sz4$ = function (value) {
    this._explicitPageSize_3sqwx7$_0 = value;
  };
  function ScrollBarBase$stepUpPressHandler$lambda(this$ScrollBarBase) {
    return function (event) {
      this$ScrollBarBase.stepUp();
    };
  }
  function ScrollBarBase$stepDownPressHandler$lambda(this$ScrollBarBase) {
    return function (event) {
      this$ScrollBarBase.stepDown();
    };
  }
  function ScrollBarBase$trackPressHandler$lambda(this$ScrollBarBase) {
    return function (event) {
      event.handled = true;
      event.preventDefault();
      this$ScrollBarBase.mousePosition_9wm29l$(this$ScrollBarBase.positionTmp_3sqwx7$_0);
      var previous = this$ScrollBarBase.scrollModel.value;
      var newValue = this$ScrollBarBase.getModelValue_9wm29l$(this$ScrollBarBase.positionTmp_3sqwx7$_0);
      var pageSize = this$ScrollBarBase.pageSize();
      if (newValue > previous + pageSize)
        newValue = previous + pageSize;
      if (newValue < previous - pageSize)
        newValue = previous - pageSize;
      this$ScrollBarBase.scrollModel.value = newValue;
    };
  }
  function ScrollBarBase$trackDragHandler$lambda(this$ScrollBarBase) {
    return function (event) {
      this$ScrollBarBase.positionTmp_3sqwx7$_0.set_1fv330$(event.position);
      this$ScrollBarBase.windowToLocal_9wm29l$(this$ScrollBarBase.positionTmp_3sqwx7$_0);
      var newValue = this$ScrollBarBase.getModelValue_9wm29l$(this$ScrollBarBase.positionTmp_3sqwx7$_0);
      this$ScrollBarBase.scrollModel.value = newValue;
    };
  }
  function ScrollBarBase$dragStartHandler$lambda(this$ScrollBarBase) {
    return function (it) {
      var tmp$;
      var thumb = (tmp$ = this$ScrollBarBase.thumb) != null ? tmp$ : Kotlin.throwNPE();
      this$ScrollBarBase.mousePosition_9wm29l$(this$ScrollBarBase.thumbOffset_3sqwx7$_0).sub_dleff0$(thumb.x, thumb.y);
    };
  }
  function ScrollBarBase$thumbDragHandler$lambda(this$ScrollBarBase) {
    return function (it) {
      this$ScrollBarBase.mousePosition_9wm29l$(this$ScrollBarBase.positionTmp_3sqwx7$_0).sub_1fv330$(this$ScrollBarBase.thumbOffset_3sqwx7$_0);
      this$ScrollBarBase.scrollModel.rawValue = this$ScrollBarBase.getModelValue_9wm29l$(this$ScrollBarBase.positionTmp_3sqwx7$_0);
    };
  }
  function ScrollBarBase_init$lambda(this$ScrollBarBase) {
    return function (it) {
      this$ScrollBarBase.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  function ScrollBarBase_init$lambda_0(this$ScrollBarBase) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
      this$ScrollBarBase.dispose_erfg6z$(this$ScrollBarBase.track);
      this$ScrollBarBase.track = this$ScrollBarBase.addChild_mxweac$(it.track(this$ScrollBarBase));
      cursor((tmp$ = this$ScrollBarBase.track) != null ? tmp$ : Kotlin.throwNPE(), StandardCursors_getInstance().HAND);
      this$ScrollBarBase.dispose_erfg6z$(this$ScrollBarBase.stepUpButton);
      this$ScrollBarBase.stepUpButton = this$ScrollBarBase.addChild_mxweac$(it.stepUpButton(this$ScrollBarBase));
      mouseDown((tmp$_0 = this$ScrollBarBase.stepUpButton) != null ? tmp$_0 : Kotlin.throwNPE()).add_trkh7z$(this$ScrollBarBase.stepUpPressHandler_3sqwx7$_0);
      this$ScrollBarBase.dispose_erfg6z$(this$ScrollBarBase.stepDownButton);
      this$ScrollBarBase.stepDownButton = this$ScrollBarBase.addChild_mxweac$(it.stepDownButton(this$ScrollBarBase));
      mouseDown((tmp$_1 = this$ScrollBarBase.stepDownButton) != null ? tmp$_1 : Kotlin.throwNPE()).add_trkh7z$(this$ScrollBarBase.stepDownPressHandler_3sqwx7$_0);
      this$ScrollBarBase.dispose_erfg6z$(this$ScrollBarBase.thumb);
      this$ScrollBarBase.thumb = this$ScrollBarBase.addChild_mxweac$(it.thumb(this$ScrollBarBase));
      var thumb = (tmp$_2 = this$ScrollBarBase.thumb) != null ? tmp$_2 : Kotlin.throwNPE();
      if (it.pageMode) {
        mouseDown((tmp$_3 = this$ScrollBarBase.track) != null ? tmp$_3 : Kotlin.throwNPE()).add_trkh7z$(this$ScrollBarBase.trackPressHandler_3sqwx7$_0);
        var thumbDrag = dragAttachment(thumb, 0.0);
        thumbDrag.dragStart.add_trkh7z$(this$ScrollBarBase.dragStartHandler_3sqwx7$_0);
        thumbDrag.drag.add_trkh7z$(this$ScrollBarBase.thumbDragHandler_3sqwx7$_0);
      }
       else {
        thumb.interactivityMode = InteractivityMode$NONE_getInstance();
        dragAttachment((tmp$_4 = this$ScrollBarBase.track) != null ? tmp$_4 : Kotlin.throwNPE(), 0.0);
        drag((tmp$_5 = this$ScrollBarBase.track) != null ? tmp$_5 : Kotlin.throwNPE()).add_trkh7z$(this$ScrollBarBase.trackDragHandler_3sqwx7$_0);
      }
    };
  }
  ScrollBarBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScrollBarBase',
    interfaces: [ContainerImpl]
  };
  function ScrollBarStyle() {
    ScrollBarStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_wndfj1$_0 = ScrollBarStyle$Companion_getInstance();
    this.defaultSize$delegate = this.prop_umlfku$('defaultSize', 0.0);
    this.stepUpButton$delegate = this.prop_umlfku$('stepUpButton', noSkin);
    this.stepDownButton$delegate = this.prop_umlfku$('stepDownButton', noSkin);
    this.track$delegate = this.prop_umlfku$('track', noSkin);
    this.thumb$delegate = this.prop_umlfku$('thumb', noSkin);
    this.pageMode$delegate = this.prop_umlfku$('pageMode', true);
  }
  Object.defineProperty(ScrollBarStyle.prototype, 'type', {
    get: function () {
      return this.type_wndfj1$_0;
    }
  });
  Object.defineProperty(ScrollBarStyle.prototype, 'defaultSize', {
    get: function () {
      return this.defaultSize$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('defaultSize'));
    },
    set: function (defaultSize) {
      this.defaultSize$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('defaultSize'), defaultSize);
    }
  });
  Object.defineProperty(ScrollBarStyle.prototype, 'stepUpButton', {
    get: function () {
      return this.stepUpButton$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('stepUpButton'));
    },
    set: function (stepUpButton) {
      this.stepUpButton$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('stepUpButton'), stepUpButton);
    }
  });
  Object.defineProperty(ScrollBarStyle.prototype, 'stepDownButton', {
    get: function () {
      return this.stepDownButton$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('stepDownButton'));
    },
    set: function (stepDownButton) {
      this.stepDownButton$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('stepDownButton'), stepDownButton);
    }
  });
  Object.defineProperty(ScrollBarStyle.prototype, 'track', {
    get: function () {
      return this.track$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('track'));
    },
    set: function (track) {
      this.track$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('track'), track);
    }
  });
  Object.defineProperty(ScrollBarStyle.prototype, 'thumb', {
    get: function () {
      return this.thumb$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('thumb'));
    },
    set: function (thumb) {
      this.thumb$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('thumb'), thumb);
    }
  });
  Object.defineProperty(ScrollBarStyle.prototype, 'pageMode', {
    get: function () {
      return this.pageMode$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('pageMode'));
    },
    set: function (pageMode) {
      this.pageMode$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('pageMode'), pageMode);
    }
  });
  function ScrollBarStyle$Companion() {
    ScrollBarStyle$Companion_instance = this;
  }
  ScrollBarStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var ScrollBarStyle$Companion_instance = null;
  function ScrollBarStyle$Companion_getInstance() {
    if (ScrollBarStyle$Companion_instance === null) {
      new ScrollBarStyle$Companion();
    }
    return ScrollBarStyle$Companion_instance;
  }
  ScrollBarStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScrollBarStyle',
    interfaces: [StyleBase]
  };
  function ScrollModel() {
  }
  Object.defineProperty(ScrollModel.prototype, 'value', {
    get: function () {
      return this.rawValue;
    }
  });
  ScrollModel.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ScrollModel',
    interfaces: []
  };
  function MutableScrollModel() {
  }
  Object.defineProperty(MutableScrollModel.prototype, 'value', {
    get: function () {
      return this.rawValue;
    },
    set: function (value) {
      if (value === this.rawValue)
        return;
      this.rawValue = value;
    }
  });
  MutableScrollModel.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableScrollModel',
    interfaces: [ScrollModel]
  };
  function ClampedScrollModel() {
  }
  ClampedScrollModel.prototype.clamp_mx4ult$ = function (value) {
    var min = this.min;
    var max = this.max;
    var clamp_73gzaq$result;
    clamp_73gzaq$break: {
      if (Kotlin.compareTo(value, min) <= 0) {
        clamp_73gzaq$result = min;
        break clamp_73gzaq$break;
      }
      if (Kotlin.compareTo(value, max) >= 0) {
        clamp_73gzaq$result = max;
        break clamp_73gzaq$break;
      }
      clamp_73gzaq$result = value;
    }
    return clamp_73gzaq$result;
  };
  ClampedScrollModel.prototype.snap_mx4ult$ = function (value) {
    if (this.snap <= 0)
      return value;
    var v = value - this.min;
    v /= this.snap;
    var v_0 = v;
    v = Math.round(v_0);
    v *= this.snap;
    return v + this.min;
  };
  Object.defineProperty(ClampedScrollModel.prototype, 'value', {
    get: function () {
      return this.clamp_mx4ult$(this.snap_mx4ult$(this.rawValue));
    }
  });
  ClampedScrollModel.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ClampedScrollModel',
    interfaces: [ScrollModel]
  };
  function MutableClampedScrollModel() {
  }
  Object.defineProperty(MutableClampedScrollModel.prototype, 'value', {
    get: function () {
      return this.clamp_mx4ult$(this.snap_mx4ult$(this.rawValue));
    },
    set: function (value) {
      var newValue = this.clamp_mx4ult$(value);
      if (newValue === this.rawValue)
        return;
      this.rawValue = newValue;
    }
  });
  MutableClampedScrollModel.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableClampedScrollModel',
    interfaces: [MutableScrollModel, ClampedScrollModel]
  };
  function ScrollModelImpl(value, min, max, snap) {
    if (value === void 0)
      value = 0.0;
    if (min === void 0)
      min = 0.0;
    if (max === void 0)
      max = 0.0;
    if (snap === void 0)
      snap = 0.0;
    this.changed_c4zmb4$_0 = new Signal1();
    this.min$delegate = this.bindable_0(min);
    this.max$delegate = this.bindable_0(max);
    this.snap$delegate = this.bindable_0(snap);
    this.rawValue$delegate = this.bindable_0(value);
  }
  Object.defineProperty(ScrollModelImpl.prototype, 'changed', {
    get: function () {
      return this.changed_c4zmb4$_0;
    }
  });
  function ScrollModelImpl$bindable$lambda(this$ScrollModelImpl) {
    return function (meta, old, new_0) {
      if (!Kotlin.equals(old, new_0))
        this$ScrollModelImpl.changed.dispatch_11rb$(this$ScrollModelImpl);
    };
  }
  ScrollModelImpl.prototype.bindable_0 = function (initial) {
    return new Kotlin.kotlin.properties.Delegates.observable$f(ScrollModelImpl$bindable$lambda(this), initial);
  };
  Object.defineProperty(ScrollModelImpl.prototype, 'min', {
    get: function () {
      return this.min$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('min'));
    },
    set: function (min) {
      this.min$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('min'), min);
    }
  });
  Object.defineProperty(ScrollModelImpl.prototype, 'max', {
    get: function () {
      return this.max$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('max'));
    },
    set: function (max) {
      this.max$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('max'), max);
    }
  });
  Object.defineProperty(ScrollModelImpl.prototype, 'snap', {
    get: function () {
      return this.snap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('snap'));
    },
    set: function (snap) {
      this.snap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('snap'), snap);
    }
  });
  Object.defineProperty(ScrollModelImpl.prototype, 'rawValue', {
    get: function () {
      return this.rawValue$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('rawValue'));
    },
    set: function (rawValue) {
      this.rawValue$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('rawValue'), rawValue);
    }
  });
  ScrollModelImpl.prototype.toString = function () {
    return '[ScrollModel value=' + this.rawValue + ' min=' + this.min + ' max=' + this.max;
  };
  ScrollModelImpl.prototype.dispose = function () {
    this.changed.dispose();
  };
  ScrollModelImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ScrollModelImpl',
    interfaces: [Disposable, MutableClampedScrollModel]
  };
  function ScrollRect() {
    ScrollRect$Companion_getInstance();
  }
  Object.defineProperty(ScrollRect.prototype, 'contentsWidth', {
    get: function () {
      return this.contentBounds.width;
    }
  });
  Object.defineProperty(ScrollRect.prototype, 'contentsHeight', {
    get: function () {
      return this.contentBounds.height;
    }
  });
  function ScrollRect$Companion() {
    ScrollRect$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  ScrollRect$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ScrollRect$Companion_instance = null;
  function ScrollRect$Companion_getInstance() {
    if (ScrollRect$Companion_instance === null) {
      new ScrollRect$Companion();
    }
    return ScrollRect$Companion_instance;
  }
  ScrollRect.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ScrollRect',
    interfaces: [ElementContainer]
  };
  function scrollRect$lambda($receiver) {
  }
  function scrollRect($receiver, init) {
    if (init === void 0)
      init = scrollRect$lambda;
    var s = $receiver.injector.inject_li8edk$(ScrollRect$Companion_getInstance().FACTORY_KEY)($receiver);
    init(s);
    return s;
  }
  function TossScroller(target, dampening, dragAttachment_0) {
    TossScroller$Companion_getInstance();
    if (dampening === void 0)
      dampening = TossScroller$Companion_getInstance().DEFAULT_DAMPENING;
    if (dragAttachment_0 === void 0)
      dragAttachment_0 = dragAttachment(target, TossScroller$Companion_getInstance().minTossDistance);
    this.target = target;
    this.dampening = dampening;
    this.dragAttachment = dragAttachment_0;
    this.stepTime_0 = inject(this.target, AppConfig$Companion_getInstance()).stepTime;
    this._tossStart_0 = new StoppableSignalImpl();
    this._toss_0 = new StoppableSignalImpl();
    this._tossEnd_0 = new StoppableSignalImpl();
    this.velocity_0 = new Vector2();
    this.event_0 = new DragEvent();
    this.startElement_0 = null;
    this.startPosition_0 = new Vector2();
    this.position_0 = new Vector2();
    this.historyPoints_0 = ArrayList_init();
    this.historyTimes_0 = ArrayList_init();
    this._timer_0 = null;
    this.clickPreventer_0 = 0;
    this.diff_0 = new Vector2();
    this.dragStartHandler_0 = TossScroller$dragStartHandler$lambda(this);
    this.dragHandler_0 = TossScroller$dragHandler$lambda(this);
    this.dragEndHandler_0 = TossScroller$dragEndHandler$lambda(this);
    this.clickHandler_0 = TossScroller$clickHandler$lambda(this);
    this.dragAttachment.dragStart.add_trkh7z$(this.dragStartHandler_0);
    this.dragAttachment.drag.add_trkh7z$(this.dragHandler_0);
    this.dragAttachment.dragEnd.add_trkh7z$(this.dragEndHandler_0);
    click(this.target, true).add_trkh7z$(this.clickHandler_0);
  }
  Object.defineProperty(TossScroller.prototype, 'tossStart', {
    get: function () {
      return this._tossStart_0;
    }
  });
  Object.defineProperty(TossScroller.prototype, 'toss', {
    get: function () {
      return this._toss_0;
    }
  });
  Object.defineProperty(TossScroller.prototype, 'tossEnd', {
    get: function () {
      return this._tossEnd_0;
    }
  });
  TossScroller.prototype.pushHistory_0 = function () {
    this.historyPoints_0.add_11rb$(Vector2.Companion.obtain().set_dleff0$(this.position_0.x, this.position_0.y));
    this.historyTimes_0.add_11rb$(get_time().nowMs());
    if (this.historyPoints_0.size > TossScroller$Companion_getInstance().MAX_HISTORY_0) {
      poll(this.historyPoints_0).free();
      poll(this.historyTimes_0);
    }
  };
  function TossScroller$startEnterFrame$lambda(this$TossScroller) {
    return function () {
      var tmp$;
      if (this$TossScroller.dragAttachment.isDragging) {
        this$TossScroller.pushHistory_0();
      }
       else {
        if (this$TossScroller.clickPreventer_0 > 0) {
          tmp$ = this$TossScroller.clickPreventer_0;
          this$TossScroller.clickPreventer_0 = tmp$ - 1 | 0;
        }
        this$TossScroller.velocity_0.scl_mx4ult$(this$TossScroller.dampening);
        this$TossScroller.position_0.add_1fv330$(this$TossScroller.velocity_0);
        this$TossScroller.dispatchDragEvent_0(TossScroller$Companion_getInstance().TOSS, this$TossScroller._toss_0);
        if (this$TossScroller.velocity_0.isZero_mx4ult$(0.1)) {
          this$TossScroller.stop();
        }
      }
    };
  }
  TossScroller.prototype.startEnterFrame_0 = function () {
    if (this._timer_0 == null) {
      this._timer_0 = enterFrame(this.target, void 0, TossScroller$startEnterFrame$lambda(this));
    }
  };
  TossScroller.prototype.dispatchDragEvent_0 = function (type, signal_0) {
    this.event_0.clear();
    this.event_0.type = type;
    this.event_0.startElement = this.startElement_0;
    this.event_0.startPosition.set_1fv330$(this.startPosition_0);
    this.event_0.position.set_1fv330$(this.position_0);
    signal_0.dispatch_n80keo$(this.event_0);
  };
  TossScroller.prototype.clearHistory_0 = function () {
    var tmp$;
    tmp$ = get_lastIndex(this.historyPoints_0);
    for (var i = 0; i <= tmp$; i++) {
      this.historyPoints_0.get_za3lpa$(i).free();
    }
    this.historyPoints_0.clear();
    this.historyTimes_0.clear();
  };
  Object.defineProperty(TossScroller.prototype, 'enabled', {
    get: function () {
      return this.dragAttachment.enabled;
    },
    set: function (value) {
      this.dragAttachment.enabled = value;
    }
  });
  TossScroller.prototype.stop = function () {
    var tmp$;
    if (!this.velocity_0.isZero() || this._timer_0 != null) {
      this.dispatchDragEvent_0(TossScroller$Companion_getInstance().TOSS_END, this._tossEnd_0);
      this.clickPreventer_0 = 0;
      this.velocity_0.clear();
      (tmp$ = this._timer_0) != null ? tmp$.stop() : null;
      this._timer_0 = null;
      this.startElement_0 = null;
      this.event_0.clear();
    }
  };
  TossScroller.prototype.dispose = function () {
    this.stop();
    this._tossStart_0.dispose();
    this._toss_0.dispose();
    this._tossEnd_0.dispose();
    this.dragAttachment.dragStart.remove_trkh7z$(this.dragStartHandler_0);
    this.dragAttachment.drag.remove_trkh7z$(this.dragHandler_0);
    this.dragAttachment.dragEnd.remove_trkh7z$(this.dragEndHandler_0);
    click(this.target, true).remove_trkh7z$(this.clickHandler_0);
  };
  function TossScroller$Companion() {
    TossScroller$Companion_instance = this;
    this.TOSS_START = new InteractionType('tossStart');
    this.TOSS = new InteractionType('toss');
    this.TOSS_END = new InteractionType('tossEnd');
    this.DEFAULT_DAMPENING = 0.9;
    this.MAX_HISTORY_0 = 5;
    this.minTossDistance = 7.0;
  }
  TossScroller$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TossScroller$Companion_instance = null;
  function TossScroller$Companion_getInstance() {
    if (TossScroller$Companion_instance === null) {
      new TossScroller$Companion();
    }
    return TossScroller$Companion_instance;
  }
  function TossScroller$dragStartHandler$lambda(this$TossScroller) {
    return function (event) {
      this$TossScroller.stop();
      this$TossScroller.startPosition_0.set_1fv330$(event.startPosition);
      this$TossScroller.position_0.set_1fv330$(event.position);
      this$TossScroller.startElement_0 = event.startElement;
      this$TossScroller.clickPreventer_0 = 5;
      this$TossScroller.clearHistory_0();
      this$TossScroller.pushHistory_0();
      this$TossScroller.startEnterFrame_0();
      this$TossScroller.dispatchDragEvent_0(TossScroller$Companion_getInstance().TOSS_START, this$TossScroller._tossStart_0);
      kotlin_0.Unit;
    };
  }
  function TossScroller$dragHandler$lambda(this$TossScroller) {
    return function (event) {
      this$TossScroller.position_0.set_1fv330$(event.position);
      this$TossScroller.dispatchDragEvent_0(TossScroller$Companion_getInstance().TOSS, this$TossScroller._toss_0);
      kotlin_0.Unit;
    };
  }
  function TossScroller$dragEndHandler$lambda(this$TossScroller) {
    return function (event) {
      this$TossScroller.pushHistory_0();
      if (this$TossScroller.historyPoints_0.size >= 2) {
        this$TossScroller.diff_0.set_1fv330$(last(this$TossScroller.historyPoints_0)).sub_1fv330$(first(this$TossScroller.historyPoints_0));
        var time_0 = last(this$TossScroller.historyTimes_0).subtract(first(this$TossScroller.historyTimes_0)).toNumber() * 0.001;
        this$TossScroller.velocity_0.set_dleff0$(this$TossScroller.diff_0.x / time_0, this$TossScroller.diff_0.y / time_0).scl_mx4ult$(this$TossScroller.stepTime_0);
      }
      this$TossScroller.clearHistory_0();
    };
  }
  function TossScroller$clickHandler$lambda(this$TossScroller) {
    return function (event) {
      if (this$TossScroller.clickPreventer_0 > 0) {
        event.propagation.stopImmediatePropagation();
      }
    };
  }
  TossScroller.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TossScroller',
    interfaces: [Disposable]
  };
  function TossScrollModelBinding(tossScroller, hScrollModel, vScrollModel) {
    this.tossScroller = tossScroller;
    this.hScrollModel = hScrollModel;
    this.vScrollModel = vScrollModel;
    this.modelToPixelsX = 1.0;
    this.modelToPixelsY = 1.0;
    this.modelStart_0 = new Vector2();
    this.diffPixels_0 = new Vector2();
    this.matrix_0 = null;
    this.tossStartHandler_0 = TossScrollModelBinding$tossStartHandler$lambda(this);
    this.changedHandler_0 = TossScrollModelBinding$changedHandler$lambda(this);
    this.tossScroller.tossStart.add_trkh7z$(this.tossStartHandler_0);
    this.tossScroller.toss.add_trkh7z$(this.changedHandler_0);
  }
  TossScrollModelBinding.prototype.dispose = function () {
    this.tossScroller.tossStart.remove_trkh7z$(this.tossStartHandler_0);
    this.tossScroller.toss.remove_trkh7z$(this.changedHandler_0);
    this.matrix_0 = null;
  };
  function TossScrollModelBinding$tossStartHandler$lambda(this$TossScrollModelBinding) {
    return function (event) {
      this$TossScrollModelBinding.modelStart_0.set_dleff0$(this$TossScrollModelBinding.hScrollModel.value, this$TossScrollModelBinding.vScrollModel.value);
      this$TossScrollModelBinding.matrix_0 = this$TossScrollModelBinding.tossScroller.target.concatenatedTransformInv;
    };
  }
  function TossScrollModelBinding$changedHandler$lambda(this$TossScrollModelBinding) {
    return function (event) {
      var tmp$;
      var cM = (tmp$ = this$TossScrollModelBinding.matrix_0) != null ? tmp$ : Kotlin.throwNPE();
      this$TossScrollModelBinding.diffPixels_0.set_1fv330$(event.startPosition).sub_1fv330$(event.position);
      cM.rot_9wm29l$(this$TossScrollModelBinding.diffPixels_0);
      this$TossScrollModelBinding.hScrollModel.value = this$TossScrollModelBinding.modelStart_0.x + this$TossScrollModelBinding.diffPixels_0.x / this$TossScrollModelBinding.modelToPixelsX;
      this$TossScrollModelBinding.vScrollModel.value = this$TossScrollModelBinding.modelStart_0.y + this$TossScrollModelBinding.diffPixels_0.y / this$TossScrollModelBinding.modelToPixelsY;
      kotlin_0.Unit;
    };
  }
  TossScrollModelBinding.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TossScrollModelBinding',
    interfaces: [Disposable]
  };
  function enableTossScrolling$lambda(this$enableTossScrolling, closure$dampening) {
    return function () {
      return new TossScroller(this$enableTossScrolling, closure$dampening);
    };
  }
  function enableTossScrolling($receiver, dampening) {
    if (dampening === void 0)
      dampening = TossScroller$Companion_getInstance().DEFAULT_DAMPENING;
    return createOrReuseAttachment($receiver, TossScroller$Companion_getInstance(), enableTossScrolling$lambda($receiver, dampening));
  }
  function disableTossScrolling($receiver) {
    var tmp$;
    (tmp$ = $receiver.removeAttachment_pgxeca$(TossScroller$Companion_getInstance())) != null ? tmp$.dispose() : null;
  }
  function VScrollBar(owner) {
    VScrollBar$Companion_getInstance();
    ScrollBarBase.call(this, owner);
    addTag(this, VScrollBar$Companion_getInstance());
  }
  VScrollBar.prototype.getModelValue_9wm29l$ = function (position) {
    var tmp$;
    var thumb = (tmp$ = this.thumb) != null ? tmp$ : Kotlin.throwNPE();
    var minY = this.minTrack();
    var maxY = this.maxTrack();
    var pY = (position.y - minY) / (maxY - minY - thumb.height);
    if (pY > 0.99)
      pY = 1.0;
    if (pY < 0.01)
      pY = 0.0;
    return pY * (this.scrollModel.max - this.scrollModel.min) + this.scrollModel.min;
  };
  VScrollBar.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_0;
    var stepUpButton = (tmp$ = this.stepUpButton) != null ? tmp$ : Kotlin.throwNPE();
    var stepDownButton = (tmp$_0 = this.stepDownButton) != null ? tmp$_0 : Kotlin.throwNPE();
    out.height.min = stepUpButton.height + stepDownButton.height;
    var tmp$_1 = out.width;
    var x = stepUpButton.width;
    var y = stepDownButton.width;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    tmp$_1.min = max_sdesaw$result;
  };
  VScrollBar.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var tmp$_6;
    var stepUpButton = (tmp$ = this.stepUpButton) != null ? tmp$ : Kotlin.throwNPE();
    var stepDownButton = (tmp$_0 = this.stepDownButton) != null ? tmp$_0 : Kotlin.throwNPE();
    var track = (tmp$_1 = this.track) != null ? tmp$_1 : Kotlin.throwNPE();
    var thumb = (tmp$_2 = this.thumb) != null ? tmp$_2 : Kotlin.throwNPE();
    var minH = (tmp$_3 = this.minHeight) != null ? tmp$_3 : 0.0;
    var tmp$_7;
    if (explicitHeight != null)
      tmp$_7 = explicitHeight;
    else {
      var y = this.style.defaultSize;
      var max_sdesaw$result;
      if (Kotlin.compareTo(minH, y) >= 0) {
        max_sdesaw$result = minH;
      }
       else {
        max_sdesaw$result = y;
      }
      tmp$_7 = max_sdesaw$result;
    }
    var h = tmp$_7;
    var sUbh = stepUpButton.height;
    var sDbh = stepDownButton.height;
    var x = stepUpButton.width;
    var y_0 = stepDownButton.width;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(x, y_0) >= 0) {
      max_sdesaw$result_0 = x;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    var w = max_sdesaw$result_0;
    var trackLd = (tmp$_4 = track.layoutData) == null || Kotlin.isType(tmp$_4, BasicLayoutData) ? tmp$_4 : Kotlin.throwCCE();
    if (trackLd == null)
      track.setSize_yxjqmk$(w, h - sUbh - sDbh);
    else
      track.setSize_yxjqmk$(trackLd.getPreferredWidth_81sz4$(w), trackLd.getPreferredHeight_81sz4$(h - sUbh - sDbh));
    track.moveTo_y2kzbl$(0.0, sUbh);
    stepDownButton.moveTo_y2kzbl$(0.0, h - stepDownButton.height);
    var scrollDiff = this.scrollModel.max - this.scrollModel.min;
    var thumbAvailable = this.maxTrack() - this.minTrack();
    math_0.MathUtils;
    var y_1 = (tmp$_5 = thumb.minHeight) != null ? tmp$_5 : 0.0;
    var max_sdesaw$result_1;
    if (Kotlin.compareTo(1.0, y_1) >= 0) {
      max_sdesaw$result_1 = 1.0;
    }
     else {
      max_sdesaw$result_1 = y_1;
    }
    thumb.visible = thumbAvailable > max_sdesaw$result_1;
    if (thumb.visible) {
      var thumbHeight = thumbAvailable * thumbAvailable / (thumbAvailable + scrollDiff * this.modelToPixels);
      var thumbLd = (tmp$_6 = thumb.layoutData) == null || Kotlin.isType(tmp$_6, BasicLayoutData) ? tmp$_6 : Kotlin.throwCCE();
      if (thumbLd == null)
        thumb.setSize_yxjqmk$(w, thumbHeight);
      else
        thumb.setSize_yxjqmk$(thumbLd.getPreferredWidth_81sz4$(w), thumbLd.getPreferredHeight_81sz4$(thumbHeight));
      this.refreshThumbPosition();
    }
    var $this = math_0.MathUtils;
    var y_2 = track.width;
    var z = thumb.visible ? thumb.width : 0.0;
    $this.max_sdesaw$;
    var max_sdesaw$result_2;
    if (Kotlin.compareTo(w, y_2) >= 0) {
      max_sdesaw$result_2 = w;
    }
     else {
      max_sdesaw$result_2 = y_2;
    }
    var x_0 = max_sdesaw$result_2;
    var inline$result;
    if (Kotlin.compareTo(x_0, z) >= 0) {
      inline$result = x_0;
    }
     else {
      inline$result = z;
    }
    out.set_dleff0$(inline$result, h);
  };
  VScrollBar.prototype.refreshThumbPosition = function () {
    var tmp$;
    var thumb = (tmp$ = this.thumb) != null ? tmp$ : Kotlin.throwNPE();
    var scrollDiff = this.scrollModel.max - this.scrollModel.min;
    var p = scrollDiff <= 1.0E-6 ? 0.0 : (this.scrollModel.value - this.scrollModel.min) / scrollDiff;
    var minY = this.minTrack();
    var maxY = this.maxTrack();
    var h = Math.round(maxY - minY + 1.0E-6) - thumb.height;
    thumb.moveTo_y2kzbl$(0.0, p * h + minY);
  };
  VScrollBar.prototype.minTrack = function () {
    var tmp$;
    return this.bottom_lnypxp$_0((tmp$ = this.stepUpButton) != null ? tmp$ : Kotlin.throwNPE());
  };
  VScrollBar.prototype.bottom_lnypxp$_0 = function ($receiver) {
    return $receiver.y + $receiver.height;
  };
  VScrollBar.prototype.maxTrack = function () {
    var tmp$;
    return ((tmp$ = this.stepDownButton) != null ? tmp$ : Kotlin.throwNPE()).y;
  };
  function VScrollBar$Companion() {
    VScrollBar$Companion_instance = this;
  }
  VScrollBar$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var VScrollBar$Companion_instance = null;
  function VScrollBar$Companion_getInstance() {
    if (VScrollBar$Companion_instance === null) {
      new VScrollBar$Companion();
    }
    return VScrollBar$Companion_instance;
  }
  VScrollBar.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VScrollBar',
    interfaces: [ScrollBarBase]
  };
  function vScrollBar$lambda($receiver) {
  }
  function vScrollBar($receiver, init) {
    if (init === void 0)
      init = vScrollBar$lambda;
    var v = new VScrollBar($receiver);
    init(v);
    return v;
  }
  function VSlider(owner) {
    VSlider$Companion_getInstance();
    VScrollBar.call(this, owner);
    addTag(this, VSlider$Companion_getInstance());
    this.pageSize_81sz4$(1.0);
  }
  function VSlider$Companion() {
    VSlider$Companion_instance = this;
  }
  VSlider$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var VSlider$Companion_instance = null;
  function VSlider$Companion_getInstance() {
    if (VSlider$Companion_instance === null) {
      new VSlider$Companion();
    }
    return VSlider$Companion_instance;
  }
  VSlider.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VSlider',
    interfaces: [VScrollBar]
  };
  function vSlider($receiver, init) {
    var h = new VSlider($receiver);
    init(h);
    return h;
  }
  function SimpleItemRenderer(owner, formatter) {
    SimpleItemRenderer$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.formatter_0 = formatter;
    this.focusEnabled_udszz1$_0 = true;
    this.focusOrder_udszz1$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.evenState_0 = this.unaryPlus_8db8yx$(button(this, SimpleItemRenderer$evenState$lambda));
    this.oddState_0 = this.unaryPlus_8db8yx$(button(this, SimpleItemRenderer$oddState$lambda));
    this._selected_0 = false;
    this._index_0 = -1;
    this._data_0 = null;
  }
  Object.defineProperty(SimpleItemRenderer.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_udszz1$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_udszz1$_0 = focusEnabled;
    }
  });
  Object.defineProperty(SimpleItemRenderer.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_udszz1$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_udszz1$_0 = focusOrder;
    }
  });
  Object.defineProperty(SimpleItemRenderer.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(SimpleItemRenderer.prototype, 'selected', {
    get: function () {
      return this._selected_0;
    },
    set: function (value) {
      this._selected_0 = value;
      this.evenState_0.selected = value;
      this.oddState_0.selected = value;
    }
  });
  Object.defineProperty(SimpleItemRenderer.prototype, 'index', {
    get: function () {
      return this._index_0;
    },
    set: function (value) {
      this._index_0 = value;
      if (value % 2 === 0) {
        this.evenState_0.visible = true;
      }
       else {
        this.oddState_0.visible = true;
      }
    }
  });
  Object.defineProperty(SimpleItemRenderer.prototype, 'data', {
    get: function () {
      return this._data_0;
    },
    set: function (value) {
      if (Kotlin.equals(this._data_0, value))
        return;
      this._data_0 = value;
      var text_2 = value == null ? '' : this.formatter_0.format_trkh7z$(value);
      this.evenState_0.label = text_2;
      this.oddState_0.label = text_2;
    }
  });
  SimpleItemRenderer.prototype.updateSizeConstraints_mby7og$ = function (out) {
    out.bound_mby7og$(this.evenState_0.sizeConstraints);
    out.bound_mby7og$(this.oddState_0.sizeConstraints);
  };
  SimpleItemRenderer.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    ElementContainerImpl.prototype.updateLayout_64u75x$.call(this, explicitWidth, explicitHeight, out);
    this.evenState_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    this.oddState_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    var x = this.evenState_0.width;
    var y = this.oddState_0.width;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    var tmp$_0 = max_sdesaw$result;
    var x_0 = this.evenState_0.height;
    var y_0 = this.oddState_0.height;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(x_0, y_0) >= 0) {
      max_sdesaw$result_0 = x_0;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    out.set_dleff0$(tmp$_0, max_sdesaw$result_0);
    (tmp$ = this.highlight) != null ? tmp$.setSize_i12l7q$(out) : null;
  };
  function SimpleItemRenderer$Companion() {
    SimpleItemRenderer$Companion_instance = this;
    this.EVEN_STYLE = styleTag();
    this.ODD_STYLE = styleTag();
  }
  SimpleItemRenderer$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var SimpleItemRenderer$Companion_instance = null;
  function SimpleItemRenderer$Companion_getInstance() {
    if (SimpleItemRenderer$Companion_instance === null) {
      new SimpleItemRenderer$Companion();
    }
    return SimpleItemRenderer$Companion_instance;
  }
  function SimpleItemRenderer$evenState$lambda($receiver) {
    $receiver.visible = false;
    addTag($receiver, SimpleItemRenderer$Companion_getInstance().EVEN_STYLE);
  }
  function SimpleItemRenderer$oddState$lambda($receiver) {
    $receiver.visible = false;
    addTag($receiver, SimpleItemRenderer$Companion_getInstance().ODD_STYLE);
  }
  SimpleItemRenderer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'SimpleItemRenderer',
    interfaces: [Focusable, ItemRenderer, ElementContainerImpl]
  };
  function simpleItemRenderer$lambda($receiver) {
  }
  function simpleItemRenderer($receiver, formatter, init) {
    if (formatter === void 0)
      formatter = ToStringFormatter_getInstance();
    if (init === void 0)
      init = simpleItemRenderer$lambda;
    var renderer = new SimpleItemRenderer($receiver, formatter);
    init(renderer);
    return renderer;
  }
  function StackLayout() {
    this.changed_x2zfiv$_0 = new Signal0();
    this.padding$delegate = bindable(this.changed, Pad_init());
    this.verticalAlign$delegate = bindable(this.changed, VAlign$TOP_getInstance());
    this.horizontalAlign$delegate = bindable(this.changed, HAlign$LEFT_getInstance());
  }
  Object.defineProperty(StackLayout.prototype, 'changed', {
    get: function () {
      return this.changed_x2zfiv$_0;
    }
  });
  Object.defineProperty(StackLayout.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(StackLayout.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(StackLayout.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  StackLayout.prototype.calculateSizeConstraints_raz34u$ = function (elements, out) {
    var tmp$;
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      out.bound_mby7og$(elements.get_za3lpa$(i).sizeConstraints);
    }
    out.width.min = this.padding.expandWidth_81sz4$(out.width.min);
    out.height.min = this.padding.expandHeight_81sz4$(out.height.min);
  };
  StackLayout.prototype.layout_dyymdl$ = function (explicitWidth, explicitHeight, elements, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    var pad = this.padding;
    var childAvailableWidth = pad.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = pad.reduceHeight_81sz4$(explicitHeight);
    tmp$ = get_lastIndex(elements);
    for (var i = 0; i <= tmp$; i++) {
      var child = elements.get_za3lpa$(i);
      var layoutData = (tmp$_0 = child.layoutData) == null || Kotlin.isType(tmp$_0, StackLayoutData) ? tmp$_0 : Kotlin.throwCCE();
      child.setSize_yxjqmk$(layoutData != null ? layoutData.getPreferredWidth_81sz4$(childAvailableWidth) : null, layoutData != null ? layoutData.getPreferredHeight_81sz4$(childAvailableHeight) : null);
      child.moveTo_y2kzbl$(pad.left, pad.top);
      child.moveTo_y2kzbl$(this.padding.left, this.padding.top);
      if (explicitWidth != null) {
        var remainingSpace = (childAvailableWidth != null ? childAvailableWidth : Kotlin.throwNPE()) - child.width;
        if (remainingSpace > 0.0) {
          tmp$_2 = (tmp$_1 = layoutData != null ? layoutData.horizontalAlign : null) != null ? tmp$_1 : this.horizontalAlign;
          if (!Kotlin.equals(tmp$_2, HAlign$LEFT_getInstance()))
            if (Kotlin.equals(tmp$_2, HAlign$CENTER_getInstance())) {
              var halfSpace = floor(remainingSpace * 0.5);
              child.x = halfSpace + this.padding.left;
            }
             else if (Kotlin.equals(tmp$_2, HAlign$RIGHT_getInstance()))
              child.x = remainingSpace + this.padding.left;
        }
      }
      if (explicitHeight != null) {
        var remainingSpace_0 = (childAvailableHeight != null ? childAvailableHeight : Kotlin.throwNPE()) - child.height;
        if (remainingSpace_0 > 0.0) {
          tmp$_4 = (tmp$_3 = layoutData != null ? layoutData.verticalAlign : null) != null ? tmp$_3 : this.verticalAlign;
          if (!Kotlin.equals(tmp$_4, VAlign$TOP_getInstance()))
            if (Kotlin.equals(tmp$_4, VAlign$MIDDLE_getInstance())) {
              var halfSpace_0 = floor(remainingSpace_0 * 0.5);
              child.y = halfSpace_0 + this.padding.top;
            }
             else if (Kotlin.equals(tmp$_4, VAlign$BOTTOM_getInstance()))
              child.y = remainingSpace_0 + this.padding.top;
        }
      }
      out.ext_dleff0$(pad.expandWidth2_mx4ult$(child.width), pad.expandHeight2_mx4ult$(child.height));
    }
  };
  StackLayout.prototype.createLayoutData = function () {
    return new StackLayoutData();
  };
  StackLayout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StackLayout',
    interfaces: [LayoutAlgorithm]
  };
  function StackLayoutData() {
    BasicLayoutData.call(this);
    this.verticalAlign$delegate = this.bindable_mh5how$(null);
    this.horizontalAlign$delegate = this.bindable_mh5how$(null);
  }
  Object.defineProperty(StackLayoutData.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(StackLayoutData.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  StackLayoutData.prototype.center = function () {
    this.verticalAlign = VAlign$MIDDLE_getInstance();
    this.horizontalAlign = HAlign$CENTER_getInstance();
  };
  StackLayoutData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StackLayoutData',
    interfaces: [BasicLayoutData]
  };
  function StackLayoutContainer(owner, native) {
    if (native === void 0)
      native = inject(owner, NativeContainer$Companion_getInstance().FACTORY_KEY)(owner);
    LayoutContainerImpl.call(this, owner, new StackLayout(), native);
  }
  StackLayoutContainer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StackLayoutContainer',
    interfaces: [LayoutContainerImpl]
  };
  function stack$lambda($receiver) {
  }
  function stack($receiver, init) {
    if (init === void 0)
      init = stack$lambda;
    var s = new StackLayoutContainer($receiver);
    init(s);
    return s;
  }
  function Stage() {
    Stage$Companion_getInstance();
  }
  function Stage$Companion() {
    Stage$Companion_instance = this;
  }
  Stage$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag, DKey]
  };
  var Stage$Companion_instance = null;
  function Stage$Companion_getInstance() {
    if (Stage$Companion_instance === null) {
      new Stage$Companion();
    }
    return Stage$Companion_instance;
  }
  Stage.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Stage',
    interfaces: [FocusContainer, Focusable, ElementContainer, Parent]
  };
  function StageStyle() {
    StageStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_71zpl4$_0 = StageStyle$Companion_getInstance();
    this.backgroundColor$delegate = this.prop_umlfku$('backgroundColor', Color.Companion.WHITE.copy_7b5o5w$());
  }
  Object.defineProperty(StageStyle.prototype, 'type', {
    get: function () {
      return this.type_71zpl4$_0;
    }
  });
  Object.defineProperty(StageStyle.prototype, 'backgroundColor', {
    get: function () {
      return this.backgroundColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('backgroundColor'));
    },
    set: function (backgroundColor) {
      this.backgroundColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('backgroundColor'), backgroundColor);
    }
  });
  function StageStyle$Companion() {
    StageStyle$Companion_instance = this;
  }
  StageStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var StageStyle$Companion_instance = null;
  function StageStyle$Companion_getInstance() {
    if (StageStyle$Companion_instance === null) {
      new StageStyle$Companion();
    }
    return StageStyle$Companion_instance;
  }
  StageStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StageStyle',
    interfaces: [StyleBase]
  };
  function get_stage($receiver) {
    return inject($receiver, Stage$Companion_getInstance());
  }
  function Style() {
  }
  Style.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Style',
    interfaces: []
  };
  function MutableStyle() {
  }
  MutableStyle.prototype.applyCalculated_xvl5vm$ = function (target, override, callback$default) {
    if (override === void 0)
      override = true;
    callback$default ? callback$default(target, override) : this.applyCalculated_xvl5vm$$default(target, override);
  };
  MutableStyle.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableStyle',
    interfaces: [Style]
  };
  function StyleBase() {
    this.changed_8x7nxg$_0 = new Signal1();
    this.bindingCount_8x7nxg$_0 = 0;
    this.props_8x7nxg$_0 = HashMap_init();
    this.batchCounter = 0;
    this.isDirty = true;
  }
  Object.defineProperty(StyleBase.prototype, 'changed', {
    get: function () {
      return this.changed_8x7nxg$_0;
    }
  });
  Object.defineProperty(StyleBase.prototype, 'bindingCount', {
    get: function () {
      return this.bindingCount_8x7nxg$_0;
    },
    set: function (bindingCount) {
      this.bindingCount_8x7nxg$_0 = bindingCount;
    }
  });
  Object.defineProperty(StyleBase.prototype, 'keys', {
    get: function () {
      return this.props_8x7nxg$_0.keys;
    }
  });
  StyleBase.prototype.getStyleProp_ytbaoo$ = function (id) {
    var tmp$;
    return Kotlin.isType(tmp$ = this.props_8x7nxg$_0.get_11rb$(id), StyleProp) ? tmp$ : Kotlin.throwCCE();
  };
  StyleBase.prototype.clearStyleProp_61zpoe$ = function (id) {
    var tmp$;
    (tmp$ = this.props_8x7nxg$_0.get_11rb$(id)) != null ? tmp$.clear() : null;
  };
  StyleBase.prototype.prop_umlfku$ = function (name, defaultValue) {
    if (this.props_8x7nxg$_0.containsKey_11rb$(name))
      throw new Exception('Already a property with the name ' + name);
    var prop = new StyleProp(this, defaultValue);
    this.props_8x7nxg$_0.put_xwzc9p$(name, prop);
    return prop;
  };
  StyleBase.prototype.getExplicitIsSet_61zpoe$ = function (key) {
    return this.getStyleProp_ytbaoo$(key).explicitIsSet;
  };
  StyleBase.prototype.getExplicitValue_ytbaoo$ = function (key) {
    return this.getStyleProp_ytbaoo$(key).explicit;
  };
  StyleBase.prototype.getDefaultValue_ytbaoo$ = function (key) {
    return this.getStyleProp_ytbaoo$(key).defaultValue;
  };
  StyleBase.prototype.clearCalculated = function () {
    var tmp$;
    tmp$ = this.props_8x7nxg$_0.values.iterator();
    while (tmp$.hasNext()) {
      var value = tmp$.next();
      if (!value.explicitIsSet)
        value._calculated_957kb6$_0 = null;
    }
    this.dirty();
  };
  StyleBase.prototype.applyCalculated_xvl5vm$$default = function (target, override) {
    var tmp$, tmp$_0;
    tmp$ = target.keys.iterator();
    while (tmp$.hasNext()) {
      var key = tmp$.next();
      tmp$_0 = this.props_8x7nxg$_0.get_11rb$(key);
      if (tmp$_0 == null) {
        continue;
      }
      var prop = tmp$_0;
      if (override || prop._calculated_957kb6$_0 == null) {
        if (target.getExplicitIsSet_61zpoe$(key)) {
          prop._calculated_957kb6$_0 = target.getExplicitValue_ytbaoo$(key);
        }
      }
    }
    this.dirty();
  };
  StyleBase.prototype.dirty = function () {
    this.isDirty = true;
    if (this.batchCounter !== 0)
      return;
    this.isDirty = false;
    this.changed.dispatch_11rb$(this);
  };
  StyleBase.prototype.dispose = function () {
    this.changed.dispose();
  };
  StyleBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StyleBase',
    interfaces: [Disposable, MutableStyle]
  };
  function onChanged($receiver, callback) {
    var tmp$;
    $receiver.changed.add_trkh7z$(typeof (tmp$ = callback) === 'function' ? tmp$ : Kotlin.throwCCE());
  }
  function batch($receiver, contents) {
    $receiver.batchCounter = $receiver.batchCounter + 1 | 0;
    contents($receiver);
    $receiver.batchCounter = $receiver.batchCounter - 1 | 0;
    if ($receiver.isDirty)
      $receiver.dirty();
  }
  function styleProperty($receiver, style_0, id) {
    if (!style_0.getExplicitIsSet_61zpoe$(id))
      return null;
    return $receiver.property_61zpoe$(id);
  }
  function set$lambda(closure$other) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      tmp$ = $receiver.props_8x7nxg$_0.entries.iterator();
      while (tmp$.hasNext()) {
        var prop = tmp$.next();
        (Kotlin.isType(tmp$_0 = prop.value, StyleProp) ? tmp$_0 : Kotlin.throwCCE()).set_fnk7zp$(closure$other.getStyleProp_ytbaoo$(prop.key));
      }
    };
  }
  function set_0($receiver, other) {
    batch($receiver, set$lambda(other));
  }
  function StyleProp(style_0, defaultValue) {
    this.style = style_0;
    this.defaultValue = defaultValue;
    this._explicit = null;
    this._explicitIsSet = false;
    this._calculated_957kb6$_0 = null;
  }
  Object.defineProperty(StyleProp.prototype, 'explicitIsSet', {
    get: function () {
      return this._explicitIsSet;
    }
  });
  Object.defineProperty(StyleProp.prototype, 'calculated', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this._calculated_957kb6$_0) != null ? tmp$ : this.defaultValue) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : Kotlin.throwCCE();
    }
  });
  StyleProp.prototype.getValue_lrcp0p$ = function (thisRef, property) {
    return this.calculated;
  };
  StyleProp.prototype.setValue_9rddgb$ = function (thisRef, property, value) {
    this.explicit = value;
  };
  Object.defineProperty(StyleProp.prototype, 'explicit', {
    get: function () {
      var tmp$;
      return (tmp$ = this._explicit) == null || Kotlin.isType(tmp$, Any) ? tmp$ : Kotlin.throwCCE();
    },
    set: function (value) {
      this._explicit = value;
      this._explicitIsSet = true;
      this._calculated_957kb6$_0 = value;
      this.style.dirty();
    }
  });
  StyleProp.prototype.clear = function () {
    this._explicit = null;
    this._explicitIsSet = false;
    this._calculated_957kb6$_0 = null;
    this.style.dirty();
  };
  StyleProp.prototype.set_fnk7zp$ = function (other) {
    this._explicit = other._explicit;
    this._explicitIsSet = other._explicitIsSet;
    this._calculated_957kb6$_0 = other._calculated_957kb6$_0;
    this.style.dirty();
  };
  StyleProp.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StyleProp',
    interfaces: [Clearable, ReadWriteProperty]
  };
  function noSkin$lambda($receiver) {
    throw new Exception('Skin part must be created.');
  }
  var noSkin;
  function noSkinOptional$lambda($receiver) {
    return null;
  }
  var noSkinOptional;
  function StyleBinding(target, style_0) {
    this.target_0 = target;
    this.style_0 = style_0;
    this.targetStylesChangedHandler_0 = StyleBinding$targetStylesChangedHandler$lambda(this);
    this.isValid_0 = true;
    this.tags_0 = ArrayList_init();
    this.entriesTmp_0 = ArrayList_init();
    this.entries_0 = ArrayList_init();
    this.entrySortComparator_0 = StyleBinding$entrySortComparator$lambda;
    var tmp$;
    tmp$ = this.style_0;
    tmp$.bindingCount = tmp$.bindingCount + 1 | 0;
    if (!this.target_0.isActive) {
      var tmp$_0;
      tmp$_0 = this.style_0;
      tmp$_0.batchCounter = tmp$_0.batchCounter + 1 | 0;
      this.target_0.activated.add_onkqg$(StyleBinding_init$lambda(this), true);
    }
    this.walkStyleAncestry_0(StyleBinding_init$lambda_0(this));
    this.invalidateStyles_0();
  }
  function StyleBinding$invalidateStyles$lambda(this$StyleBinding) {
    return function () {
      this$StyleBinding.validateStyles_0();
    };
  }
  StyleBinding.prototype.invalidateStyles_0 = function () {
    if (!this.isValid_0)
      return;
    this.isValid_0 = false;
    callLater(this.target_0, StyleBinding$invalidateStyles$lambda(this));
  };
  function StyleBinding$validateStyles$lambda$lambda(this$StyleBinding) {
    return function (it) {
      addAll2(this$StyleBinding.tags_0, 0, it.tags);
      return true;
    };
  }
  function StyleBinding$validateStyles$lambda$lambda_0(this$StyleBinding) {
    return function (it) {
      var tmp$;
      it.getEntries_9osu9u$(this$StyleBinding.style_0.type, this$StyleBinding.tags_0, this$StyleBinding.entriesTmp_0);
      tmp$ = get_lastIndex(this$StyleBinding.entriesTmp_0);
      for (var i = 0; i <= tmp$; i++) {
        var index = sortedInsertionIndex(this$StyleBinding.entries_0, this$StyleBinding.entriesTmp_0.get_za3lpa$(i), this$StyleBinding.entrySortComparator_0);
        this$StyleBinding.entries_0.add_wxm5ur$(index, this$StyleBinding.entriesTmp_0.get_za3lpa$(i));
      }
      return true;
    };
  }
  function StyleBinding$validateStyles$lambda(this$StyleBinding) {
    return function ($receiver) {
      var tmp$;
      this$StyleBinding.style_0.clearCalculated();
      this$StyleBinding.tags_0.clear();
      this$StyleBinding.walkStyleAncestry_0(StyleBinding$validateStyles$lambda$lambda(this$StyleBinding));
      this$StyleBinding.entries_0.clear();
      this$StyleBinding.walkStyleAncestry_0(StyleBinding$validateStyles$lambda$lambda_0(this$StyleBinding));
      tmp$ = get_lastIndex(this$StyleBinding.entries_0);
      for (var i = 0; i <= tmp$; i++) {
        var entry = this$StyleBinding.entries_0.get_za3lpa$(i);
        this$StyleBinding.style_0.applyCalculated_xvl5vm$(entry.style, false);
      }
    };
  }
  StyleBinding.prototype.validateStyles_0 = function () {
    if (this.target_0.isDisposed)
      return;
    this.isValid_0 = true;
    batch(this.style_0, StyleBinding$validateStyles$lambda(this));
  };
  function StyleBinding$dispose$lambda(this$StyleBinding) {
    return function (it) {
      it.changed.remove_trkh7z$(this$StyleBinding.targetStylesChangedHandler_0);
      return true;
    };
  }
  StyleBinding.prototype.dispose = function () {
    var tmp$;
    tmp$ = this.style_0;
    tmp$.bindingCount = tmp$.bindingCount - 1 | 0;
    this.walkStyleAncestry_0(StyleBinding$dispose$lambda(this));
  };
  StyleBinding.prototype.walkStyleAncestry_0 = function (callback) {
    var p = this.target_0;
    while (p != null) {
      if (Kotlin.isType(p, AttachmentHolder)) {
        var styles_0 = styles(p);
        var shouldContinue = callback(styles_0);
        if (!shouldContinue)
          break;
      }
      p = p.owner;
    }
  };
  function StyleBinding$targetStylesChangedHandler$lambda(this$StyleBinding) {
    return function () {
      this$StyleBinding.invalidateStyles_0();
    };
  }
  function StyleBinding$entrySortComparator$lambda(o1, o2) {
    return Kotlin.primitiveCompareTo(o1.priority, o2.priority);
  }
  function StyleBinding_init$lambda(this$StyleBinding) {
    return function (it) {
      var tmp$;
      tmp$ = this$StyleBinding.style_0;
      tmp$.batchCounter = tmp$.batchCounter - 1 | 0;
      this$StyleBinding.validateStyles_0();
      if (this$StyleBinding.style_0.isDirty)
        this$StyleBinding.style_0.dirty();
    };
  }
  function StyleBinding_init$lambda_0(this$StyleBinding) {
    return function (it) {
      it.changed.add_trkh7z$(this$StyleBinding.targetStylesChangedHandler_0);
      return true;
    };
  }
  StyleBinding.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StyleBinding',
    interfaces: [Disposable]
  };
  function style$lambda(closure$style, closure$binding) {
    return function (it) {
      closure$style.dispose();
      closure$binding.dispose();
    };
  }
  function style($receiver, style_0) {
    var binding = new StyleBinding($receiver, style_0);
    $receiver.disposed.add_trkh7z$(style$lambda(style_0, binding));
    return style_0;
  }
  function Styles() {
    Styles$Companion_getInstance();
    this._changed_0 = new Signal0();
    this._tags_0 = ArrayList_init();
    this._entries_0 = HashMap_init();
    this.styleChangedHandler_0 = Styles$styleChangedHandler$lambda(this);
  }
  Object.defineProperty(Styles.prototype, 'changed', {
    get: function () {
      return this._changed_0;
    }
  });
  Object.defineProperty(Styles.prototype, 'tags', {
    get: function () {
      return this._tags_0;
    }
  });
  Styles.prototype.addTags_2odgys$ = function (tags) {
    addAllUnique(this._tags_0, tags);
    this.dirty_0();
  };
  Styles.prototype.addTag_206sad$ = function (tag) {
    if (!this._tags_0.contains_11rb$(tag))
      this._tags_0.add_11rb$(tag);
    this.dirty_0();
  };
  Styles.prototype.removeTags_2odgys$ = function (tag) {
    removeAll(this._tags_0, tag);
    this.dirty_0();
  };
  Styles.prototype.removeTag_206sad$ = function (tag) {
    if (this._tags_0.remove_11rb$(tag)) {
      this.dirty_0();
    }
  };
  Styles.prototype.setTags_2odgys$ = function (tags) {
    this._tags_0.clear();
    addAllUnique(this._tags_0, tags);
    this.dirty_0();
  };
  Styles.prototype.add_jvsd2u$ = function (entry) {
    var tmp$;
    var type = entry.style.type;
    if (!this._entries_0.containsKey_11rb$(type)) {
      var $receiver = this._entries_0;
      var value = ArrayList_init();
      $receiver.put_xwzc9p$(type, value);
    }
    var list = (tmp$ = this._entries_0.get_11rb$(type)) != null ? tmp$ : Kotlin.throwNPE();
    list.add_wxm5ur$(0, entry);
    entry.style.changed.add_trkh7z$(this.styleChangedHandler_0);
    this.dirty_0();
  };
  Styles.prototype.remove_8t6xlv$ = function (entry) {
    var tmp$;
    (tmp$ = this._entries_0.get_11rb$(entry.style.type)) != null ? tmp$.remove_11rb$(entry) : null;
    entry.style.changed.remove_trkh7z$(this.styleChangedHandler_0);
    this.dirty_0();
  };
  Styles.prototype.getEntries_9osu9u$ = function (type, tags, out) {
    var tmp$;
    out.clear();
    var e = type;
    while (e != null) {
      var entries = this._entries_0.get_11rb$(type);
      if (entries != null) {
        tmp$ = get_lastIndex(entries);
        for (var i = 0; i <= tmp$; i++) {
          var entry = entries.get_za3lpa$(i);
          if (entry.filter_gti14a$(tags)) {
            out.add_11rb$(entry);
          }
        }
      }
      e = e.extends;
    }
  };
  Styles.prototype.clear = function () {
    var tmp$, tmp$_0;
    tmp$ = this._entries_0.values.iterator();
    while (tmp$.hasNext()) {
      var entries = tmp$.next();
      tmp$_0 = entries.iterator();
      while (tmp$_0.hasNext()) {
        var entry = tmp$_0.next();
        entry.style.changed.remove_trkh7z$(this.styleChangedHandler_0);
      }
    }
    this._entries_0.clear();
    this.dirty_0();
  };
  Styles.prototype.dirty_0 = function () {
    this._changed_0.dispatch();
  };
  Styles.prototype.dispose = function () {
    this._changed_0.dispose();
    this._entries_0.clear();
  };
  function Styles$Companion() {
    Styles$Companion_instance = this;
  }
  Styles$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Styles$Companion_instance = null;
  function Styles$Companion_getInstance() {
    if (Styles$Companion_instance === null) {
      new Styles$Companion();
    }
    return Styles$Companion_instance;
  }
  function Styles$styleChangedHandler$lambda(this$Styles) {
    return function ($receiver) {
      this$Styles.dirty_0();
    };
  }
  Styles.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Styles',
    interfaces: [Clearable, Disposable]
  };
  function StyleEntry() {
  }
  StyleEntry.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'StyleEntry',
    interfaces: []
  };
  function StyleType() {
  }
  Object.defineProperty(StyleType.prototype, 'extends', {
    get: function () {
      return null;
    }
  });
  StyleType.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'StyleType',
    interfaces: []
  };
  function StyleTag() {
  }
  StyleTag.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'StyleTag',
    interfaces: []
  };
  function styleTag() {
    return new StyleTagImpl();
  }
  function StyleTagImpl() {
  }
  StyleTagImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StyleTagImpl',
    interfaces: [StyleTag]
  };
  function styles$lambda() {
    return new Styles();
  }
  function styles($receiver) {
    return createOrReuseAttachment($receiver, Styles$Companion_getInstance(), styles$lambda);
  }
  function addTag($receiver, tag) {
    styles($receiver).addTag_206sad$(tag);
  }
  function removeTag($receiver, tag) {
    styles($receiver).removeTag_206sad$(tag);
  }
  function setTags($receiver, tags) {
    styles($receiver).setTags_2odgys$(tags.slice());
  }
  function removeTags($receiver, tags) {
    styles($receiver).removeTags_2odgys$(tags.slice());
  }
  function addTags($receiver, tags) {
    styles($receiver).addTags_2odgys$(tags.slice());
  }
  function setStyle($receiver, style_0, tags) {
    setStyle_0($receiver, style_0, 0.0, tags.slice());
  }
  function setStyle$ObjectLiteral(closure$tagsList, closure$priority, closure$style) {
    this.closure$tagsList = closure$tagsList;
    this.priority_oekhsy$_0 = closure$priority;
    this.style_oekhsy$_0 = closure$style;
  }
  Object.defineProperty(setStyle$ObjectLiteral.prototype, 'priority', {
    get: function () {
      return this.priority_oekhsy$_0;
    }
  });
  Object.defineProperty(setStyle$ObjectLiteral.prototype, 'style', {
    get: function () {
      return this.style_oekhsy$_0;
    }
  });
  setStyle$ObjectLiteral.prototype.filter_gti14a$ = function (allTags) {
    var containsAll = allTags.containsAll_brywnq$(this.closure$tagsList);
    return containsAll;
  };
  setStyle$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [StyleEntry]
  };
  function setStyle_0($receiver, style_0, priority, tags) {
    var tagsList = toList(tags);
    var entry = new setStyle$ObjectLiteral(tagsList, priority, style_0);
    styles($receiver).add_jvsd2u$(entry);
  }
  function TabNavigator(owner) {
    TabNavigator$Companion_getInstance();
    ContainerImpl.call(this, owner);
    this.userCurrentIndexChanged = new Signal4();
    this.currentIndexChanged = new Signal3();
    this.style = style(this, new TabNavigatorStyle());
    this.contents = scrollArea(this);
    this.tabBarContainer = null;
    this.tabBar = void 0;
    this.background_8pkc4p$_0 = null;
    this.tabs_8pkc4p$_0 = ArrayList_init();
    this._currentIndex = 0;
    this.selectedTab_8pkc4p$_0 = null;
    this.cancel_8pkc4p$_0 = new Cancel();
    this.tabClickHandler_8pkc4p$_0 = TabNavigator$tabClickHandler$lambda(this);
    addTag(this, TabNavigator$Companion_getInstance());
    this.addChild_mxweac$(this.contents);
    this.tabBarContainer = scaleBox(this, TabNavigator_init$lambda(this));
    this.addChild_mxweac$(this.tabBarContainer);
    onChanged(this.style, TabNavigator_init$lambda_0(this));
  }
  TabNavigator.prototype.createLayoutData = function () {
    return new StackLayoutData();
  };
  Object.defineProperty(TabNavigator.prototype, 'currentIndex', {
    get: function () {
      return this._currentIndex;
    },
    set: function (value) {
      var previousIndex = this._currentIndex;
      if (value === previousIndex)
        return;
      this._currentIndex = value;
      this.updateSelectedTab();
      this.currentIndexChanged.dispatch_1llc0w$(this, previousIndex, value);
    }
  });
  Object.defineProperty(TabNavigator.prototype, 'numTabs', {
    get: function () {
      return this.tabBar.numElements;
    }
  });
  TabNavigator.prototype.addTab_9xfzd8$ = function (value, component_0) {
    this.addTab_fz46ta$(this.numTabs, value, component_0);
  };
  function TabNavigator$addTab$lambda(closure$component) {
    return function ($receiver) {
      return closure$component;
    };
  }
  TabNavigator.prototype.addTab_fz46ta$ = function (index, tab, component_0) {
    this.addTab_a2ikd3$(index, tab, TabNavigator$addTab$lambda(component_0));
  };
  TabNavigator.prototype.addTab_bne4tb$ = function (tab, factory_0) {
    this.addTab_a2ikd3$(this.numTabs, tab, factory_0);
  };
  function TabNavigator$addTab$lambda_0(closure$tab, this$TabNavigator) {
    return function ($receiver) {
      $receiver.label = this$TabNavigator.orSpace_xow62$_0(closure$tab);
      addTag($receiver, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE);
    };
  }
  TabNavigator.prototype.addTab_a2ikd3$ = function (index, tab, factory_0) {
    var tabButton = button(this, TabNavigator$addTab$lambda_0(tab, this));
    this.addTab_dt60oe$(index, tabButton, factory_0);
  };
  function TabNavigator$addTab$lambda_1(closure$component) {
    return function ($receiver) {
      return closure$component;
    };
  }
  TabNavigator.prototype.addTab_c0bcz3$ = function (tab, component_0) {
    this.addTab_dt60oe$(this.tabBar.numElements, tab, TabNavigator$addTab$lambda_1(component_0));
  };
  TabNavigator.prototype.addTab_p7fil8$ = function (tab, factory_0) {
    this.addTab_dt60oe$(this.tabBar.numElements, tab, factory_0);
  };
  function TabNavigator$addTab$lambda_2(closure$factory, this$TabNavigator) {
    return function ($receiver) {
      return closure$factory(this$TabNavigator);
    };
  }
  TabNavigator.prototype.addTab_dt60oe$ = function (index, tab, factory_0) {
    this.addTab_ns3uoq$(index, new TabNavigatorTab(new LazyInstance(this, TabNavigator$addTab$lambda_2(factory_0, this)), tab));
  };
  TabNavigator.prototype.addTab_ns3uoq$ = function (index, tab) {
    if (index === 0) {
      if (this.tabs_8pkc4p$_0.size > 0) {
        removeTag(this.tabs_8pkc4p$_0.get_za3lpa$(0).button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_FIRST);
      }
      addTag(tab.button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_FIRST);
    }
    if (index === this.numTabs) {
      if (this.tabs_8pkc4p$_0.size > 0) {
        removeTag(last(this.tabs_8pkc4p$_0).button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_LAST);
      }
      addTag(tab.button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_LAST);
    }
    click(tab.button).add_trkh7z$(this.tabClickHandler_8pkc4p$_0);
    this.tabs_8pkc4p$_0.add_wxm5ur$(index, tab);
    this.tabBar.addElement_3i6itm$(index, tab.button);
    this.updateSelectedTab();
  };
  TabNavigator.prototype.removeTab_fzusl$ = function (index, dispose) {
    if (dispose === void 0)
      dispose = true;
    if (index < 0 || index >= this.tabs_8pkc4p$_0.size)
      throw new IllegalArgumentException('Index out of bounds.');
    var r = this.tabs_8pkc4p$_0.removeAt_za3lpa$(index);
    var t = r.button;
    if (index === 0) {
      if (this.tabs_8pkc4p$_0.size > 0) {
        addTag(this.tabs_8pkc4p$_0.get_za3lpa$(0).button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_FIRST);
      }
      removeTag(t, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_FIRST);
    }
    if (index === this.tabs_8pkc4p$_0.size) {
      if (this.tabs_8pkc4p$_0.size > 0) {
        removeTag(last(this.tabs_8pkc4p$_0).button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_LAST);
      }
      removeTag(t, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_LAST);
    }
    click(t).remove_trkh7z$(this.tabClickHandler_8pkc4p$_0);
    this.tabBar.removeElement_za3lpa$(index);
    this.updateSelectedTab();
    if (dispose) {
      r.component.disposeInstance();
      r.button.dispose();
    }
    return r;
  };
  TabNavigator.prototype.setTabLabel_19mbxw$ = function (index, newLabel) {
    var tab = this.tabs_8pkc4p$_0.get_za3lpa$(index);
    var tabButton = tab.button;
    if (Kotlin.isType(tabButton, Labelable)) {
      tabButton.label = this.orSpace_xow62$_0(newLabel);
    }
  };
  TabNavigator.prototype.clearTabs_6taknv$ = function (dispose) {
    if (dispose === void 0)
      dispose = false;
    if (!this.tabs_8pkc4p$_0.isEmpty()) {
      removeTag(first(this.tabs_8pkc4p$_0).button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_FIRST);
      removeTag(last(this.tabs_8pkc4p$_0).button, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_LAST);
    }
    this.tabs_8pkc4p$_0.clear();
    this.tabBar.clearElements_6taknv$(dispose);
    this.contents.clearElements_6taknv$(dispose);
    this.updateSelectedTab();
  };
  TabNavigator.prototype.orSpace_xow62$_0 = function ($receiver) {
    return Kotlin.equals($receiver, '') ? '\xA0' : $receiver;
  };
  TabNavigator.prototype.updateSelectedTab = function () {
    var newSelectedTab;
    if (this._currentIndex >= 0 && this._currentIndex < this.tabs_8pkc4p$_0.size) {
      newSelectedTab = this.tabs_8pkc4p$_0.get_za3lpa$(this._currentIndex);
    }
     else {
      newSelectedTab = null;
    }
    var lastSelectedTab = this.selectedTab_8pkc4p$_0;
    if (!Kotlin.equals(newSelectedTab, lastSelectedTab)) {
      this.selectedTab_8pkc4p$_0 = newSelectedTab;
      if (lastSelectedTab != null) {
        lastSelectedTab.button.selected = false;
        this.contents.removeElement_erfg6z$(lastSelectedTab.component.instance);
      }
      if (newSelectedTab != null) {
        this.contents.addElement_mxweac$(newSelectedTab.component.instance);
        newSelectedTab.button.selected = true;
      }
    }
  };
  TabNavigator.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_1, tmp$_0;
    var tmp$_2, tmp$_3, tmp$_4;
    tmp$_2 = out.width;
    math_0.MathUtils;
    tmp$_1 = (tmp$ = this.tabBar.minWidth) != null ? tmp$ : 0.0;
    var y = (tmp$_0 = this.contents.minWidth) != null ? tmp$_0 : 0.0;
    var max_sdesaw$result;
    if (Kotlin.compareTo(tmp$_1, y) >= 0) {
      max_sdesaw$result = tmp$_1;
    }
     else {
      max_sdesaw$result = y;
    }
    tmp$_2.min = max_sdesaw$result;
    out.height.min = ((tmp$_3 = this.tabBar.minHeight) != null ? tmp$_3 : 0.0) + ((tmp$_4 = this.contents.minHeight) != null ? tmp$_4 : 0.0) + this.style.vGap;
  };
  TabNavigator.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0;
    this.tabBarContainer.setSize_yxjqmk$(explicitWidth, null);
    var tabBarHeight = this.tabBarContainer.height + this.style.vGap;
    var contentsHeight = explicitHeight == null ? null : explicitHeight - tabBarHeight;
    this.contents.setSize_yxjqmk$(explicitWidth, contentsHeight);
    this.contents.moveTo_y2kzbl$(0.0, tabBarHeight);
    ((tmp$ = this.background_8pkc4p$_0) != null ? tmp$ : Kotlin.throwNPE()).moveTo_y2kzbl$(0.0, tabBarHeight);
    ((tmp$_0 = this.background_8pkc4p$_0) != null ? tmp$_0 : Kotlin.throwNPE()).setSize_yxjqmk$(this.contents.width, this.contents.height);
    var x = this.contents.width;
    var y = this.tabBarContainer.width;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    out.width = max_sdesaw$result;
    out.height = this.contents.height + tabBarHeight;
  };
  TabNavigator.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    this.currentIndexChanged.dispose();
  };
  function TabNavigator$Companion() {
    TabNavigator$Companion_instance = this;
    this.DEFAULT_TAB_STYLE = styleTag();
    this.DEFAULT_TAB_STYLE_FIRST = styleTag();
    this.DEFAULT_TAB_STYLE_LAST = styleTag();
  }
  TabNavigator$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var TabNavigator$Companion_instance = null;
  function TabNavigator$Companion_getInstance() {
    if (TabNavigator$Companion_instance === null) {
      new TabNavigator$Companion();
    }
    return TabNavigator$Companion_instance;
  }
  function TabNavigator$tabClickHandler$lambda(this$TabNavigator) {
    return function (e) {
      if (!e.handled) {
        var index = indexOf_0(this$TabNavigator.tabBar.elements, e.currentTarget);
        if (this$TabNavigator._currentIndex !== index) {
          e.handled = true;
          this$TabNavigator.userCurrentIndexChanged.dispatch_18alr2$(this$TabNavigator, this$TabNavigator._currentIndex, index, this$TabNavigator.cancel_8pkc4p$_0.reset());
          if (!this$TabNavigator.cancel_8pkc4p$_0.canceled()) {
            this$TabNavigator.currentIndex = index;
          }
        }
      }
    };
  }
  function TabNavigator_init$lambda$lambda($receiver) {
    $receiver.layoutAlgorithm.verticalAlign = VAlign$BOTTOM_getInstance();
  }
  function TabNavigator_init$lambda$lambda_0($receiver) {
    $receiver.maxScaleX = 1.0;
    $receiver.maxScaleY = 1.0;
  }
  function TabNavigator_init$lambda(this$TabNavigator) {
    return function ($receiver) {
      $receiver.layoutAlgorithm.scaling = Scaling$STRETCH_X_getInstance();
      $receiver.layoutAlgorithm.horizontalAlign = HAlign$LEFT_getInstance();
      $receiver.layoutAlgorithm.verticalAlign = VAlign$BOTTOM_getInstance();
      this$TabNavigator.tabBar = $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(hGroup($receiver, TabNavigator_init$lambda$lambda)), TabNavigator_init$lambda$lambda_0);
    };
  }
  function TabNavigator_init$lambda_0(this$TabNavigator) {
    return function (it) {
      this$TabNavigator.dispose_erfg6z$(this$TabNavigator.background_8pkc4p$_0);
      this$TabNavigator.background_8pkc4p$_0 = this$TabNavigator.addChild_3i6itm$(0, it.background(this$TabNavigator));
      this$TabNavigator.tabBar.layoutAlgorithm.gap = it.tabGap;
    };
  }
  TabNavigator.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TabNavigator',
    interfaces: [LayoutDataProvider, ContainerImpl]
  };
  function TabNavigatorTab(component_0, button_1) {
    this.component = component_0;
    this.button = button_1;
  }
  TabNavigatorTab.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TabNavigatorTab',
    interfaces: []
  };
  TabNavigatorTab.prototype.component1 = function () {
    return this.component;
  };
  TabNavigatorTab.prototype.component2 = function () {
    return this.button;
  };
  TabNavigatorTab.prototype.copy_hxtzyo$ = function (component_0, button_1) {
    return new TabNavigatorTab(component_0 === void 0 ? this.component : component_0, button_1 === void 0 ? this.button : button_1);
  };
  TabNavigatorTab.prototype.toString = function () {
    return 'TabNavigatorTab(component=' + Kotlin.toString(this.component) + (', button=' + Kotlin.toString(this.button)) + ')';
  };
  TabNavigatorTab.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.component) | 0;
    result = result * 31 + Kotlin.hashCode(this.button) | 0;
    return result;
  };
  TabNavigatorTab.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.component, other.component) && Kotlin.equals(this.button, other.button)))));
  };
  function TabNavigatorStyle() {
    TabNavigatorStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_s8p3p6$_0 = TabNavigatorStyle$Companion_getInstance();
    this.tabGap$delegate = this.prop_umlfku$('tabGap', 0.0);
    this.vGap$delegate = this.prop_umlfku$('vGap', -1.0);
    this.background$delegate = this.prop_umlfku$('background', noSkin);
  }
  Object.defineProperty(TabNavigatorStyle.prototype, 'type', {
    get: function () {
      return this.type_s8p3p6$_0;
    }
  });
  Object.defineProperty(TabNavigatorStyle.prototype, 'tabGap', {
    get: function () {
      return this.tabGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('tabGap'));
    },
    set: function (tabGap) {
      this.tabGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('tabGap'), tabGap);
    }
  });
  Object.defineProperty(TabNavigatorStyle.prototype, 'vGap', {
    get: function () {
      return this.vGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('vGap'));
    },
    set: function (vGap) {
      this.vGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('vGap'), vGap);
    }
  });
  Object.defineProperty(TabNavigatorStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  function TabNavigatorStyle$Companion() {
    TabNavigatorStyle$Companion_instance = this;
  }
  TabNavigatorStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var TabNavigatorStyle$Companion_instance = null;
  function TabNavigatorStyle$Companion_getInstance() {
    if (TabNavigatorStyle$Companion_instance === null) {
      new TabNavigatorStyle$Companion();
    }
    return TabNavigatorStyle$Companion_instance;
  }
  TabNavigatorStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TabNavigatorStyle',
    interfaces: [StyleBase]
  };
  function tabNavigator$lambda($receiver) {
  }
  function tabNavigator($receiver, init) {
    if (init === void 0)
      init = tabNavigator$lambda;
    var t = new TabNavigator($receiver);
    init(t);
    return t;
  }
  function EditableTextField() {
    EditableTextField$Companion_getInstance();
  }
  function EditableTextField$Companion() {
    EditableTextField$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  EditableTextField$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var EditableTextField$Companion_instance = null;
  function EditableTextField$Companion_getInstance() {
    if (EditableTextField$Companion_instance === null) {
      new EditableTextField$Companion();
    }
    return EditableTextField$Companion_instance;
  }
  EditableTextField.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'EditableTextField',
    interfaces: [TextField, Focusable]
  };
  function TextCommander() {
  }
  TextCommander.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TextCommander',
    interfaces: []
  };
  function exec($receiver, command, value) {
    if (value === void 0)
      value = '';
    return $receiver.exec_puj7f4$(command.name, value);
  }
  function queryBool($receiver, command) {
    return $receiver.queryBool_61zpoe$(command.name);
  }
  function queryString($receiver, command) {
    return $receiver.queryString_61zpoe$(command.name);
  }
  function queryColor($receiver, command) {
    return $receiver.queryColor_61zpoe$(command.name);
  }
  function backColor($receiver, color_3) {
    return exec($receiver, TextCommand$backColor_getInstance(), '#' + color_3.toRgbString());
  }
  function bold($receiver) {
    return exec($receiver, TextCommand$bold_getInstance());
  }
  function copy($receiver) {
    return exec($receiver, TextCommand$copy_getInstance());
  }
  function createLink($receiver, uri) {
    return exec($receiver, TextCommand$createLink_getInstance(), uri);
  }
  function cut($receiver) {
    return exec($receiver, TextCommand$cut_getInstance());
  }
  function fontName($receiver, fontName_0) {
    return exec($receiver, TextCommand$fontName_getInstance(), fontName_0);
  }
  function fontSize($receiver, fontSize_0) {
    return exec($receiver, TextCommand$fontSize_getInstance(), fontSize_0.toString());
  }
  function foreColor($receiver, color_3) {
    return exec($receiver, TextCommand$foreColor_getInstance(), '#' + color_3.toRgbString());
  }
  function formatBlock($receiver, blockTag) {
    return exec($receiver, TextCommand$formatBlock_getInstance(), blockTag);
  }
  function indent($receiver) {
    return exec($receiver, TextCommand$indent_getInstance());
  }
  function insertHorizontalRule($receiver) {
    return exec($receiver, TextCommand$insertHorizontalRule_getInstance());
  }
  function insertImage($receiver, imageSource) {
    return exec($receiver, TextCommand$insertImage_getInstance(), imageSource);
  }
  function insertOrderedList($receiver) {
    return exec($receiver, TextCommand$insertOrderedList_getInstance());
  }
  function insertUnorderedList($receiver) {
    return exec($receiver, TextCommand$insertUnorderedList_getInstance());
  }
  function insertParagraph($receiver) {
    return exec($receiver, TextCommand$insertParagraph_getInstance());
  }
  function insertText($receiver, text_2) {
    return exec($receiver, TextCommand$insertText_getInstance(), text_2);
  }
  function insertHtml($receiver, html) {
    return exec($receiver, TextCommand$insertHTML_getInstance(), html);
  }
  function italic($receiver) {
    return exec($receiver, TextCommand$italic_getInstance());
  }
  function justifyCenter($receiver) {
    return exec($receiver, TextCommand$justifyCenter_getInstance());
  }
  function justifyFull($receiver) {
    return exec($receiver, TextCommand$justifyFull_getInstance());
  }
  function justifyLeft($receiver) {
    return exec($receiver, TextCommand$justifyLeft_getInstance());
  }
  function justifyRight($receiver) {
    return exec($receiver, TextCommand$justifyRight_getInstance());
  }
  function outdent($receiver) {
    return exec($receiver, TextCommand$outdent_getInstance());
  }
  function paste($receiver) {
    return exec($receiver, TextCommand$paste_getInstance());
  }
  function redo($receiver) {
    return exec($receiver, TextCommand$redo_getInstance());
  }
  function removeFormat($receiver) {
    return exec($receiver, TextCommand$removeFormat_getInstance());
  }
  function selectAll($receiver) {
    return exec($receiver, TextCommand$selectAll_getInstance());
  }
  function strikeThrough($receiver) {
    return exec($receiver, TextCommand$strikeThrough_getInstance());
  }
  function subscript($receiver) {
    return exec($receiver, TextCommand$subscript_getInstance());
  }
  function superscript($receiver) {
    return exec($receiver, TextCommand$superscript_getInstance());
  }
  function underline($receiver) {
    return exec($receiver, TextCommand$underline_getInstance());
  }
  function undo($receiver) {
    return exec($receiver, TextCommand$undo_getInstance());
  }
  function unlink($receiver) {
    return exec($receiver, TextCommand$unlink_getInstance());
  }
  function hiliteColor($receiver, color_3) {
    return exec($receiver, TextCommand$hiliteColor_getInstance(), '#' + color_3.toRgbString());
  }
  function styleWithCSS($receiver, value) {
    return exec($receiver, TextCommand$styleWithCSS_getInstance(), value.toString());
  }
  function TextCommand(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextCommand_initFields() {
    TextCommand_initFields = function () {
    };
    TextCommand$backColor_instance = new TextCommand('backColor', 0);
    TextCommand$bold_instance = new TextCommand('bold', 1);
    TextCommand$contentReadOnly_instance = new TextCommand('contentReadOnly', 2);
    TextCommand$copy_instance = new TextCommand('copy', 3);
    TextCommand$createLink_instance = new TextCommand('createLink', 4);
    TextCommand$cut_instance = new TextCommand('cut', 5);
    TextCommand$decreaseFontSize_instance = new TextCommand('decreaseFontSize', 6);
    TextCommand$delete_instance = new TextCommand('delete', 7);
    TextCommand$enableInlineTableEditing_instance = new TextCommand('enableInlineTableEditing', 8);
    TextCommand$enableObjectResizing_instance = new TextCommand('enableObjectResizing', 9);
    TextCommand$fontName_instance = new TextCommand('fontName', 10);
    TextCommand$fontSize_instance = new TextCommand('fontSize', 11);
    TextCommand$foreColor_instance = new TextCommand('foreColor', 12);
    TextCommand$formatBlock_instance = new TextCommand('formatBlock', 13);
    TextCommand$forwardDelete_instance = new TextCommand('forwardDelete', 14);
    TextCommand$heading_instance = new TextCommand('heading', 15);
    TextCommand$hiliteColor_instance = new TextCommand('hiliteColor', 16);
    TextCommand$increaseFontSize_instance = new TextCommand('increaseFontSize', 17);
    TextCommand$indent_instance = new TextCommand('indent', 18);
    TextCommand$insertBrOnReturn_instance = new TextCommand('insertBrOnReturn', 19);
    TextCommand$insertHorizontalRule_instance = new TextCommand('insertHorizontalRule', 20);
    TextCommand$insertHTML_instance = new TextCommand('insertHTML', 21);
    TextCommand$insertImage_instance = new TextCommand('insertImage', 22);
    TextCommand$insertOrderedList_instance = new TextCommand('insertOrderedList', 23);
    TextCommand$insertUnorderedList_instance = new TextCommand('insertUnorderedList', 24);
    TextCommand$insertParagraph_instance = new TextCommand('insertParagraph', 25);
    TextCommand$insertText_instance = new TextCommand('insertText', 26);
    TextCommand$italic_instance = new TextCommand('italic', 27);
    TextCommand$justifyCenter_instance = new TextCommand('justifyCenter', 28);
    TextCommand$justifyFull_instance = new TextCommand('justifyFull', 29);
    TextCommand$justifyLeft_instance = new TextCommand('justifyLeft', 30);
    TextCommand$justifyRight_instance = new TextCommand('justifyRight', 31);
    TextCommand$outdent_instance = new TextCommand('outdent', 32);
    TextCommand$paste_instance = new TextCommand('paste', 33);
    TextCommand$redo_instance = new TextCommand('redo', 34);
    TextCommand$removeFormat_instance = new TextCommand('removeFormat', 35);
    TextCommand$selectAll_instance = new TextCommand('selectAll', 36);
    TextCommand$strikeThrough_instance = new TextCommand('strikeThrough', 37);
    TextCommand$subscript_instance = new TextCommand('subscript', 38);
    TextCommand$superscript_instance = new TextCommand('superscript', 39);
    TextCommand$underline_instance = new TextCommand('underline', 40);
    TextCommand$undo_instance = new TextCommand('undo', 41);
    TextCommand$unlink_instance = new TextCommand('unlink', 42);
    TextCommand$styleWithCSS_instance = new TextCommand('styleWithCSS', 43);
  }
  var TextCommand$backColor_instance;
  function TextCommand$backColor_getInstance() {
    TextCommand_initFields();
    return TextCommand$backColor_instance;
  }
  var TextCommand$bold_instance;
  function TextCommand$bold_getInstance() {
    TextCommand_initFields();
    return TextCommand$bold_instance;
  }
  var TextCommand$contentReadOnly_instance;
  function TextCommand$contentReadOnly_getInstance() {
    TextCommand_initFields();
    return TextCommand$contentReadOnly_instance;
  }
  var TextCommand$copy_instance;
  function TextCommand$copy_getInstance() {
    TextCommand_initFields();
    return TextCommand$copy_instance;
  }
  var TextCommand$createLink_instance;
  function TextCommand$createLink_getInstance() {
    TextCommand_initFields();
    return TextCommand$createLink_instance;
  }
  var TextCommand$cut_instance;
  function TextCommand$cut_getInstance() {
    TextCommand_initFields();
    return TextCommand$cut_instance;
  }
  var TextCommand$decreaseFontSize_instance;
  function TextCommand$decreaseFontSize_getInstance() {
    TextCommand_initFields();
    return TextCommand$decreaseFontSize_instance;
  }
  var TextCommand$delete_instance;
  function TextCommand$delete_getInstance() {
    TextCommand_initFields();
    return TextCommand$delete_instance;
  }
  var TextCommand$enableInlineTableEditing_instance;
  function TextCommand$enableInlineTableEditing_getInstance() {
    TextCommand_initFields();
    return TextCommand$enableInlineTableEditing_instance;
  }
  var TextCommand$enableObjectResizing_instance;
  function TextCommand$enableObjectResizing_getInstance() {
    TextCommand_initFields();
    return TextCommand$enableObjectResizing_instance;
  }
  var TextCommand$fontName_instance;
  function TextCommand$fontName_getInstance() {
    TextCommand_initFields();
    return TextCommand$fontName_instance;
  }
  var TextCommand$fontSize_instance;
  function TextCommand$fontSize_getInstance() {
    TextCommand_initFields();
    return TextCommand$fontSize_instance;
  }
  var TextCommand$foreColor_instance;
  function TextCommand$foreColor_getInstance() {
    TextCommand_initFields();
    return TextCommand$foreColor_instance;
  }
  var TextCommand$formatBlock_instance;
  function TextCommand$formatBlock_getInstance() {
    TextCommand_initFields();
    return TextCommand$formatBlock_instance;
  }
  var TextCommand$forwardDelete_instance;
  function TextCommand$forwardDelete_getInstance() {
    TextCommand_initFields();
    return TextCommand$forwardDelete_instance;
  }
  var TextCommand$heading_instance;
  function TextCommand$heading_getInstance() {
    TextCommand_initFields();
    return TextCommand$heading_instance;
  }
  var TextCommand$hiliteColor_instance;
  function TextCommand$hiliteColor_getInstance() {
    TextCommand_initFields();
    return TextCommand$hiliteColor_instance;
  }
  var TextCommand$increaseFontSize_instance;
  function TextCommand$increaseFontSize_getInstance() {
    TextCommand_initFields();
    return TextCommand$increaseFontSize_instance;
  }
  var TextCommand$indent_instance;
  function TextCommand$indent_getInstance() {
    TextCommand_initFields();
    return TextCommand$indent_instance;
  }
  var TextCommand$insertBrOnReturn_instance;
  function TextCommand$insertBrOnReturn_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertBrOnReturn_instance;
  }
  var TextCommand$insertHorizontalRule_instance;
  function TextCommand$insertHorizontalRule_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertHorizontalRule_instance;
  }
  var TextCommand$insertHTML_instance;
  function TextCommand$insertHTML_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertHTML_instance;
  }
  var TextCommand$insertImage_instance;
  function TextCommand$insertImage_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertImage_instance;
  }
  var TextCommand$insertOrderedList_instance;
  function TextCommand$insertOrderedList_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertOrderedList_instance;
  }
  var TextCommand$insertUnorderedList_instance;
  function TextCommand$insertUnorderedList_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertUnorderedList_instance;
  }
  var TextCommand$insertParagraph_instance;
  function TextCommand$insertParagraph_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertParagraph_instance;
  }
  var TextCommand$insertText_instance;
  function TextCommand$insertText_getInstance() {
    TextCommand_initFields();
    return TextCommand$insertText_instance;
  }
  var TextCommand$italic_instance;
  function TextCommand$italic_getInstance() {
    TextCommand_initFields();
    return TextCommand$italic_instance;
  }
  var TextCommand$justifyCenter_instance;
  function TextCommand$justifyCenter_getInstance() {
    TextCommand_initFields();
    return TextCommand$justifyCenter_instance;
  }
  var TextCommand$justifyFull_instance;
  function TextCommand$justifyFull_getInstance() {
    TextCommand_initFields();
    return TextCommand$justifyFull_instance;
  }
  var TextCommand$justifyLeft_instance;
  function TextCommand$justifyLeft_getInstance() {
    TextCommand_initFields();
    return TextCommand$justifyLeft_instance;
  }
  var TextCommand$justifyRight_instance;
  function TextCommand$justifyRight_getInstance() {
    TextCommand_initFields();
    return TextCommand$justifyRight_instance;
  }
  var TextCommand$outdent_instance;
  function TextCommand$outdent_getInstance() {
    TextCommand_initFields();
    return TextCommand$outdent_instance;
  }
  var TextCommand$paste_instance;
  function TextCommand$paste_getInstance() {
    TextCommand_initFields();
    return TextCommand$paste_instance;
  }
  var TextCommand$redo_instance;
  function TextCommand$redo_getInstance() {
    TextCommand_initFields();
    return TextCommand$redo_instance;
  }
  var TextCommand$removeFormat_instance;
  function TextCommand$removeFormat_getInstance() {
    TextCommand_initFields();
    return TextCommand$removeFormat_instance;
  }
  var TextCommand$selectAll_instance;
  function TextCommand$selectAll_getInstance() {
    TextCommand_initFields();
    return TextCommand$selectAll_instance;
  }
  var TextCommand$strikeThrough_instance;
  function TextCommand$strikeThrough_getInstance() {
    TextCommand_initFields();
    return TextCommand$strikeThrough_instance;
  }
  var TextCommand$subscript_instance;
  function TextCommand$subscript_getInstance() {
    TextCommand_initFields();
    return TextCommand$subscript_instance;
  }
  var TextCommand$superscript_instance;
  function TextCommand$superscript_getInstance() {
    TextCommand_initFields();
    return TextCommand$superscript_instance;
  }
  var TextCommand$underline_instance;
  function TextCommand$underline_getInstance() {
    TextCommand_initFields();
    return TextCommand$underline_instance;
  }
  var TextCommand$undo_instance;
  function TextCommand$undo_getInstance() {
    TextCommand_initFields();
    return TextCommand$undo_instance;
  }
  var TextCommand$unlink_instance;
  function TextCommand$unlink_getInstance() {
    TextCommand_initFields();
    return TextCommand$unlink_instance;
  }
  var TextCommand$styleWithCSS_instance;
  function TextCommand$styleWithCSS_getInstance() {
    TextCommand_initFields();
    return TextCommand$styleWithCSS_instance;
  }
  TextCommand.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextCommand',
    interfaces: [Enum]
  };
  function TextCommand$values() {
    return [TextCommand$backColor_getInstance(), TextCommand$bold_getInstance(), TextCommand$contentReadOnly_getInstance(), TextCommand$copy_getInstance(), TextCommand$createLink_getInstance(), TextCommand$cut_getInstance(), TextCommand$decreaseFontSize_getInstance(), TextCommand$delete_getInstance(), TextCommand$enableInlineTableEditing_getInstance(), TextCommand$enableObjectResizing_getInstance(), TextCommand$fontName_getInstance(), TextCommand$fontSize_getInstance(), TextCommand$foreColor_getInstance(), TextCommand$formatBlock_getInstance(), TextCommand$forwardDelete_getInstance(), TextCommand$heading_getInstance(), TextCommand$hiliteColor_getInstance(), TextCommand$increaseFontSize_getInstance(), TextCommand$indent_getInstance(), TextCommand$insertBrOnReturn_getInstance(), TextCommand$insertHorizontalRule_getInstance(), TextCommand$insertHTML_getInstance(), TextCommand$insertImage_getInstance(), TextCommand$insertOrderedList_getInstance(), TextCommand$insertUnorderedList_getInstance(), TextCommand$insertParagraph_getInstance(), TextCommand$insertText_getInstance(), TextCommand$italic_getInstance(), TextCommand$justifyCenter_getInstance(), TextCommand$justifyFull_getInstance(), TextCommand$justifyLeft_getInstance(), TextCommand$justifyRight_getInstance(), TextCommand$outdent_getInstance(), TextCommand$paste_getInstance(), TextCommand$redo_getInstance(), TextCommand$removeFormat_getInstance(), TextCommand$selectAll_getInstance(), TextCommand$strikeThrough_getInstance(), TextCommand$subscript_getInstance(), TextCommand$superscript_getInstance(), TextCommand$underline_getInstance(), TextCommand$undo_getInstance(), TextCommand$unlink_getInstance(), TextCommand$styleWithCSS_getInstance()];
  }
  TextCommand.values = TextCommand$values;
  function TextCommand$valueOf(name) {
    switch (name) {
      case 'backColor':
        return TextCommand$backColor_getInstance();
      case 'bold':
        return TextCommand$bold_getInstance();
      case 'contentReadOnly':
        return TextCommand$contentReadOnly_getInstance();
      case 'copy':
        return TextCommand$copy_getInstance();
      case 'createLink':
        return TextCommand$createLink_getInstance();
      case 'cut':
        return TextCommand$cut_getInstance();
      case 'decreaseFontSize':
        return TextCommand$decreaseFontSize_getInstance();
      case 'delete':
        return TextCommand$delete_getInstance();
      case 'enableInlineTableEditing':
        return TextCommand$enableInlineTableEditing_getInstance();
      case 'enableObjectResizing':
        return TextCommand$enableObjectResizing_getInstance();
      case 'fontName':
        return TextCommand$fontName_getInstance();
      case 'fontSize':
        return TextCommand$fontSize_getInstance();
      case 'foreColor':
        return TextCommand$foreColor_getInstance();
      case 'formatBlock':
        return TextCommand$formatBlock_getInstance();
      case 'forwardDelete':
        return TextCommand$forwardDelete_getInstance();
      case 'heading':
        return TextCommand$heading_getInstance();
      case 'hiliteColor':
        return TextCommand$hiliteColor_getInstance();
      case 'increaseFontSize':
        return TextCommand$increaseFontSize_getInstance();
      case 'indent':
        return TextCommand$indent_getInstance();
      case 'insertBrOnReturn':
        return TextCommand$insertBrOnReturn_getInstance();
      case 'insertHorizontalRule':
        return TextCommand$insertHorizontalRule_getInstance();
      case 'insertHTML':
        return TextCommand$insertHTML_getInstance();
      case 'insertImage':
        return TextCommand$insertImage_getInstance();
      case 'insertOrderedList':
        return TextCommand$insertOrderedList_getInstance();
      case 'insertUnorderedList':
        return TextCommand$insertUnorderedList_getInstance();
      case 'insertParagraph':
        return TextCommand$insertParagraph_getInstance();
      case 'insertText':
        return TextCommand$insertText_getInstance();
      case 'italic':
        return TextCommand$italic_getInstance();
      case 'justifyCenter':
        return TextCommand$justifyCenter_getInstance();
      case 'justifyFull':
        return TextCommand$justifyFull_getInstance();
      case 'justifyLeft':
        return TextCommand$justifyLeft_getInstance();
      case 'justifyRight':
        return TextCommand$justifyRight_getInstance();
      case 'outdent':
        return TextCommand$outdent_getInstance();
      case 'paste':
        return TextCommand$paste_getInstance();
      case 'redo':
        return TextCommand$redo_getInstance();
      case 'removeFormat':
        return TextCommand$removeFormat_getInstance();
      case 'selectAll':
        return TextCommand$selectAll_getInstance();
      case 'strikeThrough':
        return TextCommand$strikeThrough_getInstance();
      case 'subscript':
        return TextCommand$subscript_getInstance();
      case 'superscript':
        return TextCommand$superscript_getInstance();
      case 'underline':
        return TextCommand$underline_getInstance();
      case 'undo':
        return TextCommand$undo_getInstance();
      case 'unlink':
        return TextCommand$unlink_getInstance();
      case 'styleWithCSS':
        return TextCommand$styleWithCSS_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.component.text.TextCommand.' + name);
    }
  }
  TextCommand.valueOf_61zpoe$ = TextCommand$valueOf;
  function TextField() {
    TextField$Companion_getInstance();
  }
  Object.defineProperty(TextField.prototype, 'label', {
    get: function () {
      var tmp$;
      return (tmp$ = this.text) != null ? tmp$ : '';
    },
    set: function (value) {
      this.text = value;
    }
  });
  function TextField$Companion() {
    TextField$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  TextField$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var TextField$Companion_instance = null;
  function TextField$Companion_getInstance() {
    if (TextField$Companion_instance === null) {
      new TextField$Companion();
    }
    return TextField$Companion_instance;
  }
  TextField.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TextField',
    interfaces: [Labelable, UiComponent]
  };
  function editableText$lambda($receiver) {
  }
  function editableText($receiver, init) {
    if (init === void 0)
      init = editableText$lambda;
    var t = $receiver.injector.inject_li8edk$(EditableTextField$Companion_getInstance().FACTORY_KEY)($receiver);
    init(t);
    return t;
  }
  function get_selectable($receiver) {
    return $receiver.charStyle.selectable;
  }
  function set_selectable($receiver, value) {
    $receiver.charStyle.selectable = value;
  }
  function text$lambda($receiver) {
  }
  function text_1($receiver, text_2, init) {
    if (init === void 0)
      init = text$lambda;
    var t = $receiver.injector.inject_li8edk$(TextField$Companion_getInstance().FACTORY_KEY)($receiver);
    t.text = text_2;
    init(t);
    return t;
  }
  function text$lambda_0($receiver) {
  }
  function text_0($receiver, init) {
    if (init === void 0)
      init = text$lambda_0;
    var t = $receiver.injector.inject_li8edk$(TextField$Companion_getInstance().FACTORY_KEY)($receiver);
    init(t);
    return t;
  }
  function TextSelection() {
    this._changed_0 = new Signal0();
    this._startIndex_0 = 0;
    this._endIndex_0 = 0;
  }
  Object.defineProperty(TextSelection.prototype, 'changed', {
    get: function () {
      return this._changed_0;
    }
  });
  Object.defineProperty(TextSelection.prototype, 'startIndex', {
    get: function () {
      return this._startIndex_0;
    },
    set: function (value) {
      if (this._startIndex_0 === value)
        return;
      this._startIndex_0 = value;
      this._changed_0.dispatch();
    }
  });
  Object.defineProperty(TextSelection.prototype, 'endIndex', {
    get: function () {
      return this._endIndex_0;
    },
    set: function (value) {
      if (this._endIndex_0 === value)
        return;
      this._endIndex_0 = value;
      this._changed_0.dispatch();
    }
  });
  TextSelection.prototype.clear = function () {
    this._startIndex_0 = 0;
    this._endIndex_0 = 0;
    this._changed_0.dispatch();
  };
  TextSelection.prototype.selectAll = function () {
    this._startIndex_0 = 0;
    this._endIndex_0 = IntCompanionObject.MAX_VALUE;
    this._changed_0.dispatch();
  };
  TextSelection.prototype.inRange_za3lpa$ = function (i) {
    return i >= this._startIndex_0 && i < this._endIndex_0;
  };
  TextSelection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextSelection',
    interfaces: [Clearable]
  };
  function FlowStyle() {
    FlowStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_67tbt5$_0 = FlowStyle$Companion_getInstance();
    this.horizontalAlign$delegate = this.prop_umlfku$('horizontalAlign', FlowHAlign$LEFT_getInstance());
    this.verticalAlign$delegate = this.prop_umlfku$('verticalAlign', FlowVAlign$BASELINE_getInstance());
    this.tabSize$delegate = this.prop_umlfku$('tabSize', 24.0);
  }
  Object.defineProperty(FlowStyle.prototype, 'type', {
    get: function () {
      return this.type_67tbt5$_0;
    }
  });
  Object.defineProperty(FlowStyle.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('horizontalAlign'));
    },
    set: function (horizontalAlign) {
      this.horizontalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('horizontalAlign'), horizontalAlign);
    }
  });
  Object.defineProperty(FlowStyle.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('verticalAlign'));
    },
    set: function (verticalAlign) {
      this.verticalAlign$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('verticalAlign'), verticalAlign);
    }
  });
  Object.defineProperty(FlowStyle.prototype, 'tabSize', {
    get: function () {
      return this.tabSize$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('tabSize'));
    },
    set: function (tabSize) {
      this.tabSize$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('tabSize'), tabSize);
    }
  });
  function FlowStyle$Companion() {
    FlowStyle$Companion_instance = this;
  }
  FlowStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var FlowStyle$Companion_instance = null;
  function FlowStyle$Companion_getInstance() {
    if (FlowStyle$Companion_instance === null) {
      new FlowStyle$Companion();
    }
    return FlowStyle$Companion_instance;
  }
  FlowStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FlowStyle',
    interfaces: [StyleBase]
  };
  function FlowStyleSerializer() {
    FlowStyleSerializer_instance = this;
  }
  FlowStyleSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    var tmp$, tmp$_0, tmp$_1;
    (tmp$ = styleProperty(writer, $receiver, 'horizontalAlign')) != null ? tmp$.string_pdl1vj$($receiver.horizontalAlign.name) : null;
    (tmp$_0 = styleProperty(writer, $receiver, 'verticalAlign')) != null ? tmp$_0.string_pdl1vj$($receiver.verticalAlign.name) : null;
    (tmp$_1 = styleProperty(writer, $receiver, 'tabSize')) != null ? tmp$_1.float_81sz4$($receiver.tabSize) : null;
  };
  FlowStyleSerializer.prototype.read_gax0m7$ = function (reader) {
    var f = new FlowStyle();
    var name = 'horizontalAlign';
    var tmp$;
    if (reader.contains_61zpoe$(name)) {
      var tmp$_0;
      f.horizontalAlign = FlowHAlign$valueOf((tmp$_0 = ((tmp$ = reader.get_61zpoe$(name)) != null ? tmp$ : Kotlin.throwNPE()).string()) != null ? tmp$_0 : Kotlin.throwNPE());
    }
    var name_0 = 'verticalAlign';
    var tmp$_1;
    if (reader.contains_61zpoe$(name_0)) {
      var tmp$_2;
      f.verticalAlign = FlowVAlign$valueOf((tmp$_2 = ((tmp$_1 = reader.get_61zpoe$(name_0)) != null ? tmp$_1 : Kotlin.throwNPE()).string()) != null ? tmp$_2 : Kotlin.throwNPE());
    }
    var tmp$_3;
    if (reader.contains_61zpoe$('tabSize')) {
      var tmp$_4;
      f.tabSize = (tmp$_4 = ((tmp$_3 = reader.get_61zpoe$('tabSize')) != null ? tmp$_3 : Kotlin.throwNPE()).float()) != null ? tmp$_4 : Kotlin.throwNPE();
    }
    return f;
  };
  FlowStyleSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'FlowStyleSerializer',
    interfaces: [From, To]
  };
  var FlowStyleSerializer_instance = null;
  function FlowStyleSerializer_getInstance() {
    if (FlowStyleSerializer_instance === null) {
      new FlowStyleSerializer();
    }
    return FlowStyleSerializer_instance;
  }
  function CharStyle() {
    CharStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_ds3j8x$_0 = CharStyle$Companion_getInstance();
    this.face$delegate = this.prop_umlfku$('face', '_sans');
    this.size$delegate = this.prop_umlfku$('size', 14);
    this.isBold$delegate = this.prop_umlfku$('isBold', false);
    this.isItalic$delegate = this.prop_umlfku$('isItalic', false);
    this.isUnderlined$delegate = this.prop_umlfku$('isUnderlined', false);
    this.colorTint$delegate = this.prop_umlfku$('colorTint', new Color(1.0, 1.0, 1.0, 1.0));
    this.backgroundColor$delegate = this.prop_umlfku$('backgroundColor', new Color());
    this.selectedColorTint$delegate = this.prop_umlfku$('selectedColorTint', new Color(1.0, 1.0, 1.0, 1.0));
    this.selectedBackgroundColor$delegate = this.prop_umlfku$('selectedBackgroundColor', new Color(0.12, 0.25, 0.5, 1.0));
    this.selectable$delegate = this.prop_umlfku$('selectable', true);
  }
  Object.defineProperty(CharStyle.prototype, 'type', {
    get: function () {
      return this.type_ds3j8x$_0;
    }
  });
  Object.defineProperty(CharStyle.prototype, 'face', {
    get: function () {
      return this.face$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('face'));
    },
    set: function (face) {
      this.face$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('face'), face);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'size', {
    get: function () {
      return this.size$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('size'));
    },
    set: function (size) {
      this.size$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('size'), size);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'isBold', {
    get: function () {
      return this.isBold$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('isBold'));
    },
    set: function (isBold) {
      this.isBold$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('isBold'), isBold);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'isItalic', {
    get: function () {
      return this.isItalic$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('isItalic'));
    },
    set: function (isItalic) {
      this.isItalic$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('isItalic'), isItalic);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'isUnderlined', {
    get: function () {
      return this.isUnderlined$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('isUnderlined'));
    },
    set: function (isUnderlined) {
      this.isUnderlined$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('isUnderlined'), isUnderlined);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'colorTint', {
    get: function () {
      return this.colorTint$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('colorTint'));
    },
    set: function (colorTint) {
      this.colorTint$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('colorTint'), colorTint);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'backgroundColor', {
    get: function () {
      return this.backgroundColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('backgroundColor'));
    },
    set: function (backgroundColor) {
      this.backgroundColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('backgroundColor'), backgroundColor);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'selectedColorTint', {
    get: function () {
      return this.selectedColorTint$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('selectedColorTint'));
    },
    set: function (selectedColorTint) {
      this.selectedColorTint$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('selectedColorTint'), selectedColorTint);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'selectedBackgroundColor', {
    get: function () {
      return this.selectedBackgroundColor$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('selectedBackgroundColor'));
    },
    set: function (selectedBackgroundColor) {
      this.selectedBackgroundColor$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('selectedBackgroundColor'), selectedBackgroundColor);
    }
  });
  Object.defineProperty(CharStyle.prototype, 'selectable', {
    get: function () {
      return this.selectable$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('selectable'));
    },
    set: function (selectable) {
      this.selectable$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('selectable'), selectable);
    }
  });
  function CharStyle$Companion() {
    CharStyle$Companion_instance = this;
  }
  CharStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var CharStyle$Companion_instance = null;
  function CharStyle$Companion_getInstance() {
    if (CharStyle$Companion_instance === null) {
      new CharStyle$Companion();
    }
    return CharStyle$Companion_instance;
  }
  CharStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CharStyle',
    interfaces: [StyleBase]
  };
  function CharStyleSerializer() {
    CharStyleSerializer_instance = this;
  }
  CharStyleSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8;
    (tmp$ = styleProperty(writer, $receiver, 'face')) != null ? tmp$.string_pdl1vj$($receiver.face) : null;
    (tmp$_0 = styleProperty(writer, $receiver, 'size')) != null ? tmp$_0.int_s8ev37$($receiver.size) : null;
    (tmp$_1 = styleProperty(writer, $receiver, 'isBold')) != null ? tmp$_1.bool_1v8dbw$($receiver.isBold) : null;
    (tmp$_2 = styleProperty(writer, $receiver, 'isItalic')) != null ? tmp$_2.bool_1v8dbw$($receiver.isItalic) : null;
    (tmp$_3 = styleProperty(writer, $receiver, 'isUnderlined')) != null ? tmp$_3.bool_1v8dbw$($receiver.isUnderlined) : null;
    (tmp$_4 = styleProperty(writer, $receiver, 'colorTint')) != null ? color(tmp$_4, $receiver.colorTint) : null;
    (tmp$_5 = styleProperty(writer, $receiver, 'backgroundColor')) != null ? color(tmp$_5, $receiver.backgroundColor) : null;
    (tmp$_6 = styleProperty(writer, $receiver, 'selectedColorTint')) != null ? color(tmp$_6, $receiver.selectedColorTint) : null;
    (tmp$_7 = styleProperty(writer, $receiver, 'selectedBackgroundColor')) != null ? color(tmp$_7, $receiver.selectedBackgroundColor) : null;
    (tmp$_8 = styleProperty(writer, $receiver, 'selectable')) != null ? tmp$_8.bool_1v8dbw$($receiver.selectable) : null;
  };
  CharStyleSerializer.prototype.read_gax0m7$ = function (reader) {
    var c = new CharStyle();
    var tmp$;
    if (reader.contains_61zpoe$('face')) {
      var tmp$_0;
      c.face = (tmp$_0 = ((tmp$ = reader.get_61zpoe$('face')) != null ? tmp$ : Kotlin.throwNPE()).string()) != null ? tmp$_0 : Kotlin.throwNPE();
    }
    var tmp$_1;
    if (reader.contains_61zpoe$('size')) {
      var tmp$_2;
      c.size = (tmp$_2 = ((tmp$_1 = reader.get_61zpoe$('size')) != null ? tmp$_1 : Kotlin.throwNPE()).int()) != null ? tmp$_2 : Kotlin.throwNPE();
    }
    var tmp$_3;
    if (reader.contains_61zpoe$('isBold')) {
      var tmp$_4;
      c.isBold = (tmp$_4 = ((tmp$_3 = reader.get_61zpoe$('isBold')) != null ? tmp$_3 : Kotlin.throwNPE()).bool()) != null ? tmp$_4 : Kotlin.throwNPE();
    }
    var name = 'isItalic';
    var tmp$_5;
    if (reader.contains_61zpoe$(name)) {
      var tmp$_6;
      c.isItalic = (tmp$_6 = ((tmp$_5 = reader.get_61zpoe$(name)) != null ? tmp$_5 : Kotlin.throwNPE()).bool()) != null ? tmp$_6 : Kotlin.throwNPE();
    }
    var name_0 = 'isUnderlined';
    var tmp$_7;
    if (reader.contains_61zpoe$(name_0)) {
      var tmp$_8;
      c.isUnderlined = (tmp$_8 = ((tmp$_7 = reader.get_61zpoe$(name_0)) != null ? tmp$_7 : Kotlin.throwNPE()).bool()) != null ? tmp$_8 : Kotlin.throwNPE();
    }
    var name_1 = 'colorTint';
    var tmp$_9;
    if (reader.contains_61zpoe$(name_1)) {
      var tmp$_10;
      c.colorTint = (tmp$_10 = color_0((tmp$_9 = reader.get_61zpoe$(name_1)) != null ? tmp$_9 : Kotlin.throwNPE())) != null ? tmp$_10 : Kotlin.throwNPE();
    }
    var name_2 = 'backgroundColor';
    var tmp$_11;
    if (reader.contains_61zpoe$(name_2)) {
      var tmp$_12;
      c.backgroundColor = (tmp$_12 = color_0((tmp$_11 = reader.get_61zpoe$(name_2)) != null ? tmp$_11 : Kotlin.throwNPE())) != null ? tmp$_12 : Kotlin.throwNPE();
    }
    var name_3 = 'selectedColorTint';
    var tmp$_13;
    if (reader.contains_61zpoe$(name_3)) {
      var tmp$_14;
      c.selectedColorTint = (tmp$_14 = color_0((tmp$_13 = reader.get_61zpoe$(name_3)) != null ? tmp$_13 : Kotlin.throwNPE())) != null ? tmp$_14 : Kotlin.throwNPE();
    }
    var name_4 = 'selectedBackgroundColor';
    var tmp$_15;
    if (reader.contains_61zpoe$(name_4)) {
      var tmp$_16;
      c.selectedBackgroundColor = (tmp$_16 = color_0((tmp$_15 = reader.get_61zpoe$(name_4)) != null ? tmp$_15 : Kotlin.throwNPE())) != null ? tmp$_16 : Kotlin.throwNPE();
    }
    var name_5 = 'selectable';
    var tmp$_17;
    if (reader.contains_61zpoe$(name_5)) {
      var tmp$_18;
      c.selectable = (tmp$_18 = ((tmp$_17 = reader.get_61zpoe$(name_5)) != null ? tmp$_17 : Kotlin.throwNPE()).bool()) != null ? tmp$_18 : Kotlin.throwNPE();
    }
    return c;
  };
  CharStyleSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'CharStyleSerializer',
    interfaces: [From, To]
  };
  var CharStyleSerializer_instance = null;
  function CharStyleSerializer_getInstance() {
    if (CharStyleSerializer_instance === null) {
      new CharStyleSerializer();
    }
    return CharStyleSerializer_instance;
  }
  function charStyle$lambda($receiver) {
  }
  function charStyle(init) {
    if (init === void 0)
      init = charStyle$lambda;
    var c = new CharStyle();
    init(c);
    return c;
  }
  function TextInput() {
    TextInput$Companion_getInstance();
  }
  function TextInput$Companion() {
    TextInput$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  TextInput$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var TextInput$Companion_instance = null;
  function TextInput$Companion_getInstance() {
    if (TextInput$Companion_instance === null) {
      new TextInput$Companion();
    }
    return TextInput$Companion_instance;
  }
  TextInput.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TextInput',
    interfaces: [Focusable]
  };
  function get_selectable_0($receiver) {
    return $receiver.charStyle.selectable;
  }
  function set_selectable_0($receiver, value) {
    $receiver.charStyle.selectable = value;
  }
  function TextArea() {
    TextArea$Companion_getInstance();
  }
  function TextArea$Companion() {
    TextArea$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  TextArea$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var TextArea$Companion_instance = null;
  function TextArea$Companion_getInstance() {
    if (TextArea$Companion_instance === null) {
      new TextArea$Companion();
    }
    return TextArea$Companion_instance;
  }
  TextArea.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TextArea',
    interfaces: [Focusable]
  };
  function get_selectable_1($receiver) {
    return $receiver.charStyle.selectable;
  }
  function set_selectable_1($receiver, value) {
    $receiver.charStyle.selectable = value;
  }
  function textInput$lambda($receiver) {
  }
  function textInput($receiver, init) {
    if (init === void 0)
      init = textInput$lambda;
    var t = $receiver.injector.inject_li8edk$(TextInput$Companion_getInstance().FACTORY_KEY)($receiver);
    init(t);
    return t;
  }
  function textArea$lambda($receiver) {
  }
  function textArea($receiver, init) {
    if (init === void 0)
      init = textArea$lambda;
    var t = $receiver.injector.inject_li8edk$(TextArea$Companion_getInstance().FACTORY_KEY)($receiver);
    init(t);
    return t;
  }
  function TextureComponent() {
    TextureComponent$Companion_getInstance();
  }
  TextureComponent.prototype.setRegion_o5do7t$ = function (region) {
    this.setRegion_7b5o5w$(region.x, region.y, region.width, region.height);
  };
  TextureComponent.prototype.setRegion_smhrz9$ = function (region) {
    this.setRegion_7b5o5w$(region.x, region.y, region.width, region.height);
  };
  function TextureComponent$Companion() {
    TextureComponent$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  TextureComponent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TextureComponent$Companion_instance = null;
  function TextureComponent$Companion_getInstance() {
    if (TextureComponent$Companion_instance === null) {
      new TextureComponent$Companion();
    }
    return TextureComponent$Companion_instance;
  }
  TextureComponent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TextureComponent',
    interfaces: [UiComponent]
  };
  function textureC$lambda($receiver) {
  }
  function textureC($receiver, init) {
    if (init === void 0)
      init = textureC$lambda;
    var textureComponent = $receiver.injector.inject_li8edk$(TextureComponent$Companion_getInstance().FACTORY_KEY)($receiver);
    init(textureComponent);
    return textureComponent;
  }
  function textureC$lambda_0($receiver) {
  }
  function textureC_0($receiver, path, init) {
    if (init === void 0)
      init = textureC$lambda_0;
    var textureComponent = $receiver.injector.inject_li8edk$(TextureComponent$Companion_getInstance().FACTORY_KEY)($receiver);
    textureComponent.path = path;
    init(textureComponent);
    return textureComponent;
  }
  function textureC$lambda_1($receiver) {
  }
  function textureC_1($receiver, texture, init) {
    if (init === void 0)
      init = textureC$lambda_1;
    var textureComponent = $receiver.injector.inject_li8edk$(TextureComponent$Companion_getInstance().FACTORY_KEY)($receiver);
    textureComponent.texture = texture;
    init(textureComponent);
    return textureComponent;
  }
  function UiComponent() {
  }
  UiComponent.prototype.isRendered = function () {
    if (!this.isActive)
      return false;
    if (this.concatenatedColorTint.a <= 0.0)
      return false;
    var p = this;
    while (p != null) {
      if (!p.visible)
        return false;
      p = p.parent;
    }
    return true;
  };
  UiComponent.prototype.getChildUnderPoint_g1oyt7$ = function (canvasX, canvasY, onlyInteractive) {
    var ray = Ray.Companion.obtain();
    this.camera.getPickRay_7zdu66$(canvasX, canvasY, ray);
    var element = this.getChildUnderRay_p0mkez$(ray, onlyInteractive);
    ray.free();
    return element;
  };
  UiComponent.prototype.getChildUnderRay_p0mkez$ = function (globalRay, onlyInteractive) {
    var tmp$;
    var tmpList = Kotlin.isType(tmp$ = collection_0.arrayListPool.obtain(), ArrayList) ? tmp$ : Kotlin.throwCCE();
    tmpList.clear();
    this.getChildrenUnderRayInternal_4zqksb$(globalRay, tmpList, false, onlyInteractive);
    var first_0 = firstOrNull(tmpList);
    collection_0.arrayListPool.free_11rb$(tmpList);
    return first_0;
  };
  UiComponent.prototype.getChildrenUnderPoint_adthd4$ = function (canvasX, canvasY, out, onlyInteractive) {
    var ray = Ray.Companion.obtain();
    this.camera.getPickRay_7zdu66$(canvasX, canvasY, ray);
    this.getChildrenUnderRay_w6o14y$(ray, out, onlyInteractive);
    ray.free();
    return out;
  };
  UiComponent.prototype.getChildrenUnderRay_w6o14y$ = function (globalRay, out, onlyInteractive) {
    out.clear();
    this.getChildrenUnderRayInternal_4zqksb$(globalRay, out, true, onlyInteractive);
    return out;
  };
  UiComponent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'UiComponent',
    interfaces: [Validatable, InteractiveElement, ColorTransformable, Lifecycle]
  };
  function UiComponentImpl(owner, native) {
    UiComponentImpl$Companion_getInstance();
    if (native === void 0)
      native = inject(owner, NativeComponent$Companion_getInstance().FACTORY_KEY)(owner);
    LifecycleBase.call(this);
    this.owner_hwnx8g$_0 = owner;
    this.native_hwnx8g$_0 = native;
    this.injector_hwnx8g$_0 = this.owner.injector;
    this.window = inject(this, Window$Companion_getInstance());
    this.mouse = inject(this, MouseState$Companion_getInstance());
    this.assets = inject(this, AssetManager$Companion_getInstance());
    this.interactivity = inject(this, InteractivityManager$Companion_getInstance());
    this.timeDriver = inject(this, TimeDriver$Companion_getInstance());
    this.defaultCamera_hwnx8g$_0 = inject(this, Camera$Companion_getInstance());
    this.invalidated_hwnx8g$_0 = own(this, new Signal2());
    this.validation = null;
    this._isValidating_hwnx8g$_0 = false;
    this._transform = new Matrix4();
    this._concatenatedTransform = new Matrix4();
    this._concatenatedTransformInv = new Matrix4();
    this._concatenatedTransformInvIsValid = false;
    this._position = new Vector3(0.0, 0.0, 0.0);
    this._rotation = new Vector3(0.0, 0.0, 0.0);
    this._scale = new Vector3(1.0, 1.0, 1.0);
    this._origin = new Vector3(0.0, 0.0, 0.0);
    this.cameraOverride_hwnx8g$_0 = null;
    this.isSimpleTranslate = true;
    this._bounds = new Bounds();
    this._explicitWidth = null;
    this._explicitHeight = null;
    this._layoutData = null;
    this._includeInLayout = true;
    this._explicitSizeConstraints = new SizeConstraints();
    this._sizeConstraints = new SizeConstraints();
    this._inheritedInteractivityMode = InteractivityMode$ALL_getInstance();
    this._interactivityMode = InteractivityMode$ALL_getInstance();
    this._captureSignals = HashMap_init();
    this._bubbleSignals = HashMap_init();
    this._attachments = HashMap_init();
    this._colorTint = Color.Companion.WHITE.copy_7b5o5w$();
    this._concatenatedColorTint = Color.Companion.WHITE.copy_7b5o5w$();
    this._visible = true;
    this.parent_hwnx8g$_0 = null;
    this.ownerDisposed_hwnx8g$_0 = UiComponentImpl$ownerDisposed$lambda(this);
    this.owner.disposed.add_trkh7z$(this.ownerDisposed_hwnx8g$_0);
    var r = this;
    this.validation = validationTree(UiComponentImpl_init$lambda(r));
    this.layoutDataChangedHandler = UiComponentImpl$layoutDataChangedHandler$lambda(this);
  }
  Object.defineProperty(UiComponentImpl.prototype, 'owner', {
    get: function () {
      return this.owner_hwnx8g$_0;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'native', {
    get: function () {
      return this.native_hwnx8g$_0;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'injector', {
    get: function () {
      return this.injector_hwnx8g$_0;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'invalidated', {
    get: function () {
      return this.invalidated_hwnx8g$_0;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'cameraOverride', {
    get: function () {
      return this.cameraOverride_hwnx8g$_0;
    },
    set: function (cameraOverride) {
      this.cameraOverride_hwnx8g$_0 = cameraOverride;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'inheritedInteractivityMode', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().INTERACTIVITY_MODE);
      return this._inheritedInteractivityMode;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'interactivityMode', {
    get: function () {
      return this._interactivityMode;
    },
    set: function (value) {
      if (value !== this._interactivityMode) {
        this._interactivityMode = value;
        this.invalidate_za3lpa$(ValidationFlags_getInstance().INTERACTIVITY_MODE);
      }
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'parent', {
    get: function () {
      return this.parent_hwnx8g$_0;
    },
    set: function (parent) {
      this.parent_hwnx8g$_0 = parent;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'visible', {
    get: function () {
      return this._visible;
    },
    set: function (value) {
      if (Kotlin.equals(this._visible, value))
        return;
      this._visible = value;
      this.native.visible = value;
      if (value) {
        var tmp$, tmp$_0, tmp$_1;
        var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
        openList.add_11rb$(this);
        loop: while (true) {
          if (!!openList.isEmpty())
            break;
          var next = openList.shift();
          next.onAncestorVisibleChanged_hv8cvn$(this, value);
          var treeWalk = TreeWalk$CONTINUE_getInstance();
          if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
            break loop;
          else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
            continue loop;
          else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
            openList.clear();
          (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), false) : null;
        }
        $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
      }
      this.invalidate_za3lpa$(ValidationFlags_getInstance().HIERARCHY_ASCENDING);
    }
  });
  UiComponentImpl.prototype.onAncestorVisibleChanged_hv8cvn$ = function (uiComponent, value) {
  };
  UiComponentImpl.prototype.containsCanvasPoint_dleff0$ = function (canvasX, canvasY) {
    if (!this.isActive)
      return false;
    var ray = Ray.Companion.obtain();
    this.camera.getPickRay_7zdu66$(canvasX, canvasY, ray);
    var b = this.intersectsGlobalRay_ujzndq$(ray);
    ray.free();
    return b;
  };
  Object.defineProperty(UiComponentImpl.prototype, 'bounds', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      return this._bounds;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'explicitWidth', {
    get: function () {
      return this._explicitWidth;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'explicitHeight', {
    get: function () {
      return this._explicitHeight;
    }
  });
  UiComponentImpl.prototype.width_81sz4$ = function (value) {
    if (this._explicitWidth === value)
      return;
    if (Kotlin.equals(value != null ? isNaN_0(value) : null, true))
      throw new Exception('May not set the size to be NaN');
    this._explicitWidth = value;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  UiComponentImpl.prototype.height_81sz4$ = function (value) {
    if (this._explicitHeight === value)
      return;
    if (Kotlin.equals(value != null ? isNaN_0(value) : null, true))
      throw new Exception('May not set the size to be NaN');
    this._explicitHeight = value;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'shouldLayout', {
    get: function () {
      return this._includeInLayout && this._visible;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'includeInLayout', {
    get: function () {
      return this._includeInLayout;
    },
    set: function (value) {
      if (Kotlin.equals(this._includeInLayout, value))
        return;
      this._includeInLayout = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().HIERARCHY_ASCENDING);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'layoutData', {
    get: function () {
      return this._layoutData;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      if (Kotlin.equals(this._layoutData, value))
        return;
      if (this._layoutData != null) {
        ((tmp$ = this._layoutData) != null ? tmp$ : Kotlin.throwNPE()).changed.remove_trkh7z$(this.layoutDataChangedHandler);
      }
      this._layoutData = value;
      if (this._layoutData != null) {
        ((tmp$_0 = this._layoutData) != null ? tmp$_0 : Kotlin.throwNPE()).changed.add_trkh7z$(this.layoutDataChangedHandler);
      }
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'sizeConstraints', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      return this._sizeConstraints;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'explicitSizeConstraints', {
    get: function () {
      return this._explicitSizeConstraints;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'minWidth', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      return this._sizeConstraints.width.min;
    }
  });
  UiComponentImpl.prototype.minWidth_81sz4$ = function (value) {
    this._explicitSizeConstraints.width.min = value;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'minHeight', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      return this._sizeConstraints.height.min;
    }
  });
  UiComponentImpl.prototype.minHeight_81sz4$ = function (value) {
    this._explicitSizeConstraints.height.min = value;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'maxWidth', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      return this._sizeConstraints.width.max;
    }
  });
  UiComponentImpl.prototype.maxWidth_81sz4$ = function (value) {
    this._explicitSizeConstraints.width.max = value;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'maxHeight', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
      return this._sizeConstraints.height.max;
    }
  });
  UiComponentImpl.prototype.maxHeight_81sz4$ = function (value) {
    this._explicitSizeConstraints.height.max = value;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
  };
  UiComponentImpl.prototype.setSize_yxjqmk$$default = function (width, height) {
    if (Kotlin.equals(width != null ? isNaN_0(width) : null, true) || Kotlin.equals(height != null ? isNaN_0(height) : null, true))
      throw new Exception('May not set the size to be NaN');
    if (this._explicitWidth === width && this._explicitHeight === height)
      return;
    this._explicitWidth = width;
    this._explicitHeight = height;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  UiComponentImpl.prototype.validateSizeConstraints = function () {
    this._sizeConstraints.clear();
    this.updateSizeConstraints_mby7og$(this._sizeConstraints);
    this._sizeConstraints.bound_mby7og$(this._explicitSizeConstraints);
  };
  UiComponentImpl.prototype.updateSizeConstraints_mby7og$ = function (out) {
  };
  UiComponentImpl.prototype.validateLayout = function () {
    var sC = this.sizeConstraints;
    var w = sC.width.clamp_mef7kx$(this._explicitWidth);
    var h = sC.height.clamp_mef7kx$(this._explicitHeight);
    this._bounds.set_dleff0$(w != null ? w : 0.0, h != null ? h : 0.0);
    this.updateLayout_64u75x$(w, h, this._bounds);
    if (isNaN_0(this._bounds.width) || isNaN_0(this._bounds.height))
      throw new Exception('Bounding measurements should not be NaN');
    this.native.setSize_yxjqmk$(this._bounds.width, this._bounds.height);
  };
  UiComponentImpl.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
  };
  UiComponentImpl.prototype.hasInteraction = function () {
    var tmp$ = !this._captureSignals.isEmpty();
    if (!tmp$) {
      tmp$ = !this._bubbleSignals.isEmpty();
    }
    return tmp$;
  };
  UiComponentImpl.prototype.getInteractionSignal_j3fyc4$$default = function (type, isCapture) {
    var tmp$;
    var handlers = isCapture ? this._captureSignals : this._bubbleSignals;
    return (tmp$ = handlers.get_11rb$(type)) == null || Kotlin.isType(tmp$, StoppableSignal) ? tmp$ : Kotlin.throwCCE();
  };
  UiComponentImpl.prototype.addInteractionSignal_pqftit$$default = function (type, signal_0, isCapture) {
    var handlers = isCapture ? this._captureSignals : this._bubbleSignals;
    handlers.put_xwzc9p$(type, signal_0);
  };
  UiComponentImpl.prototype.removeInteractionSignal_j3fyc4$ = function (type, isCapture) {
    var handlers = isCapture ? this._captureSignals : this._bubbleSignals;
    handlers.remove_11rb$(type);
  };
  UiComponentImpl.prototype.getAttachment_pgxeca$ = function (key) {
    var tmp$;
    return (tmp$ = this._attachments.get_11rb$(key)) == null || Kotlin.isType(tmp$, Any) ? tmp$ : Kotlin.throwCCE();
  };
  UiComponentImpl.prototype.addAttachment_wn2jw4$ = function (key, value) {
    this._attachments.put_xwzc9p$(key, value);
  };
  UiComponentImpl.prototype.removeAttachment_pgxeca$ = function (key) {
    var tmp$;
    return (tmp$ = this._attachments.remove_11rb$(key)) == null || Kotlin.isType(tmp$, Any) ? tmp$ : Kotlin.throwCCE();
  };
  UiComponentImpl.prototype.mousePosition_9wm29l$ = function (out) {
    this.windowToLocal_9wm29l$(this.mouse.mousePosition_9wm29l$(out));
    return out;
  };
  UiComponentImpl.prototype.mouseIsOver = function () {
    var tmp$, tmp$_0;
    if (!this.isActive || !this.mouse.overCanvas())
      return false;
    tmp$ = injectOptional(this.owner, Stage$Companion_getInstance());
    if (tmp$ == null) {
      return false;
    }
    var stage = tmp$;
    tmp$_0 = stage.getChildUnderPoint_g1oyt7$(this.mouse.canvasX(), this.mouse.canvasY(), true);
    if (tmp$_0 == null) {
      return false;
    }
    var e = tmp$_0;
    return isDescendantOf(e, this);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'colorTint', {
    get: function () {
      return this._colorTint;
    },
    set: function (value) {
      var tmp$;
      if ((tmp$ = this._colorTint) != null ? tmp$.equals(value) : null)
        return;
      this._colorTint.set_1qghwi$(value);
      this.invalidate_za3lpa$(ValidationFlags_getInstance().COLOR_TRANSFORM);
    }
  });
  UiComponentImpl.prototype.colorTint_7b5o5w$ = function (r, g, b, a) {
    this._colorTint.set_7b5o5w$(r, g, b, a);
    this.invalidate_za3lpa$(ValidationFlags_getInstance().COLOR_TRANSFORM);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'concatenatedColorTint', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().CONCATENATED_COLOR_TRANSFORM);
      return this._concatenatedColorTint;
    }
  });
  UiComponentImpl.prototype.updateColorTransform = function () {
    this.native.setColorTint_1qghwi$(this._colorTint);
  };
  UiComponentImpl.prototype.updateConcatenatedColorTransform = function () {
    var p = this.parent;
    if (p == null) {
      this._concatenatedColorTint.set_1qghwi$(this._colorTint);
    }
     else {
      this._concatenatedColorTint.set_1qghwi$(p.concatenatedColorTint).mul_1qghwi$(this._colorTint);
    }
    this.native.setConcatenatedColorTint_1qghwi$(this._concatenatedColorTint);
  };
  UiComponentImpl.prototype.updateInheritedInteractivityMode = function () {
    var tmp$;
    this._inheritedInteractivityMode = this._interactivityMode;
    if (Kotlin.equals((tmp$ = this.parent) != null ? tmp$.inheritedInteractivityMode : null, InteractivityMode$NONE_getInstance()))
      this._inheritedInteractivityMode = InteractivityMode$NONE_getInstance();
    this.native.interactivityEnabled = this._inheritedInteractivityMode === InteractivityMode$ALL_getInstance();
  };
  UiComponentImpl.prototype.updateHierarchyAscending = function () {
  };
  UiComponentImpl.prototype.updateHierarchyDescending = function () {
  };
  UiComponentImpl.prototype.getChildrenUnderRayInternal_4zqksb$ = function (globalRay, out, returnAll, onlyInteractive) {
    if (!this._visible || (onlyInteractive && !this.interactivityEnabled))
      return;
    if (this.intersectsGlobalRay_ujzndq$(globalRay)) {
      out.add_11rb$(this);
    }
  };
  UiComponentImpl.prototype.updateProperties = function () {
  };
  Object.defineProperty(UiComponentImpl.prototype, 'transform', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
      return this._transform;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'rotationX', {
    get: function () {
      return this._rotation.x;
    },
    set: function (value) {
      if (this._rotation.x === value)
        return;
      this._rotation.x = value;
      if (this.isSimpleTranslate && value !== 0.0) {
        this.isSimpleTranslate = false;
      }
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
      return;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'rotationY', {
    get: function () {
      return this._rotation.y;
    },
    set: function (value) {
      if (this._rotation.y === value)
        return;
      this._rotation.y = value;
      if (this.isSimpleTranslate && value !== 0.0) {
        this.isSimpleTranslate = false;
      }
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
      return;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'rotation', {
    get: function () {
      return this._rotation.z;
    },
    set: function (value) {
      if (this._rotation.z === value)
        return;
      this._rotation.z = value;
      if (this.isSimpleTranslate && value !== 0.0) {
        this.isSimpleTranslate = false;
      }
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  UiComponentImpl.prototype.setRotation_y2kzbl$$default = function (x, y, z) {
    if (this._rotation.x === x && this._rotation.y === y && this._rotation.z === z)
      return;
    this._rotation.set_y2kzbl$(x, y, z);
    if (this.isSimpleTranslate && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {
      this.isSimpleTranslate = false;
    }
    this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    return;
  };
  Object.defineProperty(UiComponentImpl.prototype, 'x', {
    get: function () {
      return this._position.x;
    },
    set: function (value) {
      if (value === this._position.x)
        return;
      this._position.x = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'y', {
    get: function () {
      return this._position.y;
    },
    set: function (value) {
      if (value === this._position.y)
        return;
      this._position.y = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'z', {
    get: function () {
      return this._position.z;
    },
    set: function (value) {
      if (value === this._position.z)
        return;
      this._position.z = value;
      if (this.isSimpleTranslate && value !== 0.0)
        this.isSimpleTranslate = false;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'position', {
    get: function () {
      return this._position;
    }
  });
  UiComponentImpl.prototype.setPosition_y2kzbl$$default = function (x, y, z) {
    if (x === this._position.x && y === this._position.y && z === this._position.z)
      return;
    this._position.set_y2kzbl$(x, y, z);
    if (this.isSimpleTranslate && z !== 0.0)
      this.isSimpleTranslate = false;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    return;
  };
  Object.defineProperty(UiComponentImpl.prototype, 'scaleX', {
    get: function () {
      return this._scale.x;
    },
    set: function (value) {
      if (this._scale.x === value)
        return;
      this._scale.x = value;
      if (this.isSimpleTranslate && value !== 1.0)
        this.isSimpleTranslate = false;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'scaleY', {
    get: function () {
      return this._scale.y;
    },
    set: function (value) {
      if (this._scale.y === value)
        return;
      this._scale.y = value;
      if (this.isSimpleTranslate && value !== 1.0)
        this.isSimpleTranslate = false;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'scaleZ', {
    get: function () {
      return this._scale.z;
    },
    set: function (value) {
      if (this._scale.z === value)
        return;
      this._scale.z = value;
      if (this.isSimpleTranslate && value !== 1.0)
        this.isSimpleTranslate = false;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  UiComponentImpl.prototype.setScaling_y2kzbl$$default = function (x, y, z) {
    if (this._scale.x === x && this._scale.y === y && this._scale.z === z)
      return;
    this._scale.set_y2kzbl$(x, y, z);
    if (this.isSimpleTranslate && (x !== 1.0 || y !== 1.0 || z !== 1.0))
      this.isSimpleTranslate = false;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    return;
  };
  Object.defineProperty(UiComponentImpl.prototype, 'originX', {
    get: function () {
      return this._origin.x;
    },
    set: function (value) {
      if (this._origin.x === value)
        return;
      this._origin.x = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'originY', {
    get: function () {
      return this._origin.y;
    },
    set: function (value) {
      if (this._origin.y === value)
        return;
      this._origin.y = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'originZ', {
    get: function () {
      return this._origin.z;
    },
    set: function (value) {
      if (this._origin.z === value)
        return;
      this._origin.z = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    }
  });
  UiComponentImpl.prototype.setOrigin_y2kzbl$$default = function (x, y, z) {
    if (this._origin.x === x && this._origin.y === y && this._origin.z === z)
      return;
    this._origin.set_y2kzbl$(x, y, z);
    this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
    return;
  };
  Object.defineProperty(UiComponentImpl.prototype, 'concatenatedTransform', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().TRANSFORM | ValidationFlags_getInstance().CONCATENATED_TRANSFORM);
      return this._concatenatedTransform;
    }
  });
  Object.defineProperty(UiComponentImpl.prototype, 'concatenatedTransformInv', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().TRANSFORM | ValidationFlags_getInstance().CONCATENATED_TRANSFORM);
      if (!this._concatenatedTransformInvIsValid) {
        this._concatenatedTransformInvIsValid = true;
        this._concatenatedTransformInv.set_1ktw39$(this._concatenatedTransform);
        this._concatenatedTransformInv.inv();
      }
      return this._concatenatedTransformInv;
    }
  });
  UiComponentImpl.prototype.updateTransform = function () {
    this._transform.idt();
    if (this.isSimpleTranslate) {
      this._transform.trn_y2kzbl$(this._position.x - this._origin.x, this._position.y - this._origin.y, 0.0);
      this.native.setSimpleTranslate_dleff0$(this._position.x - this._origin.x, this._position.y - this._origin.y);
    }
     else {
      this._transform.trn_1fv2cb$(this._position);
      this._transform.scl_1fv2cb$(this._scale);
      if (!this._rotation.isZero()) {
        UiComponentImpl$Companion_getInstance().quat_0.setEulerAnglesRad_y2kzbl$(this._rotation.y, this._rotation.x, this._rotation.z);
        this._transform.rotate_sa462$(UiComponentImpl$Companion_getInstance().quat_0);
      }
      if (!this._origin.isZero())
        this._transform.translate_y2kzbl$(-this._origin.x, -this._origin.y, -this._origin.z);
      this.native.setTransform_1ktw39$(this._transform);
    }
  };
  UiComponentImpl.prototype.updateConcatenatedTransform = function () {
    var p = this.parent;
    if (p != null) {
      if (this.isSimpleTranslate) {
        this._concatenatedTransform.set_1ktw39$(p.concatenatedTransform).translate_y2kzbl$(this._position.x, this._position.y, this._position.z);
      }
       else {
        this._concatenatedTransform.set_1ktw39$(p.concatenatedTransform).mul_1ktw39$(this._transform);
      }
    }
     else {
      this._concatenatedTransform.set_1ktw39$(this._transform);
    }
    this._concatenatedTransformInvIsValid = false;
    this.native.setConcatenatedTransform_1ktw39$(this._concatenatedTransform);
  };
  Object.defineProperty(UiComponentImpl.prototype, 'camera', {
    get: function () {
      var tmp$;
      if (this.cameraOverride != null)
        return (tmp$ = this.cameraOverride) != null ? tmp$ : Kotlin.throwNPE();
      var p = this.parent;
      if (p != null) {
        return p.camera;
      }
       else {
        return this.defaultCamera_hwnx8g$_0;
      }
    }
  });
  UiComponentImpl.prototype.invalidate_za3lpa$ = function (flags) {
    var flagsInvalidated = this.validation.invalidate_za3lpa$(flags);
    if (flagsInvalidated !== 0) {
      this.window.requestRender();
      this.onInvalidated_za3lpa$(flagsInvalidated);
      this.invalidated.dispatch_xwzc9p$(this, flagsInvalidated);
    }
    return flagsInvalidated;
  };
  UiComponentImpl.prototype.onInvalidated_za3lpa$ = function (flagsInvalidated) {
  };
  UiComponentImpl.prototype.validate_fzusl$ = function (flags, force) {
    if (this._isValidating_hwnx8g$_0)
      return;
    this._isValidating_hwnx8g$_0 = true;
    this.validation.validate_fzusl$(flags, force);
    this._isValidating_hwnx8g$_0 = false;
  };
  UiComponentImpl.prototype.update = function () {
    this.validate();
  };
  UiComponentImpl.prototype.render = function () {
    if (!this.visible || this._concatenatedColorTint.a <= 0.0)
      return;
    this.draw();
  };
  UiComponentImpl.prototype.draw = function () {
  };
  UiComponentImpl.prototype.dispose = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8;
    LifecycleBase.prototype.dispose.call(this);
    this.owner.disposed.remove_trkh7z$(this.ownerDisposed_hwnx8g$_0);
    if (assertionsEnabled) {
      parentWalk$break: {
        var tmp$_9;
        var p = this;
        while (p != null) {
          var it = p;
          if (!owns(this.owner, it)) {
            throw new Exception('this component must be removed before disposing.');
          }
          var shouldContinue = true;
          if (!shouldContinue)
            break parentWalk$break;
          p = (tmp$_9 = p.parent) == null || Kotlin.isType(tmp$_9, _.com.acornui.core.Child) ? tmp$_9 : Kotlin.throwCCE();
        }
      }
    }
    (tmp$ = this.layoutData) != null ? tmp$.dispose() : null;
    this.layoutData = null;
    tmp$_0 = this._captureSignals.values.iterator();
    while (tmp$_0.hasNext()) {
      var i = tmp$_0.next();
      (tmp$_2 = Kotlin.isType(tmp$_1 = i, Disposable) ? tmp$_1 : null) != null ? tmp$_2.dispose() : null;
    }
    this._captureSignals.clear();
    tmp$_3 = this._bubbleSignals.values.iterator();
    while (tmp$_3.hasNext()) {
      var i_0 = tmp$_3.next();
      (tmp$_5 = Kotlin.isType(tmp$_4 = i_0, Disposable) ? tmp$_4 : null) != null ? tmp$_5.dispose() : null;
    }
    this._bubbleSignals.clear();
    tmp$_6 = this._attachments.values.iterator();
    while (tmp$_6.hasNext()) {
      var i_1 = tmp$_6.next();
      (tmp$_8 = Kotlin.isType(tmp$_7 = i_1, Disposable) ? tmp$_7 : null) != null ? tmp$_8.dispose() : null;
    }
    this._attachments.clear();
    this.native.dispose();
  };
  function UiComponentImpl$Companion() {
    UiComponentImpl$Companion_instance = this;
    this.quat_0 = new Quaternion();
  }
  UiComponentImpl$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var UiComponentImpl$Companion_instance = null;
  function UiComponentImpl$Companion_getInstance() {
    if (UiComponentImpl$Companion_instance === null) {
      new UiComponentImpl$Companion();
    }
    return UiComponentImpl$Companion_instance;
  }
  function UiComponentImpl$ownerDisposed$lambda(this$UiComponentImpl) {
    return function (f) {
      this$UiComponentImpl.dispose();
    };
  }
  function UiComponentImpl_init$lambda(closure$r) {
    return function ($receiver) {
      var $receiver_0 = ValidationFlags_getInstance();
      var closure$r_0 = closure$r;
      $receiver.addNode_n53o35$($receiver_0.PROPERTIES, Kotlin.getCallableRef('updateProperties', function ($receiver) {
        return $receiver.updateProperties();
      }.bind(null, closure$r_0)));
      $receiver.addNode_sxjeop$($receiver_0.SIZE_CONSTRAINTS, $receiver_0.PROPERTIES, Kotlin.getCallableRef('validateSizeConstraints', function ($receiver) {
        return $receiver.validateSizeConstraints();
      }.bind(null, closure$r_0)));
      $receiver.addNode_sxjeop$($receiver_0.LAYOUT, $receiver_0.PROPERTIES | $receiver_0.SIZE_CONSTRAINTS, Kotlin.getCallableRef('validateLayout', function ($receiver) {
        return $receiver.validateLayout();
      }.bind(null, closure$r_0)));
      $receiver.addNode_n53o35$($receiver_0.TRANSFORM, Kotlin.getCallableRef('updateTransform', function ($receiver) {
        return $receiver.updateTransform();
      }.bind(null, closure$r_0)));
      $receiver.addNode_sxjeop$($receiver_0.CONCATENATED_TRANSFORM, $receiver_0.TRANSFORM, Kotlin.getCallableRef('updateConcatenatedTransform', function ($receiver) {
        return $receiver.updateConcatenatedTransform();
      }.bind(null, closure$r_0)));
      $receiver.addNode_n53o35$($receiver_0.COLOR_TRANSFORM, Kotlin.getCallableRef('updateColorTransform', function ($receiver) {
        return $receiver.updateColorTransform();
      }.bind(null, closure$r_0)));
      $receiver.addNode_sxjeop$($receiver_0.CONCATENATED_COLOR_TRANSFORM, $receiver_0.COLOR_TRANSFORM, Kotlin.getCallableRef('updateConcatenatedColorTransform', function ($receiver) {
        return $receiver.updateConcatenatedColorTransform();
      }.bind(null, closure$r_0)));
      $receiver.addNode_n53o35$($receiver_0.INTERACTIVITY_MODE, Kotlin.getCallableRef('updateInheritedInteractivityMode', function ($receiver) {
        return $receiver.updateInheritedInteractivityMode();
      }.bind(null, closure$r_0)));
      $receiver.addNode_sxjeop$($receiver_0.HIERARCHY_ASCENDING, $receiver_0.PROPERTIES, Kotlin.getCallableRef('updateHierarchyAscending', function ($receiver) {
        return $receiver.updateHierarchyAscending();
      }.bind(null, closure$r_0)));
      $receiver.addNode_sxjeop$($receiver_0.HIERARCHY_DESCENDING, $receiver_0.PROPERTIES, Kotlin.getCallableRef('updateHierarchyDescending', function ($receiver) {
        return $receiver.updateHierarchyDescending();
      }.bind(null, closure$r_0)));
    };
  }
  function UiComponentImpl$layoutDataChangedHandler$lambda(this$UiComponentImpl) {
    return function () {
      this$UiComponentImpl.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      kotlin_0.Unit;
    };
  }
  UiComponentImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'UiComponentImpl',
    interfaces: [UiComponent, LifecycleBase]
  };
  function NativeComponent() {
    NativeComponent$Companion_getInstance();
  }
  function NativeComponent$Companion() {
    NativeComponent$Companion_instance = this;
    this.FACTORY_KEY = new DependencyKeyImpl();
  }
  NativeComponent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var NativeComponent$Companion_instance = null;
  function NativeComponent$Companion_getInstance() {
    if (NativeComponent$Companion_instance === null) {
      new NativeComponent$Companion();
    }
    return NativeComponent$Companion_instance;
  }
  NativeComponent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'NativeComponent',
    interfaces: [Disposable]
  };
  function NativeComponentDummy() {
    NativeComponentDummy_instance = this;
    this.interactivityEnabled_24tq0n$_0 = true;
    this.visible_24tq0n$_0 = true;
  }
  Object.defineProperty(NativeComponentDummy.prototype, 'interactivityEnabled', {
    get: function () {
      return this.interactivityEnabled_24tq0n$_0;
    },
    set: function (interactivityEnabled) {
      this.interactivityEnabled_24tq0n$_0 = interactivityEnabled;
    }
  });
  Object.defineProperty(NativeComponentDummy.prototype, 'visible', {
    get: function () {
      return this.visible_24tq0n$_0;
    },
    set: function (visible) {
      this.visible_24tq0n$_0 = visible;
    }
  });
  Object.defineProperty(NativeComponentDummy.prototype, 'bounds', {
    get: function () {
      throw new UnsupportedOperationException('NativeComponentDummy does not have bounds.');
    }
  });
  NativeComponentDummy.prototype.setSize_yxjqmk$ = function (width, height) {
  };
  NativeComponentDummy.prototype.setTransform_1ktw39$ = function (value) {
  };
  NativeComponentDummy.prototype.setSimpleTranslate_dleff0$ = function (x, y) {
  };
  NativeComponentDummy.prototype.setConcatenatedTransform_1ktw39$ = function (value) {
  };
  NativeComponentDummy.prototype.setColorTint_1qghwi$ = function (value) {
  };
  NativeComponentDummy.prototype.setConcatenatedColorTint_1qghwi$ = function (value) {
  };
  NativeComponentDummy.prototype.dispose = function () {
  };
  NativeComponentDummy.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'NativeComponentDummy',
    interfaces: [NativeComponent]
  };
  var NativeComponentDummy_instance = null;
  function NativeComponentDummy_getInstance() {
    if (NativeComponentDummy_instance === null) {
      new NativeComponentDummy();
    }
    return NativeComponentDummy_instance;
  }
  function Validatable() {
  }
  Validatable.prototype.validate = function () {
    this.validate_fzusl$(-1, false);
  };
  Validatable.prototype.validate_za3lpa$ = function (flags) {
    this.validate_fzusl$(flags, false);
  };
  Validatable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Validatable',
    interfaces: [Disposable]
  };
  function ValidationNode(flag, invalidationMask, validationMask, onValidate) {
    this.flag = flag;
    this.invalidationMask = invalidationMask;
    this.validationMask = validationMask;
    this.onValidate = onValidate;
    this.isValid = false;
  }
  ValidationNode.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ValidationNode',
    interfaces: []
  };
  function ValidationTree() {
    this.nodes_0 = ArrayList_init();
    this.currentIndex_0 = -1;
  }
  ValidationTree.prototype.addNode_n53o35$ = function (flag, onValidate) {
    this.addNode_sxjeop$(flag, 0, onValidate);
  };
  ValidationTree.prototype.addNode_sxjeop$ = function (flag, dependencies, onValidate) {
    this.addNode_4ptmgh$(flag, dependencies, 0, onValidate);
  };
  ValidationTree.prototype.addNode_4ptmgh$ = function (flag, dependencies, dependants, onValidate) {
    var tmp$;
    if (!math_0.MathUtils.isPowerOfTwo_za3lpa$(flag))
      throw new IllegalArgumentException('flag ' + core_0.toString(flag, 2) + ' is not a power of 2.');
    var newNode = new ValidationNode(flag, dependants | flag, dependencies | flag, onValidate);
    var dependenciesNotFound = dependencies;
    var dependantsNotFound = dependants;
    var insertIndex = this.nodes_0.size;
    tmp$ = get_lastIndex(this.nodes_0);
    for (var i = 0; i <= tmp$; i++) {
      var previousNode = this.nodes_0.get_za3lpa$(i);
      if (previousNode.flag === flag)
        throw new Exception('flag ' + flag + ' already exists.');
      var flagInv = ~previousNode.flag;
      dependenciesNotFound = dependenciesNotFound & flagInv;
      dependantsNotFound = dependantsNotFound & flagInv;
      if ((previousNode.validationMask & newNode.invalidationMask) > 0) {
        previousNode.validationMask = previousNode.validationMask | previousNode.validationMask;
        newNode.invalidationMask = newNode.validationMask | previousNode.invalidationMask;
        if (insertIndex > i)
          insertIndex = i;
      }
      if ((previousNode.invalidationMask & newNode.validationMask) > 0) {
        newNode.validationMask = newNode.validationMask | previousNode.validationMask;
        previousNode.invalidationMask = previousNode.invalidationMask | newNode.invalidationMask;
        if (insertIndex <= i) {
          throw new Exception('Validation node cannot be added after dependency ' + core_0.toString(previousNode.flag, 2) + ' and before all dependants ' + core_0.toString(dependants, 2));
        }
      }
    }
    this.nodes_0.add_wxm5ur$(insertIndex, newNode);
    if (dependantsNotFound !== 0)
      throw new Exception('validation node added, but the dependant flags: ' + core_0.toString(dependantsNotFound, 2) + ' were not found.');
    if (dependenciesNotFound !== 0)
      throw new Exception('validation node added, but the dependency flags: ' + core_0.toString(dependenciesNotFound, 2) + ' were not found.');
  };
  ValidationTree.prototype.invalidate_za3lpa$ = function (flags) {
    if (flags === void 0)
      flags = -1;
    var tmp$, tmp$_0;
    var flagsInvalidated = 0;
    var flagsToInvalidate = flags;
    tmp$ = this.currentIndex_0 + 1 | 0;
    tmp$_0 = get_lastIndex(this.nodes_0);
    for (var i = tmp$; i <= tmp$_0; i++) {
      var n = this.nodes_0.get_za3lpa$(i);
      if ((flagsToInvalidate & n.flag) > 0) {
        if (n.isValid) {
          n.isValid = false;
          flagsToInvalidate = flagsToInvalidate | n.invalidationMask;
          flagsInvalidated = flagsInvalidated | n.flag;
        }
      }
    }
    return flagsInvalidated;
  };
  ValidationTree.prototype.validate_fzusl$ = function (flags, force) {
    if (flags === void 0)
      flags = -1;
    if (force === void 0)
      force = false;
    var tmp$;
    var flagsValidated = 0;
    var flagsToValidate = flags;
    tmp$ = get_lastIndex(this.nodes_0);
    for (var i = 0; i <= tmp$; i++) {
      this.currentIndex_0 = i;
      var n = this.nodes_0.get_za3lpa$(i);
      if ((!n.isValid || (force && (flags & n.flag) > 0)) && (flagsToValidate & n.invalidationMask) > 0) {
        n.onValidate();
        n.isValid = true;
        flagsToValidate = flagsToValidate | n.validationMask;
        flagsValidated = flagsValidated | n.flag;
      }
    }
    this.currentIndex_0 = -1;
    return flagsValidated;
  };
  ValidationTree.prototype.isValid_za3lpa$ = function (flag) {
    var tmp$;
    tmp$ = get_lastIndex(this.nodes_0);
    for (var i = 0; i <= tmp$; i++) {
      var n = this.nodes_0.get_za3lpa$(i);
      if (n.flag === flag)
        return n.isValid;
    }
    throw new Exception('Validation node with the flag ' + flag + ' not found.');
  };
  ValidationTree.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ValidationTree',
    interfaces: []
  };
  function validationTree(init) {
    var v = new ValidationTree();
    init(v);
    return v;
  }
  function validationProp$lambda(closure$flags, this$validationProp) {
    return function (prop, old, new_0) {
      if (!Kotlin.equals(old, new_0)) {
        this$validationProp.invalidate_za3lpa$(closure$flags);
      }
    };
  }
  function validationProp($receiver, initialValue, flags) {
    return new Kotlin.kotlin.properties.Delegates.observable$f(validationProp$lambda(flags, $receiver), initialValue);
  }
  function ValidationFlags() {
    ValidationFlags_instance = this;
    this.PROPERTIES = 1 << 0;
    this.SIZE_CONSTRAINTS = 1 << 1;
    this.LAYOUT = 1 << 2;
    this.TRANSFORM = 1 << 3;
    this.CONCATENATED_TRANSFORM = 1 << 4;
    this.COLOR_TRANSFORM = 1 << 5;
    this.CONCATENATED_COLOR_TRANSFORM = 1 << 6;
    this.INTERACTIVITY_MODE = 1 << 7;
    this.HIERARCHY_ASCENDING = 1 << 8;
    this.HIERARCHY_DESCENDING = 1 << 9;
    this.RESERVED_1 = 1 << 10;
    this.RESERVED_2 = 1 << 11;
    this.RESERVED_3 = 1 << 12;
    this.RESERVED_4 = 1 << 13;
    this.RESERVED_5 = 1 << 14;
    this.RESERVED_6 = 1 << 15;
  }
  ValidationFlags.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'ValidationFlags',
    interfaces: []
  };
  var ValidationFlags_instance = null;
  function ValidationFlags_getInstance() {
    if (ValidationFlags_instance === null) {
      new ValidationFlags();
    }
    return ValidationFlags_instance;
  }
  function invalidateSize($receiver) {
    $receiver.invalidate_za3lpa$(ValidationFlags_getInstance().SIZE_CONSTRAINTS);
    kotlin_0.Unit;
  }
  function invalidateLayout($receiver) {
    $receiver.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    kotlin_0.Unit;
  }
  function invalidateProperties($receiver) {
    $receiver.invalidate_za3lpa$(ValidationFlags_getInstance().PROPERTIES);
    kotlin_0.Unit;
  }
  function VDivider(owner) {
    VDivider$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.style = style(this, new DividerStyle());
    this._dividerBar_ar5vug$_0 = null;
    this._handle_ar5vug$_0 = null;
    this._top_ar5vug$_0 = null;
    this._bottom_ar5vug$_0 = null;
    this._split_ar5vug$_0 = 0.5;
    this._mouse_ar5vug$_0 = new Vector2();
    addTag(this, VDivider$Companion_getInstance());
    onChanged(this.style, VDivider_init$lambda(this));
  }
  VDivider.prototype.dividerDragHandler_ho9fdp$_0 = function (event) {
    this.mousePosition_9wm29l$(this._mouse_ar5vug$_0);
    this.split_mx4ult$(this._mouse_ar5vug$_0.y / this.height);
  };
  VDivider.prototype.onElementAdded_68b5gw$ = function (index, element) {
    ElementContainerImpl.prototype.onElementAdded_68b5gw$.call(this, index, element);
    this.refreshParts_ar5vug$_0();
  };
  VDivider.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    ElementContainerImpl.prototype.onElementRemoved_68b5gw$.call(this, index, element);
    this.refreshParts_ar5vug$_0();
  };
  VDivider.prototype.refreshParts_ar5vug$_0 = function () {
    this._top_ar5vug$_0 = getOrNull(this._children, 0);
    this._bottom_ar5vug$_0 = getOrNull(this._children, 1);
  };
  VDivider.prototype.split = function () {
    return this._split_ar5vug$_0;
  };
  VDivider.prototype.split_mx4ult$ = function (value) {
    var clamp_73gzaq$result;
    clamp_73gzaq$break: {
      if (Kotlin.compareTo(value, 0.0) <= 0) {
        clamp_73gzaq$result = 0.0;
        break clamp_73gzaq$break;
      }
      if (Kotlin.compareTo(value, 1.0) >= 0) {
        clamp_73gzaq$result = 1.0;
        break clamp_73gzaq$break;
      }
      clamp_73gzaq$result = value;
    }
    var clamped = clamp_73gzaq$result;
    if (this._split_ar5vug$_0 === clamped)
      return;
    this._split_ar5vug$_0 = clamped;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  VDivider.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6;
    var mH = 0.0;
    if (this._top_ar5vug$_0 != null) {
      out.width.bound_66lwr4$(((tmp$ = this._top_ar5vug$_0) != null ? tmp$ : Kotlin.throwNPE()).sizeConstraints.width);
      mH += (tmp$_1 = ((tmp$_0 = this._top_ar5vug$_0) != null ? tmp$_0 : Kotlin.throwNPE()).minHeight) != null ? tmp$_1 : 0.0;
    }
    mH += (tmp$_3 = (tmp$_2 = this._handle_ar5vug$_0) != null ? tmp$_2.height : null) != null ? tmp$_3 : 0.0;
    if (this._bottom_ar5vug$_0 != null) {
      out.width.bound_66lwr4$(((tmp$_4 = this._bottom_ar5vug$_0) != null ? tmp$_4 : Kotlin.throwNPE()).sizeConstraints.width);
      mH += (tmp$_6 = ((tmp$_5 = this._bottom_ar5vug$_0) != null ? tmp$_5 : Kotlin.throwNPE()).minHeight) != null ? tmp$_6 : 0.0;
    }
    out.height.min = mH;
  };
  VDivider.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_20, tmp$_14, tmp$_15, tmp$_21, tmp$_16, tmp$_17, tmp$_22, tmp$_18, tmp$_19, tmp$_23, tmp$_24, tmp$_25, tmp$_26, tmp$_27, tmp$_28;
    (tmp$ = this._dividerBar_ar5vug$_0) != null ? tmp$.setSize_yxjqmk$(explicitWidth, null) : null;
    var dividerBarHeight = (tmp$_1 = (tmp$_0 = this._dividerBar_ar5vug$_0) != null ? tmp$_0.height : null) != null ? tmp$_1 : 0.0;
    var topHeight;
    var bottomHeight;
    if (explicitHeight != null) {
      var h = explicitHeight - dividerBarHeight;
      var bH = (tmp$_3 = (tmp$_2 = this._bottom_ar5vug$_0) != null ? clampHeight(tmp$_2, h * (1.0 - this._split_ar5vug$_0)) : null) != null ? tmp$_3 : 0.0;
      topHeight = floor((tmp$_5 = (tmp$_4 = this._top_ar5vug$_0) != null ? clampHeight(tmp$_4, h - bH) : null) != null ? tmp$_5 : 0.0);
      var y = h - topHeight;
      var min_sdesaw$result;
      if (Kotlin.compareTo(bH, y) <= 0) {
        min_sdesaw$result = bH;
      }
       else {
        min_sdesaw$result = y;
      }
      bottomHeight = min_sdesaw$result;
      (tmp$_6 = this._top_ar5vug$_0) != null ? tmp$_6.setSize_yxjqmk$(explicitWidth, topHeight) : null;
      (tmp$_7 = this._bottom_ar5vug$_0) != null ? tmp$_7.setSize_yxjqmk$(explicitWidth, bottomHeight) : null;
    }
     else {
      (tmp$_8 = this._top_ar5vug$_0) != null ? tmp$_8.setSize_yxjqmk$(explicitWidth, null) : null;
      (tmp$_9 = this._bottom_ar5vug$_0) != null ? tmp$_9.setSize_yxjqmk$(explicitWidth, null) : null;
      topHeight = (tmp$_11 = (tmp$_10 = this._top_ar5vug$_0) != null ? tmp$_10.height : null) != null ? tmp$_11 : 0.0;
      bottomHeight = (tmp$_13 = (tmp$_12 = this._bottom_ar5vug$_0) != null ? tmp$_12.height : null) != null ? tmp$_13 : 0.0;
    }
    tmp$_23 = math_0.MathUtils;
    tmp$_20 = explicitWidth != null ? explicitWidth : 0.0;
    tmp$_21 = (tmp$_15 = (tmp$_14 = this._top_ar5vug$_0) != null ? tmp$_14.width : null) != null ? tmp$_15 : 0.0;
    tmp$_22 = (tmp$_17 = (tmp$_16 = this._bottom_ar5vug$_0) != null ? tmp$_16.width : null) != null ? tmp$_17 : 0.0;
    var z = (tmp$_19 = (tmp$_18 = this._handle_ar5vug$_0) != null ? tmp$_18.minWidth : null) != null ? tmp$_19 : 0.0;
    tmp$_23.max_sdesaw$;
    tmp$_23.max_sdesaw$;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(tmp$_20, tmp$_21) >= 0) {
      max_sdesaw$result_0 = tmp$_20;
    }
     else {
      max_sdesaw$result_0 = tmp$_21;
    }
    var x_0 = max_sdesaw$result_0;
    var inline$result;
    if (Kotlin.compareTo(x_0, tmp$_22) >= 0) {
      inline$result = x_0;
    }
     else {
      inline$result = tmp$_22;
    }
    var x_1 = inline$result;
    var inline$result_0;
    if (Kotlin.compareTo(x_1, z) >= 0) {
      inline$result_0 = x_1;
    }
     else {
      inline$result_0 = z;
    }
    out.width = inline$result_0;
    var x = explicitHeight != null ? explicitHeight : 0.0;
    var y_0 = topHeight + dividerBarHeight + bottomHeight;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y_0) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y_0;
    }
    out.height = max_sdesaw$result;
    (tmp$_24 = this._top_ar5vug$_0) != null ? tmp$_24.moveTo_y2kzbl$(0.0, 0.0) : null;
    if (this._dividerBar_ar5vug$_0 != null) {
      ((tmp$_25 = this._dividerBar_ar5vug$_0) != null ? tmp$_25 : Kotlin.throwNPE()).moveTo_y2kzbl$(0.0, topHeight + dividerBarHeight * 0.5 - ((tmp$_26 = this._dividerBar_ar5vug$_0) != null ? tmp$_26 : Kotlin.throwNPE()).height * 0.5);
    }
    if (this._handle_ar5vug$_0 != null) {
      var handle = (tmp$_27 = this._handle_ar5vug$_0) != null ? tmp$_27 : Kotlin.throwNPE();
      handle.setSize_yxjqmk$(null, null);
      if (handle.width > out.width)
        handle.setSize_yxjqmk$(out.width, null);
      handle.moveTo_y2kzbl$((out.width - handle.width) * 0.5, topHeight + dividerBarHeight * 0.5 - handle.height * 0.5);
    }
    (tmp$_28 = this._bottom_ar5vug$_0) != null ? tmp$_28.moveTo_y2kzbl$(0.0, topHeight + dividerBarHeight) : null;
  };
  function VDivider$Companion() {
    VDivider$Companion_instance = this;
  }
  VDivider$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var VDivider$Companion_instance = null;
  function VDivider$Companion_getInstance() {
    if (VDivider$Companion_instance === null) {
      new VDivider$Companion();
    }
    return VDivider$Companion_instance;
  }
  function VDivider_init$lambda(this$VDivider) {
    return function (it) {
      this$VDivider.dispose_erfg6z$(this$VDivider._dividerBar_ar5vug$_0);
      this$VDivider.dispose_erfg6z$(this$VDivider._handle_ar5vug$_0);
      var dividerBar = this$VDivider.addChild_mxweac$(it.divideBar(this$VDivider));
      this$VDivider._dividerBar_ar5vug$_0 = dividerBar;
      drag(dividerBar).add_trkh7z$(Kotlin.getCallableRef('dividerDragHandler', function ($receiver, event) {
        return $receiver.dividerDragHandler_ho9fdp$_0(event);
      }.bind(null, this$VDivider)));
      cursor(dividerBar, StandardCursors_getInstance().RESIZE_N);
      var handle = this$VDivider.addChild_mxweac$(it.handle(this$VDivider));
      handle.interactivityMode = InteractivityMode$NONE_getInstance();
      this$VDivider._handle_ar5vug$_0 = handle;
    };
  }
  VDivider.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VDivider',
    interfaces: [ElementContainerImpl]
  };
  function DividerStyle() {
    DividerStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_u15177$_0 = DividerStyle$Companion_getInstance();
    this.divideBar$delegate = this.prop_umlfku$('divideBar', noSkin);
    this.handle$delegate = this.prop_umlfku$('handle', noSkin);
  }
  Object.defineProperty(DividerStyle.prototype, 'type', {
    get: function () {
      return this.type_u15177$_0;
    }
  });
  Object.defineProperty(DividerStyle.prototype, 'divideBar', {
    get: function () {
      return this.divideBar$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('divideBar'));
    },
    set: function (divideBar) {
      this.divideBar$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('divideBar'), divideBar);
    }
  });
  Object.defineProperty(DividerStyle.prototype, 'handle', {
    get: function () {
      return this.handle$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('handle'));
    },
    set: function (handle) {
      this.handle$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('handle'), handle);
    }
  });
  function DividerStyle$Companion() {
    DividerStyle$Companion_instance = this;
  }
  DividerStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var DividerStyle$Companion_instance = null;
  function DividerStyle$Companion_getInstance() {
    if (DividerStyle$Companion_instance === null) {
      new DividerStyle$Companion();
    }
    return DividerStyle$Companion_instance;
  }
  DividerStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DividerStyle',
    interfaces: [StyleBase]
  };
  function vDivider($receiver, init) {
    var v = new VDivider($receiver);
    init(v);
    return v;
  }
  function WindowPanel(owner) {
    WindowPanel$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.closing_v2drwr$_0 = own(this, new Signal2());
    this.closed_v2drwr$_0 = own(this, new Signal1());
    this.cancel = new Cancel();
    this.style = style(this, new WindowPanelStyle());
    this.textField = this.addChild_mxweac$(text_0(this));
    this.contents_v2drwr$_0 = this.addChild_mxweac$(stack(this));
    this.background_v2drwr$_0 = null;
    this.titleBarBackground_v2drwr$_0 = null;
    this.closeButton_v2drwr$_0 = null;
    addTag(this, WindowPanel$Companion_getInstance());
    onChanged(this.style, WindowPanel_init$lambda(this));
  }
  Object.defineProperty(WindowPanel.prototype, 'closing', {
    get: function () {
      return this.closing_v2drwr$_0;
    }
  });
  Object.defineProperty(WindowPanel.prototype, 'closed', {
    get: function () {
      return this.closed_v2drwr$_0;
    }
  });
  Object.defineProperty(WindowPanel.prototype, 'label', {
    get: function () {
      return this.textField.label;
    },
    set: function (value) {
      this.textField.label = value;
    }
  });
  WindowPanel.prototype.createLayoutData = function () {
    return new StackLayoutData();
  };
  WindowPanel.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.contents_v2drwr$_0.addElement_3i6itm$(index, element);
  };
  WindowPanel.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.contents_v2drwr$_0.removeElement_erfg6z$(element);
  };
  WindowPanel.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.contents_v2drwr$_0.swapElements_tu2188$(elementA, elementB);
  };
  WindowPanel.prototype.close = function () {
    this.closing.dispatch_xwzc9p$(this, this.cancel.reset());
    if (!this.cancel.canceled()) {
      this.closed.dispatch_11rb$(this);
    }
  };
  WindowPanel.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$, tmp$_0;
    var padding = this.style.padding;
    var titleBarPadding = this.style.titleBarPadding;
    var cS = this.contents_v2drwr$_0.sizeConstraints;
    var tCS = this.textField.sizeConstraints;
    out.width.min = padding.expandWidth_81sz4$(cS.width.min);
    out.width.max = padding.expandWidth_81sz4$(cS.width.max);
    out.height.min = ((tmp$ = padding.expandHeight_81sz4$(cS.height.min)) != null ? tmp$ : 0.0) + ((tmp$_0 = titleBarPadding.expandHeight_81sz4$(tCS.height.min)) != null ? tmp$_0 : 0.0);
    out.set_mby7og$(this.contents_v2drwr$_0.sizeConstraints);
  };
  WindowPanel.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1;
    var padding = this.style.padding;
    var titleBarPadding = this.style.titleBarPadding;
    var closeButton = (tmp$ = this.closeButton_v2drwr$_0) != null ? tmp$ : Kotlin.throwNPE();
    var background = (tmp$_0 = this.background_v2drwr$_0) != null ? tmp$_0 : Kotlin.throwNPE();
    this.textField.setSize_yxjqmk$(explicitWidth == null ? null : explicitWidth - closeButton.width - this.style.titleBarGap, null);
    var x = this.textField.height;
    var y = closeButton.height;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    var tFH = max_sdesaw$result;
    this.textField.moveTo_y2kzbl$(titleBarPadding.left, titleBarPadding.top + (tFH - this.textField.height) * 0.5);
    var x_0 = this.textField.height;
    var y_0 = closeButton.height;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(x_0, y_0) >= 0) {
      max_sdesaw$result_0 = x_0;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    var titleBarHeight = titleBarPadding.expandHeight2_mx4ult$(max_sdesaw$result_0);
    var contentsW = explicitWidth;
    var contentsH = explicitHeight == null ? null : explicitHeight - titleBarHeight;
    this.contents_v2drwr$_0.setSize_yxjqmk$(padding.reduceWidth_81sz4$(contentsW), padding.reduceHeight_81sz4$(contentsH));
    this.contents_v2drwr$_0.setPosition_y2kzbl$(padding.left, titleBarHeight + padding.top);
    background.setSize_yxjqmk$(padding.expandWidth2_mx4ult$(this.contents_v2drwr$_0.width), padding.expandHeight2_mx4ult$(this.contents_v2drwr$_0.height));
    background.setPosition_y2kzbl$(0.0, titleBarHeight);
    var y_1 = background.width;
    var max_sdesaw$result_1;
    if (Kotlin.compareTo(titleBarHeight, y_1) >= 0) {
      max_sdesaw$result_1 = titleBarHeight;
    }
     else {
      max_sdesaw$result_1 = y_1;
    }
    out.set_dleff0$(max_sdesaw$result_1, titleBarHeight + background.height);
    (tmp$_1 = this.titleBarBackground_v2drwr$_0) != null ? tmp$_1.setSize_yxjqmk$(out.width, titleBarHeight) : null;
    closeButton.setPosition_y2kzbl$(out.width - titleBarPadding.right - closeButton.width, titleBarPadding.top);
  };
  function WindowPanel$Companion() {
    WindowPanel$Companion_instance = this;
  }
  WindowPanel$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleTag]
  };
  var WindowPanel$Companion_instance = null;
  function WindowPanel$Companion_getInstance() {
    if (WindowPanel$Companion_instance === null) {
      new WindowPanel$Companion();
    }
    return WindowPanel$Companion_instance;
  }
  function WindowPanel_init$lambda$lambda(this$WindowPanel) {
    return function (it) {
      this$WindowPanel.close();
    };
  }
  function WindowPanel_init$lambda(this$WindowPanel) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1;
      this$WindowPanel.dispose_erfg6z$(this$WindowPanel.background_v2drwr$_0);
      this$WindowPanel.background_v2drwr$_0 = this$WindowPanel.addChild_3i6itm$(0, it.background(this$WindowPanel));
      this$WindowPanel.dispose_erfg6z$(this$WindowPanel.titleBarBackground_v2drwr$_0);
      this$WindowPanel.titleBarBackground_v2drwr$_0 = this$WindowPanel.addChild_3i6itm$(1, it.titleBarBackground(this$WindowPanel));
      this$WindowPanel.dispose_erfg6z$(this$WindowPanel.closeButton_v2drwr$_0);
      this$WindowPanel.closeButton_v2drwr$_0 = it.closeButton(this$WindowPanel);
      click((tmp$ = this$WindowPanel.closeButton_v2drwr$_0) != null ? tmp$ : Kotlin.throwNPE()).add_trkh7z$(WindowPanel_init$lambda$lambda(this$WindowPanel));
      tmp$_1 = (tmp$_0 = this$WindowPanel.closeButton_v2drwr$_0) != null ? tmp$_0 : Kotlin.throwNPE();
      this$WindowPanel.addChild_3i6itm$(2, tmp$_1);
    };
  }
  WindowPanel.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'WindowPanel',
    interfaces: [LayoutDataProvider, Closeable, Labelable, ElementContainerImpl]
  };
  function WindowPanelStyle() {
    WindowPanelStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_vskr5a$_0 = WindowPanelStyle$Companion_getInstance();
    this.background$delegate = this.prop_umlfku$('background', noSkin);
    this.titleBarBackground$delegate = this.prop_umlfku$('titleBarBackground', noSkin);
    this.closeButton$delegate = this.prop_umlfku$('closeButton', noSkin);
    this.padding$delegate = this.prop_umlfku$('padding', Pad_init_0(5.0));
    this.titleBarPadding$delegate = this.prop_umlfku$('titleBarPadding', Pad_init_0(5.0));
    this.titleBarGap$delegate = this.prop_umlfku$('titleBarGap', 5.0);
  }
  Object.defineProperty(WindowPanelStyle.prototype, 'type', {
    get: function () {
      return this.type_vskr5a$_0;
    }
  });
  Object.defineProperty(WindowPanelStyle.prototype, 'background', {
    get: function () {
      return this.background$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('background'));
    },
    set: function (background) {
      this.background$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('background'), background);
    }
  });
  Object.defineProperty(WindowPanelStyle.prototype, 'titleBarBackground', {
    get: function () {
      return this.titleBarBackground$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('titleBarBackground'));
    },
    set: function (titleBarBackground) {
      this.titleBarBackground$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('titleBarBackground'), titleBarBackground);
    }
  });
  Object.defineProperty(WindowPanelStyle.prototype, 'closeButton', {
    get: function () {
      return this.closeButton$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('closeButton'));
    },
    set: function (closeButton) {
      this.closeButton$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('closeButton'), closeButton);
    }
  });
  Object.defineProperty(WindowPanelStyle.prototype, 'padding', {
    get: function () {
      return this.padding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('padding'));
    },
    set: function (padding) {
      this.padding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('padding'), padding);
    }
  });
  Object.defineProperty(WindowPanelStyle.prototype, 'titleBarPadding', {
    get: function () {
      return this.titleBarPadding$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('titleBarPadding'));
    },
    set: function (titleBarPadding) {
      this.titleBarPadding$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('titleBarPadding'), titleBarPadding);
    }
  });
  Object.defineProperty(WindowPanelStyle.prototype, 'titleBarGap', {
    get: function () {
      return this.titleBarGap$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('titleBarGap'));
    },
    set: function (titleBarGap) {
      this.titleBarGap$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('titleBarGap'), titleBarGap);
    }
  });
  function WindowPanelStyle$Companion() {
    WindowPanelStyle$Companion_instance = this;
  }
  WindowPanelStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var WindowPanelStyle$Companion_instance = null;
  function WindowPanelStyle$Companion_getInstance() {
    if (WindowPanelStyle$Companion_instance === null) {
      new WindowPanelStyle$Companion();
    }
    return WindowPanelStyle$Companion_instance;
  }
  WindowPanelStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'WindowPanelStyle',
    interfaces: [StyleBase]
  };
  function windowPanel$lambda($receiver) {
  }
  function windowPanel($receiver, init) {
    if (init === void 0)
      init = windowPanel$lambda;
    var p = new WindowPanel($receiver);
    init(p);
    return p;
  }
  function AppConfig(version, rootPath, debug, frameRate, assetsManifestPath, window_0, gl_0) {
    AppConfig$Companion_getInstance();
    if (version === void 0)
      version = new Version(0, 1, 0, 0);
    if (rootPath === void 0)
      rootPath = '';
    if (debug === void 0)
      debug = false;
    if (frameRate === void 0)
      frameRate = 50;
    if (assetsManifestPath === void 0)
      assetsManifestPath = 'assets/files.json';
    if (window_0 === void 0)
      window_0 = new WindowConfig();
    if (gl_0 === void 0)
      gl_0 = new GlConfig();
    this.version = version;
    this.rootPath = rootPath;
    this.debug = debug;
    this.frameRate = frameRate;
    this.assetsManifestPath = assetsManifestPath;
    this.window = window_0;
    this.gl = gl_0;
  }
  Object.defineProperty(AppConfig.prototype, 'stepTime', {
    get: function () {
      return 1.0 / this.frameRate;
    }
  });
  function AppConfig$Companion() {
    AppConfig$Companion_instance = this;
  }
  AppConfig$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var AppConfig$Companion_instance = null;
  function AppConfig$Companion_getInstance() {
    if (AppConfig$Companion_instance === null) {
      new AppConfig$Companion();
    }
    return AppConfig$Companion_instance;
  }
  AppConfig.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AppConfig',
    interfaces: []
  };
  AppConfig.prototype.component1 = function () {
    return this.version;
  };
  AppConfig.prototype.component2 = function () {
    return this.rootPath;
  };
  AppConfig.prototype.component3 = function () {
    return this.debug;
  };
  AppConfig.prototype.component4 = function () {
    return this.frameRate;
  };
  AppConfig.prototype.component5 = function () {
    return this.assetsManifestPath;
  };
  AppConfig.prototype.component6 = function () {
    return this.window;
  };
  AppConfig.prototype.component7 = function () {
    return this.gl;
  };
  AppConfig.prototype.copy_nc9xwr$ = function (version, rootPath, debug, frameRate, assetsManifestPath, window_0, gl_0) {
    return new AppConfig(version === void 0 ? this.version : version, rootPath === void 0 ? this.rootPath : rootPath, debug === void 0 ? this.debug : debug, frameRate === void 0 ? this.frameRate : frameRate, assetsManifestPath === void 0 ? this.assetsManifestPath : assetsManifestPath, window_0 === void 0 ? this.window : window_0, gl_0 === void 0 ? this.gl : gl_0);
  };
  AppConfig.prototype.toString = function () {
    return 'AppConfig(version=' + Kotlin.toString(this.version) + (', rootPath=' + Kotlin.toString(this.rootPath)) + (', debug=' + Kotlin.toString(this.debug)) + (', frameRate=' + Kotlin.toString(this.frameRate)) + (', assetsManifestPath=' + Kotlin.toString(this.assetsManifestPath)) + (', window=' + Kotlin.toString(this.window)) + (', gl=' + Kotlin.toString(this.gl)) + ')';
  };
  AppConfig.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    result = result * 31 + Kotlin.hashCode(this.rootPath) | 0;
    result = result * 31 + Kotlin.hashCode(this.debug) | 0;
    result = result * 31 + Kotlin.hashCode(this.frameRate) | 0;
    result = result * 31 + Kotlin.hashCode(this.assetsManifestPath) | 0;
    result = result * 31 + Kotlin.hashCode(this.window) | 0;
    result = result * 31 + Kotlin.hashCode(this.gl) | 0;
    return result;
  };
  AppConfig.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.version, other.version) && Kotlin.equals(this.rootPath, other.rootPath) && Kotlin.equals(this.debug, other.debug) && Kotlin.equals(this.frameRate, other.frameRate) && Kotlin.equals(this.assetsManifestPath, other.assetsManifestPath) && Kotlin.equals(this.window, other.window) && Kotlin.equals(this.gl, other.gl)))));
  };
  function WindowConfig(title, initialWidth, initialHeight) {
    if (title === void 0)
      title = '';
    if (initialWidth === void 0)
      initialWidth = 800.0;
    if (initialHeight === void 0)
      initialHeight = 600.0;
    this.title = title;
    this.initialWidth = initialWidth;
    this.initialHeight = initialHeight;
  }
  WindowConfig.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'WindowConfig',
    interfaces: []
  };
  WindowConfig.prototype.component1 = function () {
    return this.title;
  };
  WindowConfig.prototype.component2 = function () {
    return this.initialWidth;
  };
  WindowConfig.prototype.component3 = function () {
    return this.initialHeight;
  };
  WindowConfig.prototype.copy_9xt0da$ = function (title, initialWidth, initialHeight) {
    return new WindowConfig(title === void 0 ? this.title : title, initialWidth === void 0 ? this.initialWidth : initialWidth, initialHeight === void 0 ? this.initialHeight : initialHeight);
  };
  WindowConfig.prototype.toString = function () {
    return 'WindowConfig(title=' + Kotlin.toString(this.title) + (', initialWidth=' + Kotlin.toString(this.initialWidth)) + (', initialHeight=' + Kotlin.toString(this.initialHeight)) + ')';
  };
  WindowConfig.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.title) | 0;
    result = result * 31 + Kotlin.hashCode(this.initialWidth) | 0;
    result = result * 31 + Kotlin.hashCode(this.initialHeight) | 0;
    return result;
  };
  WindowConfig.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.title, other.title) && Kotlin.equals(this.initialWidth, other.initialWidth) && Kotlin.equals(this.initialHeight, other.initialHeight)))));
  };
  function GlConfig(antialias, depth, alpha, stencil, vSync) {
    if (antialias === void 0)
      antialias = true;
    if (depth === void 0)
      depth = false;
    if (alpha === void 0)
      alpha = false;
    if (stencil === void 0)
      stencil = true;
    if (vSync === void 0)
      vSync = true;
    this.antialias = antialias;
    this.depth = depth;
    this.alpha = alpha;
    this.stencil = stencil;
    this.vSync = vSync;
  }
  GlConfig.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlConfig',
    interfaces: []
  };
  GlConfig.prototype.component1 = function () {
    return this.antialias;
  };
  GlConfig.prototype.component2 = function () {
    return this.depth;
  };
  GlConfig.prototype.component3 = function () {
    return this.alpha;
  };
  GlConfig.prototype.component4 = function () {
    return this.stencil;
  };
  GlConfig.prototype.component5 = function () {
    return this.vSync;
  };
  GlConfig.prototype.copy_yys257$ = function (antialias, depth, alpha, stencil, vSync) {
    return new GlConfig(antialias === void 0 ? this.antialias : antialias, depth === void 0 ? this.depth : depth, alpha === void 0 ? this.alpha : alpha, stencil === void 0 ? this.stencil : stencil, vSync === void 0 ? this.vSync : vSync);
  };
  GlConfig.prototype.toString = function () {
    return 'GlConfig(antialias=' + Kotlin.toString(this.antialias) + (', depth=' + Kotlin.toString(this.depth)) + (', alpha=' + Kotlin.toString(this.alpha)) + (', stencil=' + Kotlin.toString(this.stencil)) + (', vSync=' + Kotlin.toString(this.vSync)) + ')';
  };
  GlConfig.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.antialias) | 0;
    result = result * 31 + Kotlin.hashCode(this.depth) | 0;
    result = result * 31 + Kotlin.hashCode(this.alpha) | 0;
    result = result * 31 + Kotlin.hashCode(this.stencil) | 0;
    result = result * 31 + Kotlin.hashCode(this.vSync) | 0;
    return result;
  };
  GlConfig.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.antialias, other.antialias) && Kotlin.equals(this.depth, other.depth) && Kotlin.equals(this.alpha, other.alpha) && Kotlin.equals(this.stencil, other.stencil) && Kotlin.equals(this.vSync, other.vSync)))));
  };
  function UserInfo() {
    UserInfo_instance = this;
    this.isOpenGl = false;
    this.isTouchDevice = false;
    this.isBrowser = false;
    this.isDesktop = false;
    this.isIe = false;
    this.isMobile = false;
    this.downBps = 196608.0;
    this.downBpsInv = 1.0 / 196608.0;
    this.upBps = 196608.0;
    this.upBpsInv = 1.0 / 196608.0;
  }
  UserInfo.prototype.toString = function () {
    return 'UserInfo(isOpenGl=' + this.isOpenGl + ' isTouchDevice=' + this.isTouchDevice + ' isBrowser=' + this.isBrowser + ' isIe=' + this.isIe + ' isMobile=' + this.isMobile + ')';
  };
  UserInfo.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'UserInfo',
    interfaces: []
  };
  var UserInfo_instance = null;
  function UserInfo_getInstance() {
    if (UserInfo_instance === null) {
      new UserInfo();
    }
    return UserInfo_instance;
  }
  function Browser(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Browser_initFields() {
    Browser_initFields = function () {
    };
    Browser$NONE_instance = new Browser('NONE', 0);
    Browser$IE_instance = new Browser('IE', 1);
    Browser$FX_instance = new Browser('FX', 2);
    Browser$CH_instance = new Browser('CH', 3);
    Browser$SF_instance = new Browser('SF', 4);
  }
  var Browser$NONE_instance;
  function Browser$NONE_getInstance() {
    Browser_initFields();
    return Browser$NONE_instance;
  }
  var Browser$IE_instance;
  function Browser$IE_getInstance() {
    Browser_initFields();
    return Browser$IE_instance;
  }
  var Browser$FX_instance;
  function Browser$FX_getInstance() {
    Browser_initFields();
    return Browser$FX_instance;
  }
  var Browser$CH_instance;
  function Browser$CH_getInstance() {
    Browser_initFields();
    return Browser$CH_instance;
  }
  var Browser$SF_instance;
  function Browser$SF_getInstance() {
    Browser_initFields();
    return Browser$SF_instance;
  }
  Browser.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Browser',
    interfaces: [Enum]
  };
  function Browser$values() {
    return [Browser$NONE_getInstance(), Browser$IE_getInstance(), Browser$FX_getInstance(), Browser$CH_getInstance(), Browser$SF_getInstance()];
  }
  Browser.values = Browser$values;
  function Browser$valueOf(name) {
    switch (name) {
      case 'NONE':
        return Browser$NONE_getInstance();
      case 'IE':
        return Browser$IE_getInstance();
      case 'FX':
        return Browser$FX_getInstance();
      case 'CH':
        return Browser$CH_getInstance();
      case 'SF':
        return Browser$SF_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.Browser.' + name);
    }
  }
  Browser.valueOf_61zpoe$ = Browser$valueOf;
  function assetBinding($receiver, assetType, onChanged_0) {
    return new AssetBinding(inject($receiver, Cache$Companion_getInstance()), inject($receiver, AssetManager$Companion_getInstance()), assetType, noopDecorator(), onChanged_0);
  }
  function assetBinding_0($receiver, assetType, decorator, onChanged_0) {
    return new AssetBinding(inject($receiver, Cache$Companion_getInstance()), inject($receiver, AssetManager$Companion_getInstance()), assetType, decorator, onChanged_0);
  }
  function AssetBinding(cache, assetManager, assetType, decorator, onChanged_0) {
    this.cache_0 = cache;
    this.assetManager_0 = assetManager;
    this.assetType_0 = assetType;
    this.decorator_0 = decorator;
    this.onChanged_0 = onChanged_0;
    this.succeedHandler_0 = AssetBinding$succeedHandler$lambda(this);
    this._path_0 = null;
    this._decoratorEntry_0 = null;
  }
  Object.defineProperty(AssetBinding.prototype, 'path', {
    get: function () {
      return this._path_0;
    },
    set: function (value) {
      var oldPath = this._path_0;
      if (Kotlin.equals(oldPath, value))
        return;
      this._path_0 = value;
      if (this._path_0 != null) {
        var loadable = loadDecorated(this.cache_0, this.assetManager_0, value != null ? value : Kotlin.throwNPE(), this.assetType_0, this.decorator_0);
        this.decoratorEntry_0(loadable);
      }
       else {
        this.decoratorEntry_0(null);
      }
      if (oldPath != null) {
        unloadDecorated(this.cache_0, oldPath, this.assetType_0, this.decorator_0);
      }
    }
  });
  AssetBinding.prototype.decoratorEntry_0 = function (entry) {
    var oldEntry = this._decoratorEntry_0;
    if (Kotlin.equals(oldEntry, entry))
      return;
    if (oldEntry != null) {
      oldEntry.succeeded.remove_trkh7z$(this.succeedHandler_0);
    }
    this._decoratorEntry_0 = entry;
    if (entry != null) {
      entry.succeeded.add_trkh7z$(this.succeedHandler_0);
      if (entry.hasSucceeded()) {
        this.onChanged_0(entry.result);
      }
    }
  };
  Object.defineProperty(AssetBinding.prototype, 'secondsLoaded', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this._decoratorEntry_0) != null ? tmp$.secondsLoaded : null) != null ? tmp$_0 : 0.0;
    }
  });
  Object.defineProperty(AssetBinding.prototype, 'secondsTotal', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this._decoratorEntry_0) != null ? tmp$.secondsTotal : null) != null ? tmp$_0 : 0.0;
    }
  });
  AssetBinding.prototype.clear = function () {
    this.path = null;
  };
  AssetBinding.prototype.dispose = function () {
    this.clear();
  };
  function AssetBinding$succeedHandler$lambda(this$AssetBinding) {
    return function (action_0) {
      var tmp$;
      this$AssetBinding.onChanged_0(((tmp$ = this$AssetBinding._decoratorEntry_0) != null ? tmp$ : Kotlin.throwNPE()).result);
    };
  }
  AssetBinding.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AssetBinding',
    interfaces: [Clearable, Progress, Disposable]
  };
  function loadDecorated_0($receiver, path, type, decorator) {
    return loadDecorated(inject($receiver, Cache$Companion_getInstance()), inject($receiver, AssetManager$Companion_getInstance()), path, type, decorator);
  }
  function loadDecorated(cache, assetManager, path, type, decorator) {
    var tmp$;
    var key = new AssetDecoratorCacheKey(path, type, decorator);
    var loadable;
    if (cache.containsKey_vcktnd$(key)) {
      loadable = (tmp$ = cache.get_no7hgc$(key)) != null ? tmp$ : Kotlin.throwNPE();
    }
     else {
      var loader = assetManager.load_yu4i4z$(path, type);
      loadable = new AssetLoaderDecorator(assetManager, loader, decorator);
      cache.set_50sk66$(key, loadable);
    }
    cache.refInc_vcktnd$(key);
    return loadable;
  }
  function unloadDecorated_0($receiver, path, type, decorator) {
    unloadDecorated(inject($receiver, Cache$Companion_getInstance()), path, type, decorator);
  }
  function unloadDecorated(cache, path, type, decorator) {
    var key = new AssetDecoratorCacheKey(path, type, decorator);
    cache.refDec_vcktnd$(key);
  }
  function AssetDecoratorCacheKey(path, type, decorator) {
    this.path = path;
    this.type = type;
    this.decorator = decorator;
  }
  AssetDecoratorCacheKey.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AssetDecoratorCacheKey',
    interfaces: [CacheKey]
  };
  AssetDecoratorCacheKey.prototype.component1 = function () {
    return this.path;
  };
  AssetDecoratorCacheKey.prototype.component2 = function () {
    return this.type;
  };
  AssetDecoratorCacheKey.prototype.component3 = function () {
    return this.decorator;
  };
  AssetDecoratorCacheKey.prototype.copy_y9qotr$ = function (path, type, decorator) {
    return new AssetDecoratorCacheKey(path === void 0 ? this.path : path, type === void 0 ? this.type : type, decorator === void 0 ? this.decorator : decorator);
  };
  AssetDecoratorCacheKey.prototype.toString = function () {
    return 'AssetDecoratorCacheKey(path=' + Kotlin.toString(this.path) + (', type=' + Kotlin.toString(this.type)) + (', decorator=' + Kotlin.toString(this.decorator)) + ')';
  };
  AssetDecoratorCacheKey.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.path) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.decorator) | 0;
    return result;
  };
  AssetDecoratorCacheKey.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.path, other.path) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.decorator, other.decorator)))));
  };
  function AssetLoaderDecorator(assetManager, loader, decorator) {
    LoadableDecorator.call(this, loader, decorator);
    this.assetManager_0 = assetManager;
    this.loader_0 = loader;
  }
  AssetLoaderDecorator.prototype.onAborted = function () {
    LoadableDecorator.prototype.onAborted.call(this);
    this.assetManager_0.abort_6ir8qs$(this.loader_0.path, this.loader_0.type);
  };
  AssetLoaderDecorator.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AssetLoaderDecorator',
    interfaces: [LoadableDecorator]
  };
  function AssetLoader() {
  }
  AssetLoader.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'AssetLoader',
    interfaces: [Loadable]
  };
  function MutableAssetLoader() {
  }
  MutableAssetLoader.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableAssetLoader',
    interfaces: [MutableResultAction, AssetLoader]
  };
  function AssetManager() {
    AssetManager$Companion_getInstance();
  }
  function AssetManager$load$lambda(closure$onSuccess, closure$loader, closure$onFail) {
    return function (action_0, status) {
      var tmp$;
      if (status === ActionStatus.SUCCESSFUL) {
        closure$onSuccess(closure$loader.result);
      }
       else {
        if (closure$onFail != null) {
          closure$onFail((tmp$ = closure$loader.error) != null ? tmp$ : Kotlin.throwNPE());
        }
      }
    };
  }
  AssetManager.prototype.load_re1kiq$$default = function (path, type, onSuccess_0, onFail, priority) {
    var loader = this.load_yu4i4z$(path, type, priority);
    var onComplete = AssetManager$load$lambda(onSuccess_0, loader, onFail);
    if (loader.hasCompleted()) {
      onComplete(loader, loader.status);
    }
     else {
      loader.completed.add_onkqg$(onComplete, true);
    }
    return loader;
  };
  AssetManager.prototype.load_re1kiq$ = function (path, type, onSuccess_0, onFail, priority, callback$default) {
    if (onFail === void 0)
      onFail = null;
    if (priority === void 0)
      priority = 0.0;
    return callback$default ? callback$default(path, type, onSuccess_0, onFail, priority) : this.load_re1kiq$$default(path, type, onSuccess_0, onFail, priority);
  };
  AssetManager.prototype.load_yu4i4z$ = function (path, type, priority, callback$default) {
    if (priority === void 0)
      priority = 0.0;
    return callback$default ? callback$default(path, type, priority) : this.load_yu4i4z$$default(path, type, priority);
  };
  function AssetManager$Companion() {
    AssetManager$Companion_instance = this;
  }
  AssetManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var AssetManager$Companion_instance = null;
  function AssetManager$Companion_getInstance() {
    if (AssetManager$Companion_instance === null) {
      new AssetManager$Companion();
    }
    return AssetManager$Companion_instance;
  }
  AssetManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'AssetManager',
    interfaces: [Progress, Disposable]
  };
  function AssetManagerImpl(rootPath, files, appendVersion, simultaneous) {
    AssetManagerImpl$Companion_getInstance();
    if (rootPath === void 0)
      rootPath = '';
    if (appendVersion === void 0)
      appendVersion = false;
    if (simultaneous === void 0)
      simultaneous = 5;
    this.rootPath_0 = rootPath;
    this.files_0 = files;
    this.appendVersion_0 = appendVersion;
    this.loaderFactories_0 = HashMap_init();
    this.loadingQueue_txjcbn$_0 = new PriorityQueueAction();
    this.loadingQueue.cascadeFailure = false;
    this.loadingQueue.simultaneous = simultaneous;
    this.loadingQueue.autoInvoke = true;
  }
  Object.defineProperty(AssetManagerImpl.prototype, 'loadingQueue', {
    get: function () {
      return this.loadingQueue_txjcbn$_0;
    }
  });
  AssetManagerImpl.prototype.setLoaderFactory_6wm120$ = function (type, factory_0) {
    this.loaderFactories_0.put_xwzc9p$(type, factory_0);
  };
  AssetManagerImpl.prototype._initLoader_0 = function (loader, path) {
    var file = this.files_0.getFile_61zpoe$(path);
    if (file != null) {
      loader.estimatedBytesTotal = file.size.toInt();
      loader.path = this.rootPath_0 + (this.appendVersion_0 ? appendParam(path, 'version', file.modified.toString()) : path);
    }
     else {
      loader.path = path;
    }
    loader.failed.add_trkh7z$(AssetManagerImpl$Companion_getInstance().loadingFailedHandler);
  };
  AssetManagerImpl.prototype.load_yu4i4z$$default = function (path, type, priority) {
    var tmp$, tmp$_0;
    var factory_0 = (tmp$ = this.loaderFactories_0.get_11rb$(type)) != null ? tmp$ : this.createFailedLoaderFactory_0(type);
    var loader = Kotlin.isType(tmp$_0 = factory_0(), MutableAssetLoader) ? tmp$_0 : Kotlin.throwCCE();
    this._initLoader_0(loader, path);
    this.loadingQueue.add_kae4pz$(loader, priority);
    return loader;
  };
  AssetManagerImpl.prototype.abort_6ir8qs$ = function (path, type) {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = get_lastIndex(this.loadingQueue.actions);
    for (var i = 0; i <= tmp$; i++) {
      var action_0 = Kotlin.isType(tmp$_0 = this.loadingQueue.actions.get_za3lpa$(i), MutableAssetLoader) ? tmp$_0 : Kotlin.throwCCE();
      if (Kotlin.equals(action_0.path, path) && ((tmp$_1 = action_0.type) != null ? tmp$_1.equals(type) : null)) {
        action_0.abort();
        return;
      }
    }
  };
  function AssetManagerImpl$createFailedLoaderFactory$lambda(closure$type) {
    return function () {
      return new FailedLoader(closure$type);
    };
  }
  AssetManagerImpl.prototype.createFailedLoaderFactory_0 = function (type) {
    logging_0.Log.warn_s8jyv4$('No loader factory set for asset type ' + type);
    var newFailedLoaderFactory = AssetManagerImpl$createFailedLoaderFactory$lambda(type);
    this.loaderFactories_0.put_xwzc9p$(type, newFailedLoaderFactory);
    return newFailedLoaderFactory;
  };
  Object.defineProperty(AssetManagerImpl.prototype, 'secondsLoaded', {
    get: function () {
      var tmp$, tmp$_0;
      var c = 0.0;
      tmp$ = get_lastIndex(this.loadingQueue.actions);
      for (var i = 0; i <= tmp$; i++) {
        var action_0 = Kotlin.isType(tmp$_0 = this.loadingQueue.actions.get_za3lpa$(i), AssetLoader) ? tmp$_0 : Kotlin.throwCCE();
        c += action_0.secondsLoaded;
      }
      return c;
    }
  });
  Object.defineProperty(AssetManagerImpl.prototype, 'secondsTotal', {
    get: function () {
      var tmp$, tmp$_0;
      var c = 0.0;
      tmp$ = get_lastIndex(this.loadingQueue.actions);
      for (var i = 0; i <= tmp$; i++) {
        var action_0 = Kotlin.isType(tmp$_0 = this.loadingQueue.actions.get_za3lpa$(i), AssetLoader) ? tmp$_0 : Kotlin.throwCCE();
        c += action_0.secondsTotal;
      }
      return c;
    }
  });
  AssetManagerImpl.prototype.dispose = function () {
    this.loadingQueue.dispose();
  };
  function AssetManagerImpl$Companion() {
    AssetManagerImpl$Companion_instance = this;
    this.loadingFailedHandler = AssetManagerImpl$Companion$loadingFailedHandler$lambda;
  }
  function AssetManagerImpl$Companion$loadingFailedHandler$lambda(action_0, status, error) {
    if (status === ActionStatus.FAILED) {
      logging_0.Log.warn_s8jyv4$(error);
    }
  }
  AssetManagerImpl$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AssetManagerImpl$Companion_instance = null;
  function AssetManagerImpl$Companion_getInstance() {
    if (AssetManagerImpl$Companion_instance === null) {
      new AssetManagerImpl$Companion();
    }
    return AssetManagerImpl$Companion_instance;
  }
  AssetManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AssetManagerImpl',
    interfaces: [AssetManager]
  };
  function AssetCacheKey(path, type) {
    this.path = path;
    this.type = type;
  }
  AssetCacheKey.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AssetCacheKey',
    interfaces: [CacheKey]
  };
  AssetCacheKey.prototype.component1 = function () {
    return this.path;
  };
  AssetCacheKey.prototype.component2 = function () {
    return this.type;
  };
  AssetCacheKey.prototype.copy_j84b3m$ = function (path, type) {
    return new AssetCacheKey(path === void 0 ? this.path : path, type === void 0 ? this.type : type);
  };
  AssetCacheKey.prototype.toString = function () {
    return 'AssetCacheKey(path=' + Kotlin.toString(this.path) + (', type=' + Kotlin.toString(this.type)) + ')';
  };
  AssetCacheKey.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.path) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    return result;
  };
  AssetCacheKey.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.path, other.path) && Kotlin.equals(this.type, other.type)))));
  };
  function FailedLoader(type) {
    BasicAction.call(this);
    this.type_b8boz4$_0 = type;
    this.estimatedBytesTotal_b8boz4$_0 = 0;
    this.secondsLoaded_b8boz4$_0 = 0.0;
    this.secondsTotal_b8boz4$_0 = 0.0;
    this.path_b8boz4$_0 = '';
    this.invoke();
  }
  Object.defineProperty(FailedLoader.prototype, 'type', {
    get: function () {
      return this.type_b8boz4$_0;
    }
  });
  Object.defineProperty(FailedLoader.prototype, 'estimatedBytesTotal', {
    get: function () {
      return this.estimatedBytesTotal_b8boz4$_0;
    },
    set: function (estimatedBytesTotal) {
      this.estimatedBytesTotal_b8boz4$_0 = estimatedBytesTotal;
    }
  });
  Object.defineProperty(FailedLoader.prototype, 'secondsLoaded', {
    get: function () {
      return this.secondsLoaded_b8boz4$_0;
    }
  });
  Object.defineProperty(FailedLoader.prototype, 'secondsTotal', {
    get: function () {
      return this.secondsTotal_b8boz4$_0;
    }
  });
  Object.defineProperty(FailedLoader.prototype, 'result', {
    get: function () {
      throw new Exception('There will never be a result for this.');
    }
  });
  Object.defineProperty(FailedLoader.prototype, 'path', {
    get: function () {
      return this.path_b8boz4$_0;
    },
    set: function (path) {
      this.path_b8boz4$_0 = path;
    }
  });
  FailedLoader.prototype.onInvocation = function () {
    this.fail_3lhtaa$(new Exception('No asset loader for this type.'));
  };
  FailedLoader.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FailedLoader',
    interfaces: [MutableAssetLoader, BasicAction]
  };
  function AssetType(name) {
    this.name = name;
  }
  AssetType.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AssetType',
    interfaces: []
  };
  AssetType.prototype.component1 = function () {
    return this.name;
  };
  AssetType.prototype.copy_61zpoe$ = function (name) {
    return new AssetType(name === void 0 ? this.name : name);
  };
  AssetType.prototype.toString = function () {
    return 'AssetType(name=' + Kotlin.toString(this.name) + ')';
  };
  AssetType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  AssetType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.name, other.name))));
  };
  function AssetTypes() {
    AssetTypes_instance = this;
    this.TEXT = new AssetType('text');
    this.BINARY = new AssetType('binary');
    this.TEXTURE = new AssetType('texture');
    this.SOUND = new AssetType('audio');
    this.MUSIC = new AssetType('music');
    this.RGB_DATA = new AssetType('rgbData');
  }
  AssetTypes.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'AssetTypes',
    interfaces: []
  };
  var AssetTypes_instance = null;
  function AssetTypes_getInstance() {
    if (AssetTypes_instance === null) {
      new AssetTypes();
    }
    return AssetTypes_instance;
  }
  function loadJson$lambda(closure$json, closure$factory, closure$onSuccess) {
    return function (it) {
      var instance = closure$json.read_awjrhg$(it, closure$factory);
      closure$onSuccess(instance);
    };
  }
  function loadJson($receiver, path, factory_0, onSuccess_0, onFail) {
    if (onFail === void 0)
      onFail = null;
    var json = inject($receiver, JSON_KEY);
    inject($receiver, AssetManager$Companion_getInstance()).load_re1kiq$(path, AssetTypes_getInstance().TEXT, loadJson$lambda(json, factory_0, onSuccess_0), onFail);
  }
  function loadJson$lambda_0(closure$factory, closure$onSuccess) {
    return function (it) {
      var instance = serialization_0.JsonSerializer.read_awjrhg$(it, closure$factory);
      closure$onSuccess(instance);
    };
  }
  function loadJson_0($receiver, path, factory_0, onSuccess_0, onFail) {
    if (onFail === void 0)
      onFail = null;
    $receiver.load_re1kiq$(path, AssetTypes_getInstance().TEXT, loadJson$lambda_0(factory_0, onSuccess_0), onFail);
  }
  function Cache() {
    Cache$Companion_getInstance();
  }
  function Cache$Companion() {
    Cache$Companion_instance = this;
  }
  Cache$Companion.prototype.factory_r456d0$ = function (injector) {
    return new CacheImpl(injector.inject_li8edk$(TimeDriver$Companion_getInstance()));
  };
  Cache$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Cache$Companion_instance = null;
  function Cache$Companion_getInstance() {
    if (Cache$Companion_instance === null) {
      new Cache$Companion();
    }
    return Cache$Companion_instance;
  }
  Cache.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Cache',
    interfaces: [Disposable]
  };
  function CacheImpl(timeDriver, gcFrames) {
    if (gcFrames === void 0)
      gcFrames = 500;
    this.gcFrames_0 = gcFrames;
    this.cache_0 = HashMap_init();
    this.deathPool_0 = ArrayList_init();
    this.deathPoolIterator_0 = new MutableListIteratorImpl(this.deathPool_0);
    var y = this.gcFrames_0 / 5 | 0;
    var max_sdesaw$result;
    if (Kotlin.compareTo(1, y) >= 0) {
      max_sdesaw$result = 1;
    }
     else {
      max_sdesaw$result = y;
    }
    this.checkInterval_0 = max_sdesaw$result;
    this.timerPending_0 = this.checkInterval_0;
    enterFrame_0(timeDriver, void 0, CacheImpl_init$lambda(this));
  }
  CacheImpl.prototype.containsKey_vcktnd$ = function (key) {
    return this.cache_0.containsKey_11rb$(key);
  };
  CacheImpl.prototype.get_no7hgc$ = function (key) {
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.cache_0.get_11rb$(key)) != null ? tmp$.value : null) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : Kotlin.throwCCE();
  };
  CacheImpl.prototype.set_50sk66$ = function (key, value) {
    var tmp$, tmp$_0, tmp$_1;
    (tmp$_1 = Kotlin.isType(tmp$_0 = (tmp$ = this.cache_0.get_11rb$(key)) != null ? tmp$.value : null, Disposable) ? tmp$_0 : null) != null ? tmp$_1.dispose() : null;
    var cacheValue = new CacheValue(value, this.gcFrames_0);
    this.cache_0.put_xwzc9p$(key, cacheValue);
    this.deathPool_0.add_11rb$(key);
  };
  CacheImpl.prototype.getOr_lkbpjc$ = function (key, factory_0) {
    var tmp$, tmp$_0;
    var cacheValue;
    if (this.cache_0.containsKey_11rb$(key)) {
      cacheValue = (tmp$ = this.cache_0.get_11rb$(key)) != null ? tmp$ : Kotlin.throwNPE();
    }
     else {
      cacheValue = new CacheValue(factory_0(), this.gcFrames_0);
      var $receiver = this.cache_0;
      var value = cacheValue;
      $receiver.put_xwzc9p$(key, value);
      this.deathPool_0.add_11rb$(key);
    }
    return Kotlin.isType(tmp$_0 = cacheValue.value, Any) ? tmp$_0 : Kotlin.throwCCE();
  };
  CacheImpl.prototype.refDec_vcktnd$ = function (key) {
    var tmp$;
    if (this.cache_0.containsKey_11rb$(key)) {
      var cacheValue = (tmp$ = this.cache_0.get_11rb$(key)) != null ? tmp$ : Kotlin.throwNPE();
      if (cacheValue.refCount <= 0) {
        throw new Exception('refInc / refDec pairs are unbalanced.');
      }
      if ((cacheValue.refCount = cacheValue.refCount - 1 | 0, cacheValue.refCount) <= 0) {
        this.deathPool_0.add_11rb$(key);
      }
    }
  };
  CacheImpl.prototype.refInc_vcktnd$ = function (key) {
    var tmp$;
    tmp$ = this.cache_0.get_11rb$(key);
    if (tmp$ == null) {
      throw new Exception('The key ' + key + ' is not in the cache.');
    }
    var cacheValue = tmp$;
    if (cacheValue.refCount === 0) {
      cacheValue.deathTimer = this.gcFrames_0;
      var success = this.deathPool_0.remove_11rb$(key);
      if (!success)
        throw new Exception('Could not find the key in the death pool.');
    }
    cacheValue.refCount = cacheValue.refCount + 1 | 0;
  };
  CacheImpl.prototype.dispose = function () {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = this.cache_0.values.iterator();
    while (tmp$.hasNext()) {
      var cacheValue = tmp$.next();
      (tmp$_1 = Kotlin.isType(tmp$_0 = cacheValue.value, Disposable) ? tmp$_0 : null) != null ? tmp$_1.dispose() : null;
    }
    this.cache_0.clear();
  };
  function CacheImpl_init$lambda(this$CacheImpl) {
    return function () {
      var tmp$, tmp$_0, tmp$_1;
      if ((this$CacheImpl.timerPending_0 = this$CacheImpl.timerPending_0 - 1 | 0, this$CacheImpl.timerPending_0) <= 0) {
        this$CacheImpl.timerPending_0 = this$CacheImpl.checkInterval_0;
        this$CacheImpl.deathPoolIterator_0.clear();
        while (this$CacheImpl.deathPoolIterator_0.hasNext()) {
          var cacheKey = this$CacheImpl.deathPoolIterator_0.next();
          var cacheValue = (tmp$ = this$CacheImpl.cache_0.get_11rb$(cacheKey)) != null ? tmp$ : Kotlin.throwNPE();
          cacheValue.deathTimer = cacheValue.deathTimer - this$CacheImpl.checkInterval_0 | 0;
          if (cacheValue.deathTimer < 0) {
            this$CacheImpl.cache_0.remove_11rb$(cacheKey);
            (tmp$_1 = Kotlin.isType(tmp$_0 = cacheValue.value, Disposable) ? tmp$_0 : null) != null ? tmp$_1.dispose() : null;
            this$CacheImpl.deathPoolIterator_0.remove();
          }
        }
      }
    };
  }
  CacheImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CacheImpl',
    interfaces: [Cache]
  };
  function CacheKey() {
  }
  CacheKey.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'CacheKey',
    interfaces: []
  };
  function CacheValue(value, deathTimer) {
    this.value = value;
    this.deathTimer = deathTimer;
    this.refCount = 0;
  }
  CacheValue.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CacheValue',
    interfaces: []
  };
  function jsonDecorator($receiver, factory_0) {
    return new JsonDecorator(inject($receiver, JSON_KEY), factory_0);
  }
  function JsonDecorator(serializer, factory_0) {
    this.serializer = serializer;
    this.factory = factory_0;
  }
  JsonDecorator.prototype.decorate_11rb$ = function (target) {
    return this.serializer.read_awjrhg$(target, this.factory);
  };
  JsonDecorator.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'JsonDecorator',
    interfaces: [Decorator]
  };
  JsonDecorator.prototype.component1 = function () {
    return this.serializer;
  };
  JsonDecorator.prototype.component2 = function () {
    return this.factory;
  };
  JsonDecorator.prototype.copy_aam41i$ = function (serializer, factory_0) {
    return new JsonDecorator(serializer === void 0 ? this.serializer : serializer, factory_0 === void 0 ? this.factory : factory_0);
  };
  JsonDecorator.prototype.toString = function () {
    return 'JsonDecorator(serializer=' + Kotlin.toString(this.serializer) + (', factory=' + Kotlin.toString(this.factory)) + ')';
  };
  JsonDecorator.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.serializer) | 0;
    result = result * 31 + Kotlin.hashCode(this.factory) | 0;
    return result;
  };
  JsonDecorator.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.serializer, other.serializer) && Kotlin.equals(this.factory, other.factory)))));
  };
  function jsonBinding($receiver, factory_0, onChanged_0) {
    return assetBinding_0($receiver, AssetTypes_getInstance().TEXT, jsonDecorator($receiver, factory_0), onChanged_0);
  }
  function loadJson_1($receiver, path, factory_0) {
    return loadDecorated_0($receiver, path, AssetTypes_getInstance().TEXT, jsonDecorator($receiver, factory_0));
  }
  function unloadJson($receiver, path, factory_0) {
    unloadDecorated_0($receiver, path, AssetTypes_getInstance().TEXT, jsonDecorator($receiver, factory_0));
  }
  function LoadingQueueBusyWatch(injector) {
    this.assets_0 = injector.inject_li8edk$(AssetManager$Companion_getInstance());
    this.cursor_0 = injector.inject_li8edk$(CursorManager$Companion_getInstance());
    this._busyCursor_0 = null;
    this._isRunning_0 = false;
    this.loadingQueueStatusChangeHandler_0 = LoadingQueueBusyWatch$loadingQueueStatusChangeHandler$lambda(this);
  }
  LoadingQueueBusyWatch.prototype.start = function () {
    if (this._isRunning_0)
      return;
    this.setBusy_0(true);
    if (!this.assets_0.loadingQueue.isRunning()) {
      this.setBusy_0(false);
    }
    this.assets_0.loadingQueue.statusChanged.add_trkh7z$(this.loadingQueueStatusChangeHandler_0);
  };
  LoadingQueueBusyWatch.prototype.stop = function () {
    if (!this._isRunning_0)
      return;
    this.setBusy_0(false);
    this.assets_0.loadingQueue.statusChanged.remove_trkh7z$(this.loadingQueueStatusChangeHandler_0);
  };
  LoadingQueueBusyWatch.prototype.setBusy_0 = function (value) {
    var tmp$;
    if (Kotlin.equals(this._busyCursor_0 != null, value))
      return;
    if (value) {
      this._busyCursor_0 = this.cursor_0.addCursor_ahv9y6$(StandardCursors_getInstance().POINTER_WAIT, CursorPriority_getInstance().POINTER_WAIT);
    }
     else {
      (tmp$ = this._busyCursor_0) != null ? tmp$.remove() : null;
      this._busyCursor_0 = null;
    }
  };
  function LoadingQueueBusyWatch$loadingQueueStatusChangeHandler$lambda(this$LoadingQueueBusyWatch) {
    return function (a, oldStatus, newStatus, error) {
      if (this$LoadingQueueBusyWatch.assets_0.loadingQueue.isRunning()) {
        this$LoadingQueueBusyWatch.setBusy_0(true);
      }
       else {
        this$LoadingQueueBusyWatch.setBusy_0(false);
      }
    };
  }
  LoadingQueueBusyWatch.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LoadingQueueBusyWatch',
    interfaces: []
  };
  function loadingQueueBusyWatch($receiver) {
    return new LoadingQueueBusyWatch($receiver.injector);
  }
  function AudioDevice() {
  }
  AudioDevice.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'AudioDevice',
    interfaces: [Disposable]
  };
  function DummyAudioDevice() {
    DummyAudioDevice_instance = this;
    this.isMono_5r72mr$_0 = true;
    this.latency_5r72mr$_0 = 0;
  }
  DummyAudioDevice.prototype.writeSamples_kgymra$ = function (samples, offset, numSamples) {
  };
  DummyAudioDevice.prototype.writeSamples_359eei$ = function (samples, offset, numSamples) {
  };
  DummyAudioDevice.prototype.setVolume_mx4ult$ = function (volume) {
  };
  Object.defineProperty(DummyAudioDevice.prototype, 'isMono', {
    get: function () {
      return this.isMono_5r72mr$_0;
    }
  });
  Object.defineProperty(DummyAudioDevice.prototype, 'latency', {
    get: function () {
      return this.latency_5r72mr$_0;
    }
  });
  DummyAudioDevice.prototype.dispose = function () {
  };
  DummyAudioDevice.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'DummyAudioDevice',
    interfaces: [AudioDevice]
  };
  var DummyAudioDevice_instance = null;
  function DummyAudioDevice_getInstance() {
    if (DummyAudioDevice_instance === null) {
      new DummyAudioDevice();
    }
    return DummyAudioDevice_instance;
  }
  function AudioManager() {
    AudioManager$Companion_getInstance();
  }
  function AudioManager$Companion() {
    AudioManager$Companion_instance = this;
  }
  AudioManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var AudioManager$Companion_instance = null;
  function AudioManager$Companion_getInstance() {
    if (AudioManager$Companion_instance === null) {
      new AudioManager$Companion();
    }
    return AudioManager$Companion_instance;
  }
  AudioManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'AudioManager',
    interfaces: []
  };
  function MutableAudioManager() {
    MutableAudioManager$Companion_getInstance();
  }
  MutableAudioManager.prototype.canPlaySound_mx4ult$ = function (priority) {
    if (this.activeSounds.size < this.simultaneousSounds)
      return true;
    return priority >= last(this.activeSounds).priority;
  };
  function MutableAudioManager$Companion() {
    MutableAudioManager$Companion_instance = this;
    this.isPrivate_wyuvnc$_0 = true;
    this.extends_wyuvnc$_0 = AudioManager$Companion_getInstance();
  }
  Object.defineProperty(MutableAudioManager$Companion.prototype, 'isPrivate', {
    get: function () {
      return this.isPrivate_wyuvnc$_0;
    }
  });
  Object.defineProperty(MutableAudioManager$Companion.prototype, 'extends', {
    get: function () {
      return this.extends_wyuvnc$_0;
    }
  });
  MutableAudioManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var MutableAudioManager$Companion_instance = null;
  function MutableAudioManager$Companion_getInstance() {
    if (MutableAudioManager$Companion_instance === null) {
      new MutableAudioManager$Companion();
    }
    return MutableAudioManager$Companion_instance;
  }
  MutableAudioManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableAudioManager',
    interfaces: [DrivableChild, AudioManager]
  };
  function AudioManagerImpl(simultaneousSounds) {
    if (simultaneousSounds === void 0)
      simultaneousSounds = 8;
    DrivableChildBase.call(this);
    this.simultaneousSounds_i6evfe$_0 = simultaneousSounds;
    this.activeSounds_i6evfe$_0 = new ActiveList(this.simultaneousSounds);
    this.activeMusics_i6evfe$_0 = ActiveList_init_0();
    this.soundSources = ArrayList_init();
    this.soundPriorityComparator_i6evfe$_0 = AudioManagerImpl$soundPriorityComparator$lambda;
    this._soundVolume_i6evfe$_0 = 1.0;
    this._musicVolume_i6evfe$_0 = 1.0;
  }
  Object.defineProperty(AudioManagerImpl.prototype, 'simultaneousSounds', {
    get: function () {
      return this.simultaneousSounds_i6evfe$_0;
    }
  });
  Object.defineProperty(AudioManagerImpl.prototype, 'activeSounds', {
    get: function () {
      return this.activeSounds_i6evfe$_0;
    }
  });
  Object.defineProperty(AudioManagerImpl.prototype, 'activeMusics', {
    get: function () {
      return this.activeMusics_i6evfe$_0;
    }
  });
  AudioManagerImpl.prototype.registerSoundSource_bl6c9o$ = function (soundSource) {
    this.soundSources.add_11rb$(soundSource);
  };
  AudioManagerImpl.prototype.unregisterSoundSource_bl6c9o$ = function (soundSource) {
    this.soundSources.remove_11rb$(soundSource);
  };
  AudioManagerImpl.prototype.registerSound_riitae$ = function (sound) {
    var index = sortedInsertionIndex(this.activeSounds, sound, this.soundPriorityComparator_i6evfe$_0);
    this.activeSounds.add_wxm5ur$(index, sound);
    if (this.activeSounds.size > this.simultaneousSounds) {
      poll(this.activeSounds).stop();
    }
  };
  AudioManagerImpl.prototype.unregisterSound_riitae$ = function (sound) {
    this.activeSounds.remove_11rb$(sound);
  };
  AudioManagerImpl.prototype.registerMusic_rfbu1o$ = function (music) {
    this.activeMusics.add_11rb$(music);
  };
  AudioManagerImpl.prototype.unregisterMusic_rfbu1o$ = function (music) {
    this.activeMusics.remove_11rb$(music);
  };
  Object.defineProperty(AudioManagerImpl.prototype, 'soundVolume', {
    get: function () {
      return this._soundVolume_i6evfe$_0;
    },
    set: function (value) {
      var tmp$;
      if (this._soundVolume_i6evfe$_0 === value)
        return;
      this._soundVolume_i6evfe$_0 = value;
      tmp$ = get_lastIndex(this.activeSounds);
      for (var i = 0; i <= tmp$; i++) {
        this.activeSounds.get_za3lpa$(i).volume = this.activeSounds.get_za3lpa$(i).volume;
      }
    }
  });
  Object.defineProperty(AudioManagerImpl.prototype, 'musicVolume', {
    get: function () {
      return this._musicVolume_i6evfe$_0;
    },
    set: function (value) {
      var tmp$;
      if (this._musicVolume_i6evfe$_0 === value)
        return;
      this._musicVolume_i6evfe$_0 = value;
      tmp$ = get_lastIndex(this.activeMusics);
      for (var i = 0; i <= tmp$; i++) {
        this.activeMusics.get_za3lpa$(i).volume = this.activeMusics.get_za3lpa$(i).volume;
      }
    }
  });
  function AudioManagerImpl$update$lambda(it) {
    it.update();
    return true;
  }
  function AudioManagerImpl$update$lambda_0(it) {
    it.update();
    return true;
  }
  AudioManagerImpl.prototype.update_mx4ult$ = function (stepTime) {
    this.activeMusics.iterate_ucl7l2$(AudioManagerImpl$update$lambda);
    this.activeSounds.iterate_ucl7l2$(AudioManagerImpl$update$lambda_0);
  };
  AudioManagerImpl.prototype.dispose = function () {
    this.remove();
    while (!this.activeSounds.isEmpty()) {
      poll(this.activeSounds).dispose();
    }
    while (!this.activeMusics.isEmpty()) {
      poll(this.activeMusics).dispose();
    }
    while (!this.soundSources.isEmpty()) {
      pop(this.soundSources).dispose();
    }
  };
  function AudioManagerImpl$soundPriorityComparator$lambda(o1, o2) {
    if (o1 == null && o2 == null)
      return 0;
    else if (o1 == null)
      return 1;
    else if (o2 == null)
      return -1;
    else {
      return Kotlin.primitiveCompareTo(o1.priority, o2.priority);
    }
  }
  AudioManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AudioManagerImpl',
    interfaces: [MutableAudioManager, DrivableChildBase, Disposable]
  };
  function SoundFactory() {
  }
  SoundFactory.prototype.createInstance = function () {
    return this.createInstance_mx4ult$(this.defaultPriority);
  };
  SoundFactory.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'SoundFactory',
    interfaces: [Disposable]
  };
  function Sound() {
  }
  Sound.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Sound',
    interfaces: [Disposable]
  };
  function Music() {
  }
  Object.defineProperty(Music.prototype, 'isPaused', {
    get: function () {
      return !this.isPlaying && this.currentTime > 0.0;
    }
  });
  Music.prototype.toggle = function () {
    if (this.isPlaying)
      this.pause();
    else
      this.play();
    return this.isPlaying;
  };
  Music.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Music',
    interfaces: [Disposable]
  };
  function MusicReadyState(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function MusicReadyState_initFields() {
    MusicReadyState_initFields = function () {
    };
    MusicReadyState$NOTHING_instance = new MusicReadyState('NOTHING', 0);
    MusicReadyState$READY_instance = new MusicReadyState('READY', 1);
  }
  var MusicReadyState$NOTHING_instance;
  function MusicReadyState$NOTHING_getInstance() {
    MusicReadyState_initFields();
    return MusicReadyState$NOTHING_instance;
  }
  var MusicReadyState$READY_instance;
  function MusicReadyState$READY_getInstance() {
    MusicReadyState_initFields();
    return MusicReadyState$READY_instance;
  }
  MusicReadyState.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MusicReadyState',
    interfaces: [Enum]
  };
  function MusicReadyState$values() {
    return [MusicReadyState$NOTHING_getInstance(), MusicReadyState$READY_getInstance()];
  }
  MusicReadyState.values = MusicReadyState$values;
  function MusicReadyState$valueOf(name) {
    switch (name) {
      case 'NOTHING':
        return MusicReadyState$NOTHING_getInstance();
      case 'READY':
        return MusicReadyState$READY_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.audio.MusicReadyState.' + name);
    }
  }
  MusicReadyState.valueOf_61zpoe$ = MusicReadyState$valueOf;
  function setPanning($receiver, value) {
    $receiver.setPosition_y2kzbl$(math_0.MathUtils.cos_mx4ult$((value - 1.0) * math_0.PI / 2.0), 0.0, math_0.MathUtils.sin_mx4ult$((value + 1.0) * math_0.PI / 2.0));
  }
  function tweenVolume$lambda(this$tweenVolume) {
    return function () {
      return this$tweenVolume.volume;
    };
  }
  function tweenVolume$lambda_0(this$tweenVolume) {
    return function (it) {
      this$tweenVolume.volume = it;
    };
  }
  function tweenVolume($receiver, duration, ease, toVolume, delay) {
    if (delay === void 0)
      delay = 0.0;
    return createPropertyTween($receiver, 'volume', duration, ease, tweenVolume$lambda($receiver), tweenVolume$lambda_0($receiver), toVolume, delay);
  }
  function Selection() {
    this.changing = new Signal3();
    this.cancel_91bpsp$_0 = new Cancel();
    this.changed = new Signal2();
    this._selectedMap_91bpsp$_0 = HashMap_init();
  }
  function Selection$selectedItems$lambda(this$Selection, closure$out) {
    return function (it) {
      if (this$Selection.getItemIsSelected_11rb$(it))
        closure$out.add_11rb$(it);
    };
  }
  Selection.prototype.selectedItems_jhmpn2$ = function (out, ordered) {
    var tmp$;
    out.clear();
    if (ordered) {
      this.walkSelectableItems_qlkmfe$(Selection$selectedItems$lambda(this, out));
    }
     else {
      tmp$ = this._selectedMap_91bpsp$_0.keys.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        out.add_11rb$(item);
      }
    }
  };
  Object.defineProperty(Selection.prototype, 'selectedItem', {
    get: function () {
      return firstOrNull_1(this._selectedMap_91bpsp$_0.keys);
    },
    set: function (value) {
      if (value == null && this._selectedMap_91bpsp$_0.isEmpty())
        return;
      else if (value != null && this.getItemIsSelected_11rb$(value))
        return;
      this.clearSelection();
      if (value != null)
        this.setItemIsSelected_iuyhfk$(value, true);
    }
  });
  Selection.prototype.isEmpty = function () {
    return this._selectedMap_91bpsp$_0.isEmpty();
  };
  Selection.prototype.isNotEmpty = function () {
    return !this._selectedMap_91bpsp$_0.isEmpty();
  };
  Selection.prototype.selectedItemsCount = function () {
    return this._selectedMap_91bpsp$_0.size;
  };
  Selection.prototype.getItemIsSelected_11rb$ = function (item) {
    var tmp$;
    return (tmp$ = this._selectedMap_91bpsp$_0.get_11rb$(item)) != null ? tmp$ : false;
  };
  Selection.prototype.setItemIsSelected_iuyhfk$ = function (item, value) {
    if (Kotlin.equals(this.getItemIsSelected_11rb$(item), value))
      return;
    if (this.changing.isNotEmpty()) {
      this.changing.dispatch_1llc0w$(item, value, this.cancel_91bpsp$_0.reset());
      if (this.cancel_91bpsp$_0.canceled())
        return;
    }
    if (value) {
      this._selectedMap_91bpsp$_0.put_xwzc9p$(item, value);
    }
     else
      this._selectedMap_91bpsp$_0.remove_11rb$(item);
    this.onItemSelectionChanged_iuyhfk$(item, value);
    this.changed.dispatch_xwzc9p$(item, value);
  };
  Selection.prototype.setSelectedItems_l8fl86$ = function (items) {
    var tmp$, tmp$_0;
    tmp$ = this._selectedMap_91bpsp$_0.keys.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      if (!items.containsKey_11rb$(item) || Kotlin.equals(items.get_11rb$(item), false)) {
        this.setItemIsSelected_iuyhfk$(item, false);
      }
    }
    tmp$_0 = items.keys.iterator();
    while (tmp$_0.hasNext()) {
      var i = tmp$_0.next();
      this.setItemIsSelected_iuyhfk$(i, true);
    }
  };
  Selection.prototype.clearSelection = function () {
    var tmp$;
    tmp$ = this._selectedMap_91bpsp$_0.keys.iterator();
    while (tmp$.hasNext()) {
      var key = tmp$.next();
      this.setItemIsSelected_iuyhfk$(key, false);
    }
  };
  function Selection$selectAll$lambda(this$Selection) {
    return function (it) {
      this$Selection.setItemIsSelected_iuyhfk$(it, true);
    };
  }
  Selection.prototype.selectAll = function () {
    this.walkSelectableItems_qlkmfe$(Selection$selectAll$lambda(this));
  };
  Selection.prototype.dispose = function () {
    this.changing.dispose();
    this.changed.dispose();
    this.clearSelection();
  };
  Selection.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Selection',
    interfaces: [Disposable]
  };
  function Location() {
  }
  Object.defineProperty(Location.prototype, 'searchParams', {
    get: function () {
      return UrlParamsImpl(this.search.length === 0 ? '' : this.search.substring(1));
    }
  });
  Location.prototype.navigateToUrl_61zpoe$ = function (url) {
    this.navigateToUrl_me39zv$(url, '_self', null);
  };
  Location.prototype.navigateToUrl_puj7f4$ = function (url, target) {
    this.navigateToUrl_me39zv$(url, target, null);
  };
  Location.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Location',
    interfaces: []
  };
  function MultipartFormData() {
    this._items_0 = ArrayList_init();
  }
  Object.defineProperty(MultipartFormData.prototype, 'items', {
    get: function () {
      return this._items_0;
    }
  });
  MultipartFormData.prototype.append_vi8vkr$ = function (name, value, filename) {
    if (filename === void 0)
      filename = null;
    this._items_0.add_11rb$(new ByteArrayFormItem(name, value, filename));
  };
  MultipartFormData.prototype.append_puj7f4$ = function (name, value) {
    this._items_0.add_11rb$(new StringFormItem(name, value));
  };
  MultipartFormData.prototype.clear = function () {
    this._items_0.clear();
  };
  MultipartFormData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MultipartFormData',
    interfaces: [Clearable]
  };
  function FormDataItem() {
  }
  FormDataItem.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'FormDataItem',
    interfaces: []
  };
  function ByteArrayFormItem(name, value, filename) {
    this.name_c11e7r$_0 = name;
    this.value = value;
    this.filename = filename;
  }
  Object.defineProperty(ByteArrayFormItem.prototype, 'name', {
    get: function () {
      return this.name_c11e7r$_0;
    }
  });
  ByteArrayFormItem.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ByteArrayFormItem',
    interfaces: [FormDataItem]
  };
  function StringFormItem(name, value) {
    this.name_1ff72z$_0 = name;
    this.value = value;
  }
  Object.defineProperty(StringFormItem.prototype, 'name', {
    get: function () {
      return this.name_1ff72z$_0;
    }
  });
  StringFormItem.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StringFormItem',
    interfaces: [FormDataItem]
  };
  function CursorManager() {
    CursorManager$Companion_getInstance();
  }
  CursorManager.prototype.addCursor_ahv9y6$ = function (cursor_0, priority, callback$default) {
    if (priority === void 0)
      priority = 0.0;
    return callback$default ? callback$default(cursor_0, priority) : this.addCursor_ahv9y6$$default(cursor_0, priority);
  };
  function CursorManager$Companion() {
    CursorManager$Companion_instance = this;
  }
  CursorManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var CursorManager$Companion_instance = null;
  function CursorManager$Companion_getInstance() {
    if (CursorManager$Companion_instance === null) {
      new CursorManager$Companion();
    }
    return CursorManager$Companion_instance;
  }
  CursorManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'CursorManager',
    interfaces: []
  };
  function Cursor() {
  }
  Cursor.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Cursor',
    interfaces: [Lifecycle]
  };
  function CursorReference() {
    CursorReference$Companion_getInstance();
    this.cursor = null;
    this.priority = 0.0;
    this.manager = null;
  }
  CursorReference.prototype.remove = function () {
    var tmp$;
    ((tmp$ = this.manager) != null ? tmp$ : Kotlin.throwNPE()).removeCursor_7zgmfi$(this);
    this.manager = null;
  };
  CursorReference.prototype.clear = function () {
    this.cursor = null;
    this.manager = null;
    this.priority = 0.0;
  };
  CursorReference.prototype.free = function () {
    CursorReference$Companion_getInstance().pool_0.free_11rb$(this);
  };
  CursorReference.prototype.compareTo_11rb$ = function (other) {
    return Kotlin.primitiveCompareTo(this.priority, other.priority);
  };
  function CursorReference$Companion() {
    CursorReference$Companion_instance = this;
    this.pool_0 = new ClearableObjectPool(void 0, CursorReference$Companion$pool$lambda);
  }
  CursorReference$Companion.prototype.obtain_ahv9y6$ = function (cursor_0, priority) {
    var r = this.pool_0.obtain();
    r.cursor = cursor_0;
    r.priority = priority;
    return r;
  };
  function CursorReference$Companion$pool$lambda() {
    return new CursorReference();
  }
  CursorReference$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CursorReference$Companion_instance = null;
  function CursorReference$Companion_getInstance() {
    if (CursorReference$Companion_instance === null) {
      new CursorReference$Companion();
    }
    return CursorReference$Companion_instance;
  }
  CursorReference.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CursorReference',
    interfaces: [Comparable, Clearable]
  };
  function CursorManagerBase() {
    this.cursorStack_s8uq49$_0 = ArrayList_init();
    this._currentCursor_s8uq49$_0 = null;
  }
  CursorManagerBase.prototype.addCursor_ahv9y6$$default = function (cursor_0, priority) {
    var cursorReference = CursorReference$Companion_getInstance().obtain_ahv9y6$(cursor_0, priority);
    cursorReference.manager = this;
    var index = sortedInsertionIndex_0(this.cursorStack_s8uq49$_0, cursorReference);
    this.cursorStack_s8uq49$_0.add_wxm5ur$(index, cursorReference);
    this.currentCursor_kh54q2$_0(lastOrNull(this.cursorStack_s8uq49$_0));
    return cursorReference;
  };
  CursorManagerBase.prototype.removeCursor_7zgmfi$ = function (cursorReference) {
    this.cursorStack_s8uq49$_0.remove_11rb$(cursorReference);
    this.currentCursor_kh54q2$_0(lastOrNull(this.cursorStack_s8uq49$_0));
    cursorReference.free();
  };
  CursorManagerBase.prototype.currentCursor_kh54q2$_0 = function (value) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8;
    if (Kotlin.equals(this._currentCursor_s8uq49$_0, value))
      return;
    if ((tmp$_1 = (tmp$_0 = (tmp$ = this._currentCursor_s8uq49$_0) != null ? tmp$.cursor : null) != null ? tmp$_0.isActive : null) != null ? tmp$_1 : false) {
      (tmp$_3 = (tmp$_2 = this._currentCursor_s8uq49$_0) != null ? tmp$_2.cursor : null) != null ? tmp$_3.deactivate() : null;
    }
    this._currentCursor_s8uq49$_0 = value;
    if (!((tmp$_6 = (tmp$_5 = (tmp$_4 = this._currentCursor_s8uq49$_0) != null ? tmp$_4.cursor : null) != null ? tmp$_5.isActive : null) != null ? tmp$_6 : false)) {
      (tmp$_8 = (tmp$_7 = this._currentCursor_s8uq49$_0) != null ? tmp$_7.cursor : null) != null ? tmp$_8.activate() : null;
    }
  };
  CursorManagerBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CursorManagerBase',
    interfaces: [CursorManager]
  };
  function StandardCursors() {
    StandardCursors_instance = this;
    this.ALIAS$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.ALL_SCROLL$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.CELL$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.COPY$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.CROSSHAIR$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.DEFAULT$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.HAND$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.HELP$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.IBEAM$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.MOVE$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.NONE$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.NOT_ALLOWED$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.POINTER_WAIT$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.RESIZE_E$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.RESIZE_N$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.RESIZE_NE$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.RESIZE_SE$delegate = properties_0.Delegates.notNull_30y1fr$();
    this.WAIT$delegate = properties_0.Delegates.notNull_30y1fr$();
  }
  Object.defineProperty(StandardCursors.prototype, 'ALIAS', {
    get: function () {
      return this.ALIAS$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('ALIAS'));
    },
    set: function (ALIAS) {
      this.ALIAS$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('ALIAS'), ALIAS);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'ALL_SCROLL', {
    get: function () {
      return this.ALL_SCROLL$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('ALL_SCROLL'));
    },
    set: function (ALL_SCROLL) {
      this.ALL_SCROLL$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('ALL_SCROLL'), ALL_SCROLL);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'CELL', {
    get: function () {
      return this.CELL$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('CELL'));
    },
    set: function (CELL) {
      this.CELL$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('CELL'), CELL);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'COPY', {
    get: function () {
      return this.COPY$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('COPY'));
    },
    set: function (COPY) {
      this.COPY$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('COPY'), COPY);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'CROSSHAIR', {
    get: function () {
      return this.CROSSHAIR$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('CROSSHAIR'));
    },
    set: function (CROSSHAIR) {
      this.CROSSHAIR$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('CROSSHAIR'), CROSSHAIR);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'DEFAULT', {
    get: function () {
      return this.DEFAULT$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('DEFAULT'));
    },
    set: function (DEFAULT) {
      this.DEFAULT$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('DEFAULT'), DEFAULT);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'HAND', {
    get: function () {
      return this.HAND$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('HAND'));
    },
    set: function (HAND) {
      this.HAND$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('HAND'), HAND);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'HELP', {
    get: function () {
      return this.HELP$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('HELP'));
    },
    set: function (HELP) {
      this.HELP$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('HELP'), HELP);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'IBEAM', {
    get: function () {
      return this.IBEAM$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('IBEAM'));
    },
    set: function (IBEAM) {
      this.IBEAM$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('IBEAM'), IBEAM);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'MOVE', {
    get: function () {
      return this.MOVE$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('MOVE'));
    },
    set: function (MOVE) {
      this.MOVE$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('MOVE'), MOVE);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'NONE', {
    get: function () {
      return this.NONE$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('NONE'));
    },
    set: function (NONE) {
      this.NONE$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('NONE'), NONE);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'NOT_ALLOWED', {
    get: function () {
      return this.NOT_ALLOWED$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('NOT_ALLOWED'));
    },
    set: function (NOT_ALLOWED) {
      this.NOT_ALLOWED$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('NOT_ALLOWED'), NOT_ALLOWED);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'POINTER_WAIT', {
    get: function () {
      return this.POINTER_WAIT$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('POINTER_WAIT'));
    },
    set: function (POINTER_WAIT) {
      this.POINTER_WAIT$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('POINTER_WAIT'), POINTER_WAIT);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'RESIZE_E', {
    get: function () {
      return this.RESIZE_E$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('RESIZE_E'));
    },
    set: function (RESIZE_E) {
      this.RESIZE_E$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('RESIZE_E'), RESIZE_E);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'RESIZE_N', {
    get: function () {
      return this.RESIZE_N$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('RESIZE_N'));
    },
    set: function (RESIZE_N) {
      this.RESIZE_N$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('RESIZE_N'), RESIZE_N);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'RESIZE_NE', {
    get: function () {
      return this.RESIZE_NE$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('RESIZE_NE'));
    },
    set: function (RESIZE_NE) {
      this.RESIZE_NE$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('RESIZE_NE'), RESIZE_NE);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'RESIZE_SE', {
    get: function () {
      return this.RESIZE_SE$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('RESIZE_SE'));
    },
    set: function (RESIZE_SE) {
      this.RESIZE_SE$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('RESIZE_SE'), RESIZE_SE);
    }
  });
  Object.defineProperty(StandardCursors.prototype, 'WAIT', {
    get: function () {
      return this.WAIT$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('WAIT'));
    },
    set: function (WAIT) {
      this.WAIT$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('WAIT'), WAIT);
    }
  });
  StandardCursors.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'StandardCursors',
    interfaces: []
  };
  var StandardCursors_instance = null;
  function StandardCursors_getInstance() {
    if (StandardCursors_instance === null) {
      new StandardCursors();
    }
    return StandardCursors_instance;
  }
  function CursorPriority() {
    CursorPriority_instance = this;
    this.PASSIVE = 0.0;
    this.ACTIVE = 10.0;
    this.POINTER_WAIT = 50.0;
    this.WAIT = 100.0;
    this.NOT_ALLOWED = 1000.0;
  }
  CursorPriority.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'CursorPriority',
    interfaces: []
  };
  var CursorPriority_instance = null;
  function CursorPriority_getInstance() {
    if (CursorPriority_instance === null) {
      new CursorPriority();
    }
    return CursorPriority_instance;
  }
  function RollOverCursor(target, cursor_0, priority) {
    RollOverCursor$Companion_getInstance();
    if (priority === void 0)
      priority = CursorPriority_getInstance().ACTIVE;
    this.target_0 = target;
    this.cursor_0 = cursor_0;
    this.priority_0 = priority;
    this.cursorManager_0 = inject(this.target_0, CursorManager$Companion_getInstance());
    this.cursorRef_0 = null;
    this.rollOverHandler_0 = RollOverCursor$rollOverHandler$lambda(this);
    this.rollOutHandler_0 = RollOverCursor$rollOutHandler$lambda(this);
    rollOver(this.target_0).add_trkh7z$(this.rollOverHandler_0);
    rollOut(this.target_0).add_trkh7z$(this.rollOutHandler_0);
  }
  RollOverCursor.prototype.dispose = function () {
    var tmp$;
    (tmp$ = this.cursorRef_0) != null ? tmp$.remove() : null;
    this.cursorRef_0 = null;
    rollOver(this.target_0).remove_trkh7z$(this.rollOverHandler_0);
    rollOut(this.target_0).remove_trkh7z$(this.rollOutHandler_0);
  };
  function RollOverCursor$Companion() {
    RollOverCursor$Companion_instance = this;
  }
  RollOverCursor$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var RollOverCursor$Companion_instance = null;
  function RollOverCursor$Companion_getInstance() {
    if (RollOverCursor$Companion_instance === null) {
      new RollOverCursor$Companion();
    }
    return RollOverCursor$Companion_instance;
  }
  function RollOverCursor$rollOverHandler$lambda(this$RollOverCursor) {
    return function (event) {
      var tmp$;
      (tmp$ = this$RollOverCursor.cursorRef_0) != null ? tmp$.remove() : null;
      this$RollOverCursor.cursorRef_0 = this$RollOverCursor.cursorManager_0.addCursor_ahv9y6$(this$RollOverCursor.cursor_0, this$RollOverCursor.priority_0);
    };
  }
  function RollOverCursor$rollOutHandler$lambda(this$RollOverCursor) {
    return function (event) {
      var tmp$;
      (tmp$ = this$RollOverCursor.cursorRef_0) != null ? tmp$.remove() : null;
      this$RollOverCursor.cursorRef_0 = null;
    };
  }
  RollOverCursor.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'RollOverCursor',
    interfaces: [Disposable]
  };
  function clearCursor($receiver) {
    var tmp$;
    (tmp$ = $receiver.removeAttachment_pgxeca$(RollOverCursor$Companion_getInstance())) != null ? tmp$.dispose() : null;
  }
  function cursor$lambda(this$cursor, closure$cursor, closure$priority) {
    return function () {
      return new RollOverCursor(this$cursor, closure$cursor, closure$priority);
    };
  }
  function cursor($receiver, cursor_0, priority) {
    if (priority === void 0)
      priority = CursorPriority_getInstance().ACTIVE;
    return createOrReuseAttachment($receiver, RollOverCursor$Companion_getInstance(), cursor$lambda($receiver, cursor_0, priority));
  }
  function Bootstrap(injector) {
    if (injector === void 0)
      injector = new Injector();
    this.injector_kab0tg$_0 = injector;
    this.dependencyGraph_0 = new DependencyGraph();
  }
  Object.defineProperty(Bootstrap.prototype, 'injector', {
    get: function () {
      return this.injector_kab0tg$_0;
    }
  });
  Bootstrap.prototype.get_li8edk$ = function (key) {
    return this.injector.inject_li8edk$(key);
  };
  Bootstrap.prototype.set_7ey6m6$ = function (key, value) {
    this.injector.set_7ey6m6$(key, value);
    this.dependencyGraph_0.set_dpg7wc$(key, value);
  };
  function Bootstrap$on$lambda(closure$callback, this$Bootstrap) {
    return function ($receiver) {
      closure$callback(this$Bootstrap);
    };
  }
  Bootstrap.prototype.on_b913r5$ = function (dependencies, callback) {
    if (this.injector.isLocked)
      throw new Exception('Injector is locked, cannot set any more dependencies.');
    this.dependencyGraph_0.on_ctpaey$(dependencies.slice(), Bootstrap$on$lambda(callback, this));
  };
  Bootstrap.prototype.waitFor_yg6552$ = function (dependencies) {
    this.dependencyGraph_0.waitFor_7l2mas$(dependencies.slice());
  };
  Bootstrap.prototype.then_o14v8n$ = function (callback) {
    this.dependencyGraph_0.then_o14v8n$(callback);
  };
  Bootstrap.prototype.dispose = function () {
    this.dependencyGraph_0.dispose();
    this.injector.dispose();
  };
  Bootstrap.prototype.lock = function () {
    if (this.dependencyGraph_0.hasPending())
      throw new Exception('Cannot lock the injector when there are still pending callbacks.');
    this.injector.lock();
    this.dependencyGraph_0.clear();
  };
  Bootstrap.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Bootstrap',
    interfaces: [Disposable, Scoped]
  };
  function scope$lambda(closure$b) {
    return function (it) {
      closure$b.dispose();
    };
  }
  function scope$lambda_0(closure$b, closure$owner, closure$onReady) {
    return function () {
      closure$b.lock();
      closure$onReady(closure$owner);
    };
  }
  function scope($receiver, init, onReady) {
    var b = new Bootstrap(new Injector($receiver.injector));
    var owner = new OwnedImpl($receiver, b.injector);
    $receiver.disposed.add_trkh7z$(scope$lambda(b));
    init(b);
    b.then_o14v8n$(scope$lambda_0(b, owner, onReady));
    return b;
  }
  function Scoped() {
  }
  Scoped.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Scoped',
    interfaces: []
  };
  function injectOptional_0($receiver, key, factory_0) {
    return $receiver.injector.injectOptional_2breec$(key, factory_0);
  }
  function injectOptional($receiver, key) {
    return $receiver.injector.injectOptional_li8edk$(key);
  }
  function inject($receiver, key) {
    return $receiver.injector.inject_li8edk$(key);
  }
  function Injector(parent) {
    if (parent === void 0)
      parent = null;
    this.parent_0 = parent;
    this.dependencies_0 = HashMap_init();
    this.dependenciesOrdered_0 = ArrayList_init();
    this._isLocked_0 = false;
  }
  Object.defineProperty(Injector.prototype, 'isLocked', {
    get: function () {
      return this._isLocked_0;
    }
  });
  Injector.prototype.lock = function () {
    this._isLocked_0 = true;
  };
  Injector.prototype.containsAllKeys_pqqijz$ = function (keys) {
    return containsAllKeys(this.dependencies_0, keys);
  };
  Injector.prototype.containsKey_j2xkot$ = function (key) {
    return this.dependencies_0.containsKey_11rb$(key);
  };
  Injector.prototype.injectOptional_li8edk$ = function (key) {
    var tmp$, tmp$_0;
    if (key.isPrivate && this.isLocked)
      throw new Exception('This dependency key is for bootstrap use only.');
    var d = (tmp$ = this.dependencies_0.get_11rb$(key)) == null || Kotlin.isType(tmp$, Any) ? tmp$ : Kotlin.throwCCE();
    if (d == null) {
      d = (tmp$_0 = this.parent_0) != null ? tmp$_0.injectOptional_li8edk$(key) : null;
      if (d == null && this.parent_0 == null) {
        d = key.factory_r456d0$(this);
        if (d != null) {
          this._set_0(key, d);
        }
      }
    }
    return d;
  };
  Injector.prototype.injectOptional_2breec$ = function (key, factory_0) {
    var tmp$;
    tmp$ = this.injectOptional_li8edk$(key);
    if (tmp$ == null) {
      return factory_0();
    }
    return tmp$;
  };
  Injector.prototype.inject_li8edk$ = function (key) {
    var tmp$;
    tmp$ = this.injectOptional_li8edk$(key);
    if (tmp$ == null) {
      throw new Exception('Dependency not found for key: ' + key);
    }
    return tmp$;
  };
  Injector.prototype.set_7ey6m6$ = function (key, value) {
    var tmp$;
    if (this.isLocked)
      throw new Exception('Dependencies may not be added after the Injector has been locked.');
    this._set_0(key, value);
    if (key.extends != null) {
      this.set_7ey6m6$(Kotlin.isType(tmp$ = key.extends, DKey) ? tmp$ : Kotlin.throwCCE(), value);
    }
  };
  Injector.prototype._set_0 = function (key, value) {
    this.dependencies_0.put_xwzc9p$(key, value);
    if (!this.dependenciesOrdered_0.contains_11rb$(value))
      this.dependenciesOrdered_0.add_11rb$(value);
  };
  Injector.prototype.dispose = function () {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = downTo(get_lastIndex(this.dependenciesOrdered_0), 0).iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      (tmp$_1 = Kotlin.isType(tmp$_0 = this.dependenciesOrdered_0.get_za3lpa$(i), Disposable) ? tmp$_0 : null) != null ? tmp$_1.dispose() : null;
    }
    this.dependencies_0.clear();
    this.dependenciesOrdered_0.clear();
  };
  Injector.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Injector',
    interfaces: [Disposable]
  };
  function DKey() {
  }
  Object.defineProperty(DKey.prototype, 'isPrivate', {
    get: function () {
      return false;
    }
  });
  Object.defineProperty(DKey.prototype, 'extends', {
    get: function () {
      return null;
    }
  });
  DKey.prototype.factory_r456d0$ = function (injector) {
    return null;
  };
  DKey.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'DKey',
    interfaces: []
  };
  function DependencyKeyImpl() {
  }
  DependencyKeyImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DependencyKeyImpl',
    interfaces: [DKey]
  };
  function dKey$ObjectLiteral(closure$f) {
    this.closure$f = closure$f;
  }
  dKey$ObjectLiteral.prototype.factory_r456d0$ = function (injector) {
    return this.closure$f();
  };
  dKey$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [DKey]
  };
  function dKey(f) {
    return new dKey$ObjectLiteral(f);
  }
  function Owned() {
  }
  Owned.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Owned',
    interfaces: [Scoped]
  };
  function owns($receiver, other) {
    var p = other;
    while (p != null) {
      if (Kotlin.equals(p, $receiver))
        return true;
      p = p.owner;
    }
    return false;
  }
  function own$lambda(closure$target) {
    return function (it) {
      closure$target.dispose();
    };
  }
  function own$lambda_0(this$own, closure$disposer) {
    return function (it) {
      this$own.disposed.remove_trkh7z$(closure$disposer);
    };
  }
  function own($receiver, target) {
    var disposer = own$lambda(target);
    $receiver.disposed.add_trkh7z$(disposer);
    if (Kotlin.isType(target, Lifecycle)) {
      target.disposed.add_trkh7z$(own$lambda_0($receiver, disposer));
    }
    return target;
  }
  function OwnedImpl(owner, injector) {
    this.owner_kmrfoz$_0 = owner;
    this.injector_kmrfoz$_0 = injector;
    this.disposed_kmrfoz$_0 = new Signal1();
  }
  Object.defineProperty(OwnedImpl.prototype, 'owner', {
    get: function () {
      return this.owner_kmrfoz$_0;
    }
  });
  Object.defineProperty(OwnedImpl.prototype, 'injector', {
    get: function () {
      return this.injector_kmrfoz$_0;
    }
  });
  Object.defineProperty(OwnedImpl.prototype, 'disposed', {
    get: function () {
      return this.disposed_kmrfoz$_0;
    }
  });
  OwnedImpl.prototype.dispose = function () {
    this.disposed.dispatch_11rb$(this);
    this.disposed.dispose();
  };
  OwnedImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'OwnedImpl',
    interfaces: [Disposable, Owned]
  };
  function FakeFocusMouse(injector) {
    this.injector_ydjxqp$_0 = injector;
    this.focus_0 = inject(this, FocusManager$Companion_getInstance());
    this.interactivity_0 = inject(this, InteractivityManager$Companion_getInstance());
    this.fakeMouseEvent_0 = new MouseInteraction();
    this.downKey_0 = null;
    this.downElement_0 = null;
    this.keyDownHandler_0 = FakeFocusMouse$keyDownHandler$lambda(this);
    this.keyUpHandler_0 = FakeFocusMouse$keyUpHandler$lambda(this);
    keyDown(get_stage(this)).add_trkh7z$(this.keyDownHandler_0);
    keyUp(get_stage(this)).add_trkh7z$(this.keyUpHandler_0);
  }
  Object.defineProperty(FakeFocusMouse.prototype, 'injector', {
    get: function () {
      return this.injector_ydjxqp$_0;
    }
  });
  FakeFocusMouse.prototype.dispatchFakeMouseEvent_0 = function (type) {
    var f = this.focus_0.focused();
    if (f != null) {
      this.fakeMouseEvent_0.clear();
      this.fakeMouseEvent_0.isFabricated = true;
      this.fakeMouseEvent_0.type = type;
      this.fakeMouseEvent_0.button = WhichButton$LEFT_getInstance();
      this.fakeMouseEvent_0.timestamp = get_time().nowMs();
      this.interactivity_0.dispatch_z2oxuu$(f, this.fakeMouseEvent_0);
    }
  };
  FakeFocusMouse.prototype.dispose = function () {
    keyDown(get_stage(this)).remove_trkh7z$(this.keyDownHandler_0);
    keyUp(get_stage(this)).remove_trkh7z$(this.keyUpHandler_0);
  };
  function FakeFocusMouse$keyDownHandler$lambda(this$FakeFocusMouse) {
    return function (event) {
      if (!event.handled) {
        var f = this$FakeFocusMouse.focus_0.focused();
        if (f != null) {
          var isRepeat = event.isRepeat && this$FakeFocusMouse.downKey_0 === event.keyCode && downRepeatEnabled(f);
          if ((this$FakeFocusMouse.downKey_0 == null || isRepeat) && event.keyCode === Ascii_getInstance().SPACE || event.keyCode === Ascii_getInstance().RETURN) {
            event.handled = true;
            this$FakeFocusMouse.downKey_0 = event.keyCode;
            this$FakeFocusMouse.downElement_0 = this$FakeFocusMouse.focus_0.focused();
            this$FakeFocusMouse.dispatchFakeMouseEvent_0(MouseInteraction$Companion_getInstance().MOUSE_DOWN);
          }
        }
      }
    };
  }
  function FakeFocusMouse$keyUpHandler$lambda(this$FakeFocusMouse) {
    return function (event) {
      var tmp$;
      if (!event.handled && event.keyCode === this$FakeFocusMouse.downKey_0) {
        event.handled = true;
        this$FakeFocusMouse.dispatchFakeMouseEvent_0(MouseInteraction$Companion_getInstance().MOUSE_UP);
        this$FakeFocusMouse.downKey_0 = null;
        if (Kotlin.equals(this$FakeFocusMouse.downElement_0, this$FakeFocusMouse.focus_0.focused())) {
          dispatchClick((tmp$ = this$FakeFocusMouse.downElement_0) != null ? tmp$ : Kotlin.throwNPE());
          this$FakeFocusMouse.downElement_0 = null;
        }
      }
    };
  }
  FakeFocusMouse.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FakeFocusMouse',
    interfaces: [Disposable, Scoped]
  };
  function fakeFocusMouse($receiver) {
    return new FakeFocusMouse($receiver.injector);
  }
  function FocusManager() {
    FocusManager$Companion_getInstance();
  }
  FocusManager.prototype.clearFocused = function () {
    return this.focused_nxm3zo$(null);
  };
  FocusManager.prototype.focusNext = function () {
    this.focused_nxm3zo$(this.nextFocusable());
  };
  FocusManager.prototype.focusPrevious = function () {
    this.focused_nxm3zo$(this.previousFocusable());
  };
  function FocusManager$Companion() {
    FocusManager$Companion_instance = this;
  }
  FocusManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var FocusManager$Companion_instance = null;
  function FocusManager$Companion_getInstance() {
    if (FocusManager$Companion_instance === null) {
      new FocusManager$Companion();
    }
    return FocusManager$Companion_instance;
  }
  FocusManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'FocusManager',
    interfaces: [Disposable]
  };
  function FocusChangeResult(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function FocusChangeResult_initFields() {
    FocusChangeResult_initFields = function () {
    };
    FocusChangeResult$UNCHANGED_instance = new FocusChangeResult('UNCHANGED', 0);
    FocusChangeResult$CHANGED_instance = new FocusChangeResult('CHANGED', 1);
    FocusChangeResult$CANCELED_instance = new FocusChangeResult('CANCELED', 2);
  }
  var FocusChangeResult$UNCHANGED_instance;
  function FocusChangeResult$UNCHANGED_getInstance() {
    FocusChangeResult_initFields();
    return FocusChangeResult$UNCHANGED_instance;
  }
  var FocusChangeResult$CHANGED_instance;
  function FocusChangeResult$CHANGED_getInstance() {
    FocusChangeResult_initFields();
    return FocusChangeResult$CHANGED_instance;
  }
  var FocusChangeResult$CANCELED_instance;
  function FocusChangeResult$CANCELED_getInstance() {
    FocusChangeResult_initFields();
    return FocusChangeResult$CANCELED_instance;
  }
  FocusChangeResult.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FocusChangeResult',
    interfaces: [Enum]
  };
  function FocusChangeResult$values() {
    return [FocusChangeResult$UNCHANGED_getInstance(), FocusChangeResult$CHANGED_getInstance(), FocusChangeResult$CANCELED_getInstance()];
  }
  FocusChangeResult.values = FocusChangeResult$values;
  function FocusChangeResult$valueOf(name) {
    switch (name) {
      case 'UNCHANGED':
        return FocusChangeResult$UNCHANGED_getInstance();
      case 'CHANGED':
        return FocusChangeResult$CHANGED_getInstance();
      case 'CANCELED':
        return FocusChangeResult$CANCELED_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.focus.FocusChangeResult.' + name);
    }
  }
  FocusChangeResult.valueOf_61zpoe$ = FocusChangeResult$valueOf;
  function FocusContainer() {
  }
  FocusContainer.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'FocusContainer',
    interfaces: [LayoutElement]
  };
  function Focusable() {
  }
  Focusable.prototype.focus = function () {
    inject(this, FocusManager$Companion_getInstance()).focused_nxm3zo$(this);
  };
  Focusable.prototype.blur = function () {
    inject(this, FocusManager$Companion_getInstance()).clearFocused();
  };
  Focusable.prototype.onFocused = function () {
  };
  Focusable.prototype.onBlurred = function () {
  };
  Object.defineProperty(Focusable.prototype, 'isFocused', {
    get: function () {
      return this === inject(this, FocusManager$Companion_getInstance()).focused();
    }
  });
  Object.defineProperty(Focusable.prototype, 'parentFocusableContainer', {
    get: function () {
      parentWalk$break: {
        var tmp$;
        var p = this;
        while (p != null) {
          var it = p;
          if (!Kotlin.equals(it, this) && Kotlin.isType(it, FocusContainer)) {
            return it;
          }
          var shouldContinue = true;
          if (!shouldContinue)
            break parentWalk$break;
          p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
        }
      }
      return null;
    }
  });
  Focusable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Focusable',
    interfaces: [UiComponent]
  };
  function get_firstFocusableChild$lambda(this$firstFocusableChild, closure$found) {
    return function (it) {
      if (it.focusEnabled && !Kotlin.equals(it, this$firstFocusableChild) && owns(this$firstFocusableChild, it))
        closure$found.v = it;
      return closure$found.v == null;
    };
  }
  function get_firstFocusableChild($receiver) {
    var focusManager = inject($receiver, FocusManager$Companion_getInstance());
    var found = {v: null};
    if (Kotlin.isType($receiver, Container)) {
      focusManager.iterateFocusables_afwb3w$(get_firstFocusableChild$lambda($receiver, found));
    }
    return found.v;
  }
  function focusFirst($receiver) {
    var focus = inject($receiver, FocusManager$Companion_getInstance());
    if (Kotlin.isType($receiver, Focusable) && $receiver.focusEnabled)
      $receiver.focus();
    else if (Kotlin.isType($receiver, Container)) {
      var firstFocusable = get_firstFocusableChild($receiver);
      if (firstFocusable == null) {
        focus.clearFocused();
      }
       else {
        firstFocusable.focus();
      }
    }
     else {
      focus.clearFocused();
    }
  }
  function FocusManagerImpl() {
    this._root = null;
    this.focusedChangingCancel = new Cancel();
    this.focusedChanging_ccmzfm$_0 = new Signal3();
    this.focusedChanged_ccmzfm$_0 = new Signal2();
    this._focused = null;
    this._highlighted = null;
    this._focusablesValid = false;
    this.focusables = ArrayList_init();
    this.highlightIsChanging = false;
    this.rootKeyDownHandler_ccmzfm$_0 = FocusManagerImpl$rootKeyDownHandler$lambda(this);
    this.rootMouseDownHandler_ccmzfm$_0 = FocusManagerImpl$rootMouseDownHandler$lambda(this);
    this.rootInvalidatedHandler_ccmzfm$_0 = FocusManagerImpl$rootInvalidatedHandler$lambda(this);
    this._highlight_ccmzfm$_0 = null;
    this.focusedDeactivatedHandler_ccmzfm$_0 = FocusManagerImpl$focusedDeactivatedHandler$lambda(this);
    this.midPoint_ccmzfm$_0 = new Vector3();
  }
  Object.defineProperty(FocusManagerImpl.prototype, 'root', {
    get: function () {
      var tmp$;
      return (tmp$ = this._root) != null ? tmp$ : Kotlin.throwNPE();
    }
  });
  Object.defineProperty(FocusManagerImpl.prototype, 'focusedChanging', {
    get: function () {
      return this.focusedChanging_ccmzfm$_0;
    }
  });
  Object.defineProperty(FocusManagerImpl.prototype, 'focusedChanged', {
    get: function () {
      return this.focusedChanged_ccmzfm$_0;
    }
  });
  Object.defineProperty(FocusManagerImpl.prototype, 'highlight', {
    get: function () {
      return this._highlight_ccmzfm$_0;
    },
    set: function (value) {
      if (Kotlin.equals(value, this._highlight_ccmzfm$_0))
        return;
      var wasHighlighted = this._highlighted != null;
      this.unhighlightFocused();
      this._highlight_ccmzfm$_0 = value;
      if (wasHighlighted)
        this.highlightFocused();
    }
  });
  FocusManagerImpl.prototype.init_63o2dx$ = function (root_0) {
    _assert(this._root == null, 'Already initialized.');
    this._root = root_0;
    this._focused = root_0;
    root_0.invalidated.add_trkh7z$(this.rootInvalidatedHandler_ccmzfm$_0);
    keyDown(root_0).add_trkh7z$(this.rootKeyDownHandler_ccmzfm$_0);
    mouseDown(root_0, true).add_trkh7z$(this.rootMouseDownHandler_ccmzfm$_0);
  };
  FocusManagerImpl.prototype.focused = function () {
    return this._focused;
  };
  FocusManagerImpl.prototype.focused_nxm3zo$ = function (value) {
    var tmp$, tmp$_0, tmp$_1;
    var newValue = (value != null ? value.isActive : null) === true ? value != null ? value : Kotlin.throwNPE() : this.root;
    var oldFocused = this._focused;
    if (Kotlin.equals(oldFocused, newValue))
      return FocusChangeResult$UNCHANGED_getInstance();
    this.focusedChanging.dispatch_1llc0w$(oldFocused, newValue, this.focusedChangingCancel.reset());
    if (this.focusedChangingCancel.canceled())
      return FocusChangeResult$CANCELED_getInstance();
    this.unhighlightFocused();
    (tmp$_0 = (tmp$ = this._focused) != null ? tmp$.deactivated : null) != null ? tmp$_0.remove_trkh7z$(this.focusedDeactivatedHandler_ccmzfm$_0) : null;
    if (!newValue.isActive) {
      this._focused = null;
    }
     else {
      this._focused = newValue;
      _assert(((tmp$_1 = this._focused) != null ? tmp$_1 : Kotlin.throwNPE()).isActive);
      newValue.deactivated.add_trkh7z$(this.focusedDeactivatedHandler_ccmzfm$_0);
    }
    this.onFocusedChanged_wxft50$(oldFocused, newValue);
    this.focusedChanged.dispatch_xwzc9p$(oldFocused, this._focused);
    return FocusChangeResult$CHANGED_getInstance();
  };
  FocusManagerImpl.prototype.onFocusedChanged_wxft50$ = function (oldFocused, value) {
    oldFocused != null ? oldFocused.onBlurred() : null;
    value != null ? value.onFocused() : null;
  };
  FocusManagerImpl.prototype.nextFocusable = function () {
    var tmp$, tmp$_0;
    this.refreshFocusOrder();
    var index = indexOf_0(this.focusables, this._focused);
    tmp$ = get_lastIndex(this.focusables);
    for (var i = 1; i <= tmp$; i++) {
      var j = index + i | 0;
      if (j > get_lastIndex(this.focusables))
        j = j - this.focusables.size | 0;
      var element = this.focusables.get_za3lpa$(j);
      if (this.shouldFocus_ot5k3t$_0(element))
        return element;
    }
    return (tmp$_0 = this._focused) != null ? tmp$_0 : this.root;
  };
  FocusManagerImpl.prototype.previousFocusable = function () {
    var tmp$, tmp$_0;
    this.refreshFocusOrder();
    var index = indexOf_0(this.focusables, this._focused);
    tmp$ = get_lastIndex(this.focusables);
    for (var i = 1; i <= tmp$; i++) {
      var j = index - i | 0;
      if (j < 0)
        j = j + this.focusables.size | 0;
      var element = this.focusables.get_za3lpa$(j);
      if (this.shouldFocus_ot5k3t$_0(element))
        return element;
    }
    return (tmp$_0 = this._focused) != null ? tmp$_0 : this.root;
  };
  FocusManagerImpl.prototype.shouldFocus_ot5k3t$_0 = function (element) {
    return element.focusEnabled && element.isRendered() && this.canClick_ot5k3t$_0(element);
  };
  FocusManagerImpl.prototype.canClick_ot5k3t$_0 = function (element) {
    var tmp$;
    element.localToGlobal_9wm29k$(this.midPoint_ccmzfm$_0.set_y2kzbl$(element.width * element.scaleX * 0.5, element.height * element.scaleY * 0.5, 0.0));
    tmp$ = this.root.getChildUnderPoint_g1oyt7$(this.midPoint_ccmzfm$_0.x, this.midPoint_ccmzfm$_0.y, true);
    if (tmp$ == null) {
      return false;
    }
    var topChild = tmp$;
    return owns(element, topChild);
  };
  FocusManagerImpl.prototype.iterateFocusables_afwb3w$ = function (callback) {
    var tmp$;
    this.refreshFocusOrder();
    tmp$ = get_lastIndex(this.focusables);
    for (var i = 0; i <= tmp$; i++) {
      var shouldContinue = callback(this.focusables.get_za3lpa$(i));
      if (!shouldContinue)
        break;
    }
  };
  FocusManagerImpl.prototype.iterateFocusablesReversed_afwb3w$ = function (callback) {
    var tmp$;
    this.refreshFocusOrder();
    tmp$ = downTo(get_lastIndex(this.focusables), 0).iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      var shouldContinue = callback(this.focusables.get_za3lpa$(i));
      if (!shouldContinue)
        break;
    }
  };
  FocusManagerImpl.prototype.unhighlightFocused = function () {
    var tmp$;
    this.highlightIsChanging = true;
    (tmp$ = this._highlighted) != null ? (tmp$.highlight = null) : null;
    this._highlighted = null;
    this.highlightIsChanging = false;
  };
  FocusManagerImpl.prototype.highlightFocused = function () {
    var tmp$, tmp$_0;
    this.highlightIsChanging = true;
    this._highlighted = this.focused();
    (tmp$ = this._highlight_ccmzfm$_0) != null ? tmp$.moveTo_y2kzbl$(0.0, 0.0) : null;
    (tmp$_0 = this._highlighted) != null ? (tmp$_0.highlight = this._highlight_ccmzfm$_0) : null;
    this.highlightIsChanging = false;
  };
  FocusManagerImpl.prototype.refreshFocusOrder = function () {
    if (this._focusablesValid)
      return;
    this._focusablesValid = true;
    this.focusables.clear();
    var rootNode = FocusNode$Companion_getInstance().obtain();
    this.buildFocusTree_trsna0$_0(rootNode, this.root);
    rootNode.flatten_j7z1m0$(this.focusables);
    rootNode.free();
  };
  function FocusManagerImpl$buildFocusTree$lambda(closure$newParent, this$FocusManagerImpl) {
    return function (it) {
      this$FocusManagerImpl.buildFocusTree_trsna0$_0(closure$newParent, it);
      return true;
    };
  }
  FocusManagerImpl.prototype.buildFocusTree_trsna0$_0 = function (parent, layoutElement) {
    var tmp$;
    var newParent;
    if (Kotlin.isType(layoutElement, FocusContainer)) {
      var newNode = FocusNode$Companion_getInstance().obtain();
      newNode.focusOrder = layoutElement.focusOrder;
      newNode.focusable = Kotlin.isType(tmp$ = layoutElement, Focusable) ? tmp$ : null;
      newNode.childIndex = parent.children.size;
      parent.children.add_11rb$(newNode);
      newParent = newNode;
    }
     else if (Kotlin.isType(layoutElement, Focusable)) {
      var newNode_0 = FocusNode$Companion_getInstance().obtain();
      newNode_0.focusOrder = layoutElement.focusOrder;
      newNode_0.focusable = layoutElement;
      newNode_0.childIndex = parent.children.size;
      parent.children.add_11rb$(newNode_0);
      newParent = parent;
    }
     else {
      newParent = parent;
    }
    if (Kotlin.isType(layoutElement, Container)) {
      layoutElement.iterateChildren_bwf5pq$(FocusManagerImpl$buildFocusTree$lambda(newParent, this));
      if (Kotlin.isType(layoutElement, FocusContainer)) {
        sort(newParent.children);
      }
    }
  };
  FocusManagerImpl.prototype.dispose = function () {
    var tmp$, tmp$_0;
    this.unhighlightFocused();
    (tmp$_0 = (tmp$ = this._focused) != null ? tmp$.deactivated : null) != null ? tmp$_0.remove_trkh7z$(this.focusedDeactivatedHandler_ccmzfm$_0) : null;
    this.focusedChanged.dispose();
    this.focusedChanging.dispose();
    var root_0 = this._root;
    if (root_0 != null) {
      keyDown(root_0).remove_trkh7z$(this.rootKeyDownHandler_ccmzfm$_0);
      mouseDown(root_0, true).remove_trkh7z$(this.rootMouseDownHandler_ccmzfm$_0);
      root_0.invalidated.remove_trkh7z$(this.rootInvalidatedHandler_ccmzfm$_0);
      this._root = null;
    }
  };
  function FocusManagerImpl$rootKeyDownHandler$lambda(this$FocusManagerImpl) {
    return function (event) {
      if (!event.defaultPrevented() && event.keyCode === Ascii_getInstance().TAB) {
        event.preventDefault();
        if (event.shiftKey)
          this$FocusManagerImpl.focusPrevious();
        else
          this$FocusManagerImpl.focusNext();
        this$FocusManagerImpl.highlightFocused();
      }
    };
  }
  function FocusManagerImpl$rootMouseDownHandler$lambda(this$FocusManagerImpl) {
    return function (event) {
      var tmp$;
      var $receiver = (tmp$ = event.target) != null ? tmp$ : Kotlin.throwNPE();
      parentWalk$break: {
        var tmp$_0;
        var p = $receiver;
        while (p != null) {
          var this$FocusManagerImpl_0 = this$FocusManagerImpl;
          var it = p;
          var callback$result;
          if (Kotlin.isType(it, Focusable) && it.focusEnabled) {
            var changed = this$FocusManagerImpl_0.focused_nxm3zo$(it);
            if (changed === FocusChangeResult$CANCELED_getInstance()) {
              event.preventDefault();
            }
            callback$result = false;
          }
           else {
            callback$result = true;
          }
          var shouldContinue = callback$result;
          if (!shouldContinue)
            break parentWalk$break;
          p = (tmp$_0 = p.parent) == null || Kotlin.isType(tmp$_0, _.com.acornui.core.Child) ? tmp$_0 : Kotlin.throwCCE();
        }
      }
    };
  }
  function FocusManagerImpl$rootInvalidatedHandler$lambda(this$FocusManagerImpl) {
    return function (stage, flags) {
      if (!this$FocusManagerImpl.highlightIsChanging && (flags & ValidationFlags_getInstance().HIERARCHY_ASCENDING) > 0) {
        this$FocusManagerImpl._focusablesValid = false;
        var f = this$FocusManagerImpl._focused;
        if (f != null && (!f.focusEnabled || !f.visible))
          this$FocusManagerImpl.clearFocused();
      }
    };
  }
  function FocusManagerImpl$focusedDeactivatedHandler$lambda(this$FocusManagerImpl) {
    return function (it) {
      this$FocusManagerImpl.focused_nxm3zo$(null);
    };
  }
  FocusManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FocusManagerImpl',
    interfaces: [FocusManager]
  };
  function FocusNode() {
    FocusNode$Companion_getInstance();
    this.childIndex = 0;
    this.focusOrder = 0.0;
    this.focusable = null;
    this.children = ArrayList_init();
  }
  FocusNode.prototype.compareTo_11rb$ = function (other) {
    if (this.focusOrder === other.focusOrder)
      return Kotlin.primitiveCompareTo(this.childIndex, other.childIndex);
    return Kotlin.primitiveCompareTo(this.focusOrder, other.focusOrder);
  };
  FocusNode.prototype.flatten_j7z1m0$ = function (list) {
    var tmp$, tmp$_0;
    if (this.focusable != null) {
      list.add_11rb$((tmp$ = this.focusable) != null ? tmp$ : Kotlin.throwNPE());
    }
    tmp$_0 = get_lastIndex(this.children);
    for (var i = 0; i <= tmp$_0; i++) {
      this.children.get_za3lpa$(i).flatten_j7z1m0$(list);
    }
  };
  FocusNode.prototype.free = function () {
    var tmp$;
    tmp$ = get_lastIndex(this.children);
    for (var i = 0; i <= tmp$; i++) {
      this.children.get_za3lpa$(i).free();
    }
    this.children.clear();
    FocusNode$Companion_getInstance().pool_0.free_11rb$(this);
  };
  function FocusNode$Companion() {
    FocusNode$Companion_instance = this;
    this.pool_0 = new ObjectPool(void 0, FocusNode$Companion$pool$lambda);
  }
  FocusNode$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  function FocusNode$Companion$pool$lambda() {
    return new FocusNode();
  }
  FocusNode$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var FocusNode$Companion_instance = null;
  function FocusNode$Companion_getInstance() {
    if (FocusNode$Companion_instance === null) {
      new FocusNode$Companion();
    }
    return FocusNode$Companion_instance;
  }
  FocusNode.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FocusNode',
    interfaces: [Comparable]
  };
  function SimpleHighlight(owner, atlasPath, regionName, animate) {
    if (animate === void 0)
      animate = true;
    ContainerImpl.call(this, owner);
    this.animate_u0xvgh$_0 = animate;
    this.highlight_u0xvgh$_0 = this.addChild_mxweac$(atlas(this, atlasPath, regionName));
    this.interactivityMode = InteractivityMode$NONE_getInstance();
    this.includeInLayout = false;
  }
  SimpleHighlight.prototype.onActivated = function () {
    ContainerImpl.prototype.onActivated.call(this);
    if (this.animate_u0xvgh$_0) {
      this.highlight_u0xvgh$_0.alpha = 0.3;
      driveTween(this, tweenAlpha(this.highlight_u0xvgh$_0, 0.2, math_0.Easing.pow2Out, 1.0));
    }
  };
  SimpleHighlight.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    var w = explicitWidth != null ? explicitWidth : 0.0;
    var h = explicitHeight != null ? explicitHeight : 0.0;
    if (this.highlight_u0xvgh$_0.ninePatchComponent != null) {
      var nine = (tmp$ = this.highlight_u0xvgh$_0.ninePatchComponent) != null ? tmp$ : Kotlin.throwNPE();
      this.highlight_u0xvgh$_0.setSize_yxjqmk$(w + nine.splitLeft + nine.splitRight, h + nine.splitTop + nine.splitBottom);
      this.highlight_u0xvgh$_0.moveTo_y2kzbl$(-nine.splitLeft, -nine.splitTop);
    }
     else {
      this.highlight_u0xvgh$_0.setSize_yxjqmk$(w, h);
      this.highlight_u0xvgh$_0.moveTo_y2kzbl$(0.0, 0.0);
    }
  };
  SimpleHighlight.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'SimpleHighlight',
    interfaces: [ContainerImpl]
  };
  function AtlasComponent(owner) {
    AtlasComponent$Companion_getInstance();
    ElementContainerImpl.call(this, owner);
    this.region_39wwga$_0 = null;
    this.texture_39wwga$_0 = null;
    this._textureRegionBinding_39wwga$_0 = atlasRegionBinding(this, AtlasComponent$_textureRegionBinding$lambda(this));
    this._textureComponent_39wwga$_0 = null;
    this._ninePatchComponent_39wwga$_0 = null;
    this._textureC_39wwga$_0 = null;
  }
  AtlasComponent.prototype.clear = function () {
    var tmp$, tmp$_0;
    (tmp$ = this._textureComponent_39wwga$_0) != null ? (tmp$.texture = null) : null;
    (tmp$_0 = this._ninePatchComponent_39wwga$_0) != null ? (tmp$_0.texture = null) : null;
    this._textureRegionBinding_39wwga$_0.clear();
  };
  AtlasComponent.prototype.setRegion_puj7f4$ = function (atlasPath, regionName) {
    this._textureRegionBinding_39wwga$_0.setRegion_puj7f4$(atlasPath, regionName);
  };
  Object.defineProperty(AtlasComponent.prototype, 'ninePatchComponent', {
    get: function () {
      return this._ninePatchComponent_39wwga$_0;
    }
  });
  Object.defineProperty(AtlasComponent.prototype, 'textureComponent', {
    get: function () {
      return this._textureComponent_39wwga$_0;
    }
  });
  AtlasComponent.prototype.setRegionAndTexture_btap1a$_0 = function (texture, region) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    if (region.splits == null) {
      if (this._ninePatchComponent_39wwga$_0 != null) {
        ((tmp$ = this._ninePatchComponent_39wwga$_0) != null ? tmp$ : Kotlin.throwNPE()).dispose();
        this._ninePatchComponent_39wwga$_0 = null;
      }
      if (this._textureComponent_39wwga$_0 == null) {
        this._textureComponent_39wwga$_0 = this.unaryPlus_8db8yx$(textureC(this));
        this._textureC_39wwga$_0 = this._textureComponent_39wwga$_0;
      }
      var t = (tmp$_0 = this._textureComponent_39wwga$_0) != null ? tmp$_0 : Kotlin.throwNPE();
      t.isRotated = region.isRotated;
      t.setRegion_smhrz9$(region.bounds);
    }
     else {
      if (this._textureComponent_39wwga$_0 != null) {
        ((tmp$_1 = this._textureComponent_39wwga$_0) != null ? tmp$_1 : Kotlin.throwNPE()).dispose();
        this._textureComponent_39wwga$_0 = null;
      }
      if (this._ninePatchComponent_39wwga$_0 == null) {
        this._ninePatchComponent_39wwga$_0 = this.unaryPlus_8db8yx$(ninePatch(this));
        this._textureC_39wwga$_0 = this._ninePatchComponent_39wwga$_0;
      }
      var t_0 = (tmp$_2 = this._ninePatchComponent_39wwga$_0) != null ? tmp$_2 : Kotlin.throwNPE();
      var splits = (tmp$_3 = region.splits) != null ? tmp$_3 : Kotlin.throwNPE();
      t_0.split_7b5o5w$(this.positive_gjtiwm$_0(splits[0] - region.padding[0]), this.positive_gjtiwm$_0(splits[1] - region.padding[1]), this.positive_gjtiwm$_0(splits[2] - region.padding[2]), this.positive_gjtiwm$_0(splits[3] - region.padding[3]));
      t_0.setRegion_vyn4n2$(region.bounds, region.isRotated);
    }
    (tmp$_4 = this._textureComponent_39wwga$_0) != null ? (tmp$_4.texture = texture) : null;
    (tmp$_5 = this._ninePatchComponent_39wwga$_0) != null ? (tmp$_5.texture = texture) : null;
    this.region_39wwga$_0 = region;
    this.texture_39wwga$_0 = texture;
  };
  AtlasComponent.prototype.positive_gjtiwm$_0 = function ($receiver) {
    return $receiver < 0.0 ? 0.0 : $receiver;
  };
  AtlasComponent.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$;
    if (this._textureC_39wwga$_0 == null)
      return;
    out.bound_mby7og$(((tmp$ = this._textureC_39wwga$_0) != null ? tmp$ : Kotlin.throwNPE()).sizeConstraints);
  };
  AtlasComponent.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = this._textureC_39wwga$_0;
    if (tmp$ == null) {
      return;
    }
    var textureC_2 = tmp$;
    tmp$_0 = this.region_39wwga$_0;
    if (tmp$_0 == null) {
      return;
    }
    var region = tmp$_0;
    var regionWidth = region.isRotated ? region.bounds.height : region.bounds.width;
    var regionHeight = region.isRotated ? region.bounds.width : region.bounds.height;
    var paddingLeft = region.padding[0];
    var paddingTop = region.padding[1];
    var paddingRight = region.padding[2];
    var paddingBottom = region.padding[3];
    var splits = (tmp$_1 = region.splits) != null ? tmp$_1 : AtlasComponent$Companion_getInstance().EMPTY_SPLITS_0;
    var b = splits[0];
    var unscaledPadLeft = Math.min(paddingLeft, b);
    var b_0 = splits[1];
    var unscaledPadTop = Math.min(paddingTop, b_0);
    var b_1 = splits[2];
    var unscaledPadRight = Math.min(paddingRight, b_1);
    var b_2 = splits[3];
    var unscaledPadBottom = Math.min(paddingBottom, b_2);
    var scaledPadLeft = paddingLeft - unscaledPadLeft;
    var scaledPadTop = paddingTop - unscaledPadTop;
    var scaledPadRight = paddingRight - unscaledPadRight;
    var scaledPadBottom = paddingBottom - unscaledPadBottom;
    var naturalWidth = paddingLeft + regionWidth + paddingRight;
    var naturalHeight = paddingBottom + regionHeight + paddingTop;
    var uH = splits[0] + splits[2];
    var uV = splits[1] + splits[3];
    var sX = explicitWidth == null ? 1.0 : (explicitWidth - uH) / (naturalWidth - uH);
    var sY = explicitHeight == null ? 1.0 : (explicitHeight - uV) / (naturalHeight - uV);
    var totalPadLeft = unscaledPadLeft + scaledPadLeft * sX;
    var totalPadTop = unscaledPadTop + scaledPadTop * sY;
    var totalPadRight = unscaledPadRight + scaledPadRight * sX;
    var totalPadBottom = unscaledPadBottom + scaledPadBottom * sY;
    textureC_2.setSize_yxjqmk$(explicitWidth == null ? null : explicitWidth - totalPadLeft - totalPadRight, explicitHeight == null ? null : explicitHeight - totalPadBottom - totalPadTop);
    textureC_2.moveTo_y2kzbl$(totalPadLeft, totalPadTop);
    out.set_dleff0$(explicitWidth != null ? explicitWidth : naturalWidth, explicitHeight != null ? explicitHeight : naturalHeight);
  };
  AtlasComponent.prototype.dispose = function () {
    this.clear();
    ElementContainerImpl.prototype.dispose.call(this);
  };
  function AtlasComponent$Companion() {
    AtlasComponent$Companion_instance = this;
    this.EMPTY_SPLITS_0 = [0.0, 0.0, 0.0, 0.0];
  }
  AtlasComponent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AtlasComponent$Companion_instance = null;
  function AtlasComponent$Companion_getInstance() {
    if (AtlasComponent$Companion_instance === null) {
      new AtlasComponent$Companion();
    }
    return AtlasComponent$Companion_instance;
  }
  function AtlasComponent$_textureRegionBinding$lambda(this$AtlasComponent) {
    return function (texture, region) {
      this$AtlasComponent.setRegionAndTexture_btap1a$_0(texture, region);
    };
  }
  AtlasComponent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AtlasComponent',
    interfaces: [Clearable, ElementContainerImpl]
  };
  function atlas$lambda($receiver) {
  }
  function atlas_0($receiver, init) {
    if (init === void 0)
      init = atlas$lambda;
    var a = new AtlasComponent($receiver);
    init(a);
    return a;
  }
  function atlas$lambda_0($receiver) {
  }
  function atlas($receiver, atlas_1, region, init) {
    if (init === void 0)
      init = atlas$lambda_0;
    var a = new AtlasComponent($receiver);
    a.setRegion_puj7f4$(atlas_1, region);
    init(a);
    return a;
  }
  function contentsAtlas($receiver, atlas_1, region) {
    var existing;
    var contents = $receiver.getElementAt_za3lpa$(0);
    if (!Kotlin.isType(contents, AtlasComponent)) {
      $receiver.removeElement_erfg6z$(contents);
      contents != null ? contents.dispose() : null;
      existing = atlas_0($receiver);
      $receiver.addElement_mxweac$(existing);
    }
     else {
      existing = contents;
    }
    existing.setRegion_puj7f4$(atlas_1, region);
  }
  function AtlasPageDecorator(page) {
    this.page = page;
  }
  AtlasPageDecorator.prototype.decorate_11rb$ = function (target) {
    target.pixelFormat = this.page.pixelFormat;
    target.filterMin = this.page.filterMin;
    target.filterMag = this.page.filterMag;
    target.hasWhitePixel = this.page.hasWhitePixel;
    return target;
  };
  AtlasPageDecorator.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AtlasPageDecorator',
    interfaces: [Decorator]
  };
  AtlasPageDecorator.prototype.component1 = function () {
    return this.page;
  };
  AtlasPageDecorator.prototype.copy_3odamm$ = function (page) {
    return new AtlasPageDecorator(page === void 0 ? this.page : page);
  };
  AtlasPageDecorator.prototype.toString = function () {
    return 'AtlasPageDecorator(page=' + Kotlin.toString(this.page) + ')';
  };
  AtlasPageDecorator.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.page) | 0;
    return result;
  };
  AtlasPageDecorator.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.page, other.page))));
  };
  function AtlasRegionBinding(injector, onChanged_0) {
    this.injector_90w3su$_0 = injector;
    this.onChanged = onChanged_0;
    this.regionName_0 = null;
    this.textureAtlasBinding_0 = jsonBinding(this, TextureAtlasDataSerializer_getInstance(), AtlasRegionBinding$textureAtlasBinding$lambda(this));
    this.textureBinding_0 = null;
  }
  Object.defineProperty(AtlasRegionBinding.prototype, 'injector', {
    get: function () {
      return this.injector_90w3su$_0;
    }
  });
  AtlasRegionBinding.prototype.setRegion_puj7f4$ = function (atlasPath, regionName) {
    this.clear();
    this.regionName_0 = regionName;
    this.textureAtlasBinding_0.path = atlasPath;
  };
  function AtlasRegionBinding$setTextureAtlasData$lambda(this$AtlasRegionBinding) {
    return function (texture, region) {
      this$AtlasRegionBinding.onChanged(texture, region);
    };
  }
  AtlasRegionBinding.prototype.setTextureAtlasData_0 = function (textureAtlasData) {
    var tmp$, tmp$_0, tmp$_1;
    (tmp$ = this.textureBinding_0) != null ? tmp$.dispose() : null;
    this.textureBinding_0 = atlasPageTextureBinding(this, (tmp$_0 = this.textureAtlasBinding_0.path) != null ? tmp$_0 : Kotlin.throwNPE(), textureAtlasData, (tmp$_1 = this.regionName_0) != null ? tmp$_1 : Kotlin.throwNPE(), AtlasRegionBinding$setTextureAtlasData$lambda(this));
  };
  AtlasRegionBinding.prototype.clear = function () {
    var tmp$;
    this.regionName_0 = null;
    (tmp$ = this.textureBinding_0) != null ? tmp$.clear() : null;
    this.textureAtlasBinding_0.clear();
  };
  AtlasRegionBinding.prototype.dispose = function () {
    this.clear();
  };
  function AtlasRegionBinding$textureAtlasBinding$lambda(this$AtlasRegionBinding) {
    return function (textureAtlasData) {
      this$AtlasRegionBinding.setTextureAtlasData_0(textureAtlasData);
    };
  }
  AtlasRegionBinding.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AtlasRegionBinding',
    interfaces: [Disposable, Clearable, Scoped]
  };
  function atlasRegionBinding($receiver, onChanged_0) {
    return new AtlasRegionBinding($receiver.injector, onChanged_0);
  }
  function atlasRegionBinding_0($receiver, atlasPath, regionName, onChanged_0) {
    var b = new AtlasRegionBinding($receiver.injector, onChanged_0);
    b.setRegion_puj7f4$(atlasPath, regionName);
    return b;
  }
  function atlasPageTextureBinding$lambda(closure$onChanged, closure$region) {
    return function (texture) {
      closure$onChanged(texture, closure$region);
    };
  }
  function atlasPageTextureBinding($receiver, atlasPath, textureAtlasData, regionName, onChanged_0) {
    var pageAndRegion = textureAtlasData.findRegion_61zpoe$(regionName);
    if (pageAndRegion == null) {
      logging_0.Log.warn_s8jyv4$("Region '" + regionName + "' not found in atlas.");
      return null;
    }
     else {
      var tmp$ = pageAndRegion
      , page = tmp$.component1()
      , region = tmp$.component2();
      var textureBinding = atlasPageBinding($receiver, atlasPath, page, atlasPageTextureBinding$lambda(onChanged_0, region));
      return textureBinding;
    }
  }
  function atlasPageBinding($receiver, atlasPath, page, onChanged_0) {
    var tmp$, tmp$_0;
    var files = inject($receiver, Files$Companion_getInstance());
    tmp$ = files.getFile_61zpoe$(atlasPath);
    if (tmp$ == null) {
      throw new Exception('File not found: ' + atlasPath);
    }
    var atlasFile = tmp$;
    tmp$_0 = atlasFile.siblingFile_61zpoe$(page.texturePath);
    if (tmp$_0 == null) {
      throw new Exception('File not found: ' + page.texturePath + ' relative to: ' + atlasFile.parent.path);
    }
    var textureFile = tmp$_0;
    var textureBinding = assetBinding_0($receiver, AssetTypes_getInstance().TEXTURE, new AtlasPageDecorator(page), onChanged_0);
    textureBinding.path = textureFile.path;
    return textureBinding;
  }
  function BlendMode(source, sourcePma, dest, name) {
    BlendMode$Companion_getInstance();
    this.source = source;
    this.sourcePma = sourcePma;
    this.dest = dest;
    this.name = name;
  }
  function BlendMode$Companion() {
    BlendMode$Companion_instance = this;
    this.NONE = new BlendMode(0, 0, 0, 'none');
    this.NORMAL = new BlendMode(Gl20$Companion_getInstance().SRC_ALPHA, Gl20$Companion_getInstance().ONE, Gl20$Companion_getInstance().ONE_MINUS_SRC_ALPHA, 'normal');
    this.ADDITIVE = new BlendMode(Gl20$Companion_getInstance().SRC_ALPHA, Gl20$Companion_getInstance().ONE, Gl20$Companion_getInstance().ONE, 'additive');
    this.MULTIPLY = new BlendMode(Gl20$Companion_getInstance().DST_COLOR, Gl20$Companion_getInstance().DST_COLOR, Gl20$Companion_getInstance().ONE_MINUS_SRC_ALPHA, 'multiply');
    this.INVERTED = new BlendMode(Gl20$Companion_getInstance().ONE_MINUS_DST_ALPHA, Gl20$Companion_getInstance().ONE_MINUS_DST_ALPHA, Gl20$Companion_getInstance().ONE_MINUS_SRC_ALPHA, 'inverted');
    this.SCREEN = new BlendMode(Gl20$Companion_getInstance().ONE, Gl20$Companion_getInstance().ONE, Gl20$Companion_getInstance().ONE_MINUS_SRC_COLOR, 'screen');
  }
  BlendMode$Companion.prototype.fromStr_pdl1vj$ = function (name) {
    var tmp$, tmp$_0;
    if (name == null)
      return null;
    tmp$ = name.toLowerCase();
    if (Kotlin.equals(tmp$, 'none'))
      tmp$_0 = this.NONE;
    else if (Kotlin.equals(tmp$, 'normal'))
      tmp$_0 = this.NORMAL;
    else if (Kotlin.equals(tmp$, 'additive'))
      tmp$_0 = this.ADDITIVE;
    else if (Kotlin.equals(tmp$, 'multiply'))
      tmp$_0 = this.MULTIPLY;
    else if (Kotlin.equals(tmp$, 'inverted'))
      tmp$_0 = this.INVERTED;
    else if (Kotlin.equals(tmp$, 'screen'))
      tmp$_0 = this.SCREEN;
    else
      tmp$_0 = null;
    return tmp$_0;
  };
  BlendMode$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var BlendMode$Companion_instance = null;
  function BlendMode$Companion_getInstance() {
    if (BlendMode$Companion_instance === null) {
      new BlendMode$Companion();
    }
    return BlendMode$Companion_instance;
  }
  BlendMode.prototype.applyBlending_f5llkw$ = function (gl_0, premultipliedAlpha) {
    gl_0.blendFunc_vux9f0$(premultipliedAlpha ? this.sourcePma : this.source, this.dest);
  };
  BlendMode.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BlendMode',
    interfaces: []
  };
  function Camera() {
    Camera$Companion_getInstance();
  }
  Object.defineProperty(Camera.prototype, 'aspect', {
    get: function () {
      return this.viewportWidth / this.viewportHeight;
    }
  });
  Camera.prototype.update_6taknv$ = function (updateFrustum, callback$default) {
    if (updateFrustum === void 0)
      updateFrustum = true;
    callback$default ? callback$default(updateFrustum) : this.update_6taknv$$default(updateFrustum);
  };
  Camera.prototype.setViewport_dleff0$ = function (width, height) {
    var max_sdesaw$result;
    if (Kotlin.compareTo(1.0, width) >= 0) {
      max_sdesaw$result = 1.0;
    }
     else {
      max_sdesaw$result = width;
    }
    this.viewportWidth = max_sdesaw$result;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(1.0, height) >= 0) {
      max_sdesaw$result_0 = 1.0;
    }
     else {
      max_sdesaw$result_0 = height;
    }
    this.viewportHeight = max_sdesaw$result_0;
  };
  Camera.prototype.setDirection_9wm29k$ = function (value) {
    this.setDirection_y2kzbl$(value.x, value.y, value.z);
  };
  Camera.prototype.pointToLookAt_9wm29k$ = function (target) {
    this.pointToLookAt_y2kzbl$(target.x, target.y, target.z);
  };
  Camera.prototype.moveToLookAtPoint_7b5o5w$ = function (x, y, z, distance, callback$default) {
    if (distance === void 0)
      distance = 1.0;
    callback$default ? callback$default(x, y, z, distance) : this.moveToLookAtPoint_7b5o5w$$default(x, y, z, distance);
  };
  Camera.prototype.moveToLookAtRect_j02c0$$default = function (rect_1, scaling) {
    this.moveToLookAtRect_81m47f$(rect_1.x, rect_1.y, rect_1.width, rect_1.height, scaling);
  };
  Camera.prototype.moveToLookAtRect_j02c0$ = function (rect_1, scaling, callback$default) {
    if (scaling === void 0)
      scaling = Scaling$FIT_getInstance();
    callback$default ? callback$default(rect_1, scaling) : this.moveToLookAtRect_j02c0$$default(rect_1, scaling);
  };
  Camera.prototype.moveToLookAtRect_81m47f$ = function (x, y, width, height, scaling, callback$default) {
    if (scaling === void 0)
      scaling = Scaling$FIT_getInstance();
    callback$default ? callback$default(x, y, width, height, scaling) : this.moveToLookAtRect_81m47f$$default(x, y, width, height, scaling);
  };
  function Camera$Companion() {
    Camera$Companion_instance = this;
  }
  Camera$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Camera$Companion_instance = null;
  function Camera$Companion_getInstance() {
    if (Camera$Companion_instance === null) {
      new Camera$Companion();
    }
    return Camera$Companion_instance;
  }
  Camera.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Camera',
    interfaces: [Disposable]
  };
  function CameraBase(window_0) {
    this.window_lu90ha$_0 = window_0;
    this.combined_lu90ha$_0 = new Matrix4();
    this.modTag_lu90ha$_0 = new ModTagImpl();
    this.position_lu90ha$_0 = new Vector3();
    this.direction_lu90ha$_0 = new Vector3(0.0, 0.0, 1.0);
    this.up_lu90ha$_0 = new Vector3(0.0, -1.0, 0.0);
    this.projection_lu90ha$_0 = new Matrix4();
    this.view_lu90ha$_0 = new Matrix4();
    this.near_lu90ha$_0 = 1.0;
    this.far_lu90ha$_0 = 3000.0;
    this.viewportWidth_lu90ha$_0 = 1.0;
    this.viewportHeight_lu90ha$_0 = 1.0;
    this.frustum_lu90ha$_0 = new Frustum();
    this.invCombined_lu90ha$_0 = new Matrix4();
    this._autoCenter_lu90ha$_0 = true;
    this.tmpVec_lu90ha$_0 = new Vector3();
    this.windowResizedHandler_lu90ha$_0 = CameraBase$windowResizedHandler$lambda(this);
    this.window_lu90ha$_0.sizeChanged.add_trkh7z$(this.windowResizedHandler_lu90ha$_0);
  }
  Object.defineProperty(CameraBase.prototype, 'combined', {
    get: function () {
      return this.combined_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'modTag', {
    get: function () {
      return this.modTag_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'position', {
    get: function () {
      return this.position_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'direction', {
    get: function () {
      return this.direction_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'up', {
    get: function () {
      return this.up_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'projection', {
    get: function () {
      return this.projection_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'view', {
    get: function () {
      return this.view_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'near', {
    get: function () {
      return this.near_lu90ha$_0;
    },
    set: function (near) {
      this.near_lu90ha$_0 = near;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'far', {
    get: function () {
      return this.far_lu90ha$_0;
    },
    set: function (far) {
      this.far_lu90ha$_0 = far;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'viewportWidth', {
    get: function () {
      return this.viewportWidth_lu90ha$_0;
    },
    set: function (viewportWidth) {
      this.viewportWidth_lu90ha$_0 = viewportWidth;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'viewportHeight', {
    get: function () {
      return this.viewportHeight_lu90ha$_0;
    },
    set: function (viewportHeight) {
      this.viewportHeight_lu90ha$_0 = viewportHeight;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'frustum', {
    get: function () {
      return this.frustum_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'invCombined', {
    get: function () {
      return this.invCombined_lu90ha$_0;
    }
  });
  Object.defineProperty(CameraBase.prototype, 'autoCenter', {
    get: function () {
      return this._autoCenter_lu90ha$_0;
    },
    set: function (value) {
      if (Kotlin.equals(this._autoCenter_lu90ha$_0, value))
        return;
      this._autoCenter_lu90ha$_0 = value;
      if (value)
        this.window_lu90ha$_0.sizeChanged.add_trkh7z$(this.windowResizedHandler_lu90ha$_0);
      else
        this.window_lu90ha$_0.sizeChanged.remove_trkh7z$(this.windowResizedHandler_lu90ha$_0);
    }
  });
  CameraBase.prototype.setDirection_y2kzbl$ = function (x, y, z) {
    this.tmpVec_lu90ha$_0.set_y2kzbl$(x, y, z);
    if (!this.tmpVec_lu90ha$_0.isZero()) {
      var dot = this.tmpVec_lu90ha$_0.dot_1fv2cb$(this.up);
      if (math_0.MathUtils.isZero_dleff0$(dot - 1)) {
        this.up.set_1fv2cb$(this.direction).scl_mx4ult$(-1.0);
      }
       else if (math_0.MathUtils.isZero_dleff0$(dot + 1)) {
        this.up.set_1fv2cb$(this.direction);
      }
      this.direction.set_1fv2cb$(this.tmpVec_lu90ha$_0);
      this.normalizeUp();
    }
  };
  CameraBase.prototype.pointToLookAt_y2kzbl$ = function (x, y, z) {
    this.setDirection_y2kzbl$(x - this.position.x, y - this.position.y, z - this.position.z);
  };
  CameraBase.prototype.normalizeUp = function () {
    this.tmpVec_lu90ha$_0.set_1fv2cb$(this.direction).crs_1fv2cb$(this.up).nor();
    this.up.set_1fv2cb$(this.tmpVec_lu90ha$_0).crs_1fv2cb$(this.direction).nor();
  };
  CameraBase.prototype.rotate_7b5o5w$ = function (radians, axisX, axisY, axisZ) {
    this.direction.rotateRad_7b5o5w$(radians, axisX, axisY, axisZ);
    this.up.rotateRad_7b5o5w$(radians, axisX, axisY, axisZ);
  };
  CameraBase.prototype.rotate_wscm5v$ = function (axis, radians) {
    this.direction.rotateRad_pz1gqy$(axis, radians);
    this.up.rotateRad_pz1gqy$(axis, radians);
  };
  CameraBase.prototype.rotate_mx4ult$ = function (radians) {
    this.rotate_wscm5v$(this.direction, radians);
  };
  CameraBase.prototype.rotate_1ktw39$ = function (transform_0) {
    this.direction.rot_1ktw39$(transform_0);
    this.up.rot_1ktw39$(transform_0);
  };
  CameraBase.prototype.rotate_sa462$ = function (quat_0) {
    quat_0.transform_9wm29k$(this.direction);
    quat_0.transform_9wm29k$(this.up);
  };
  CameraBase.prototype.rotateAround_8negsv$ = function (point, axis, radians) {
    this.tmpVec_lu90ha$_0.set_1fv2cb$(point);
    this.tmpVec_lu90ha$_0.sub_1fv2cb$(this.position);
    this.translate_9wm29k$(this.tmpVec_lu90ha$_0);
    this.rotate_wscm5v$(axis, radians);
    this.tmpVec_lu90ha$_0.rotateRad_pz1gqy$(axis, radians);
    this.translate_y2kzbl$(-this.tmpVec_lu90ha$_0.x, -this.tmpVec_lu90ha$_0.y, -this.tmpVec_lu90ha$_0.z);
  };
  CameraBase.prototype.transform_1ktw39$ = function (transform_0) {
    this.position.mul_1ktw39$(transform_0);
    this.rotate_1ktw39$(transform_0);
  };
  CameraBase.prototype.translate_y2kzbl$ = function (x, y, z) {
    if (z === void 0)
      z = 0.0;
    this.position.add_y2kzbl$(x, y, z);
  };
  CameraBase.prototype.translate_9wm29k$ = function (vec) {
    this.position.add_1fv2cb$(vec);
  };
  CameraBase.prototype.translate_9wm29l$ = function (vec) {
    this.translate_y2kzbl$(vec.x, vec.y);
  };
  CameraBase.prototype.canvasToGlobal_9wm29k$ = function (canvasCoords) {
    this.canvasToGlobal_pn9x3c$(canvasCoords, 0.0, 0.0, this.window_lu90ha$_0.getWidth(), this.window_lu90ha$_0.getHeight());
    return canvasCoords;
  };
  CameraBase.prototype.canvasToGlobal_pn9x3c$ = function (canvasCoords, viewportX, viewportY, viewportWidth, viewportHeight) {
    canvasCoords.x = 2.0 * (canvasCoords.x - viewportX) / viewportWidth - 1.0;
    canvasCoords.y = -2.0 * (canvasCoords.y - viewportY) / viewportHeight + 1.0;
    canvasCoords.z = 2.0 * canvasCoords.z - 1.0;
    this.invCombined.prj_9wm29k$(canvasCoords);
    return canvasCoords;
  };
  CameraBase.prototype.project_9wm29k$ = function (globalCoords) {
    this.project_pn9x3c$(globalCoords, 0.0, 0.0, this.window_lu90ha$_0.getWidth(), this.window_lu90ha$_0.getHeight());
    return globalCoords;
  };
  CameraBase.prototype.project_pn9x3c$ = function (globalCoords, viewportX, viewportY, viewportWidth, viewportHeight) {
    this.combined.prj_9wm29k$(globalCoords);
    globalCoords.x = viewportWidth * (globalCoords.x + 1.0) * 0.5 + viewportX;
    globalCoords.y = viewportHeight * (-globalCoords.y + 1.0) * 0.5 + viewportY;
    globalCoords.z = (globalCoords.z + 1.0) * 0.5;
    return globalCoords;
  };
  CameraBase.prototype.getPickRay_jj6qim$ = function (canvasX, canvasY, viewportX, viewportY, viewportWidth, viewportHeight, out) {
    this.canvasToGlobal_pn9x3c$(out.origin.set_y2kzbl$(canvasX, canvasY, -1.0), viewportX, viewportY, viewportWidth, viewportHeight);
    this.canvasToGlobal_pn9x3c$(out.direction.set_y2kzbl$(canvasX, canvasY, 0.0), viewportX, viewportY, viewportWidth, viewportHeight);
    out.direction.sub_1fv2cb$(out.origin);
    out.update();
    return out;
  };
  CameraBase.prototype.getPickRay_7zdu66$ = function (canvasX, canvasY, out) {
    return this.getPickRay_jj6qim$(canvasX, canvasY, 0.0, 0.0, this.window_lu90ha$_0.getWidth(), this.window_lu90ha$_0.getHeight(), out);
  };
  CameraBase.prototype.moveToLookAtPoint_7b5o5w$$default = function (x, y, z, distance) {
    this.tmpVec_lu90ha$_0.set_1fv2cb$(this.direction).scl_mx4ult$(distance);
    this.position.set_y2kzbl$(x, y, z).sub_1fv2cb$(this.tmpVec_lu90ha$_0);
  };
  CameraBase.prototype.centerCamera = function () {
    var y = this.window_lu90ha$_0.getWidth();
    var max_sdesaw$result;
    if (Kotlin.compareTo(1.0, y) >= 0) {
      max_sdesaw$result = 1.0;
    }
     else {
      max_sdesaw$result = y;
    }
    var width = max_sdesaw$result;
    var y_0 = this.window_lu90ha$_0.getHeight();
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(1.0, y_0) >= 0) {
      max_sdesaw$result_0 = 1.0;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    var height = max_sdesaw$result_0;
    this.setViewport_dleff0$(width, height);
    this.moveToLookAtRect_81m47f$(0.0, 0.0, width, height);
  };
  CameraBase.prototype.dispose = function () {
    this.autoCenter = false;
  };
  function CameraBase$windowResizedHandler$lambda(this$CameraBase) {
    return function (newWidth, newHeight, isUserInteraction) {
      this$CameraBase.centerCamera();
      this$CameraBase.update_6taknv$();
    };
  }
  CameraBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CameraBase',
    interfaces: [Camera]
  };
  function OrthographicCamera(window_0) {
    CameraBase.call(this, window_0);
    this.zoom = 1.0;
    this.tmp_0 = new Vector3();
    this.tmp2_0 = new Vector2();
    this.near = -1.0;
    this.centerCamera();
    this.update_6taknv$();
  }
  OrthographicCamera.prototype.update_6taknv$$default = function (updateFrustum) {
    setToOrtho(this.projection, this.zoom * -this.viewportWidth / 2.0, this.zoom * this.viewportWidth / 2.0, this.zoom * -this.viewportHeight / 2.0, this.zoom * this.viewportHeight / 2.0, this.near, this.far);
    this.view.setToLookAt_qeea63$(this.position, this.tmp_0.set_1fv2cb$(this.position).add_1fv2cb$(this.direction), this.up);
    this.combined.set_1ktw39$(this.projection);
    this.combined.mul_1ktw39$(this.view);
    if (updateFrustum) {
      this.invCombined.set_1ktw39$(this.combined);
      this.invCombined.inv();
      this.frustum.update_1ktw39$(this.invCombined);
    }
    this.modTag.increment();
  };
  OrthographicCamera.prototype.moveToLookAtRect_81m47f$$default = function (x, y, width, height, scaling) {
    scaling.apply_kjsed5$(this.viewportWidth, this.viewportHeight, width, height, this.tmp2_0);
    var tmp$ = this.tmp2_0
    , newW = tmp$.component1()
    , newH = tmp$.component2();
    this.zoom = this.viewportWidth === 0.0 ? 0.0 : newW / this.viewportWidth;
    this.position.set_y2kzbl$(x + newW * 0.5, y + newH * 0.5, 0.0);
  };
  OrthographicCamera.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'OrthographicCamera',
    interfaces: [CameraBase]
  };
  function orthographicCamera$lambda($receiver) {
  }
  function orthographicCamera($receiver, init) {
    if (init === void 0)
      init = orthographicCamera$lambda;
    var p = new OrthographicCamera(inject($receiver, Window$Companion_getInstance()));
    init(p);
    return p;
  }
  function setToOrtho($receiver, left, right, bottom, top, near, far) {
    $receiver.idt();
    var x_orth = 2.0 / (right - left);
    var y_orth = 2.0 / (top - bottom);
    var z_orth = -2.0 / (far - near);
    var tx = -(right + left) / (right - left);
    var ty = -(top + bottom) / (top - bottom);
    var tz = -(far + near) / (far - near);
    $receiver.values[0] = x_orth;
    $receiver.values[1] = 0.0;
    $receiver.values[2] = 0.0;
    $receiver.values[3] = 0.0;
    $receiver.values[4] = 0.0;
    $receiver.values[5] = y_orth;
    $receiver.values[6] = 0.0;
    $receiver.values[7] = 0.0;
    $receiver.values[8] = 0.0;
    $receiver.values[9] = 0.0;
    $receiver.values[10] = z_orth;
    $receiver.values[11] = 0.0;
    $receiver.values[12] = tx;
    $receiver.values[13] = ty;
    $receiver.values[14] = tz;
    $receiver.values[15] = 1.0;
    return $receiver;
  }
  function PerspectiveCamera(window_0) {
    CameraBase.call(this, window_0);
    this.fieldOfView = 67.0 * math_0.MathUtils.degRad;
    this.tmp_0 = new Vector3();
    this.tmp2_0 = new Vector2();
    this.centerCamera();
    this.update_6taknv$();
  }
  PerspectiveCamera.prototype.update_6taknv$$default = function (updateFrustum) {
    var aspect = this.viewportWidth / this.viewportHeight;
    var tmp$ = this.projection;
    var value = this.near;
    var tmp$_0 = value < 0.0 ? -value : value;
    var value_0 = this.far;
    setToProjection(tmp$, tmp$_0, value_0 < 0.0 ? -value_0 : value_0, this.fieldOfView, aspect);
    this.view.setToLookAt_qeea63$(this.position, this.tmp_0.set_1fv2cb$(this.position).add_1fv2cb$(this.direction), this.up);
    this.combined.set_1ktw39$(this.projection);
    this.combined.mul_1ktw39$(this.view);
    if (updateFrustum) {
      this.invCombined.set_1ktw39$(this.combined);
      this.invCombined.inv();
      this.frustum.update_1ktw39$(this.invCombined);
    }
    this.modTag.increment();
  };
  PerspectiveCamera.prototype.moveToLookAtRect_81m47f$$default = function (x, y, width, height, scaling) {
    scaling.apply_kjsed5$(this.viewportWidth, this.viewportHeight, width, height, this.tmp2_0);
    var tmp$ = this.tmp2_0
    , newW = tmp$.component1()
    , newH = tmp$.component2();
    var distance = newH * 0.5 / math_0.MathUtils.tan_mx4ult$(this.fieldOfView * 0.5);
    this.moveToLookAtPoint_7b5o5w$(x + newW * 0.5, y + newH * 0.5, 0.0, distance);
  };
  PerspectiveCamera.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PerspectiveCamera',
    interfaces: [CameraBase]
  };
  function perspectiveCamera$lambda($receiver) {
  }
  function perspectiveCamera($receiver, init) {
    if (init === void 0)
      init = perspectiveCamera$lambda;
    var p = new PerspectiveCamera(inject($receiver, Window$Companion_getInstance()));
    init(p);
    return p;
  }
  function setToProjection($receiver, near, far, fovy, aspectRatio) {
    $receiver.idt();
    var l_fd = 1.0 / Math.tan(fovy / 2.0);
    var l_a1 = (far + near) / (near - far);
    var l_a2 = 2 * far * near / (near - far);
    $receiver.values[0] = l_fd / aspectRatio;
    $receiver.values[1] = 0.0;
    $receiver.values[2] = 0.0;
    $receiver.values[3] = 0.0;
    $receiver.values[4] = 0.0;
    $receiver.values[5] = l_fd;
    $receiver.values[6] = 0.0;
    $receiver.values[7] = 0.0;
    $receiver.values[8] = 0.0;
    $receiver.values[9] = 0.0;
    $receiver.values[10] = l_a1;
    $receiver.values[11] = -1.0;
    $receiver.values[12] = 0.0;
    $receiver.values[13] = 0.0;
    $receiver.values[14] = l_a2;
    $receiver.values[15] = 0.0;
    return $receiver;
  }
  function RgbData(width, height, hasAlpha) {
    this.hasAlpha = hasAlpha;
    this.INV_BYTE_0 = 1.0 / 255.0;
    this._width_0 = width;
    this._height_0 = height;
    this.numBands = this.hasAlpha ? 4 : 3;
    this._scanSize_0 = Kotlin.imul(this._width_0, this.numBands);
    this._bytes_0 = Kotlin.newArray(Kotlin.imul(Kotlin.imul(this._width_0, this._height_0), this.numBands), 0);
  }
  Object.defineProperty(RgbData.prototype, 'width', {
    get: function () {
      return this._width_0;
    }
  });
  Object.defineProperty(RgbData.prototype, 'height', {
    get: function () {
      return this._height_0;
    }
  });
  Object.defineProperty(RgbData.prototype, 'bytes', {
    get: function () {
      return this._bytes_0;
    }
  });
  Object.defineProperty(RgbData.prototype, 'scanSize', {
    get: function () {
      return this._scanSize_0;
    }
  });
  RgbData.prototype.get_za3lpa$ = function (index) {
    return this._bytes_0[index];
  };
  RgbData.prototype.set_6t1wet$ = function (index, value) {
    this._bytes_0[index] = value;
  };
  Object.defineProperty(RgbData.prototype, 'lastIndex', {
    get: function () {
      return get_lastIndex_1(this._bytes_0);
    }
  });
  RgbData.prototype.getPixel_k1xbfi$ = function (x, y, out) {
    var tmp$, tmp$_0, tmp$_1;
    var i = Kotlin.imul(y, this._scanSize_0) + Kotlin.imul(x, this.numBands) | 0;
    out.r = this.toFloatRange_0(this._bytes_0[tmp$ = i, i = tmp$ + 1 | 0, tmp$]);
    out.g = this.toFloatRange_0(this._bytes_0[tmp$_0 = i, i = tmp$_0 + 1 | 0, tmp$_0]);
    out.b = this.toFloatRange_0(this._bytes_0[tmp$_1 = i, i = tmp$_1 + 1 | 0, tmp$_1]);
    if (this.hasAlpha) {
      out.a = this._bytes_0[i] / 255.0;
    }
     else {
      out.a = 1.0;
    }
    return out;
  };
  RgbData.prototype.getAlpha_vux9f0$ = function (x, y) {
    if (!this.hasAlpha)
      return 1.0;
    var i = Kotlin.imul(y, this._scanSize_0) + Kotlin.imul(x, this.numBands) | 0;
    var alpha = this.toFloatRange_0(this._bytes_0[i + 3 | 0]);
    return alpha;
  };
  RgbData.prototype.setPixel_k1xbfi$ = function (x, y, color_3) {
    var tmp$, tmp$_0, tmp$_1;
    var i = Kotlin.imul(y, this._scanSize_0) + Kotlin.imul(x, this.numBands) | 0;
    this._bytes_0[tmp$ = i, i = tmp$ + 1 | 0, tmp$] = Kotlin.toByte(color_3.r * 255.0);
    this._bytes_0[tmp$_0 = i, i = tmp$_0 + 1 | 0, tmp$_0] = Kotlin.toByte(color_3.g * 255.0);
    this._bytes_0[tmp$_1 = i, i = tmp$_1 + 1 | 0, tmp$_1] = Kotlin.toByte(color_3.b * 255.0);
    if (this.hasAlpha) {
      this._bytes_0[i] = Kotlin.toByte(color_3.a * 255.0);
    }
  };
  RgbData.prototype.fillRect_mmy5lq$ = function (x, y, width, height, color_3) {
    var x_0 = this._height_0;
    var y_0 = y + height | 0;
    var min_sdesaw$result;
    if (Kotlin.compareTo(x_0, y_0) <= 0) {
      min_sdesaw$result = x_0;
    }
     else {
      min_sdesaw$result = y_0;
    }
    var lastY = min_sdesaw$result - 1 | 0;
    var x_1 = this._width_0;
    var y_1 = x + width | 0;
    var min_sdesaw$result_0;
    if (Kotlin.compareTo(x_1, y_1) <= 0) {
      min_sdesaw$result_0 = x_1;
    }
     else {
      min_sdesaw$result_0 = y_1;
    }
    var lastX = min_sdesaw$result_0 - 1 | 0;
    for (var y2 = y; y2 <= lastY; y2++) {
      for (var x2 = x; x2 <= lastX; x2++) {
        this.setPixel_k1xbfi$(x2, y2, color_3);
      }
    }
  };
  RgbData.prototype.flood_1qghwi$ = function (color_3) {
    if (color_3 === void 0)
      color_3 = Color.Companion.CLEAR;
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var r = Kotlin.toByte(color_3.r * 255.0);
    var g = Kotlin.toByte(color_3.g * 255.0);
    var b = Kotlin.toByte(color_3.b * 255.0);
    var a = Kotlin.toByte(color_3.a * 255.0);
    tmp$ = step(new IntRange(0, this.lastIndex), this.numBands).iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      var j = i;
      this._bytes_0[tmp$_0 = j, j = tmp$_0 + 1 | 0, tmp$_0] = r;
      this._bytes_0[tmp$_1 = j, j = tmp$_1 + 1 | 0, tmp$_1] = g;
      this._bytes_0[tmp$_2 = j, j = tmp$_2 + 1 | 0, tmp$_2] = b;
      if (this.hasAlpha) {
        this._bytes_0[j] = a;
      }
    }
  };
  RgbData.prototype.transferPixelTo_1 = function (sourceX, sourceY, dest, destX, destY) {
    this.transferPixelTo_0(sourceX, sourceY, dest._bytes_0, dest._scanSize_0, dest.hasAlpha, dest.numBands, destX, destY);
  };
  RgbData.prototype.transferPixelTo_0 = function (sourceX, sourceY, destBytes, destScanSize, destHasAlpha, destNumBands, destX, destY) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    var sourceIndex = Kotlin.imul(sourceY, this._scanSize_0) + Kotlin.imul(sourceX, this.numBands) | 0;
    var destIndex = Kotlin.imul(destY, destScanSize) + Kotlin.imul(destX, destNumBands) | 0;
    destBytes[tmp$_0 = destIndex, destIndex = tmp$_0 + 1 | 0, tmp$_0] = this._bytes_0[tmp$ = sourceIndex, sourceIndex = tmp$ + 1 | 0, tmp$];
    destBytes[tmp$_2 = destIndex, destIndex = tmp$_2 + 1 | 0, tmp$_2] = this._bytes_0[tmp$_1 = sourceIndex, sourceIndex = tmp$_1 + 1 | 0, tmp$_1];
    destBytes[tmp$_4 = destIndex, destIndex = tmp$_4 + 1 | 0, tmp$_4] = this._bytes_0[tmp$_3 = sourceIndex, sourceIndex = tmp$_3 + 1 | 0, tmp$_3];
    if (this.hasAlpha && destHasAlpha) {
      destBytes[destIndex] = this._bytes_0[sourceIndex];
    }
     else if (destHasAlpha) {
      destBytes[destIndex] = -1;
    }
  };
  RgbData.prototype.copySubRgbData_o5do7t$ = function (region) {
    return this.copySubRgbData_tjonv8$(region.x | 0, region.y | 0, region.width | 0, region.height | 0);
  };
  RgbData.prototype.copySubRgbData_tjonv8$ = function (sourceX, sourceY, width, height) {
    var subData = new RgbData(width, height, this.hasAlpha);
    subData.setRect_axgsp1$(0, 0, this, sourceX, sourceY, width, height);
    return subData;
  };
  RgbData.prototype.rotate90CW = function () {
    var tmp$, tmp$_0;
    var newScanSize = Kotlin.imul(this._height_0, this.numBands);
    var newBytes = Kotlin.newArray(Kotlin.imul(Kotlin.imul(this._width_0, this._height_0), this.numBands), 0);
    tmp$ = this._height_0 - 1 | 0;
    for (var y = 0; y <= tmp$; y++) {
      var x2 = this._height_0 - 1 - y | 0;
      tmp$_0 = this._width_0 - 1 | 0;
      for (var x = 0; x <= tmp$_0; x++) {
        var y2 = x;
        this.transferPixelTo_0(x, y, newBytes, newScanSize, this.hasAlpha, this.numBands, x2, y2);
      }
    }
    this._bytes_0 = newBytes;
    this._scanSize_0 = newScanSize;
    var tmp = this._width_0;
    this._width_0 = this._height_0;
    this._height_0 = tmp;
  };
  RgbData.prototype.rotate90CCW = function () {
    var tmp$, tmp$_0;
    var newScanSize = Kotlin.imul(this._height_0, this.numBands);
    var newBytes = Kotlin.newArray(Kotlin.imul(Kotlin.imul(this._width_0, this._height_0), this.numBands), 0);
    tmp$ = this._height_0 - 1 | 0;
    for (var y = 0; y <= tmp$; y++) {
      var x2 = y;
      tmp$_0 = this._width_0 - 1 | 0;
      for (var x = 0; x <= tmp$_0; x++) {
        var y2 = this._width_0 - 1 - x | 0;
        this.transferPixelTo_0(x, y, newBytes, newScanSize, this.hasAlpha, this.numBands, x2, y2);
      }
    }
    this._bytes_0 = newBytes;
    this._scanSize_0 = newScanSize;
    var tmp = this._width_0;
    this._width_0 = this._height_0;
    this._height_0 = tmp;
  };
  RgbData.prototype.setRect_axgsp1$ = function (destX, destY, source, sourceX, sourceY, width, height) {
    if (sourceX === void 0)
      sourceX = 0;
    if (sourceY === void 0)
      sourceY = 0;
    if (width === void 0)
      width = source.width - sourceX | 0;
    if (height === void 0)
      height = source.height - sourceY | 0;
    math_0.MathUtils;
    var x_0 = height;
    var y_0 = this._height_0 - destY | 0;
    var min_sdesaw$result;
    if (Kotlin.compareTo(x_0, y_0) <= 0) {
      min_sdesaw$result = x_0;
    }
     else {
      min_sdesaw$result = y_0;
    }
    var x_1 = min_sdesaw$result;
    var y_1 = source.height - sourceY | 0;
    var min_sdesaw$result_0;
    if (Kotlin.compareTo(x_1, y_1) <= 0) {
      min_sdesaw$result_0 = x_1;
    }
     else {
      min_sdesaw$result_0 = y_1;
    }
    var lastY = min_sdesaw$result_0 - 1 | 0;
    math_0.MathUtils;
    var x_2 = width;
    var y_2 = this._width_0 - destX | 0;
    var min_sdesaw$result_1;
    if (Kotlin.compareTo(x_2, y_2) <= 0) {
      min_sdesaw$result_1 = x_2;
    }
     else {
      min_sdesaw$result_1 = y_2;
    }
    var x_3 = min_sdesaw$result_1;
    var y_3 = source.width - sourceX | 0;
    var min_sdesaw$result_2;
    if (Kotlin.compareTo(x_3, y_3) <= 0) {
      min_sdesaw$result_2 = x_3;
    }
     else {
      min_sdesaw$result_2 = y_3;
    }
    var lastX = min_sdesaw$result_2 - 1 | 0;
    for (var y = 0; y <= lastY; y++) {
      for (var x = 0; x <= lastX; x++) {
        source.transferPixelTo_1(sourceX + x | 0, sourceY + y | 0, this, destX + x | 0, destY + y | 0);
      }
    }
  };
  RgbData.prototype.toFloatRange_0 = function ($receiver) {
    return ($receiver & 255) * this.INV_BYTE_0;
  };
  RgbData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'RgbData',
    interfaces: []
  };
  function rgbData(width, height, hasAlpha, init) {
    if (hasAlpha === void 0)
      hasAlpha = true;
    var r = new RgbData(width, height, hasAlpha);
    init(r);
    return r;
  }
  function Scaling(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Scaling_initFields() {
    Scaling_initFields = function () {
    };
    Scaling$FIT_instance = new Scaling('FIT', 0);
    Scaling$FILL_instance = new Scaling('FILL', 1);
    Scaling$FILL_X_instance = new Scaling('FILL_X', 2);
    Scaling$FILL_Y_instance = new Scaling('FILL_Y', 3);
    Scaling$STRETCH_instance = new Scaling('STRETCH', 4);
    Scaling$STRETCH_X_instance = new Scaling('STRETCH_X', 5);
    Scaling$STRETCH_Y_instance = new Scaling('STRETCH_Y', 6);
    Scaling$NONE_instance = new Scaling('NONE', 7);
  }
  var Scaling$FIT_instance;
  function Scaling$FIT_getInstance() {
    Scaling_initFields();
    return Scaling$FIT_instance;
  }
  var Scaling$FILL_instance;
  function Scaling$FILL_getInstance() {
    Scaling_initFields();
    return Scaling$FILL_instance;
  }
  var Scaling$FILL_X_instance;
  function Scaling$FILL_X_getInstance() {
    Scaling_initFields();
    return Scaling$FILL_X_instance;
  }
  var Scaling$FILL_Y_instance;
  function Scaling$FILL_Y_getInstance() {
    Scaling_initFields();
    return Scaling$FILL_Y_instance;
  }
  var Scaling$STRETCH_instance;
  function Scaling$STRETCH_getInstance() {
    Scaling_initFields();
    return Scaling$STRETCH_instance;
  }
  var Scaling$STRETCH_X_instance;
  function Scaling$STRETCH_X_getInstance() {
    Scaling_initFields();
    return Scaling$STRETCH_X_instance;
  }
  var Scaling$STRETCH_Y_instance;
  function Scaling$STRETCH_Y_getInstance() {
    Scaling_initFields();
    return Scaling$STRETCH_Y_instance;
  }
  var Scaling$NONE_instance;
  function Scaling$NONE_getInstance() {
    Scaling_initFields();
    return Scaling$NONE_instance;
  }
  Scaling.prototype.apply_kjsed5$ = function (sourceWidth, sourceHeight, targetWidth, targetHeight, out) {
    if (Kotlin.equals(this, Scaling$FIT_getInstance())) {
      var targetRatio = targetHeight / targetWidth;
      var sourceRatio = sourceHeight / sourceWidth;
      var scale = targetRatio > sourceRatio ? targetWidth / sourceWidth : targetHeight / sourceHeight;
      out.x = sourceWidth * scale;
      out.y = sourceHeight * scale;
    }
     else if (Kotlin.equals(this, Scaling$FILL_getInstance())) {
      var targetRatio_0 = targetHeight / targetWidth;
      var sourceRatio_0 = sourceHeight / sourceWidth;
      var scale_0 = targetRatio_0 < sourceRatio_0 ? targetWidth / sourceWidth : targetHeight / sourceHeight;
      out.x = sourceWidth * scale_0;
      out.y = sourceHeight * scale_0;
    }
     else if (Kotlin.equals(this, Scaling$FILL_X_getInstance())) {
      var scale_1 = targetWidth / sourceWidth;
      out.x = sourceWidth * scale_1;
      out.y = sourceHeight * scale_1;
    }
     else if (Kotlin.equals(this, Scaling$FILL_Y_getInstance())) {
      var scale_2 = targetHeight / sourceHeight;
      out.x = sourceWidth * scale_2;
      out.y = sourceHeight * scale_2;
    }
     else if (Kotlin.equals(this, Scaling$STRETCH_getInstance())) {
      out.x = targetWidth;
      out.y = targetHeight;
    }
     else if (Kotlin.equals(this, Scaling$STRETCH_X_getInstance())) {
      out.x = targetWidth;
      out.y = sourceHeight;
    }
     else if (Kotlin.equals(this, Scaling$STRETCH_Y_getInstance())) {
      out.x = sourceWidth;
      out.y = targetHeight;
    }
     else if (Kotlin.equals(this, Scaling$NONE_getInstance())) {
      out.x = sourceWidth;
      out.y = sourceHeight;
    }
    return out;
  };
  Scaling.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Scaling',
    interfaces: [Enum]
  };
  function Scaling$values() {
    return [Scaling$FIT_getInstance(), Scaling$FILL_getInstance(), Scaling$FILL_X_getInstance(), Scaling$FILL_Y_getInstance(), Scaling$STRETCH_getInstance(), Scaling$STRETCH_X_getInstance(), Scaling$STRETCH_Y_getInstance(), Scaling$NONE_getInstance()];
  }
  Scaling.values = Scaling$values;
  function Scaling$valueOf(name) {
    switch (name) {
      case 'FIT':
        return Scaling$FIT_getInstance();
      case 'FILL':
        return Scaling$FILL_getInstance();
      case 'FILL_X':
        return Scaling$FILL_X_getInstance();
      case 'FILL_Y':
        return Scaling$FILL_Y_getInstance();
      case 'STRETCH':
        return Scaling$STRETCH_getInstance();
      case 'STRETCH_X':
        return Scaling$STRETCH_X_getInstance();
      case 'STRETCH_Y':
        return Scaling$STRETCH_Y_getInstance();
      case 'NONE':
        return Scaling$NONE_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.graphics.Scaling.' + name);
    }
  }
  Scaling.valueOf_61zpoe$ = Scaling$valueOf;
  function SpriteAnimation(owner) {
    ContainerImpl.call(this, owner);
    this.json = inject(this, JSON_KEY);
    this.textureAtlasBinding_0 = jsonBinding(this, TextureAtlasDataSerializer_getInstance(), SpriteAnimation$textureAtlasBinding$lambda(this));
    this.currentFrame = 0;
    this._startFrame_0 = 0;
    this._endFrame_0 = -1;
    this.frameRate = inject(this, AppConfig$Companion_getInstance()).frameRate;
    this.paused = false;
    this.atlasData_0 = null;
    this.atlasPath_0 = null;
    this.regionName_0 = null;
    this.elapsed_0 = 0.0;
    this.regionWidth_0 = 0;
    this.regionHeight_0 = 0;
    this.frameClips_0 = ArrayList_init();
    onTick(this, SpriteAnimation_init$lambda(this));
  }
  Object.defineProperty(SpriteAnimation.prototype, 'startFrame', {
    get: function () {
      return this._startFrame_0;
    }
  });
  Object.defineProperty(SpriteAnimation.prototype, 'endFrame', {
    get: function () {
      return this._endFrame_0;
    }
  });
  Object.defineProperty(SpriteAnimation.prototype, 'stepTime', {
    get: function () {
      return 1.0 / this.frameRate;
    }
  });
  SpriteAnimation.prototype.setRegion_ccskfk$ = function (atlasPath, regionName, startFrame, endFrame) {
    if (startFrame === void 0)
      startFrame = 0;
    if (endFrame === void 0)
      endFrame = -1;
    var tmp$;
    tmp$ = get_lastIndex(this.frameClips_0);
    for (var i = 0; i <= tmp$; i++) {
      this.removeChild_erfg6z$(this.frameClips_0.get_za3lpa$(i));
      this.frameClips_0.get_za3lpa$(i).dispose();
    }
    this.frameClips_0.clear();
    this._startFrame_0 = startFrame;
    this._endFrame_0 = endFrame;
    this.textureAtlasBinding_0.path = atlasPath;
    this.atlasPath_0 = atlasPath;
    this.regionName_0 = regionName;
    this.refreshFrames_0();
  };
  SpriteAnimation.prototype.refreshFrames_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    tmp$ = this.atlasPath_0;
    if (tmp$ == null) {
      return;
    }
    var atlasPath = tmp$;
    tmp$_0 = this.atlasData_0;
    if (tmp$_0 == null) {
      return;
    }
    var atlasData = tmp$_0;
    tmp$_1 = this.regionName_0;
    if (tmp$_1 == null) {
      return;
    }
    var regionName = tmp$_1;
    if (this._startFrame_0 < 0)
      this._startFrame_0 = 0;
    var regions = ArrayList_init();
    this.regionWidth_0 = 0;
    tmp$_2 = atlasData.pages;
    for (tmp$_3 = 0; tmp$_3 !== tmp$_2.length; ++tmp$_3) {
      var page = tmp$_2[tmp$_3];
      tmp$_4 = page.regions;
      for (tmp$_5 = 0; tmp$_5 !== tmp$_4.length; ++tmp$_5) {
        var region = tmp$_4[tmp$_5];
        var index = this.calculateFrameIndex_0(region.name, regionName);
        if (index >= this._startFrame_0 && (this._endFrame_0 === -1 || index <= this._endFrame_0)) {
          var newSize = index - this._startFrame_0 + 1 | 0;
          var tmp$_8, tmp$_9;
          tmp$_8 = regions.size;
          tmp$_9 = newSize - 1 | 0;
          for (var i_0 = tmp$_8; i_0 <= tmp$_9; i_0++) {
            regions.add_11rb$(null);
          }
          regions.set_wxm5ur$(index - this._startFrame_0 | 0, region);
          if (region.originalWidth > this.regionWidth_0) {
            this.regionWidth_0 = region.originalWidth;
          }
          if (region.originalHeight > this.regionHeight_0) {
            this.regionHeight_0 = region.originalHeight;
          }
        }
      }
    }
    tmp$_6 = get_lastIndex(regions);
    for (var i = 0; i <= tmp$_6; i++) {
      tmp$_7 = regions.get_za3lpa$(i);
      if (tmp$_7 == null) {
        continue;
      }
      var region_0 = tmp$_7;
      var atlasComponent = this.addChild_mxweac$(atlas(this, atlasPath, region_0.name));
      this.frameClips_0.add_11rb$(atlasComponent);
    }
    this._endFrame_0 = get_lastIndex(this.frameClips_0) + this._startFrame_0 | 0;
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  SpriteAnimation.prototype.calculateFrameIndex_0 = function ($receiver, name) {
    var tmp$;
    if (startsWith($receiver, name)) {
      if ($receiver.length === name.length)
        return 0;
      if (Kotlin.unboxChar($receiver.charCodeAt(name.length)) === 46)
        return 0;
      if (Kotlin.unboxChar($receiver.charCodeAt(name.length)) === 95) {
        var lastIndex = lastIndexOf($receiver, 46);
        if (lastIndex === -1)
          lastIndex = $receiver.length;
        var startIndex = name.length + 1 | 0;
        var endIndex = lastIndex;
        return (tmp$ = toIntOrNull($receiver.substring(startIndex, endIndex))) != null ? tmp$ : -1;
      }
    }
    return -1;
  };
  SpriteAnimation.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    out.set_dleff0$(this.regionWidth_0, this.regionHeight_0);
  };
  SpriteAnimation.prototype.draw = function () {
    if (this.currentFrame >= this.startFrame && (this.currentFrame - this.startFrame | 0) < this.frameClips_0.size) {
      this.frameClips_0.get_za3lpa$(this.currentFrame - this.startFrame | 0).render();
    }
  };
  function SpriteAnimation$textureAtlasBinding$lambda(this$SpriteAnimation) {
    return function (it) {
      this$SpriteAnimation.atlasData_0 = it;
      this$SpriteAnimation.refreshFrames_0();
    };
  }
  function SpriteAnimation_init$lambda(this$SpriteAnimation) {
    return function (it) {
      var tmp$ = !this$SpriteAnimation.paused;
      if (tmp$) {
        tmp$ = !this$SpriteAnimation.frameClips_0.isEmpty();
      }
      if (tmp$) {
        var stepTime = this$SpriteAnimation.stepTime;
        this$SpriteAnimation.elapsed_0 += it;
        while (this$SpriteAnimation.elapsed_0 >= stepTime) {
          this$SpriteAnimation.elapsed_0 -= stepTime;
          this$SpriteAnimation.frameClips_0.get_za3lpa$(this$SpriteAnimation.currentFrame - this$SpriteAnimation.startFrame | 0).visible = false;
          if ((this$SpriteAnimation.currentFrame = this$SpriteAnimation.currentFrame + 1 | 0, this$SpriteAnimation.currentFrame) > this$SpriteAnimation._endFrame_0) {
            this$SpriteAnimation.currentFrame = this$SpriteAnimation._startFrame_0;
          }
          this$SpriteAnimation.frameClips_0.get_za3lpa$(this$SpriteAnimation.currentFrame - this$SpriteAnimation.startFrame | 0).visible = true;
        }
      }
    };
  }
  SpriteAnimation.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'SpriteAnimation',
    interfaces: [ContainerImpl]
  };
  function spriteAnimation$lambda($receiver) {
  }
  function spriteAnimation($receiver, atlasPath, regionName, startFrame, endFrame, init) {
    if (startFrame === void 0)
      startFrame = 0;
    if (endFrame === void 0)
      endFrame = -1;
    if (init === void 0)
      init = spriteAnimation$lambda;
    var s = new SpriteAnimation($receiver);
    s.setRegion_ccskfk$(atlasPath, regionName, startFrame, endFrame);
    init(s);
    return s;
  }
  function spriteAnimation$lambda_0($receiver) {
  }
  function spriteAnimation_0($receiver, init) {
    if (init === void 0)
      init = spriteAnimation$lambda_0;
    var s = new SpriteAnimation($receiver);
    init(s);
    return s;
  }
  function Texture() {
  }
  Texture.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Texture',
    interfaces: []
  };
  function TextureAtlasData(pages) {
    this.pages = pages;
  }
  TextureAtlasData.prototype.findRegion_61zpoe$ = function (name) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    tmp$ = this.pages;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var page = tmp$[tmp$_0];
      tmp$_1 = page.regions;
      for (tmp$_2 = 0; tmp$_2 !== tmp$_1.length; ++tmp$_2) {
        var region = tmp$_1[tmp$_2];
        if (this.equalsIgnoreExtension_0(region.name, name)) {
          return new Pair(page, region);
        }
      }
    }
    return null;
  };
  TextureAtlasData.prototype.equalsIgnoreExtension_0 = function ($receiver, name) {
    if (startsWith($receiver, name)) {
      if ($receiver.length === name.length)
        return true;
      if (Kotlin.unboxChar($receiver.charCodeAt(name.length)) === 46)
        return true;
    }
    return false;
  };
  TextureAtlasData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextureAtlasData',
    interfaces: []
  };
  TextureAtlasData.prototype.component1 = function () {
    return this.pages;
  };
  TextureAtlasData.prototype.copy_mg5cqs$ = function (pages) {
    return new TextureAtlasData(pages === void 0 ? this.pages : pages);
  };
  TextureAtlasData.prototype.toString = function () {
    return 'TextureAtlasData(pages=' + Kotlin.toString(this.pages) + ')';
  };
  TextureAtlasData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.pages) | 0;
    return result;
  };
  TextureAtlasData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.pages, other.pages))));
  };
  function TextureAtlasDataSerializer() {
    TextureAtlasDataSerializer_instance = this;
  }
  TextureAtlasDataSerializer.prototype.read_gax0m7$ = function (reader) {
    var tmp$;
    var itemFactory = AtlasPageSerializer_getInstance();
    var tmp$_0;
    var tmp$_1;
    if ((tmp$_0 = reader.get_61zpoe$('pages')) != null) {
      var e = tmp$_0.elements();
      tmp$_1 = Kotlin.newArrayF(e.size, $module$AcornUtils.com.acornui.serialization.array2$f(itemFactory, e));
    }
     else
      tmp$_1 = null;
    return new TextureAtlasData((tmp$ = tmp$_1) != null ? tmp$ : Kotlin.throwNPE());
  };
  TextureAtlasDataSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    array_0(writer, 'pages', $receiver.pages, AtlasPageSerializer_getInstance());
  };
  TextureAtlasDataSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'TextureAtlasDataSerializer',
    interfaces: [From, To]
  };
  var TextureAtlasDataSerializer_instance = null;
  function TextureAtlasDataSerializer_getInstance() {
    if (TextureAtlasDataSerializer_instance === null) {
      new TextureAtlasDataSerializer();
    }
    return TextureAtlasDataSerializer_instance;
  }
  function AtlasPageData(texturePath, width, height, pixelFormat, premultipliedAlpha, filterMin, filterMag, regions, hasWhitePixel) {
    if (hasWhitePixel === void 0)
      hasWhitePixel = false;
    this.texturePath = texturePath;
    this.width = width;
    this.height = height;
    this.pixelFormat = pixelFormat;
    this.premultipliedAlpha = premultipliedAlpha;
    this.filterMin = filterMin;
    this.filterMag = filterMag;
    this.regions = regions;
    this.hasWhitePixel = hasWhitePixel;
  }
  AtlasPageData.prototype.containsRegion_61zpoe$ = function (regionName) {
    var $receiver = this.regions;
    var firstOrNull_sfx99b$result;
    firstOrNull_sfx99b$break: {
      var tmp$;
      for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
        var element = $receiver[tmp$];
        if (Kotlin.equals(element.name, regionName)) {
          firstOrNull_sfx99b$result = element;
          break firstOrNull_sfx99b$break;
        }
      }
      firstOrNull_sfx99b$result = null;
    }
    return firstOrNull_sfx99b$result != null;
  };
  AtlasPageData.prototype.getRegion_61zpoe$ = function (regionName) {
    var $receiver = this.regions;
    var firstOrNull_sfx99b$result;
    firstOrNull_sfx99b$break: {
      var tmp$;
      for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
        var element = $receiver[tmp$];
        if (Kotlin.equals(element.name, regionName)) {
          firstOrNull_sfx99b$result = element;
          break firstOrNull_sfx99b$break;
        }
      }
      firstOrNull_sfx99b$result = null;
    }
    return firstOrNull_sfx99b$result;
  };
  AtlasPageData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AtlasPageData',
    interfaces: []
  };
  AtlasPageData.prototype.component1 = function () {
    return this.texturePath;
  };
  AtlasPageData.prototype.component2 = function () {
    return this.width;
  };
  AtlasPageData.prototype.component3 = function () {
    return this.height;
  };
  AtlasPageData.prototype.component4 = function () {
    return this.pixelFormat;
  };
  AtlasPageData.prototype.component5 = function () {
    return this.premultipliedAlpha;
  };
  AtlasPageData.prototype.component6 = function () {
    return this.filterMin;
  };
  AtlasPageData.prototype.component7 = function () {
    return this.filterMag;
  };
  AtlasPageData.prototype.component8 = function () {
    return this.regions;
  };
  AtlasPageData.prototype.component9 = function () {
    return this.hasWhitePixel;
  };
  AtlasPageData.prototype.copy_tue7dk$ = function (texturePath, width, height, pixelFormat, premultipliedAlpha, filterMin, filterMag, regions, hasWhitePixel) {
    return new AtlasPageData(texturePath === void 0 ? this.texturePath : texturePath, width === void 0 ? this.width : width, height === void 0 ? this.height : height, pixelFormat === void 0 ? this.pixelFormat : pixelFormat, premultipliedAlpha === void 0 ? this.premultipliedAlpha : premultipliedAlpha, filterMin === void 0 ? this.filterMin : filterMin, filterMag === void 0 ? this.filterMag : filterMag, regions === void 0 ? this.regions : regions, hasWhitePixel === void 0 ? this.hasWhitePixel : hasWhitePixel);
  };
  AtlasPageData.prototype.toString = function () {
    return 'AtlasPageData(texturePath=' + Kotlin.toString(this.texturePath) + (', width=' + Kotlin.toString(this.width)) + (', height=' + Kotlin.toString(this.height)) + (', pixelFormat=' + Kotlin.toString(this.pixelFormat)) + (', premultipliedAlpha=' + Kotlin.toString(this.premultipliedAlpha)) + (', filterMin=' + Kotlin.toString(this.filterMin)) + (', filterMag=' + Kotlin.toString(this.filterMag)) + (', regions=' + Kotlin.toString(this.regions)) + (', hasWhitePixel=' + Kotlin.toString(this.hasWhitePixel)) + ')';
  };
  AtlasPageData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.texturePath) | 0;
    result = result * 31 + Kotlin.hashCode(this.width) | 0;
    result = result * 31 + Kotlin.hashCode(this.height) | 0;
    result = result * 31 + Kotlin.hashCode(this.pixelFormat) | 0;
    result = result * 31 + Kotlin.hashCode(this.premultipliedAlpha) | 0;
    result = result * 31 + Kotlin.hashCode(this.filterMin) | 0;
    result = result * 31 + Kotlin.hashCode(this.filterMag) | 0;
    result = result * 31 + Kotlin.hashCode(this.regions) | 0;
    result = result * 31 + Kotlin.hashCode(this.hasWhitePixel) | 0;
    return result;
  };
  AtlasPageData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.texturePath, other.texturePath) && Kotlin.equals(this.width, other.width) && Kotlin.equals(this.height, other.height) && Kotlin.equals(this.pixelFormat, other.pixelFormat) && Kotlin.equals(this.premultipliedAlpha, other.premultipliedAlpha) && Kotlin.equals(this.filterMin, other.filterMin) && Kotlin.equals(this.filterMag, other.filterMag) && Kotlin.equals(this.regions, other.regions) && Kotlin.equals(this.hasWhitePixel, other.hasWhitePixel)))));
  };
  function AtlasPageSerializer() {
    AtlasPageSerializer_instance = this;
  }
  AtlasPageSerializer.prototype.read_gax0m7$ = function (reader) {
    var tmp$, tmp$_8, tmp$_0, tmp$_9, tmp$_1, tmp$_10, tmp$_2, tmp$_11, tmp$_3, tmp$_12, tmp$_4, tmp$_13, tmp$_5, tmp$_14, tmp$_6, tmp$_7;
    tmp$_8 = (tmp$ = string_0(reader, 'texturePath')) != null ? tmp$ : Kotlin.throwNPE();
    tmp$_9 = (tmp$_0 = int(reader, 'width')) != null ? tmp$_0 : Kotlin.throwNPE();
    tmp$_10 = (tmp$_1 = int(reader, 'height')) != null ? tmp$_1 : Kotlin.throwNPE();
    tmp$_11 = TexturePixelFormat$valueOf((tmp$_2 = string_0(reader, 'pixelFormat')) != null ? tmp$_2 : TexturePixelFormat$RGBA_getInstance().name);
    tmp$_12 = (tmp$_3 = bool(reader, 'premultipliedAlpha')) != null ? tmp$_3 : false;
    tmp$_13 = TextureMinFilter$valueOf((tmp$_4 = string_0(reader, 'filterMin')) != null ? tmp$_4 : TextureMinFilter$LINEAR_getInstance().name);
    tmp$_14 = TextureMagFilter$valueOf((tmp$_5 = string_0(reader, 'filterMag')) != null ? tmp$_5 : TextureMagFilter$LINEAR_getInstance().name);
    var itemFactory = AtlasRegionDataSerializer_getInstance();
    var tmp$_15;
    var tmp$_16;
    if ((tmp$_15 = reader.get_61zpoe$('regions')) != null) {
      var e = tmp$_15.elements();
      tmp$_16 = Kotlin.newArrayF(e.size, $module$AcornUtils.com.acornui.serialization.array2$f(itemFactory, e));
    }
     else
      tmp$_16 = null;
    return new AtlasPageData(tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, (tmp$_6 = tmp$_16) != null ? tmp$_6 : Kotlin.throwNPE(), (tmp$_7 = bool(reader, 'hasWhitePixel')) != null ? tmp$_7 : false);
  };
  AtlasPageSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    string_1(writer, 'texturePath', $receiver.texturePath);
    int_0(writer, 'width', $receiver.width);
    int_0(writer, 'height', $receiver.height);
    string_1(writer, 'pixelFormat', $receiver.pixelFormat.name);
    bool_0(writer, 'premultipliedAlpha', $receiver.premultipliedAlpha);
    string_1(writer, 'filterMin', $receiver.filterMin.name);
    string_1(writer, 'filterMag', $receiver.filterMag.name);
    array_0(writer, 'regions', $receiver.regions, AtlasRegionDataSerializer_getInstance());
    bool_0(writer, 'hasWhitePixel', $receiver.hasWhitePixel);
  };
  AtlasPageSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'AtlasPageSerializer',
    interfaces: [From, To]
  };
  var AtlasPageSerializer_instance = null;
  function AtlasPageSerializer_getInstance() {
    if (AtlasPageSerializer_instance === null) {
      new AtlasPageSerializer();
    }
    return AtlasPageSerializer_instance;
  }
  function AtlasRegionData(name, isRotated, bounds, splits, padding) {
    if (splits === void 0)
      splits = null;
    if (padding === void 0)
      padding = [0, 0, 0, 0];
    this.name = name;
    this.isRotated = isRotated;
    this.bounds = bounds;
    this.splits = splits;
    this.padding = padding;
  }
  Object.defineProperty(AtlasRegionData.prototype, 'originalWidth', {
    get: function () {
      if (this.isRotated)
        return this.padding[0] + this.padding[2] + this.bounds.height | 0;
      else
        return this.padding[0] + this.padding[2] + this.bounds.width | 0;
    }
  });
  Object.defineProperty(AtlasRegionData.prototype, 'originalHeight', {
    get: function () {
      if (this.isRotated)
        return this.padding[1] + this.padding[3] + this.bounds.width | 0;
      else
        return this.padding[1] + this.padding[3] + this.bounds.height | 0;
    }
  });
  Object.defineProperty(AtlasRegionData.prototype, 'packedWidth', {
    get: function () {
      return this.isRotated ? this.bounds.height : this.bounds.width;
    }
  });
  Object.defineProperty(AtlasRegionData.prototype, 'packedHeight', {
    get: function () {
      return this.isRotated ? this.bounds.width : this.bounds.height;
    }
  });
  AtlasRegionData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'AtlasRegionData',
    interfaces: []
  };
  AtlasRegionData.prototype.component1 = function () {
    return this.name;
  };
  AtlasRegionData.prototype.component2 = function () {
    return this.isRotated;
  };
  AtlasRegionData.prototype.component3 = function () {
    return this.bounds;
  };
  AtlasRegionData.prototype.component4 = function () {
    return this.splits;
  };
  AtlasRegionData.prototype.component5 = function () {
    return this.padding;
  };
  AtlasRegionData.prototype.copy_ptgvjq$ = function (name, isRotated, bounds, splits, padding) {
    return new AtlasRegionData(name === void 0 ? this.name : name, isRotated === void 0 ? this.isRotated : isRotated, bounds === void 0 ? this.bounds : bounds, splits === void 0 ? this.splits : splits, padding === void 0 ? this.padding : padding);
  };
  AtlasRegionData.prototype.toString = function () {
    return 'AtlasRegionData(name=' + Kotlin.toString(this.name) + (', isRotated=' + Kotlin.toString(this.isRotated)) + (', bounds=' + Kotlin.toString(this.bounds)) + (', splits=' + Kotlin.toString(this.splits)) + (', padding=' + Kotlin.toString(this.padding)) + ')';
  };
  AtlasRegionData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.isRotated) | 0;
    result = result * 31 + Kotlin.hashCode(this.bounds) | 0;
    result = result * 31 + Kotlin.hashCode(this.splits) | 0;
    result = result * 31 + Kotlin.hashCode(this.padding) | 0;
    return result;
  };
  AtlasRegionData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.isRotated, other.isRotated) && Kotlin.equals(this.bounds, other.bounds) && Kotlin.equals(this.splits, other.splits) && Kotlin.equals(this.padding, other.padding)))));
  };
  function AtlasRegionDataSerializer() {
    AtlasRegionDataSerializer_instance = this;
  }
  AtlasRegionDataSerializer.prototype.read_gax0m7$ = function (reader) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    return new AtlasRegionData((tmp$ = string_0(reader, 'name')) != null ? tmp$ : '', (tmp$_0 = bool(reader, 'isRotated')) != null ? tmp$_0 : false, (tmp$_1 = obj_1(reader, 'bounds', math_0.IntRectangleSerializer)) != null ? tmp$_1 : Kotlin.throwNPE(), floatArray(reader, 'splits'), (tmp$_2 = intArray(reader, 'padding')) != null ? tmp$_2 : [0, 0, 0, 0]);
  };
  AtlasRegionDataSerializer.prototype.write_r4tkhj$ = function ($receiver, writer) {
    var tmp$;
    string_1(writer, 'name', $receiver.name);
    bool_0(writer, 'isRotated', $receiver.isRotated);
    obj_2(writer, 'bounds', $receiver.bounds, math_0.IntRectangleSerializer);
    if ($receiver.splits != null) {
      floatArray_0(writer, 'splits', (tmp$ = $receiver.splits) != null ? tmp$ : Kotlin.throwNPE());
    }
    intArray_0(writer, 'padding', $receiver.padding);
  };
  AtlasRegionDataSerializer.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'AtlasRegionDataSerializer',
    interfaces: [From, To]
  };
  var AtlasRegionDataSerializer_instance = null;
  function AtlasRegionDataSerializer_getInstance() {
    if (AtlasRegionDataSerializer_instance === null) {
      new AtlasRegionDataSerializer();
    }
    return AtlasRegionDataSerializer_instance;
  }
  function Window() {
    Window$Companion_getInstance();
  }
  function Window$Companion() {
    Window$Companion_instance = this;
  }
  Window$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Window$Companion_instance = null;
  function Window$Companion_getInstance() {
    if (Window$Companion_instance === null) {
      new Window$Companion();
    }
    return Window$Companion_instance;
  }
  Window.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Window',
    interfaces: [Disposable]
  };
  function PopUpSpecs(height, left, menuBar, status, titlebar, top, width) {
    if (height === void 0)
      height = null;
    if (left === void 0)
      left = null;
    if (menuBar === void 0)
      menuBar = null;
    if (status === void 0)
      status = null;
    if (titlebar === void 0)
      titlebar = null;
    if (top === void 0)
      top = null;
    if (width === void 0)
      width = null;
    this.height = height;
    this.left = left;
    this.menuBar = menuBar;
    this.status = status;
    this.titlebar = titlebar;
    this.top = top;
    this.width = width;
  }
  PopUpSpecs.prototype.toSpecsString = function () {
    var strs = ArrayList_init();
    if (this.height != null)
      strs.add_11rb$('height=' + Kotlin.toString(this.height));
    if (this.left != null)
      strs.add_11rb$('left=' + Kotlin.toString(this.left));
    if (this.menuBar != null)
      strs.add_11rb$('menuBar=' + Kotlin.toString(this.menuBar));
    if (this.status != null)
      strs.add_11rb$('status=' + Kotlin.toString(this.status));
    if (this.titlebar != null)
      strs.add_11rb$('titlebar=' + Kotlin.toString(this.titlebar));
    if (this.top != null)
      strs.add_11rb$('top=' + Kotlin.toString(this.top));
    if (this.width != null)
      strs.add_11rb$('width=' + Kotlin.toString(this.width));
    return joinToString(strs, ',');
  };
  PopUpSpecs.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PopUpSpecs',
    interfaces: []
  };
  PopUpSpecs.prototype.component1 = function () {
    return this.height;
  };
  PopUpSpecs.prototype.component2 = function () {
    return this.left;
  };
  PopUpSpecs.prototype.component3 = function () {
    return this.menuBar;
  };
  PopUpSpecs.prototype.component4 = function () {
    return this.status;
  };
  PopUpSpecs.prototype.component5 = function () {
    return this.titlebar;
  };
  PopUpSpecs.prototype.component6 = function () {
    return this.top;
  };
  PopUpSpecs.prototype.component7 = function () {
    return this.width;
  };
  PopUpSpecs.prototype.copy_g4l0y0$ = function (height, left, menuBar, status, titlebar, top, width) {
    return new PopUpSpecs(height === void 0 ? this.height : height, left === void 0 ? this.left : left, menuBar === void 0 ? this.menuBar : menuBar, status === void 0 ? this.status : status, titlebar === void 0 ? this.titlebar : titlebar, top === void 0 ? this.top : top, width === void 0 ? this.width : width);
  };
  PopUpSpecs.prototype.toString = function () {
    return 'PopUpSpecs(height=' + Kotlin.toString(this.height) + (', left=' + Kotlin.toString(this.left)) + (', menuBar=' + Kotlin.toString(this.menuBar)) + (', status=' + Kotlin.toString(this.status)) + (', titlebar=' + Kotlin.toString(this.titlebar)) + (', top=' + Kotlin.toString(this.top)) + (', width=' + Kotlin.toString(this.width)) + ')';
  };
  PopUpSpecs.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.height) | 0;
    result = result * 31 + Kotlin.hashCode(this.left) | 0;
    result = result * 31 + Kotlin.hashCode(this.menuBar) | 0;
    result = result * 31 + Kotlin.hashCode(this.status) | 0;
    result = result * 31 + Kotlin.hashCode(this.titlebar) | 0;
    result = result * 31 + Kotlin.hashCode(this.top) | 0;
    result = result * 31 + Kotlin.hashCode(this.width) | 0;
    return result;
  };
  PopUpSpecs.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.height, other.height) && Kotlin.equals(this.left, other.left) && Kotlin.equals(this.menuBar, other.menuBar) && Kotlin.equals(this.status, other.status) && Kotlin.equals(this.titlebar, other.titlebar) && Kotlin.equals(this.top, other.top) && Kotlin.equals(this.width, other.width)))));
  };
  function Child() {
  }
  Child.prototype.previousSibling = function () {
    var tmp$;
    tmp$ = this.parent;
    if (tmp$ == null) {
      return null;
    }
    var p = tmp$;
    var c = p.children;
    var index = c.indexOf_11rb$(this);
    if (index === 0)
      return null;
    return c.get_za3lpa$(index - 1 | 0);
  };
  Child.prototype.nextSibling = function () {
    var tmp$;
    tmp$ = this.parent;
    if (tmp$ == null) {
      return null;
    }
    var p = tmp$;
    var c = p.children;
    var index = c.indexOf_11rb$(this);
    if (index === get_lastIndex(c))
      return null;
    return c.get_za3lpa$(index + 1 | 0);
  };
  Child.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Child',
    interfaces: []
  };
  function Parent() {
  }
  Object.defineProperty(Parent.prototype, 'numChildren', {
    get: function () {
      return this.children.size;
    }
  });
  Parent.prototype.containsChild_npz94r$ = function (child) {
    return this.children.contains_11rb$(child);
  };
  Parent.prototype.getChildAt_za3lpa$ = function (index) {
    if (index < 0 || index >= this.numChildren)
      return null;
    return this.children.get_za3lpa$(index);
  };
  Parent.prototype.iterateChildren_9z398f$ = function (body, reversed) {
    if (reversed) {
      this.iterateChildrenReversed_bwf5pq$(body);
    }
     else {
      this.iterateChildren_bwf5pq$(body);
    }
  };
  Parent.prototype.iterateChildren_bwf5pq$ = function (body) {
    var tmp$;
    var c = this.children;
    tmp$ = get_lastIndex(c);
    for (var i = 0; i <= tmp$; i++) {
      var shouldContinue = body(c.get_za3lpa$(i));
      if (!shouldContinue)
        break;
    }
  };
  Parent.prototype.iterateChildrenReversed_bwf5pq$ = function (body) {
    var tmp$;
    var c = this.children;
    tmp$ = downTo(get_lastIndex(c), 0).iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      var shouldContinue = body(c.get_za3lpa$(i));
      if (!shouldContinue)
        break;
    }
  };
  Parent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Parent',
    interfaces: [Child]
  };
  function MutableParent() {
  }
  MutableParent.prototype.addChild_qaye9v$ = function (child) {
    return this.addChild_6dvupz$(this.numChildren, child);
  };
  MutableParent.prototype.addAllChildren_dk1gku$ = function (children) {
    this.addAllChildren_ndcjk8$(this.numChildren, children);
  };
  MutableParent.prototype.addAllChildren_ndcjk8$ = function (index, children) {
    var tmp$, tmp$_0;
    var i = index;
    tmp$ = children.iterator();
    while (tmp$.hasNext()) {
      var child = tmp$.next();
      this.addChild_6dvupz$((tmp$_0 = i, i = tmp$_0 + 1 | 0, tmp$_0), child);
    }
  };
  MutableParent.prototype.addAllChildren_njvo8r$ = function (children) {
    this.addAllChildren_ga54mp$(this.numChildren, children);
  };
  MutableParent.prototype.addAllChildren_ga54mp$ = function (index, children) {
    var tmp$, tmp$_0;
    var i = index;
    for (tmp$ = 0; tmp$ !== children.length; ++tmp$) {
      var child = children[tmp$];
      this.addChild_6dvupz$((tmp$_0 = i, i = tmp$_0 + 1 | 0, tmp$_0), child);
    }
  };
  MutableParent.prototype.addChildAfter_96et1m$ = function (child, after) {
    var index = this.children.indexOf_11rb$(after);
    if (index === -1)
      return -1;
    this.addChild_6dvupz$(index + 1 | 0, child);
    return index + 1 | 0;
  };
  MutableParent.prototype.addChildBefore_96et1m$ = function (child, before) {
    var index = this.children.indexOf_11rb$(before);
    if (index === -1)
      return -1;
    this.addChild_6dvupz$(index, child);
    return index;
  };
  MutableParent.prototype.removeChild_6iy558$ = function (child) {
    if (child == null)
      return false;
    var index = indexOf_0(this.children, child);
    if (index === -1)
      return false;
    this.removeChild_za3lpa$(index);
    return true;
  };
  MutableParent.prototype.swapChildren_96et1m$ = function (childA, childB) {
    if (!Kotlin.equals(childA.parent, this))
      throw new Exception('childA is not a child of this container.');
    if (!Kotlin.equals(childB.parent, this))
      throw new Exception('childB is not a child of this container.');
    var c = this.children;
    var indexA = c.indexOf_11rb$(childA);
    var indexB = c.indexOf_11rb$(childB);
    this.swapChildren_vux9f0$(indexA, indexB);
  };
  MutableParent.prototype.clearChildren_6taknv$$default = function (dispose) {
    var c = this.children;
    while (!c.isEmpty()) {
      var child = this.removeChild_za3lpa$(this.numChildren - 1 | 0);
      if (dispose && Kotlin.isType(child, Disposable)) {
        child.dispose();
      }
    }
  };
  MutableParent.prototype.clearChildren_6taknv$ = function (dispose, callback$default) {
    if (dispose === void 0)
      dispose = true;
    callback$default ? callback$default(dispose) : this.clearChildren_6taknv$$default(dispose);
  };
  MutableParent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableParent',
    interfaces: [Parent]
  };
  function ParentBase() {
    this.parent_b430su$_0 = null;
    this._children_b430su$_0 = ArrayList_init();
  }
  Object.defineProperty(ParentBase.prototype, 'parent', {
    get: function () {
      return this.parent_b430su$_0;
    },
    set: function (parent) {
      this.parent_b430su$_0 = parent;
    }
  });
  Object.defineProperty(ParentBase.prototype, '_children', {
    get: function () {
      return this._children_b430su$_0;
    }
  });
  Object.defineProperty(ParentBase.prototype, 'children', {
    get: function () {
      return this._children;
    }
  });
  ParentBase.prototype.addChild_6dvupz$ = function (index, child) {
    var n = this._children.size;
    _assert(index <= n, 'index is out of bounds.');
    _assert(child.parent == null, 'Remove the child before adding it again.');
    this._children.add_wxm5ur$(index, child);
    child.parent = this;
    return child;
  };
  ParentBase.prototype.removeChild_za3lpa$ = function (index) {
    var c = this._children;
    var child = c.removeAt_za3lpa$(index);
    child.parent = null;
    return child;
  };
  ParentBase.prototype.swapChildren_vux9f0$ = function (indexA, indexB) {
    var c = this._children;
    var tmp = c.get_za3lpa$(indexA);
    c.set_wxm5ur$(indexA, c.get_za3lpa$(indexB));
    c.set_wxm5ur$(indexB, tmp);
  };
  function ParentBase$dispose$lambda(it) {
    it.parent = null;
    if (Kotlin.isType(it, Disposable))
      it.dispose();
    return true;
  }
  ParentBase.prototype.dispose = function () {
    this.iterateChildren_bwf5pq$(ParentBase$dispose$lambda);
  };
  ParentBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ParentBase',
    interfaces: [Disposable, MutableParent, Child]
  };
  function ConcurrentParent() {
    ParentBase.call(this);
    this._children_6b2948$_0 = ActiveList_init_0();
    this.childIterator_6b2948$_0 = this._children.iterator();
  }
  Object.defineProperty(ConcurrentParent.prototype, '_children', {
    get: function () {
      return this._children_6b2948$_0;
    }
  });
  Object.defineProperty(ConcurrentParent.prototype, 'children', {
    get: function () {
      return this._children;
    }
  });
  ConcurrentParent.prototype.iterateChildren_bwf5pq$ = function (body) {
    this.childIterator_6b2948$_0.iterate_ucl7l2$(body);
  };
  ConcurrentParent.prototype.iterateChildrenReversed_bwf5pq$ = function (body) {
    this.childIterator_6b2948$_0.iterateReversed_ucl7l2$(body);
  };
  ConcurrentParent.prototype.dispose = function () {
    ParentBase.prototype.dispose.call(this);
    this._children.dispose();
  };
  ConcurrentParent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ConcurrentParent',
    interfaces: [ParentBase, Disposable]
  };
  function TreeWalk(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TreeWalk_initFields() {
    TreeWalk_initFields = function () {
    };
    TreeWalk$CONTINUE_instance = new TreeWalk('CONTINUE', 0);
    TreeWalk$HALT_instance = new TreeWalk('HALT', 1);
    TreeWalk$SKIP_instance = new TreeWalk('SKIP', 2);
    TreeWalk$ISOLATE_instance = new TreeWalk('ISOLATE', 3);
  }
  var TreeWalk$CONTINUE_instance;
  function TreeWalk$CONTINUE_getInstance() {
    TreeWalk_initFields();
    return TreeWalk$CONTINUE_instance;
  }
  var TreeWalk$HALT_instance;
  function TreeWalk$HALT_getInstance() {
    TreeWalk_initFields();
    return TreeWalk$HALT_instance;
  }
  var TreeWalk$SKIP_instance;
  function TreeWalk$SKIP_getInstance() {
    TreeWalk_initFields();
    return TreeWalk$SKIP_instance;
  }
  var TreeWalk$ISOLATE_instance;
  function TreeWalk$ISOLATE_getInstance() {
    TreeWalk_initFields();
    return TreeWalk$ISOLATE_instance;
  }
  TreeWalk.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TreeWalk',
    interfaces: [Enum]
  };
  function TreeWalk$values() {
    return [TreeWalk$CONTINUE_getInstance(), TreeWalk$HALT_getInstance(), TreeWalk$SKIP_getInstance(), TreeWalk$ISOLATE_getInstance()];
  }
  TreeWalk.values = TreeWalk$values;
  function TreeWalk$valueOf(name) {
    switch (name) {
      case 'CONTINUE':
        return TreeWalk$CONTINUE_getInstance();
      case 'HALT':
        return TreeWalk$HALT_getInstance();
      case 'SKIP':
        return TreeWalk$SKIP_getInstance();
      case 'ISOLATE':
        return TreeWalk$ISOLATE_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.TreeWalk.' + name);
    }
  }
  TreeWalk.valueOf_61zpoe$ = TreeWalk$valueOf;
  function childWalkLevelOrder$lambda(closure$openList) {
    return function (it) {
      closure$openList.add_11rb$(it);
      return true;
    };
  }
  var childWalkLevelOrder_0 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.childWalkLevelOrder_ym7dh1$', function ($receiver, callback, reversed) {
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      var treeWalk = callback(next);
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), reversed) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  });
  var childWalkLevelOrder = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.childWalkLevelOrder_xwrp08$', function ($receiver, callback) {
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      var treeWalk = callback(next);
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  });
  var childWalkLevelOrderReversed = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.childWalkLevelOrderReversed_xwrp08$', function ($receiver, callback) {
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      var treeWalk = callback(next);
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), true) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  });
  function findChildLevelOrder$lambda(closure$callback, closure$foundItem) {
    return function (it) {
      if (closure$callback(it)) {
        closure$foundItem.v = it;
        return _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        return _.com.acornui.core.TreeWalk.CONTINUE;
      }
    };
  }
  var findChildLevelOrder = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.findChildLevelOrder_wi81li$', function ($receiver, callback, reversed) {
    var foundItem = {v: null};
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      var callback$result;
      if (callback(next)) {
        foundItem.v = next;
        callback$result = _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        callback$result = _.com.acornui.core.TreeWalk.CONTINUE;
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), reversed) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    return foundItem.v;
  });
  var findChildLevelOrder_0 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.findChildLevelOrder_j0gpex$', function ($receiver, callback) {
    var foundItem = {v: null};
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      var callback$result;
      if (callback(next)) {
        foundItem.v = next;
        callback$result = _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        callback$result = _.com.acornui.core.TreeWalk.CONTINUE;
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    return foundItem.v;
  });
  var findLastChildLevelOrder = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.findLastChildLevelOrder_j0gpex$', function ($receiver, callback) {
    var foundItem = {v: null};
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      var callback$result;
      if (callback(next)) {
        foundItem.v = next;
        callback$result = _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        callback$result = _.com.acornui.core.TreeWalk.CONTINUE;
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), true) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    return foundItem.v;
  });
  function childWalkPreOrder$lambda(closure$openList) {
    return function (it) {
      closure$openList.add_11rb$(it);
      return true;
    };
  }
  var childWalkPreOrder_0 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.childWalkPreOrder_ym7dh1$', function ($receiver, callback, reversed) {
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var treeWalk = callback(next);
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !reversed) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  });
  var childWalkPreOrder = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.childWalkPreOrder_xwrp08$', function ($receiver, callback) {
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var treeWalk = callback(next);
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  });
  var childWalkPreOrderReversed = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.childWalkPreOrderReversed_xwrp08$', function ($receiver, callback) {
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var treeWalk = callback(next);
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !true) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  });
  function findChildPreOrder$lambda(closure$callback, closure$foundItem) {
    return function (it) {
      if (closure$callback(it)) {
        closure$foundItem.v = it;
        return _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        return _.com.acornui.core.TreeWalk.CONTINUE;
      }
    };
  }
  var findChildPreOrder = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.findChildPreOrder_wi81li$', function ($receiver, callback, reversed) {
    var foundItem = {v: null};
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var callback$result;
      if (callback(next)) {
        foundItem.v = next;
        callback$result = _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        callback$result = _.com.acornui.core.TreeWalk.CONTINUE;
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !reversed) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    return foundItem.v;
  });
  var findChildPreOrder_0 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.findChildPreOrder_j0gpex$', function ($receiver, callback) {
    var foundItem = {v: null};
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var callback$result;
      if (callback(next)) {
        foundItem.v = next;
        callback$result = _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        callback$result = _.com.acornui.core.TreeWalk.CONTINUE;
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    return foundItem.v;
  });
  var findLastChildPreOrder = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.findLastChildPreOrder_j0gpex$', function ($receiver, callback) {
    var foundItem = {v: null};
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var callback$result;
      if (callback(next)) {
        foundItem.v = next;
        callback$result = _.com.acornui.core.TreeWalk.HALT;
      }
       else {
        callback$result = _.com.acornui.core.TreeWalk.CONTINUE;
      }
      var treeWalk = callback$result;
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !true) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    return foundItem.v;
  });
  var parentWalk = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.parentWalk_j0gpex$', function ($receiver, callback) {
    var tmp$;
    var p = $receiver;
    while (p != null) {
      var shouldContinue = callback(p);
      if (!shouldContinue)
        return;
      p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
    }
  });
  function root($receiver) {
    var root_0 = $receiver;
    var p = $receiver;
    while (p != null) {
      root_0 = p;
      p = p.parent;
    }
    return root_0;
  }
  function ancestryCount($receiver) {
    var count = 0;
    var p = $receiver.parent;
    while (p != null) {
      count = count + 1 | 0;
      p = p.parent;
    }
    return count;
  }
  function ancestry($receiver, out) {
    out.clear();
    parentWalk$break: {
      var tmp$;
      var p = $receiver;
      while (p != null) {
        out.add_11rb$(p);
        var shouldContinue = true;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    return out;
  }
  function isAncestorOf($receiver, child) {
    var isAncestor = {v: false};
    parentWalk$break: {
      var tmp$;
      var p = child;
      while (p != null) {
        isAncestor.v = p === $receiver;
        var shouldContinue = !isAncestor.v;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    return isAncestor.v;
  }
  function isDescendantOf($receiver, ancestor) {
    if (Kotlin.isType(ancestor, Parent)) {
      return isAncestorOf(ancestor, $receiver);
    }
     else {
      return false;
    }
  }
  function findCommonParent($receiver, other) {
    if ($receiver === other)
      throw new Exception('this == other');
    parentWalk$break: {
      var tmp$;
      var p = $receiver;
      while (p != null) {
        var parentA = p;
        parentWalk$break_0: {
          var tmp$_0;
          var p_0 = other;
          while (p_0 != null) {
            var tmp$_1;
            if (parentA === p_0)
              return Kotlin.isType(tmp$_1 = parentA, Parent) ? tmp$_1 : Kotlin.throwCCE();
            var shouldContinue_0 = true;
            if (!shouldContinue_0)
              break parentWalk$break_0;
            p_0 = (tmp$_0 = p_0.parent) == null || Kotlin.isType(tmp$_0, _.com.acornui.core.Child) ? tmp$_0 : Kotlin.throwCCE();
          }
        }
        var shouldContinue = true;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    return null;
  }
  function leftDescendant($receiver) {
    var tmp$;
    if (Kotlin.isType($receiver, Parent)) {
      if ($receiver.children.isEmpty())
        return $receiver;
      return Kotlin.isType(tmp$ = leftDescendant(first($receiver.children)), Child) ? tmp$ : Kotlin.throwCCE();
    }
     else {
      return $receiver;
    }
  }
  function rightDescendant($receiver) {
    var tmp$;
    if (Kotlin.isType($receiver, Parent)) {
      if ($receiver.children.isEmpty())
        return $receiver;
      return Kotlin.isType(tmp$ = rightDescendant(last($receiver.children)), Child) ? tmp$ : Kotlin.throwCCE();
    }
     else {
      return $receiver;
    }
  }
  function previousSibling($receiver) {
    var tmp$, tmp$_0;
    if ($receiver.parent == null)
      return null;
    var children = ((tmp$ = $receiver.parent) != null ? tmp$ : Kotlin.throwNPE()).children;
    var index = children.indexOf_11rb$($receiver);
    if (index === 0) {
      return null;
    }
     else {
      return Kotlin.isType(tmp$_0 = children.get_za3lpa$(index - 1 | 0), Child) ? tmp$_0 : Kotlin.throwCCE();
    }
  }
  function nextSibling($receiver) {
    var tmp$, tmp$_0;
    if ($receiver.parent == null)
      return null;
    var children = ((tmp$ = $receiver.parent) != null ? tmp$ : Kotlin.throwNPE()).children;
    var index = children.indexOf_11rb$($receiver);
    if (index === get_lastIndex(children)) {
      return null;
    }
     else {
      return Kotlin.isType(tmp$_0 = children.get_za3lpa$(index + 1 | 0), Child) ? tmp$_0 : Kotlin.throwCCE();
    }
  }
  function isBefore($receiver, other) {
    if ($receiver === other)
      throw new Exception('this == other');
    var a = {v: $receiver};
    parentWalk$break: {
      var tmp$;
      var p = $receiver;
      while (p != null) {
        var parentA = p;
        var b = {v: $receiver};
        parentWalk$break_0: {
          var tmp$_0;
          var p_0 = other;
          while (p_0 != null) {
            var parentB = p_0;
            var tmp$_1;
            if (parentA === parentB) {
              var children = (Kotlin.isType(tmp$_1 = parentA, Parent) ? tmp$_1 : Kotlin.throwCCE()).children;
              var indexA = children.indexOf_11rb$(a.v);
              var indexB = children.indexOf_11rb$(b.v);
              return indexA < indexB;
            }
            b.v = parentB;
            var shouldContinue_0 = true;
            if (!shouldContinue_0)
              break parentWalk$break_0;
            p_0 = (tmp$_0 = p_0.parent) == null || Kotlin.isType(tmp$_0, _.com.acornui.core.Child) ? tmp$_0 : Kotlin.throwCCE();
          }
        }
        a.v = parentA;
        var shouldContinue = true;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    throw new Exception('No common ancestor');
  }
  function isAfter($receiver, other) {
    if ($receiver === other)
      throw new Exception('this === other');
    var a = {v: $receiver};
    parentWalk$break: {
      var tmp$;
      var p = $receiver;
      while (p != null) {
        var parentA = p;
        var b = {v: $receiver};
        parentWalk$break_0: {
          var tmp$_0;
          var p_0 = other;
          while (p_0 != null) {
            var parentB = p_0;
            var tmp$_1;
            if (parentA === parentB) {
              var children = (Kotlin.isType(tmp$_1 = parentA, Parent) ? tmp$_1 : Kotlin.throwCCE()).children;
              var indexA = children.indexOf_11rb$(a.v);
              var indexB = children.indexOf_11rb$(b.v);
              return indexA > indexB;
            }
            b.v = parentB;
            var shouldContinue_0 = true;
            if (!shouldContinue_0)
              break parentWalk$break_0;
            p_0 = (tmp$_0 = p_0.parent) == null || Kotlin.isType(tmp$_0, _.com.acornui.core.Child) ? tmp$_0 : Kotlin.throwCCE();
          }
        }
        a.v = parentA;
        var shouldContinue = true;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    throw new Exception('No common ancestor');
  }
  function I18n() {
    I18n$Companion_getInstance();
  }
  function I18n$Companion() {
    I18n$Companion_instance = this;
  }
  I18n$Companion.prototype.factory_r456d0$ = function (injector) {
    return new I18nImpl();
  };
  I18n$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var I18n$Companion_instance = null;
  function I18n$Companion_getInstance() {
    if (I18n$Companion_instance === null) {
      new I18n$Companion();
    }
    return I18n$Companion_instance;
  }
  I18n.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'I18n',
    interfaces: []
  };
  function I18nBundle() {
  }
  I18nBundle.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'I18nBundle',
    interfaces: []
  };
  function i18n$lambda(closure$bundle, closure$callback) {
    return function (it) {
      closure$bundle.changed.remove_trkh7z$(closure$callback);
    };
  }
  function i18n($receiver, bundleName, callback) {
    var bundle = loadBundle($receiver, bundleName);
    bundle.changed.add_trkh7z$(callback);
    $receiver.disposed.addOnce_trkh7z$(i18n$lambda(bundle, callback));
    callback(bundle);
  }
  function I18nImpl() {
    this._bundleChanged = new Signal2();
    this._bundleValues_0 = HashMap_init();
    this._bundles_0 = HashMap_init();
    this._currentLocaleChanged_0 = new Signal2();
    this._currentLocale_0 = '';
    var $receiver = this._bundles_0;
    var value = HashMap_init();
    $receiver.put_xwzc9p$('', value);
  }
  Object.defineProperty(I18nImpl.prototype, 'bundleChanged', {
    get: function () {
      return this._bundleChanged;
    }
  });
  Object.defineProperty(I18nImpl.prototype, 'currentLocaleChanged', {
    get: function () {
      return this._currentLocaleChanged_0;
    }
  });
  Object.defineProperty(I18nImpl.prototype, 'currentLocale', {
    get: function () {
      return this._currentLocale_0;
    },
    set: function (value) {
      var tmp$;
      if (Kotlin.equals(this._currentLocale_0, value))
        return;
      var oldLocale = this._currentLocale_0;
      this._currentLocale_0 = value;
      var bundles = this._bundleValues_0.get_11rb$(value);
      if (bundles != null) {
        tmp$ = bundles.keys.iterator();
        while (tmp$.hasNext()) {
          var bundleName = tmp$.next();
          this._bundleChanged.dispatch_xwzc9p$(value, bundleName);
        }
      }
      this._currentLocaleChanged_0.dispatch_xwzc9p$(oldLocale, value);
    }
  });
  I18nImpl.prototype.getBundle_61zpoe$ = function (bundleName) {
    var tmp$, tmp$_0;
    var bundles = (tmp$ = this._bundles_0.get_11rb$('')) != null ? tmp$ : Kotlin.throwNPE();
    var tmp$_1;
    if (!(Kotlin.isType(tmp$_1 = bundles, Kotlin.kotlin.collections.Map) ? tmp$_1 : Kotlin.throwCCE()).containsKey_11rb$(bundleName)) {
      var value = new I18nBundleImpl(this, null, bundleName);
      bundles.put_xwzc9p$(bundleName, value);
    }
    return (tmp$_0 = bundles.get_11rb$(bundleName)) != null ? tmp$_0 : Kotlin.throwNPE();
  };
  I18nImpl.prototype.getBundle_puj7f4$ = function (locale, bundleName) {
    var tmp$, tmp$_0;
    var $receiver = this._bundles_0;
    var tmp$_1;
    if (!(Kotlin.isType(tmp$_1 = $receiver, Kotlin.kotlin.collections.Map) ? tmp$_1 : Kotlin.throwCCE()).containsKey_11rb$(locale)) {
      var $receiver_0 = this._bundles_0;
      var value = HashMap_init();
      $receiver_0.put_xwzc9p$(locale, value);
    }
    var bundles = (tmp$ = this._bundles_0.get_11rb$(locale)) != null ? tmp$ : Kotlin.throwNPE();
    var tmp$_2;
    if (!(Kotlin.isType(tmp$_2 = bundles, Kotlin.kotlin.collections.Map) ? tmp$_2 : Kotlin.throwCCE()).containsKey_11rb$(bundleName)) {
      var value_0 = new I18nBundleImpl(this, null, bundleName);
      bundles.put_xwzc9p$(bundleName, value_0);
    }
    return (tmp$_0 = bundles.get_11rb$(bundleName)) != null ? tmp$_0 : Kotlin.throwNPE();
  };
  I18nImpl.prototype.setBundleValues_hq2gfh$ = function (locale, bundleName, values) {
    var tmp$, tmp$_0;
    var $receiver = this._bundleValues_0;
    var tmp$_1;
    if (!(Kotlin.isType(tmp$_1 = $receiver, Kotlin.kotlin.collections.Map) ? tmp$_1 : Kotlin.throwCCE()).containsKey_11rb$(locale)) {
      var $receiver_0 = this._bundleValues_0;
      var value = HashMap_init();
      $receiver_0.put_xwzc9p$(locale, value);
    }
    if (((tmp$ = this._bundleValues_0.get_11rb$(locale)) != null ? tmp$ : Kotlin.throwNPE()).get_11rb$(bundleName) === values)
      return;
    ((tmp$_0 = this._bundleValues_0.get_11rb$(locale)) != null ? tmp$_0 : Kotlin.throwNPE()).put_xwzc9p$(bundleName, values);
    this._bundleChanged.dispatch_xwzc9p$(locale, bundleName);
  };
  I18nImpl.prototype.getString_6hosri$ = function (locale, bundleName, key) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    return (tmp$_3 = (tmp$_0 = (tmp$ = this._bundleValues_0.get_11rb$(locale)) != null ? tmp$.get_11rb$(bundleName) : null) != null ? tmp$_0.get_11rb$(key) : null) != null ? tmp$_3 : (tmp$_2 = (tmp$_1 = this._bundleValues_0.get_11rb$('')) != null ? tmp$_1.get_11rb$(bundleName) : null) != null ? tmp$_2.get_11rb$(key) : null;
  };
  I18nImpl.prototype.getString_puj7f4$ = function (bundleName, key) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    return (tmp$_3 = (tmp$_0 = (tmp$ = this._bundleValues_0.get_11rb$(this.currentLocale)) != null ? tmp$.get_11rb$(bundleName) : null) != null ? tmp$_0.get_11rb$(key) : null) != null ? tmp$_3 : (tmp$_2 = (tmp$_1 = this._bundleValues_0.get_11rb$('')) != null ? tmp$_1.get_11rb$(bundleName) : null) != null ? tmp$_2.get_11rb$(key) : null;
  };
  I18nImpl.prototype.dispose = function () {
    this._bundleChanged.dispose();
  };
  I18nImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'I18nImpl',
    interfaces: [Disposable, I18n]
  };
  function I18nBundleImpl(i18n_0, locale, bundleName) {
    this.i18n = i18n_0;
    this.locale = locale;
    this.bundleName = bundleName;
    this._changed_0 = new Signal1();
    this.i18n.bundleChanged.add_trkh7z$(Kotlin.getCallableRef('bundleChangedHandler', function ($receiver, locale_0, bundleName_0) {
      return $receiver.bundleChangedHandler_0(locale_0, bundleName_0);
    }.bind(null, this)));
  }
  Object.defineProperty(I18nBundleImpl.prototype, 'changed', {
    get: function () {
      return this._changed_0;
    }
  });
  I18nBundleImpl.prototype.bundleChangedHandler_0 = function (locale, bundleName) {
    if (Kotlin.equals(bundleName, this.bundleName) && (this.locale == null || Kotlin.equals(this.locale, locale))) {
      this._changed_0.dispatch_11rb$(this);
    }
  };
  I18nBundleImpl.prototype.get_61zpoe$ = function (key) {
    return this.i18n.getString_puj7f4$(this.bundleName, key);
  };
  I18nBundleImpl.prototype.dispose = function () {
    this.i18n.bundleChanged.remove_trkh7z$(Kotlin.getCallableRef('bundleChangedHandler', function ($receiver, locale, bundleName) {
      return $receiver.bundleChangedHandler_0(locale, bundleName);
    }.bind(null, this)));
    this._changed_0.dispose();
  };
  I18nBundleImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'I18nBundleImpl',
    interfaces: [Disposable, I18nBundle]
  };
  var i18nPath;
  var i18nDefaultPath;
  function loadBundle$lambda(closure$bundleName, closure$path, closure$defaultPath, this$loadBundle) {
    return function (oldLocale, newLocale) {
      _loadBundle(this$loadBundle, newLocale, closure$bundleName, closure$path, closure$defaultPath);
    };
  }
  function loadBundle($receiver, bundleName, path, defaultPath) {
    if (path === void 0)
      path = i18nPath;
    if (defaultPath === void 0)
      defaultPath = i18nDefaultPath;
    var i18n_0 = inject($receiver, I18n$Companion_getInstance());
    if (i18n_0.currentLocale.length > 0)
      _loadBundle($receiver, '', bundleName, path, defaultPath);
    _loadBundle($receiver, i18n_0.currentLocale, bundleName, path, defaultPath);
    i18n_0.currentLocaleChanged.add_trkh7z$(loadBundle$lambda(bundleName, path, defaultPath, $receiver));
    return i18n_0.getBundle_61zpoe$(bundleName);
  }
  function loadBundleForLocale$lambda(closure$i18n, closure$locale, closure$bundleName) {
    return function (it) {
      closure$i18n.setBundleValues_hq2gfh$(closure$locale, closure$bundleName, it.result);
    };
  }
  function loadBundleForLocale($receiver, locale, bundleName, path) {
    if (path === void 0)
      path = 'assets/i18n/{bundleName}_{locale}.properties';
    if (locale.length === 0)
      throw new IllegalArgumentException('locale may not be empty.');
    var i18n_0 = inject($receiver, I18n$Companion_getInstance());
    var path2 = replace2(replace2(path, '{locale}', locale), '{bundleName}', bundleName);
    onSuccess(loadDecorated_0($receiver, path2, AssetTypes_getInstance().TEXT, PropertiesDecorator_getInstance()), loadBundleForLocale$lambda(i18n_0, locale, bundleName));
    return i18n_0.getBundle_puj7f4$(locale, bundleName);
  }
  function _loadBundle$lambda(closure$i18n, closure$locale, closure$bundleName) {
    return function (it) {
      closure$i18n.setBundleValues_hq2gfh$(closure$locale, closure$bundleName, it.result);
    };
  }
  function _loadBundle($receiver, locale, bundleName, path, defaultPath) {
    var tmp$;
    var i18n_0 = inject($receiver, I18n$Companion_getInstance());
    if (locale.length === 0) {
      tmp$ = replace2(defaultPath, '{bundleName}', bundleName);
    }
     else {
      tmp$ = replace2(replace2(path, '{locale}', locale), '{bundleName}', bundleName);
    }
    var path2 = tmp$;
    onSuccess(loadDecorated_0($receiver, path2, AssetTypes_getInstance().TEXT, PropertiesDecorator_getInstance()), _loadBundle$lambda(i18n_0, locale, bundleName));
  }
  function PropertiesDecorator() {
    PropertiesDecorator_instance = this;
  }
  PropertiesDecorator.prototype.decorate_11rb$ = function (target) {
    var map = HashMap_init();
    var parser = new StringParser(target);
    while (parser.hasNext) {
      var $receiver = parser.readLine();
      var tmp$;
      var line_1 = Kotlin.kotlin.text.trimStart_gw00vp$(Kotlin.isCharSequence(tmp$ = $receiver) ? tmp$ : Kotlin.throwCCE()).toString();
      if (startsWith_0(line_1, 35) || startsWith_0(line_1, 33)) {
        continue;
      }
      var separatorIndex = indexOf_1(line_1, 61);
      if (separatorIndex === -1)
        continue;
      var $receiver_0 = line_1.substring(0, separatorIndex);
      var tmp$_0;
      var key = Kotlin.kotlin.text.trim_gw00vp$(Kotlin.isCharSequence(tmp$_0 = $receiver_0) ? tmp$_0 : Kotlin.throwCCE()).toString();
      var startIndex = separatorIndex + 1 | 0;
      var value = line_1.substring(startIndex);
      while (endsWith(value, 92)) {
        var $receiver_1 = value;
        var endIndex = value.length - 1 | 0;
        value = $receiver_1.substring(0, endIndex) + String.fromCharCode(10) + parser.readLine();
      }
      var value_0 = removeBackslashes(value);
      map.put_xwzc9p$(key, value_0);
    }
    return map;
  };
  PropertiesDecorator.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'PropertiesDecorator',
    interfaces: [Decorator]
  };
  var PropertiesDecorator_instance = null;
  function PropertiesDecorator_getInstance() {
    if (PropertiesDecorator_instance === null) {
      new PropertiesDecorator();
    }
    return PropertiesDecorator_instance;
  }
  function Ascii() {
    Ascii_instance = this;
    this.NUM_0 = 48;
    this.NUM_1 = 49;
    this.NUM_2 = 50;
    this.NUM_3 = 51;
    this.NUM_4 = 52;
    this.NUM_5 = 53;
    this.NUM_6 = 54;
    this.NUM_7 = 55;
    this.NUM_8 = 56;
    this.NUM_9 = 57;
    this.A = 65;
    this.B = 66;
    this.C = 67;
    this.D = 68;
    this.E = 69;
    this.F = 70;
    this.G = 71;
    this.H = 72;
    this.I = 73;
    this.J = 74;
    this.K = 75;
    this.L = 76;
    this.M = 77;
    this.N = 78;
    this.O = 79;
    this.P = 80;
    this.Q = 81;
    this.R = 82;
    this.S = 83;
    this.T = 84;
    this.U = 85;
    this.V = 86;
    this.W = 87;
    this.X = 88;
    this.Y = 89;
    this.Z = 90;
    this.NUMPAD_0 = 96;
    this.NUMPAD_1 = 97;
    this.NUMPAD_2 = 98;
    this.NUMPAD_3 = 99;
    this.NUMPAD_4 = 100;
    this.NUMPAD_5 = 101;
    this.NUMPAD_6 = 102;
    this.NUMPAD_7 = 103;
    this.NUMPAD_8 = 104;
    this.NUMPAD_9 = 105;
    this.F1 = 112;
    this.F2 = 113;
    this.F3 = 114;
    this.F4 = 115;
    this.F5 = 116;
    this.F6 = 117;
    this.F7 = 118;
    this.F8 = 119;
    this.F9 = 120;
    this.F10 = 121;
    this.F11 = 122;
    this.F12 = 123;
    this.F13 = 124;
    this.F14 = 125;
    this.F15 = 126;
    this.F16 = 127;
    this.F17 = 128;
    this.F18 = 129;
    this.F19 = 130;
    this.F20 = 131;
    this.F21 = 132;
    this.F22 = 133;
    this.F23 = 134;
    this.F24 = 135;
    this.ALT = 18;
    this.CONTROL = 17;
    this.SHIFT = 16;
    this.META = 91;
    this.ADD = 107;
    this.BACK_QUOTE = 192;
    this.BACK_SLASH = 220;
    this.BACKSPACE = 8;
    this.CANCEL = 3;
    this.CAPS_LOCK = 20;
    this.CLEAR = 12;
    this.CLOSE_BRACKET = 221;
    this.COMMA = 188;
    this.CONTEXT_MENU = 93;
    this.DASH = 189;
    this.DECIMAL = 110;
    this.DELETE = 46;
    this.DIVIDE = 111;
    this.DOWN = 40;
    this.END = 35;
    this.ENTER = 14;
    this.EQUALS = 187;
    this.ESCAPE = 27;
    this.HELP = 6;
    this.HOME = 36;
    this.INSERT = 45;
    this.LEFT = 37;
    this.MULTIPLY = 106;
    this.NUM_LOCK = 144;
    this.OPEN_BRACKET = 219;
    this.PAGE_DOWN = 34;
    this.PAGE_UP = 33;
    this.PAUSE = 19;
    this.PERIOD = 190;
    this.PRINT_SCREEN = 44;
    this.QUOTE = 222;
    this.RETURN = 13;
    this.RIGHT = 39;
    this.SCROLL_LOCK = 145;
    this.SEMICOLON = 59;
    this.SEPARATOR = 108;
    this.SLASH = 191;
    this.SPACE = 32;
    this.SUBTRACT = 109;
    this.TAB = 9;
    this.UP = 38;
    this.keyNames$delegate = lazy(LazyThreadSafetyMode.NONE, Ascii$keyNames$lambda(this));
  }
  Ascii.prototype.toString_za3lpa$ = function (keyCode) {
    if (keyCode < 0 || keyCode > 512)
      return null;
    if (keyCode === this.NUM_0)
      return '0';
    else if (keyCode === this.NUM_1)
      return '1';
    else if (keyCode === this.NUM_2)
      return '2';
    else if (keyCode === this.NUM_3)
      return '3';
    else if (keyCode === this.NUM_4)
      return '4';
    else if (keyCode === this.NUM_5)
      return '5';
    else if (keyCode === this.NUM_6)
      return '6';
    else if (keyCode === this.NUM_7)
      return '7';
    else if (keyCode === this.NUM_8)
      return '8';
    else if (keyCode === this.NUM_9)
      return '9';
    else if (keyCode === this.A)
      return 'A';
    else if (keyCode === this.B)
      return 'B';
    else if (keyCode === this.C)
      return 'C';
    else if (keyCode === this.D)
      return 'D';
    else if (keyCode === this.E)
      return 'E';
    else if (keyCode === this.F)
      return 'F';
    else if (keyCode === this.G)
      return 'G';
    else if (keyCode === this.H)
      return 'H';
    else if (keyCode === this.I)
      return 'I';
    else if (keyCode === this.J)
      return 'J';
    else if (keyCode === this.K)
      return 'K';
    else if (keyCode === this.L)
      return 'L';
    else if (keyCode === this.M)
      return 'M';
    else if (keyCode === this.N)
      return 'N';
    else if (keyCode === this.O)
      return 'O';
    else if (keyCode === this.P)
      return 'P';
    else if (keyCode === this.Q)
      return 'Q';
    else if (keyCode === this.R)
      return 'R';
    else if (keyCode === this.S)
      return 'S';
    else if (keyCode === this.T)
      return 'T';
    else if (keyCode === this.U)
      return 'U';
    else if (keyCode === this.V)
      return 'V';
    else if (keyCode === this.W)
      return 'W';
    else if (keyCode === this.X)
      return 'X';
    else if (keyCode === this.Y)
      return 'Y';
    else if (keyCode === this.Z)
      return 'Z';
    else if (keyCode === this.NUMPAD_0)
      return 'NUMPAD 0';
    else if (keyCode === this.NUMPAD_1)
      return 'NUMPAD 1';
    else if (keyCode === this.NUMPAD_2)
      return 'NUMPAD 2';
    else if (keyCode === this.NUMPAD_3)
      return 'NUMPAD 3';
    else if (keyCode === this.NUMPAD_4)
      return 'NUMPAD 4';
    else if (keyCode === this.NUMPAD_5)
      return 'NUMPAD 5';
    else if (keyCode === this.NUMPAD_6)
      return 'NUMPAD 6';
    else if (keyCode === this.NUMPAD_7)
      return 'NUMPAD 7';
    else if (keyCode === this.NUMPAD_8)
      return 'NUMPAD 8';
    else if (keyCode === this.NUMPAD_9)
      return 'NUMPAD 9';
    else if (keyCode === this.F1)
      return 'F1';
    else if (keyCode === this.F2)
      return 'F2';
    else if (keyCode === this.F3)
      return 'F3';
    else if (keyCode === this.F4)
      return 'F4';
    else if (keyCode === this.F5)
      return 'F5';
    else if (keyCode === this.F6)
      return 'F6';
    else if (keyCode === this.F7)
      return 'F7';
    else if (keyCode === this.F8)
      return 'F8';
    else if (keyCode === this.F9)
      return 'F9';
    else if (keyCode === this.F10)
      return 'F10';
    else if (keyCode === this.F11)
      return 'F11';
    else if (keyCode === this.F12)
      return 'F12';
    else if (keyCode === this.F13)
      return 'F13';
    else if (keyCode === this.F14)
      return 'F14';
    else if (keyCode === this.F15)
      return 'F15';
    else if (keyCode === this.F16)
      return 'F16';
    else if (keyCode === this.F17)
      return 'F17';
    else if (keyCode === this.F18)
      return 'F18';
    else if (keyCode === this.F19)
      return 'F19';
    else if (keyCode === this.F20)
      return 'F20';
    else if (keyCode === this.F21)
      return 'F21';
    else if (keyCode === this.F22)
      return 'F22';
    else if (keyCode === this.F23)
      return 'F23';
    else if (keyCode === this.F24)
      return 'F24';
    else if (keyCode === this.ALT)
      return 'ALT';
    else if (keyCode === this.CONTROL)
      return 'CONTROL';
    else if (keyCode === this.SHIFT)
      return 'SHIFT';
    else if (keyCode === this.META)
      return 'META';
    else if (keyCode === this.ADD)
      return 'ADD';
    else if (keyCode === this.BACK_QUOTE)
      return 'BACK_QUOTE';
    else if (keyCode === this.BACK_SLASH)
      return 'BACK_SLASH';
    else if (keyCode === this.BACKSPACE)
      return 'BACKSPACE';
    else if (keyCode === this.CANCEL)
      return 'CANCEL';
    else if (keyCode === this.CAPS_LOCK)
      return 'CAPS_LOCK';
    else if (keyCode === this.CLEAR)
      return 'CLEAR';
    else if (keyCode === this.CLOSE_BRACKET)
      return 'CLOSE_BRACKET';
    else if (keyCode === this.COMMA)
      return 'COMMA';
    else if (keyCode === this.CONTEXT_MENU)
      return 'CONTEXT_MENU';
    else if (keyCode === this.DASH)
      return 'DASH';
    else if (keyCode === this.DECIMAL)
      return 'DECIMAL';
    else if (keyCode === this.DELETE)
      return 'DELETE';
    else if (keyCode === this.DIVIDE)
      return 'DIVIDE';
    else if (keyCode === this.DOWN)
      return 'DOWN';
    else if (keyCode === this.END)
      return 'END';
    else if (keyCode === this.ENTER)
      return 'ENTER';
    else if (keyCode === this.EQUALS)
      return 'EQUALS';
    else if (keyCode === this.ESCAPE)
      return 'ESCAPE';
    else if (keyCode === this.HELP)
      return 'HELP';
    else if (keyCode === this.HOME)
      return 'HOME';
    else if (keyCode === this.INSERT)
      return 'INSERT';
    else if (keyCode === this.LEFT)
      return 'LEFT';
    else if (keyCode === this.MULTIPLY)
      return 'MULTIPLY';
    else if (keyCode === this.NUM_LOCK)
      return 'NUM_LOCK';
    else if (keyCode === this.OPEN_BRACKET)
      return 'OPEN_BRACKET';
    else if (keyCode === this.PAGE_DOWN)
      return 'PAGE_DOWN';
    else if (keyCode === this.PAGE_UP)
      return 'PAGE_UP';
    else if (keyCode === this.PAUSE)
      return 'PAUSE';
    else if (keyCode === this.PERIOD)
      return 'PERIOD';
    else if (keyCode === this.PRINT_SCREEN)
      return 'PRINT_SCREEN';
    else if (keyCode === this.QUOTE)
      return 'QUOTE';
    else if (keyCode === this.RETURN)
      return 'RETURN';
    else if (keyCode === this.RIGHT)
      return 'RIGHT';
    else if (keyCode === this.SCROLL_LOCK)
      return 'SCROLL_LOCK';
    else if (keyCode === this.SEMICOLON)
      return 'SEMICOLON';
    else if (keyCode === this.SEPARATOR)
      return 'SEPARATOR';
    else if (keyCode === this.SLASH)
      return 'SLASH';
    else if (keyCode === this.SPACE)
      return 'SPACE';
    else if (keyCode === this.SUBTRACT)
      return 'SUBTRACT';
    else if (keyCode === this.TAB)
      return 'TAB';
    else if (keyCode === this.UP)
      return 'UP';
    else
      return null;
  };
  Object.defineProperty(Ascii.prototype, 'keyNames_0', {
    get: function () {
      var $receiver = this.keyNames$delegate;
      new Kotlin.PropertyMetadata('keyNames');
      return $receiver.value;
    }
  });
  Ascii.prototype.valueOf_61zpoe$ = function (keyName) {
    var tmp$;
    return (tmp$ = this.keyNames_0.get_11rb$(keyName.toUpperCase())) != null ? tmp$ : -1;
  };
  function Ascii$keyNames$lambda(this$Ascii) {
    return function () {
      var keyNames = HashMap_init();
      for (var i = 0; i <= 512; i++) {
        var name = this$Ascii.toString_za3lpa$(i);
        if (name != null)
          keyNames.put_xwzc9p$(name, i);
      }
      return keyNames;
    };
  }
  Ascii.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Ascii',
    interfaces: []
  };
  var Ascii_instance = null;
  function Ascii_getInstance() {
    if (Ascii_instance === null) {
      new Ascii();
    }
    return Ascii_instance;
  }
  function mouseDown($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, MouseInteraction$Companion_getInstance().MOUSE_DOWN, isCapture);
  }
  function mouseUp($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, MouseInteraction$Companion_getInstance().MOUSE_UP, isCapture);
  }
  function mouseMove($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, MouseInteraction$Companion_getInstance().MOUSE_MOVE, isCapture);
  }
  function keyDown($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, KeyInteraction$Companion_getInstance().KEY_DOWN, isCapture);
  }
  function keyUp($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, KeyInteraction$Companion_getInstance().KEY_UP, isCapture);
  }
  function mouseOver($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, MouseInteraction$Companion_getInstance().MOUSE_OVER, isCapture);
  }
  function mouseOut($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, MouseInteraction$Companion_getInstance().MOUSE_OUT, isCapture);
  }
  function wheel($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, WheelInteraction$Companion_getInstance().MOUSE_WHEEL, isCapture);
  }
  function touchStart($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, TouchInteraction$Companion_getInstance().TOUCH_START, isCapture);
  }
  function touchMove($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, TouchInteraction$Companion_getInstance().TOUCH_MOVE, isCapture);
  }
  function touchEnd($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, TouchInteraction$Companion_getInstance().TOUCH_END, isCapture);
  }
  function touchCancel($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, TouchInteraction$Companion_getInstance().TOUCH_CANCEL, isCapture);
  }
  function clipboardCopy($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClipboardInteraction$Companion_getInstance().COPY, isCapture);
  }
  function clipboardCut($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClipboardInteraction$Companion_getInstance().CUT, isCapture);
  }
  function clipboardPaste($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClipboardInteraction$Companion_getInstance().PASTE, isCapture);
  }
  function CharInteraction() {
    InteractionEventBase.call(this);
    this.char = Kotlin.unboxChar(Kotlin.toChar(0));
  }
  CharInteraction.prototype.set_askmzv$ = function (other) {
    this.char = Kotlin.unboxChar(other.char);
  };
  CharInteraction.prototype.clear = function () {
    InteractionEventBase.prototype.clear.call(this);
    this.char = Kotlin.unboxChar(Kotlin.toChar(0));
  };
  CharInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CharInteraction',
    interfaces: [InteractionEventBase]
  };
  function ClickEvent() {
    ClickEvent$Companion_getInstance();
    MouseInteraction.call(this);
    this.count = 0;
  }
  ClickEvent.prototype.clear = function () {
    MouseInteraction.prototype.clear.call(this);
    this.count = 0;
  };
  function ClickEvent$Companion() {
    ClickEvent$Companion_instance = this;
    this.LEFT_CLICK = new InteractionType('leftClick');
    this.RIGHT_CLICK = new InteractionType('rightClick');
    this.BACK_CLICK = new InteractionType('backClick');
    this.FORWARD_CLICK = new InteractionType('forwardClick');
    this.MIDDLE_CLICK = new InteractionType('middleClick');
  }
  ClickEvent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ClickEvent$Companion_instance = null;
  function ClickEvent$Companion_getInstance() {
    if (ClickEvent$Companion_instance === null) {
      new ClickEvent$Companion();
    }
    return ClickEvent$Companion_instance;
  }
  ClickEvent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ClickEvent',
    interfaces: [MouseInteraction]
  };
  function click($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClickEvent$Companion_getInstance().LEFT_CLICK, isCapture);
  }
  function rightClick($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClickEvent$Companion_getInstance().RIGHT_CLICK, isCapture);
  }
  function middleClick($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClickEvent$Companion_getInstance().MIDDLE_CLICK, isCapture);
  }
  function backClick($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClickEvent$Companion_getInstance().BACK_CLICK, isCapture);
  }
  function forwardClick($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuse($receiver, ClickEvent$Companion_getInstance().FORWARD_CLICK, isCapture);
  }
  var fakeClickEvent;
  function dispatchClick($receiver) {
    fakeClickEvent.clear();
    fakeClickEvent.type = ClickEvent$Companion_getInstance().LEFT_CLICK;
    fakeClickEvent.target = $receiver;
    fakeClickEvent.button = WhichButton$LEFT_getInstance();
    fakeClickEvent.timestamp = get_time().nowMs();
    fakeClickEvent.count = 1;
    inject($receiver, InteractivityManager$Companion_getInstance()).dispatch_z2oxuu$($receiver, fakeClickEvent);
  }
  function ClickDispatcher(injector) {
    this.injector_l7892c$_0 = injector;
    this.root_0 = inject(this, Stage$Companion_getInstance());
    this.interactivity_0 = inject(this, InteractivityManager$Companion_getInstance());
    this.multiClickSpeed = 400;
    this.downButtons_0 = Kotlin.newArrayF(6, ClickDispatcher$downButtons$lambda);
    this.clickEvent_0 = new ClickEvent();
    this.lastTarget_0 = null;
    this.currentCount_0 = 0;
    this.previousTimestamp_0 = Kotlin.Long.ZERO;
    this.touchMode_0 = false;
    this.rootMouseDownHandler_0 = ClickDispatcher$rootMouseDownHandler$lambda(this);
    this.rootTouchStartHandler_0 = ClickDispatcher$rootTouchStartHandler$lambda(this);
    this.preventMouseTimer_0 = null;
    this.rootTouchEndHandler_0 = ClickDispatcher$rootTouchEndHandler$lambda(this);
    this.rootTouchCancelHandler_0 = ClickDispatcher$rootTouchCancelHandler$lambda(this);
    this.rootMouseUpHandler_0 = ClickDispatcher$rootMouseUpHandler$lambda(this);
    mouseDown(this.root_0, true).add_trkh7z$(this.rootMouseDownHandler_0);
    touchStart(this.root_0, true).add_trkh7z$(this.rootTouchStartHandler_0);
    mouseUp(this.root_0).add_trkh7z$(this.rootMouseUpHandler_0);
    touchEnd(this.root_0).add_trkh7z$(this.rootTouchEndHandler_0);
    touchCancel(this.root_0, true).add_trkh7z$(this.rootTouchCancelHandler_0);
  }
  Object.defineProperty(ClickDispatcher.prototype, 'injector', {
    get: function () {
      return this.injector_l7892c$_0;
    }
  });
  ClickDispatcher.prototype.setDownElement_0 = function (downElement, ordinal) {
    var tmp$;
    if (!Kotlin.equals(this.lastTarget_0, downElement)) {
      this.lastTarget_0 = downElement;
      this.currentCount_0 = 1;
    }
    var ancestry_0 = Kotlin.isType(tmp$ = collection_0.arrayListPool.obtain(), ArrayList) ? tmp$ : Kotlin.throwCCE();
    ancestry(downElement, ancestry_0);
    this.downButtons_0[ordinal] = ancestry_0;
  };
  ClickDispatcher.prototype.release_5d4con$ = function (button_1, canvasX, canvasY, timestamp) {
    var tmp$;
    var downElements = this.downButtons_0[button_1.ordinal];
    if (downElements != null) {
      this.downButtons_0[button_1.ordinal] = null;
      tmp$ = get_lastIndex(downElements);
      for (var i = 0; i <= tmp$; i++) {
        var downElement = downElements.get_za3lpa$(i);
        if (downElement.containsCanvasPoint_dleff0$(canvasX, canvasY)) {
          if (timestamp.subtract(this.previousTimestamp_0).compareTo_11rb$(Kotlin.Long.fromInt(this.multiClickSpeed)) <= 0) {
            this.currentCount_0 = this.currentCount_0 + 1 | 0;
          }
           else {
            this.currentCount_0 = 1;
          }
          this.previousTimestamp_0 = timestamp;
          this.clickEvent_0.clear();
          this.clickEvent_0.type = this.getClickType_0(button_1);
          this.clickEvent_0.target = downElement;
          this.clickEvent_0.button = button_1;
          this.clickEvent_0.timestamp = timestamp;
          this.clickEvent_0.count = this.currentCount_0;
          this.clickEvent_0.canvasX = canvasX;
          this.clickEvent_0.canvasY = canvasY;
          this.interactivity_0.dispatch_z2oxuu$(downElement, this.clickEvent_0);
          break;
        }
      }
      collection_0.arrayListPool.free_11rb$(downElements);
    }
  };
  ClickDispatcher.prototype.getClickType_0 = function (button_1) {
    var tmp$;
    if (Kotlin.equals(button_1, WhichButton$LEFT_getInstance()))
      tmp$ = ClickEvent$Companion_getInstance().LEFT_CLICK;
    else if (Kotlin.equals(button_1, WhichButton$RIGHT_getInstance()))
      tmp$ = ClickEvent$Companion_getInstance().RIGHT_CLICK;
    else if (Kotlin.equals(button_1, WhichButton$MIDDLE_getInstance()))
      tmp$ = ClickEvent$Companion_getInstance().MIDDLE_CLICK;
    else if (Kotlin.equals(button_1, WhichButton$BACK_getInstance()))
      tmp$ = ClickEvent$Companion_getInstance().BACK_CLICK;
    else if (Kotlin.equals(button_1, WhichButton$FORWARD_getInstance()))
      tmp$ = ClickEvent$Companion_getInstance().FORWARD_CLICK;
    else
      throw new Exception('Unknown click type.');
    return tmp$;
  };
  ClickDispatcher.prototype.dispose = function () {
    var tmp$;
    mouseDown(this.root_0, true).remove_trkh7z$(this.rootMouseDownHandler_0);
    mouseUp(this.root_0).remove_trkh7z$(this.rootMouseUpHandler_0);
    touchEnd(this.root_0).remove_trkh7z$(this.rootTouchEndHandler_0);
    tmp$ = get_lastIndex_0(this.downButtons_0);
    for (var i = 0; i <= tmp$; i++) {
      var list = this.downButtons_0[i];
      if (list != null) {
        list.clear();
        collection_0.arrayListPool.free_11rb$(list);
      }
    }
  };
  function ClickDispatcher$downButtons$lambda(it) {
    return null;
  }
  function ClickDispatcher$rootMouseDownHandler$lambda(this$ClickDispatcher) {
    return function (event) {
      if (!this$ClickDispatcher.touchMode_0) {
        var downElement = this$ClickDispatcher.root_0.getChildUnderPoint_g1oyt7$(event.canvasX, event.canvasY, true);
        if (downElement != null) {
          this$ClickDispatcher.setDownElement_0(downElement, event.button.ordinal);
        }
      }
    };
  }
  function ClickDispatcher$rootTouchStartHandler$lambda(this$ClickDispatcher) {
    return function (event) {
      var first_0 = first(event.changedTouches);
      var downElement = this$ClickDispatcher.root_0.getChildUnderPoint_g1oyt7$(first_0.canvasX, first_0.canvasY, true);
      if (downElement != null) {
        this$ClickDispatcher.setDownElement_0(downElement, WhichButton$LEFT_getInstance().ordinal);
      }
    };
  }
  function ClickDispatcher$rootTouchEndHandler$lambda$lambda(this$ClickDispatcher) {
    return function () {
      this$ClickDispatcher.touchMode_0 = false;
      this$ClickDispatcher.preventMouseTimer_0 = null;
    };
  }
  function ClickDispatcher$rootTouchEndHandler$lambda(this$ClickDispatcher) {
    return function (event) {
      var tmp$;
      var first_0 = first(event.changedTouches);
      this$ClickDispatcher.release_5d4con$(WhichButton$LEFT_getInstance(), first_0.canvasX, first_0.canvasY, event.timestamp);
      this$ClickDispatcher.touchMode_0 = true;
      (tmp$ = this$ClickDispatcher.preventMouseTimer_0) != null ? tmp$.stop() : null;
      this$ClickDispatcher.preventMouseTimer_0 = timer(this$ClickDispatcher, 2.5, 1, ClickDispatcher$rootTouchEndHandler$lambda$lambda(this$ClickDispatcher));
    };
  }
  function ClickDispatcher$rootTouchCancelHandler$lambda(this$ClickDispatcher) {
    return function (event) {
      var downElements = this$ClickDispatcher.downButtons_0[WhichButton$LEFT_getInstance().ordinal];
      if (downElements != null) {
        this$ClickDispatcher.downButtons_0[WhichButton$LEFT_getInstance().ordinal] = null;
        collection_0.arrayListPool.free_11rb$(downElements);
      }
    };
  }
  function ClickDispatcher$rootMouseUpHandler$lambda(this$ClickDispatcher) {
    return function (event) {
      if (!this$ClickDispatcher.touchMode_0 && !event.isFabricated) {
        this$ClickDispatcher.release_5d4con$(event.button, event.canvasX, event.canvasY, event.timestamp);
      }
    };
  }
  ClickDispatcher.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ClickDispatcher',
    interfaces: [Disposable, Scoped]
  };
  function clickDispatcher($receiver) {
    return new ClickDispatcher($receiver.injector);
  }
  function ClipboardInteraction() {
    ClipboardInteraction$Companion_getInstance();
    InteractionEventBase.call(this);
    this.dataTransfer$delegate = properties_0.Delegates.notNull_30y1fr$();
  }
  Object.defineProperty(ClipboardInteraction.prototype, 'dataTransfer', {
    get: function () {
      return this.dataTransfer$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('dataTransfer'));
    },
    set: function (dataTransfer) {
      this.dataTransfer$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('dataTransfer'), dataTransfer);
    }
  });
  ClipboardInteraction.prototype.localize_s01kq1$ = function (currentTarget) {
    InteractionEventBase.prototype.localize_s01kq1$.call(this, currentTarget);
  };
  function ClipboardInteraction$Companion() {
    ClipboardInteraction$Companion_instance = this;
    this.COPY = new InteractionType('copy');
    this.CUT = new InteractionType('cut');
    this.PASTE = new InteractionType('paste');
  }
  ClipboardInteraction$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ClipboardInteraction$Companion_instance = null;
  function ClipboardInteraction$Companion_getInstance() {
    if (ClipboardInteraction$Companion_instance === null) {
      new ClipboardInteraction$Companion();
    }
    return ClipboardInteraction$Companion_instance;
  }
  ClipboardInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ClipboardInteraction',
    interfaces: [InteractionEventBase]
  };
  function DataTransferRead() {
  }
  DataTransferRead.prototype.getItemByType_61zpoe$ = function (type) {
    var $receiver = this.items;
    var firstOrNull2_dmm9ex$result;
    firstOrNull2_dmm9ex$break: {
      var tmp$;
      tmp$ = Kotlin.kotlin.collections.get_lastIndex_55thoc$($receiver);
      for (var i = 0; i <= tmp$; i++) {
        var element = $receiver.get_za3lpa$(i);
        if (Kotlin.equals(element.type, type)) {
          firstOrNull2_dmm9ex$result = element;
          break firstOrNull2_dmm9ex$break;
        }
      }
      firstOrNull2_dmm9ex$result = null;
    }
    return firstOrNull2_dmm9ex$result;
  };
  DataTransferRead.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'DataTransferRead',
    interfaces: []
  };
  function DataTransferItem() {
  }
  DataTransferItem.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'DataTransferItem',
    interfaces: []
  };
  function DownRepeat(target) {
    DownRepeat$Companion_getInstance();
    this.target_0 = target;
    this.mouseState_0 = inject(this.target_0, MouseState$Companion_getInstance());
    this.stage_0 = get_stage(this.target_0);
    this.interactivity_0 = inject(this.target_0, InteractivityManager$Companion_getInstance());
    this.style = style(this.target_0, new DownRepeatStyle());
    this.repeatTimer_0 = null;
    this.repeatWaitHandler_0 = DownRepeat$repeatWaitHandler$lambda(this);
    this.mouseDownHandler_0 = DownRepeat$mouseDownHandler$lambda(this);
    this.rawMouseUpHandler_0 = DownRepeat$rawMouseUpHandler$lambda(this);
    mouseDown(this.target_0).add_trkh7z$(this.mouseDownHandler_0);
  }
  DownRepeat.prototype.dispose = function () {
    var tmp$;
    this.style.dispose();
    mouseDown(this.target_0).remove_trkh7z$(this.mouseDownHandler_0);
    mouseUp(this.stage_0).remove_trkh7z$(this.rawMouseUpHandler_0);
    (tmp$ = this.repeatTimer_0) != null ? tmp$.stop() : null;
    this.repeatTimer_0 = null;
  };
  function DownRepeat$Companion() {
    DownRepeat$Companion_instance = this;
    this.MOUSE_DOWN_REPEAT_0 = new MouseInteraction();
  }
  DownRepeat$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DownRepeat$Companion_instance = null;
  function DownRepeat$Companion_getInstance() {
    if (DownRepeat$Companion_instance === null) {
      new DownRepeat$Companion();
    }
    return DownRepeat$Companion_instance;
  }
  function DownRepeat$repeatWaitHandler$lambda(this$DownRepeat) {
    return function () {
      var tmp$;
      ((tmp$ = this$DownRepeat.repeatTimer_0) != null ? tmp$ : Kotlin.throwNPE()).duration = this$DownRepeat.style.repeatInterval;
      var m = this$DownRepeat.mouseState_0;
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.type = MouseInteraction$Companion_getInstance().MOUSE_DOWN;
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.canvasX = m.canvasX();
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.canvasY = m.canvasY();
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.button = WhichButton$LEFT_getInstance();
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.timestamp = get_time().nowMs();
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.isFabricated = true;
      DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0.localize_s01kq1$(this$DownRepeat.target_0);
      this$DownRepeat.interactivity_0.dispatch_5tupxi$(this$DownRepeat.target_0, DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0, false, false);
    };
  }
  function DownRepeat$mouseDownHandler$lambda(this$DownRepeat) {
    return function (event) {
      var tmp$;
      if (!Kotlin.equals(event, DownRepeat$Companion_getInstance().MOUSE_DOWN_REPEAT_0)) {
        (tmp$ = this$DownRepeat.repeatTimer_0) != null ? tmp$.stop() : null;
        this$DownRepeat.repeatTimer_0 = timer(this$DownRepeat.target_0, this$DownRepeat.style.repeatDelay, -1, this$DownRepeat.repeatWaitHandler_0);
        mouseUp(this$DownRepeat.stage_0).add_onkqg$(this$DownRepeat.rawMouseUpHandler_0, true);
      }
    };
  }
  function DownRepeat$rawMouseUpHandler$lambda(this$DownRepeat) {
    return function (event) {
      var tmp$;
      if (event.button === WhichButton$LEFT_getInstance()) {
        (tmp$ = this$DownRepeat.repeatTimer_0) != null ? tmp$.stop() : null;
        this$DownRepeat.repeatTimer_0 = null;
      }
    };
  }
  DownRepeat.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DownRepeat',
    interfaces: [Disposable]
  };
  function downRepeatEnabled($receiver) {
    return $receiver.getAttachment_pgxeca$(DownRepeat$Companion_getInstance()) != null;
  }
  function enableDownRepeat$lambda(this$enableDownRepeat) {
    return function () {
      return new DownRepeat(this$enableDownRepeat);
    };
  }
  function enableDownRepeat($receiver) {
    return createOrReuseAttachment($receiver, DownRepeat$Companion_getInstance(), enableDownRepeat$lambda($receiver));
  }
  function enableDownRepeat$lambda_0(this$enableDownRepeat, closure$repeatDelay, closure$repeatInterval) {
    return function () {
      var dR = new DownRepeat(this$enableDownRepeat);
      dR.style.repeatDelay = closure$repeatDelay;
      dR.style.repeatInterval = closure$repeatInterval;
      return dR;
    };
  }
  function enableDownRepeat_0($receiver, repeatDelay, repeatInterval) {
    return createOrReuseAttachment($receiver, DownRepeat$Companion_getInstance(), enableDownRepeat$lambda_0($receiver, repeatDelay, repeatInterval));
  }
  function disableDownRepeat($receiver) {
    var tmp$;
    (tmp$ = $receiver.removeAttachment_pgxeca$(DownRepeat$Companion_getInstance())) != null ? tmp$.dispose() : null;
  }
  function DownRepeatStyle() {
    DownRepeatStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_919ih5$_0 = DownRepeatStyle$Companion_getInstance();
    this.repeatDelay$delegate = this.prop_umlfku$('repeatDelay', 0.24);
    this.repeatInterval$delegate = this.prop_umlfku$('repeatInterval', 0.02);
  }
  Object.defineProperty(DownRepeatStyle.prototype, 'type', {
    get: function () {
      return this.type_919ih5$_0;
    }
  });
  Object.defineProperty(DownRepeatStyle.prototype, 'repeatDelay', {
    get: function () {
      return this.repeatDelay$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('repeatDelay'));
    },
    set: function (repeatDelay) {
      this.repeatDelay$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('repeatDelay'), repeatDelay);
    }
  });
  Object.defineProperty(DownRepeatStyle.prototype, 'repeatInterval', {
    get: function () {
      return this.repeatInterval$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('repeatInterval'));
    },
    set: function (repeatInterval) {
      this.repeatInterval$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('repeatInterval'), repeatInterval);
    }
  });
  function DownRepeatStyle$Companion() {
    DownRepeatStyle$Companion_instance = this;
  }
  DownRepeatStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var DownRepeatStyle$Companion_instance = null;
  function DownRepeatStyle$Companion_getInstance() {
    if (DownRepeatStyle$Companion_instance === null) {
      new DownRepeatStyle$Companion();
    }
    return DownRepeatStyle$Companion_instance;
  }
  DownRepeatStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DownRepeatStyle',
    interfaces: [StyleBase]
  };
  function Drag() {
    Drag$Companion_getInstance();
  }
  function Drag$Companion() {
    Drag$Companion_instance = this;
    this.DEFAULT_AFFORDANCE = 5.0;
  }
  Drag$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Drag$Companion_instance = null;
  function Drag$Companion_getInstance() {
    if (Drag$Companion_instance === null) {
      new Drag$Companion();
    }
    return Drag$Companion_instance;
  }
  Drag.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Drag',
    interfaces: [Disposable]
  };
  function DragImpl(target, affordance) {
    if (affordance === void 0)
      affordance = Drag$Companion_getInstance().DEFAULT_AFFORDANCE;
    this.target = target;
    this.affordance = affordance;
    this.stage_t7rl63$_0 = get_stage(this.target);
    this.watchingMouse_t7rl63$_0 = false;
    this.watchingTouch_t7rl63$_0 = false;
    this._isDragging_t7rl63$_0 = false;
    this.dragEvent_t7rl63$_0 = new DragEvent();
    this._dragStart_t7rl63$_0 = new Signal1();
    this._drag_t7rl63$_0 = new Signal1();
    this._dragEnd_t7rl63$_0 = new Signal1();
    this.position_t7rl63$_0 = new Vector2();
    this.startPosition_t7rl63$_0 = new Vector2();
    this.startPositionLocal_t7rl63$_0 = new Vector2();
    this.startElement_t7rl63$_0 = null;
    this.clickBlocker_t7rl63$_0 = DragImpl$clickBlocker$lambda;
    this.mouseDownHandler_t7rl63$_0 = DragImpl$mouseDownHandler$lambda(this);
    this.stageMouseUpHandler_t7rl63$_0 = DragImpl$stageMouseUpHandler$lambda(this);
    this.stageMouseMoveHandler_t7rl63$_0 = DragImpl$stageMouseMoveHandler$lambda(this);
    this.touchStartHandler_t7rl63$_0 = DragImpl$touchStartHandler$lambda(this);
    this.stageTouchMoveHandler_t7rl63$_0 = DragImpl$stageTouchMoveHandler$lambda(this);
    this.stageTouchEndHandler_t7rl63$_0 = DragImpl$stageTouchEndHandler$lambda(this);
    this._enabled_t7rl63$_0 = true;
    this.targetDeactivatedHandler_t7rl63$_0 = DragImpl$targetDeactivatedHandler$lambda(this);
    this.target.deactivated.add_trkh7z$(this.targetDeactivatedHandler_t7rl63$_0);
    mouseDown(this.target).add_trkh7z$(this.mouseDownHandler_t7rl63$_0);
    touchStart(this.target).add_trkh7z$(this.touchStartHandler_t7rl63$_0);
  }
  Object.defineProperty(DragImpl.prototype, 'isDragging', {
    get: function () {
      return this._isDragging_t7rl63$_0;
    }
  });
  Object.defineProperty(DragImpl.prototype, 'dragStart', {
    get: function () {
      return this._dragStart_t7rl63$_0;
    }
  });
  Object.defineProperty(DragImpl.prototype, 'drag', {
    get: function () {
      return this._drag_t7rl63$_0;
    }
  });
  Object.defineProperty(DragImpl.prototype, 'dragEnd', {
    get: function () {
      return this._dragEnd_t7rl63$_0;
    }
  });
  DragImpl.prototype.setWatchingMouse_sg1ca8$_0 = function (value) {
    if (Kotlin.equals(this.watchingMouse_t7rl63$_0, value))
      return;
    this.watchingMouse_t7rl63$_0 = value;
    if (value) {
      mouseUp(this.stage_t7rl63$_0).add_trkh7z$(this.stageMouseUpHandler_t7rl63$_0);
      mouseMove(this.stage_t7rl63$_0).add_trkh7z$(this.stageMouseMoveHandler_t7rl63$_0);
    }
     else {
      mouseUp(this.stage_t7rl63$_0).remove_trkh7z$(this.stageMouseUpHandler_t7rl63$_0);
      mouseMove(this.stage_t7rl63$_0).remove_trkh7z$(this.stageMouseMoveHandler_t7rl63$_0);
    }
  };
  DragImpl.prototype.allowMouseStart_4cgc5a$ = function (event) {
    return this.enabled && !event.isFabricated && event.button === WhichButton$LEFT_getInstance() && !event.handled;
  };
  DragImpl.prototype.allowMouseDragStart_4cgc5a$ = function (event) {
    return this.position_t7rl63$_0.manhattanDst_1fv330$(this.startPosition_t7rl63$_0) >= this.affordance;
  };
  DragImpl.prototype.allowTouchStart_ta938k$ = function (event) {
    return this.enabled && !event.handled;
  };
  DragImpl.prototype.allowTouchDragStart_ta938k$ = function (event) {
    return this.position_t7rl63$_0.manhattanDst_1fv330$(this.startPosition_t7rl63$_0) >= this.affordance;
  };
  DragImpl.prototype.allowTouchEnd_ta938k$ = function (event) {
    return event.touches.isEmpty();
  };
  DragImpl.prototype.setWatchingTouch_sg1ca8$_0 = function (value) {
    if (Kotlin.equals(this.watchingTouch_t7rl63$_0, value))
      return;
    this.watchingTouch_t7rl63$_0 = value;
    if (value) {
      touchMove(this.stage_t7rl63$_0).add_trkh7z$(this.stageTouchMoveHandler_t7rl63$_0);
      touchEnd(this.stage_t7rl63$_0).add_trkh7z$(this.stageTouchEndHandler_t7rl63$_0);
    }
     else {
      touchMove(this.stage_t7rl63$_0).remove_trkh7z$(this.stageTouchMoveHandler_t7rl63$_0);
      touchEnd(this.stage_t7rl63$_0).remove_trkh7z$(this.stageTouchEndHandler_t7rl63$_0);
    }
  };
  function DragImpl$setIsDragging$lambda(this$DragImpl) {
    return function () {
      click(this$DragImpl.stage_t7rl63$_0, true).remove_trkh7z$(this$DragImpl.clickBlocker_t7rl63$_0);
    };
  }
  DragImpl.prototype.setIsDragging_sg1ca8$_0 = function (value) {
    if (Kotlin.equals(this._isDragging_t7rl63$_0, value))
      return;
    this._isDragging_t7rl63$_0 = value;
    if (value) {
      this.dispatchDragEvent_2z6olo$_0(DragEvent$Companion_getInstance().DRAG_START, this._dragStart_t7rl63$_0);
      if (this.dragEvent_t7rl63$_0.defaultPrevented()) {
        this._isDragging_t7rl63$_0 = false;
      }
       else {
        click(this.stage_t7rl63$_0, true).add_onkqg$(this.clickBlocker_t7rl63$_0, true);
        this.dispatchDragEvent_2z6olo$_0(DragEvent$Companion_getInstance().DRAG, this._drag_t7rl63$_0);
      }
    }
     else {
      if (this.target.isActive) {
        this.dispatchDragEvent_2z6olo$_0(DragEvent$Companion_getInstance().DRAG, this._drag_t7rl63$_0);
      }
      this.dispatchDragEvent_2z6olo$_0(DragEvent$Companion_getInstance().DRAG_END, this._dragEnd_t7rl63$_0);
      this.startElement_t7rl63$_0 = null;
      callLater(this.target, DragImpl$setIsDragging$lambda(this));
    }
  };
  DragImpl.prototype.dispatchDragEvent_2z6olo$_0 = function (type, signal_0) {
    this.dragEvent_t7rl63$_0.clear();
    this.dragEvent_t7rl63$_0.target = this.target;
    this.dragEvent_t7rl63$_0.currentTarget = this.target;
    this.dragEvent_t7rl63$_0.type = type;
    this.dragEvent_t7rl63$_0.startElement = this.startElement_t7rl63$_0;
    this.dragEvent_t7rl63$_0.startPosition.set_1fv330$(this.startPosition_t7rl63$_0);
    this.dragEvent_t7rl63$_0.startPositionLocal.set_1fv330$(this.startPositionLocal_t7rl63$_0);
    this.dragEvent_t7rl63$_0.position.set_1fv330$(this.position_t7rl63$_0);
    signal_0.dispatch_11rb$(this.dragEvent_t7rl63$_0);
  };
  Object.defineProperty(DragImpl.prototype, 'enabled', {
    get: function () {
      return this._enabled_t7rl63$_0;
    },
    set: function (value) {
      if (Kotlin.equals(this._enabled_t7rl63$_0, value))
        return;
      this._enabled_t7rl63$_0 = value;
      if (!value)
        this.stop();
    }
  });
  DragImpl.prototype.stop = function () {
    this.setWatchingMouse_sg1ca8$_0(false);
    this.setWatchingTouch_sg1ca8$_0(false);
    this.setIsDragging_sg1ca8$_0(false);
  };
  DragImpl.prototype.dispose = function () {
    this.stop();
    this._dragStart_t7rl63$_0.dispose();
    this._drag_t7rl63$_0.dispose();
    this._dragEnd_t7rl63$_0.dispose();
    this.target.deactivated.remove_trkh7z$(this.targetDeactivatedHandler_t7rl63$_0);
    mouseDown(this.target).remove_trkh7z$(this.mouseDownHandler_t7rl63$_0);
    touchStart(this.target).remove_trkh7z$(this.touchStartHandler_t7rl63$_0);
  };
  function DragImpl$clickBlocker$lambda(event) {
    event.handled = true;
  }
  function DragImpl$mouseDownHandler$lambda(this$DragImpl) {
    return function (event) {
      if (!this$DragImpl.watchingMouse_t7rl63$_0 && !this$DragImpl.watchingTouch_t7rl63$_0 && this$DragImpl.allowMouseStart_4cgc5a$(event)) {
        this$DragImpl.setWatchingMouse_sg1ca8$_0(true);
        event.handled = true;
        event.preventDefault();
        this$DragImpl.startElement_t7rl63$_0 = event.target;
        this$DragImpl.startPosition_t7rl63$_0.set_dleff0$(event.canvasX, event.canvasY);
        this$DragImpl.position_t7rl63$_0.set_1fv330$(this$DragImpl.startPosition_t7rl63$_0);
        this$DragImpl.startPositionLocal_t7rl63$_0.set_dleff0$(event.localX, event.localY);
        if (this$DragImpl.allowMouseDragStart_4cgc5a$(event)) {
          this$DragImpl.setIsDragging_sg1ca8$_0(true);
        }
      }
    };
  }
  function DragImpl$stageMouseUpHandler$lambda(this$DragImpl) {
    return function (event) {
      event.handled = true;
      this$DragImpl.setWatchingMouse_sg1ca8$_0(false);
      this$DragImpl.setIsDragging_sg1ca8$_0(false);
      kotlin_0.Unit;
    };
  }
  function DragImpl$stageMouseMoveHandler$lambda(this$DragImpl) {
    return function (event) {
      this$DragImpl.position_t7rl63$_0.set_dleff0$(event.canvasX, event.canvasY);
      if (this$DragImpl._isDragging_t7rl63$_0) {
        event.handled = true;
        this$DragImpl.dispatchDragEvent_2z6olo$_0(DragEvent$Companion_getInstance().DRAG, this$DragImpl._drag_t7rl63$_0);
      }
       else {
        if (this$DragImpl.allowMouseDragStart_4cgc5a$(event)) {
          this$DragImpl.setIsDragging_sg1ca8$_0(true);
        }
      }
    };
  }
  function DragImpl$touchStartHandler$lambda(this$DragImpl) {
    return function (event) {
      if (!this$DragImpl.watchingMouse_t7rl63$_0 && !this$DragImpl.watchingTouch_t7rl63$_0 && this$DragImpl.allowTouchStart_ta938k$(event)) {
        this$DragImpl.setWatchingTouch_sg1ca8$_0(true);
        event.handled = true;
        event.preventDefault();
        this$DragImpl.startElement_t7rl63$_0 = event.target;
        var t = first(event.touches);
        this$DragImpl.startPosition_t7rl63$_0.set_dleff0$(t.canvasX, t.canvasY);
        this$DragImpl.position_t7rl63$_0.set_1fv330$(this$DragImpl.startPosition_t7rl63$_0);
        this$DragImpl.startPositionLocal_t7rl63$_0.set_dleff0$(t.localX, t.localY);
        if (this$DragImpl.allowTouchDragStart_ta938k$(event)) {
          this$DragImpl.setIsDragging_sg1ca8$_0(true);
        }
      }
    };
  }
  function DragImpl$stageTouchMoveHandler$lambda(this$DragImpl) {
    return function (event) {
      event.preventDefault();
      var t = first(event.touches);
      this$DragImpl.position_t7rl63$_0.set_dleff0$(t.canvasX, t.canvasY);
      if (this$DragImpl._isDragging_t7rl63$_0) {
        event.handled = true;
        this$DragImpl.dispatchDragEvent_2z6olo$_0(DragEvent$Companion_getInstance().DRAG, this$DragImpl._drag_t7rl63$_0);
      }
       else {
        if (this$DragImpl.allowTouchDragStart_ta938k$(event)) {
          this$DragImpl.setIsDragging_sg1ca8$_0(true);
        }
      }
    };
  }
  function DragImpl$stageTouchEndHandler$lambda(this$DragImpl) {
    return function (event) {
      if (this$DragImpl.allowTouchEnd_ta938k$(event)) {
        event.handled = true;
        this$DragImpl.setWatchingTouch_sg1ca8$_0(false);
      }
      kotlin_0.Unit;
    };
  }
  function DragImpl$targetDeactivatedHandler$lambda(this$DragImpl) {
    return function (f) {
      this$DragImpl.stop();
    };
  }
  DragImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DragImpl',
    interfaces: [Drag]
  };
  function DragEvent() {
    DragEvent$Companion_getInstance();
    InteractionEventBase.call(this);
    this.startElement = null;
    this.startPosition = new Vector2();
    this.startPositionLocal = new Vector2();
    this.position = new Vector2();
  }
  DragEvent.prototype.clear = function () {
    InteractionEventBase.prototype.clear.call(this);
    this.startPosition.clear();
    this.position.clear();
    this.startElement = null;
  };
  function DragEvent$Companion() {
    DragEvent$Companion_instance = this;
    this.DRAG_START = new InteractionType('dragStart');
    this.DRAG = new InteractionType('drag');
    this.DRAG_END = new InteractionType('dragEnd');
  }
  DragEvent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DragEvent$Companion_instance = null;
  function DragEvent$Companion_getInstance() {
    if (DragEvent$Companion_instance === null) {
      new DragEvent$Companion();
    }
    return DragEvent$Companion_instance;
  }
  DragEvent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DragEvent',
    interfaces: [InteractionEventBase]
  };
  function dragAttachment$lambda(this$dragAttachment, closure$affordance) {
    return function () {
      return new DragImpl(this$dragAttachment, closure$affordance);
    };
  }
  function dragAttachment($receiver, affordance) {
    if (affordance === void 0)
      affordance = Drag$Companion_getInstance().DEFAULT_AFFORDANCE;
    return createOrReuseAttachment($receiver, Drag$Companion_getInstance(), dragAttachment$lambda($receiver, affordance));
  }
  function dragStart($receiver) {
    return dragAttachment($receiver).dragStart;
  }
  function drag($receiver) {
    return dragAttachment($receiver).drag;
  }
  function dragEnd($receiver) {
    return dragAttachment($receiver).dragEnd;
  }
  function KeyInteraction() {
    KeyInteraction$Companion_getInstance();
    InteractionEventBase.call(this);
    this.keyCode = 0;
    this.location = KeyLocation$STANDARD_getInstance();
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.timestamp = Kotlin.Long.ZERO;
    this.isRepeat = false;
    this.isFabricated = false;
  }
  KeyInteraction.prototype.set_7dr58c$ = function (other) {
    this.keyCode = other.keyCode;
    this.location = other.location;
    this.altKey = other.altKey;
    this.ctrlKey = other.ctrlKey;
    this.metaKey = other.metaKey;
    this.shiftKey = other.shiftKey;
    this.timestamp = other.timestamp;
    this.isRepeat = other.isRepeat;
    this.isFabricated = other.isFabricated;
  };
  KeyInteraction.prototype.keyName = function () {
    var tmp$;
    return (tmp$ = Ascii_getInstance().toString_za3lpa$(this.keyCode)) != null ? tmp$ : 'Unknown';
  };
  KeyInteraction.prototype.clear = function () {
    InteractionEventBase.prototype.clear.call(this);
    this.keyCode = 0;
    this.location = KeyLocation$STANDARD_getInstance();
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.timestamp = Kotlin.Long.ZERO;
    this.isRepeat = false;
    this.isFabricated = false;
  };
  function KeyInteraction$Companion() {
    KeyInteraction$Companion_instance = this;
    this.KEY_DOWN = new InteractionType('keyDown');
    this.KEY_UP = new InteractionType('keyUp');
  }
  KeyInteraction$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var KeyInteraction$Companion_instance = null;
  function KeyInteraction$Companion_getInstance() {
    if (KeyInteraction$Companion_instance === null) {
      new KeyInteraction$Companion();
    }
    return KeyInteraction$Companion_instance;
  }
  KeyInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'KeyInteraction',
    interfaces: [InteractionEventBase]
  };
  function KeyLocation(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function KeyLocation_initFields() {
    KeyLocation_initFields = function () {
    };
    KeyLocation$STANDARD_instance = new KeyLocation('STANDARD', 0);
    KeyLocation$LEFT_instance = new KeyLocation('LEFT', 1);
    KeyLocation$RIGHT_instance = new KeyLocation('RIGHT', 2);
    KeyLocation$NUMBER_PAD_instance = new KeyLocation('NUMBER_PAD', 3);
    KeyLocation$UNKNOWN_instance = new KeyLocation('UNKNOWN', 4);
  }
  var KeyLocation$STANDARD_instance;
  function KeyLocation$STANDARD_getInstance() {
    KeyLocation_initFields();
    return KeyLocation$STANDARD_instance;
  }
  var KeyLocation$LEFT_instance;
  function KeyLocation$LEFT_getInstance() {
    KeyLocation_initFields();
    return KeyLocation$LEFT_instance;
  }
  var KeyLocation$RIGHT_instance;
  function KeyLocation$RIGHT_getInstance() {
    KeyLocation_initFields();
    return KeyLocation$RIGHT_instance;
  }
  var KeyLocation$NUMBER_PAD_instance;
  function KeyLocation$NUMBER_PAD_getInstance() {
    KeyLocation_initFields();
    return KeyLocation$NUMBER_PAD_instance;
  }
  var KeyLocation$UNKNOWN_instance;
  function KeyLocation$UNKNOWN_getInstance() {
    KeyLocation_initFields();
    return KeyLocation$UNKNOWN_instance;
  }
  KeyLocation.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'KeyLocation',
    interfaces: [Enum]
  };
  function KeyLocation$values() {
    return [KeyLocation$STANDARD_getInstance(), KeyLocation$LEFT_getInstance(), KeyLocation$RIGHT_getInstance(), KeyLocation$NUMBER_PAD_getInstance(), KeyLocation$UNKNOWN_getInstance()];
  }
  KeyLocation.values = KeyLocation$values;
  function KeyLocation$valueOf(name) {
    switch (name) {
      case 'STANDARD':
        return KeyLocation$STANDARD_getInstance();
      case 'LEFT':
        return KeyLocation$LEFT_getInstance();
      case 'RIGHT':
        return KeyLocation$RIGHT_getInstance();
      case 'NUMBER_PAD':
        return KeyLocation$NUMBER_PAD_getInstance();
      case 'UNKNOWN':
        return KeyLocation$UNKNOWN_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.input.interaction.KeyLocation.' + name);
    }
  }
  KeyLocation.valueOf_61zpoe$ = KeyLocation$valueOf;
  function MouseInteraction() {
    MouseInteraction$Companion_getInstance();
    InteractionEventBase.call(this);
    this.canvasX = 0.0;
    this.canvasY = 0.0;
    this._localPositionIsValid_7c5nd0$_0 = false;
    this._localPosition_7c5nd0$_0 = new Vector2();
    this.relatedTarget = null;
    this.button = WhichButton$UNKNOWN_getInstance();
    this.timestamp = Kotlin.Long.ZERO;
    this.isFabricated = false;
  }
  MouseInteraction.prototype.localPosition_7c5nd0$_0 = function () {
    var tmp$;
    if (!this._localPositionIsValid_7c5nd0$_0) {
      this._localPositionIsValid_7c5nd0$_0 = true;
      this._localPosition_7c5nd0$_0.set_dleff0$(this.canvasX, this.canvasY);
      ((tmp$ = this.currentTarget) != null ? tmp$ : Kotlin.throwNPE()).windowToLocal_9wm29l$(this._localPosition_7c5nd0$_0);
    }
    return this._localPosition_7c5nd0$_0;
  };
  Object.defineProperty(MouseInteraction.prototype, 'localX', {
    get: function () {
      return this.localPosition_7c5nd0$_0().x;
    }
  });
  Object.defineProperty(MouseInteraction.prototype, 'localY', {
    get: function () {
      return this.localPosition_7c5nd0$_0().y;
    }
  });
  MouseInteraction.prototype.velocity_4cgc5a$ = function (previous) {
    var xDiff = previous.canvasX - this.canvasX;
    var yDiff = previous.canvasY - this.canvasY;
    var distance = Math.sqrt(xDiff * xDiff + yDiff * yDiff);
    var time_0 = this.timestamp.subtract(previous.timestamp);
    return distance / time_0.toNumber();
  };
  MouseInteraction.prototype.set_4cgc5a$ = function (event) {
    this.type = event.type;
    this.canvasX = event.canvasX;
    this.canvasY = event.canvasY;
    this.button = event.button;
    this.timestamp = event.timestamp;
  };
  MouseInteraction.prototype.localize_s01kq1$ = function (currentTarget) {
    InteractionEventBase.prototype.localize_s01kq1$.call(this, currentTarget);
    this._localPositionIsValid_7c5nd0$_0 = false;
  };
  MouseInteraction.prototype.clear = function () {
    InteractionEventBase.prototype.clear.call(this);
    this.canvasX = 0.0;
    this.canvasY = 0.0;
    this._localPositionIsValid_7c5nd0$_0 = false;
    this._localPosition_7c5nd0$_0.clear();
    this.relatedTarget = null;
    this.button = WhichButton$UNKNOWN_getInstance();
    this.timestamp = Kotlin.Long.ZERO;
    this.isFabricated = false;
  };
  function MouseInteraction$Companion() {
    MouseInteraction$Companion_instance = this;
    this.MOUSE_DOWN = new InteractionType('mouseDown');
    this.MOUSE_UP = new InteractionType('mouseUp');
    this.MOUSE_MOVE = new InteractionType('mouseMove');
    this.MOUSE_OVER = new InteractionType('mouseOver');
    this.MOUSE_OUT = new InteractionType('mouseOut');
  }
  MouseInteraction$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MouseInteraction$Companion_instance = null;
  function MouseInteraction$Companion_getInstance() {
    if (MouseInteraction$Companion_instance === null) {
      new MouseInteraction$Companion();
    }
    return MouseInteraction$Companion_instance;
  }
  MouseInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MouseInteraction',
    interfaces: [InteractionEventBase]
  };
  function WheelInteraction() {
    WheelInteraction$Companion_getInstance();
    MouseInteraction.call(this);
    this.deltaX = 0.0;
    this.deltaY = 0.0;
    this.deltaZ = 0.0;
  }
  WheelInteraction.prototype.set_4cgc5a$ = function (event) {
    var tmp$;
    Kotlin.isType(tmp$ = event, WheelInteraction) ? tmp$ : Kotlin.throwCCE();
    MouseInteraction.prototype.set_4cgc5a$.call(this, event);
    this.deltaX = event.deltaX;
    this.deltaY = event.deltaY;
    this.deltaZ = event.deltaZ;
  };
  WheelInteraction.prototype.clear = function () {
    MouseInteraction.prototype.clear.call(this);
    this.deltaX = 0.0;
    this.deltaY = 0.0;
    this.deltaZ = 0.0;
  };
  function WheelInteraction$Companion() {
    WheelInteraction$Companion_instance = this;
    this.MOUSE_WHEEL = new InteractionType('mouseWheel');
  }
  WheelInteraction$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var WheelInteraction$Companion_instance = null;
  function WheelInteraction$Companion_getInstance() {
    if (WheelInteraction$Companion_instance === null) {
      new WheelInteraction$Companion();
    }
    return WheelInteraction$Companion_instance;
  }
  WheelInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'WheelInteraction',
    interfaces: [MouseInteraction]
  };
  function MouseUpOutside(target) {
    MouseUpOutside$Companion_getInstance();
    StoppableSignalImpl.call(this);
    this.target_0 = target;
    this.stage_0 = get_stage(this.target_0);
    this.downButtons_0 = Kotlin.newArray(WhichButton$values().length, false);
    this.downCount_0 = 0;
    this.mouseDownHandler_0 = MouseUpOutside$mouseDownHandler$lambda(this);
    this.stageMouseUpHandler_0 = MouseUpOutside$stageMouseUpHandler$lambda(this);
    mouseDown(this.target_0).add_trkh7z$(this.mouseDownHandler_0);
  }
  MouseUpOutside.prototype._rawTouchUpHandler_0 = function (event) {
    if (this.downButtons_0[event.button.ordinal]) {
      this.downButtons_0[event.button.ordinal] = false;
      this.downCount_0 = this.downCount_0 - 1 | 0;
      if (this.downCount_0 === 0) {
        mouseUp(this.stage_0).remove_trkh7z$(this.stageMouseUpHandler_0);
      }
      if (this.isNotEmpty()) {
        if (!this.target_0.containsCanvasPoint_dleff0$(event.canvasX, event.canvasY)) {
          MouseUpOutside$Companion_getInstance().mouseUpOutsideEvent_0.set_4cgc5a$(event);
          this.dispatch_n80keo$(MouseUpOutside$Companion_getInstance().mouseUpOutsideEvent_0);
        }
      }
    }
  };
  MouseUpOutside.prototype.dispose = function () {
    StoppableSignalImpl.prototype.dispose.call(this);
    mouseDown(this.target_0).remove_trkh7z$(this.mouseDownHandler_0);
    if (this.downCount_0 > 0) {
      mouseUp(this.stage_0).remove_trkh7z$(this.stageMouseUpHandler_0);
    }
  };
  function MouseUpOutside$Companion() {
    MouseUpOutside$Companion_instance = this;
    this.MOUSE_UP_OUTSIDE = new InteractionType('mouseUpOutside');
    this.mouseUpOutsideEvent_0 = new MouseInteraction();
    this.mouseUpOutsideEvent_0.type = this.MOUSE_UP_OUTSIDE;
  }
  MouseUpOutside$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MouseUpOutside$Companion_instance = null;
  function MouseUpOutside$Companion_getInstance() {
    if (MouseUpOutside$Companion_instance === null) {
      new MouseUpOutside$Companion();
    }
    return MouseUpOutside$Companion_instance;
  }
  function MouseUpOutside$mouseDownHandler$lambda(this$MouseUpOutside) {
    return function (event) {
      var tmp$;
      if (this$MouseUpOutside.downCount_0 === 0) {
        mouseUp(this$MouseUpOutside.stage_0).add_trkh7z$(this$MouseUpOutside.stageMouseUpHandler_0);
      }
      if (!this$MouseUpOutside.downButtons_0[event.button.ordinal]) {
        this$MouseUpOutside.downButtons_0[event.button.ordinal] = true;
        tmp$ = this$MouseUpOutside.downCount_0;
        this$MouseUpOutside.downCount_0 = tmp$ + 1 | 0;
      }
    };
  }
  function MouseUpOutside$stageMouseUpHandler$lambda(this$MouseUpOutside) {
    return function (event) {
      this$MouseUpOutside._rawTouchUpHandler_0(event);
    };
  }
  MouseUpOutside.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MouseUpOutside',
    interfaces: [StoppableSignalImpl]
  };
  function mouseUpOutside($receiver) {
    return createOrReuse($receiver, MouseUpOutside$Companion_getInstance().MOUSE_UP_OUTSIDE, false);
  }
  function PinchInteraction() {
    PinchInteraction$Companion_getInstance();
    InteractionEventBase.call(this);
    this.distance = 0.0;
  }
  PinchInteraction.prototype.clear = function () {
    InteractionEventBase.prototype.clear.call(this);
    this.distance = 0.0;
  };
  function PinchInteraction$Companion() {
    PinchInteraction$Companion_instance = this;
    this.PINCH = new InteractionType('pinch');
  }
  PinchInteraction$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PinchInteraction$Companion_instance = null;
  function PinchInteraction$Companion_getInstance() {
    if (PinchInteraction$Companion_instance === null) {
      new PinchInteraction$Companion();
    }
    return PinchInteraction$Companion_instance;
  }
  PinchInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PinchInteraction',
    interfaces: [InteractionEventBase]
  };
  function Pinch(target, affordance) {
    Pinch$Companion_getInstance();
    this.target = target;
    this.affordance = affordance;
    this.pinch = new StoppableSignalImpl();
    this.stage = get_stage(this.target);
    this.touchStartHandler_0 = Pinch$touchStartHandler$lambda;
    this.touchEndHandler_0 = Pinch$touchEndHandler$lambda;
    touchStart(this.target).add_trkh7z$(this.touchStartHandler_0);
    touchEnd(this.stage).add_trkh7z$(this.touchEndHandler_0);
  }
  Pinch.prototype.dispose = function () {
    touchStart(this.target).remove_trkh7z$(this.touchStartHandler_0);
    touchEnd(this.stage).remove_trkh7z$(this.touchEndHandler_0);
  };
  function Pinch$Companion() {
    Pinch$Companion_instance = this;
    this.DEFAULT_AFFORDANCE = UserInfo_getInstance().isTouchDevice ? 0.0 : 5.0;
  }
  Pinch$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Pinch$Companion_instance = null;
  function Pinch$Companion_getInstance() {
    if (Pinch$Companion_instance === null) {
      new Pinch$Companion();
    }
    return Pinch$Companion_instance;
  }
  function Pinch$touchStartHandler$lambda(event) {
  }
  function Pinch$touchEndHandler$lambda(event) {
  }
  Pinch.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Pinch',
    interfaces: [Disposable]
  };
  function pinchAttachment$lambda(this$pinchAttachment, closure$affordance) {
    return function () {
      return new Pinch(this$pinchAttachment, closure$affordance);
    };
  }
  function pinchAttachment($receiver, affordance) {
    if (affordance === void 0)
      affordance = Pinch$Companion_getInstance().DEFAULT_AFFORDANCE;
    return createOrReuseAttachment($receiver, 'Pinch', pinchAttachment$lambda($receiver, affordance));
  }
  function pinch($receiver) {
    return pinchAttachment($receiver).pinch;
  }
  function MouseOverChanged(interactiveElement, isCapture) {
    this.interactiveElement_0 = interactiveElement;
    this.isCapture_0 = isCapture;
    this.over = new StoppableSignalImpl();
    this.out = new StoppableSignalImpl();
    this.mouseOverHandler_0 = MouseOverChanged$mouseOverHandler$lambda(this);
    this.mouseOutHandler_0 = MouseOverChanged$mouseOutHandler$lambda(this);
    mouseOver(this.interactiveElement_0, this.isCapture_0).add_trkh7z$(this.mouseOverHandler_0);
    mouseOut(this.interactiveElement_0, this.isCapture_0).add_trkh7z$(this.mouseOutHandler_0);
  }
  MouseOverChanged.prototype.filter_0 = function (event) {
    var tmp$;
    return !Kotlin.equals((tmp$ = event.relatedTarget) != null ? isDescendantOf(tmp$, this.interactiveElement_0) : null, true);
  };
  MouseOverChanged.prototype.dispose = function () {
    mouseOver(this.interactiveElement_0, this.isCapture_0).remove_trkh7z$(this.mouseOverHandler_0);
    mouseOut(this.interactiveElement_0, this.isCapture_0).remove_trkh7z$(this.mouseOutHandler_0);
  };
  function MouseOverChanged$mouseOverHandler$lambda(this$MouseOverChanged) {
    return function (event) {
      if (this$MouseOverChanged.filter_0(event))
        this$MouseOverChanged.over.dispatch_n80keo$(event);
    };
  }
  function MouseOverChanged$mouseOutHandler$lambda(this$MouseOverChanged) {
    return function (event) {
      if (this$MouseOverChanged.filter_0(event))
        this$MouseOverChanged.out.dispatch_n80keo$(event);
    };
  }
  MouseOverChanged.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MouseOverChanged',
    interfaces: [Disposable]
  };
  function rollOver$lambda(this$rollOver, closure$isCapture) {
    return function () {
      return new MouseOverChanged(this$rollOver, closure$isCapture);
    };
  }
  function rollOver($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuseAttachment($receiver, 'MouseOverChanged_' + Kotlin.toString(isCapture), rollOver$lambda($receiver, isCapture)).over;
  }
  function rollOut$lambda(this$rollOut, closure$isCapture) {
    return function () {
      return new MouseOverChanged(this$rollOut, closure$isCapture);
    };
  }
  function rollOut($receiver, isCapture) {
    if (isCapture === void 0)
      isCapture = false;
    return createOrReuseAttachment($receiver, 'MouseOverChanged_' + Kotlin.toString(isCapture), rollOut$lambda($receiver, isCapture)).out;
  }
  function TouchInteraction() {
    TouchInteraction$Companion_getInstance();
    InteractionEventBase.call(this);
    this.timestamp = Kotlin.Long.ZERO;
    this.targetTouches = ArrayList_init();
    this.changedTouches = ArrayList_init();
    this.touches = ArrayList_init();
  }
  TouchInteraction.prototype.localize_s01kq1$ = function (currentTarget) {
    var tmp$, tmp$_0, tmp$_1;
    InteractionEventBase.prototype.localize_s01kq1$.call(this, currentTarget);
    tmp$ = this.targetTouches.iterator();
    while (tmp$.hasNext()) {
      var targetTouch = tmp$.next();
      targetTouch.localize_s01kq1$(currentTarget);
    }
    tmp$_0 = this.changedTouches.iterator();
    while (tmp$_0.hasNext()) {
      var changedTouch = tmp$_0.next();
      changedTouch.localize_s01kq1$(currentTarget);
    }
    tmp$_1 = this.touches.iterator();
    while (tmp$_1.hasNext()) {
      var touch = tmp$_1.next();
      touch.localize_s01kq1$(currentTarget);
    }
  };
  TouchInteraction.prototype.set_ta938k$ = function (event) {
    this.type = event.type;
    this.clearTouches();
    TouchInteraction$Companion_getInstance().addTouches_qvawey$(this.targetTouches, event.targetTouches);
    TouchInteraction$Companion_getInstance().addTouches_qvawey$(this.changedTouches, event.changedTouches);
    TouchInteraction$Companion_getInstance().addTouches_qvawey$(this.touches, event.touches);
    this.timestamp = event.timestamp;
  };
  TouchInteraction.prototype.clearTouches = function () {
    this.clearTouches_0(this.targetTouches);
    this.clearTouches_0(this.changedTouches);
    this.clearTouches_0(this.touches);
  };
  TouchInteraction.prototype.clearTouches_0 = function (touches) {
    var tmp$;
    tmp$ = get_lastIndex(touches);
    for (var i = 0; i <= tmp$; i++) {
      touches.get_za3lpa$(i).free();
    }
    touches.clear();
  };
  TouchInteraction.prototype.clear = function () {
    InteractionEventBase.prototype.clear.call(this);
    this.timestamp = Kotlin.Long.ZERO;
    this.clearTouches();
  };
  function TouchInteraction$Companion() {
    TouchInteraction$Companion_instance = this;
    this.TOUCH_START = new InteractionType('touchStart');
    this.TOUCH_MOVE = new InteractionType('touchMove');
    this.TOUCH_ENTER = new InteractionType('touchEnter');
    this.TOUCH_LEAVE = new InteractionType('touchLeave');
    this.TOUCH_END = new InteractionType('touchEnd');
    this.TOUCH_CANCEL = new InteractionType('touchCancel');
  }
  TouchInteraction$Companion.prototype.addTouches_qvawey$ = function ($receiver, fromList) {
    var tmp$;
    tmp$ = get_lastIndex(fromList);
    for (var i = 0; i <= tmp$; i++) {
      var fromTouch = fromList.get_za3lpa$(i);
      var newTouch = Touch$Companion_getInstance().obtain();
      newTouch.set_wh909a$(fromTouch);
      $receiver.add_11rb$(newTouch);
    }
  };
  TouchInteraction$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TouchInteraction$Companion_instance = null;
  function TouchInteraction$Companion_getInstance() {
    if (TouchInteraction$Companion_instance === null) {
      new TouchInteraction$Companion();
    }
    return TouchInteraction$Companion_instance;
  }
  TouchInteraction.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TouchInteraction',
    interfaces: [InteractionEventBase]
  };
  function Touch() {
    Touch$Companion_getInstance();
    this.canvasX = 0.0;
    this.canvasY = 0.0;
    this.radiusX = 0.0;
    this.radiusY = 0.0;
    this.rotationAngle = 0.0;
    this.target = null;
    this.currentTarget = null;
    this._localPositionIsValid_0 = false;
    this._localPosition_0 = new Vector2();
  }
  Touch.prototype.localPosition_0 = function () {
    var tmp$;
    if (!this._localPositionIsValid_0) {
      this._localPositionIsValid_0 = true;
      this._localPosition_0.set_dleff0$(this.canvasX, this.canvasY);
      ((tmp$ = this.currentTarget) != null ? tmp$ : Kotlin.throwNPE()).windowToLocal_9wm29l$(this._localPosition_0);
    }
    return this._localPosition_0;
  };
  Object.defineProperty(Touch.prototype, 'localX', {
    get: function () {
      return this.localPosition_0().x;
    }
  });
  Object.defineProperty(Touch.prototype, 'localY', {
    get: function () {
      return this.localPosition_0().y;
    }
  });
  Touch.prototype.localize_s01kq1$ = function (currentTarget) {
    this.currentTarget = currentTarget;
    this._localPositionIsValid_0 = false;
  };
  Touch.prototype.dst_wh909a$ = function (other) {
    var xD = other.canvasX - this.canvasX;
    var yD = other.canvasY - this.canvasY;
    var v = xD * xD + yD * yD;
    return Math.sqrt(v);
  };
  Touch.prototype.clear = function () {
    this.canvasX = 0.0;
    this.canvasY = 0.0;
    this.radiusX = 0.0;
    this.radiusY = 0.0;
    this.rotationAngle = 0.0;
    this.target = null;
    this.currentTarget = null;
    this._localPositionIsValid_0 = false;
  };
  Touch.prototype.set_wh909a$ = function (otherTouch) {
    this.canvasX = otherTouch.canvasX;
    this.canvasY = otherTouch.canvasY;
    this.radiusX = otherTouch.radiusX;
    this.radiusY = otherTouch.radiusY;
    this.rotationAngle = otherTouch.rotationAngle;
    this.target = otherTouch.target;
    this.currentTarget = otherTouch.currentTarget;
    this._localPositionIsValid_0 = false;
  };
  Touch.prototype.free = function () {
    Touch$Companion_getInstance().pool_0.free_11rb$(this);
  };
  function Touch$Companion() {
    Touch$Companion_instance = this;
    this.pool_0 = new ClearableObjectPool(void 0, Touch$Companion$pool$lambda);
  }
  Touch$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  function Touch$Companion$pool$lambda() {
    return new Touch();
  }
  Touch$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Touch$Companion_instance = null;
  function Touch$Companion_getInstance() {
    if (Touch$Companion_instance === null) {
      new Touch$Companion();
    }
    return Touch$Companion_instance;
  }
  Touch.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Touch',
    interfaces: [Clearable]
  };
  function InteractivityManager() {
    InteractivityManager$Companion_getInstance();
  }
  InteractivityManager.prototype.dispatch_qts5q5$ = function (canvasX, canvasY, event) {
    this.dispatch_xp6iql$(canvasX, canvasY, event, true, true);
  };
  InteractivityManager.prototype.dispatch_z2oxuu$ = function (target, event) {
    this.dispatch_5tupxi$(target, event, true, true);
  };
  function InteractivityManager$Companion() {
    InteractivityManager$Companion_instance = this;
  }
  InteractivityManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var InteractivityManager$Companion_instance = null;
  function InteractivityManager$Companion_getInstance() {
    if (InteractivityManager$Companion_instance === null) {
      new InteractivityManager$Companion();
    }
    return InteractivityManager$Companion_instance;
  }
  InteractivityManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'InteractivityManager',
    interfaces: [Disposable]
  };
  function InteractionType(displayName) {
    InteractionType$Companion_getInstance();
    this.displayName = displayName;
  }
  InteractionType.prototype.toString = function () {
    return 'InteractionType(' + this.displayName + ')';
  };
  function InteractionType$Companion() {
    InteractionType$Companion_instance = this;
  }
  InteractionType$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var InteractionType$Companion_instance = null;
  function InteractionType$Companion_getInstance() {
    if (InteractionType$Companion_instance === null) {
      new InteractionType$Companion();
    }
    return InteractionType$Companion_instance;
  }
  InteractionType.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'InteractionType',
    interfaces: []
  };
  InteractionType.prototype.component1 = function () {
    return this.displayName;
  };
  InteractionType.prototype.copy_61zpoe$ = function (displayName) {
    return new InteractionType(displayName === void 0 ? this.displayName : displayName);
  };
  InteractionType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.displayName) | 0;
    return result;
  };
  InteractionType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.displayName, other.displayName))));
  };
  function InteractionEvent() {
  }
  InteractionEvent.prototype.isStopped = function () {
    return this.propagation.immediatePropagationStopped();
  };
  InteractionEvent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'InteractionEvent',
    interfaces: [Stoppable, Clearable]
  };
  function InteractionEventBase() {
    InteractionEventBase$Companion_getInstance();
    this.type_tkmjqk$_0 = InteractionEventBase$Companion_getInstance().UNKNOWN;
    this.handled_tkmjqk$_0 = false;
    this.target_tkmjqk$_0 = null;
    this.currentTarget_tkmjqk$_0 = null;
    this.propagation_tkmjqk$_0 = new Propagation();
    this._defaultPrevented = false;
  }
  Object.defineProperty(InteractionEventBase.prototype, 'type', {
    get: function () {
      return this.type_tkmjqk$_0;
    },
    set: function (type) {
      this.type_tkmjqk$_0 = type;
    }
  });
  Object.defineProperty(InteractionEventBase.prototype, 'handled', {
    get: function () {
      return this.handled_tkmjqk$_0;
    },
    set: function (handled) {
      this.handled_tkmjqk$_0 = handled;
    }
  });
  Object.defineProperty(InteractionEventBase.prototype, 'target', {
    get: function () {
      return this.target_tkmjqk$_0;
    },
    set: function (target) {
      this.target_tkmjqk$_0 = target;
    }
  });
  Object.defineProperty(InteractionEventBase.prototype, 'currentTarget', {
    get: function () {
      return this.currentTarget_tkmjqk$_0;
    },
    set: function (currentTarget) {
      this.currentTarget_tkmjqk$_0 = currentTarget;
    }
  });
  InteractionEventBase.prototype.localize_s01kq1$ = function (currentTarget) {
    this.currentTarget = currentTarget;
  };
  Object.defineProperty(InteractionEventBase.prototype, 'propagation', {
    get: function () {
      return this.propagation_tkmjqk$_0;
    }
  });
  InteractionEventBase.prototype.defaultPrevented = function () {
    return this._defaultPrevented;
  };
  InteractionEventBase.prototype.preventDefault = function () {
    this._defaultPrevented = true;
  };
  InteractionEventBase.prototype.clear = function () {
    this.type = InteractionEventBase$Companion_getInstance().UNKNOWN;
    this.propagation.clear();
    this.handled = false;
    this.target = null;
    this.currentTarget = null;
    this._defaultPrevented = false;
  };
  function InteractionEventBase$Companion() {
    InteractionEventBase$Companion_instance = this;
    this.UNKNOWN = new InteractionType('unknown');
  }
  InteractionEventBase$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var InteractionEventBase$Companion_instance = null;
  function InteractionEventBase$Companion_getInstance() {
    if (InteractionEventBase$Companion_instance === null) {
      new InteractionEventBase$Companion();
    }
    return InteractionEventBase$Companion_instance;
  }
  InteractionEventBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'InteractionEventBase',
    interfaces: [InteractionEvent]
  };
  function InteractivityManagerImpl(mouseInput, keyInput, focus) {
    this.mouseInput_kjlw6b$_0 = mouseInput;
    this.keyInput_kjlw6b$_0 = keyInput;
    this.focus_kjlw6b$_0 = focus;
    this._root_kjlw6b$_0 = null;
    this.mouse_kjlw6b$_0 = new MouseInteraction();
    this.touch_kjlw6b$_0 = new TouchInteraction();
    this.wheel_kjlw6b$_0 = new WheelInteraction();
    this.key_kjlw6b$_0 = new KeyInteraction();
    this.overTargets_kjlw6b$_0 = ArrayList_init();
    this.overCanvasChangedHandler_kjlw6b$_0 = InteractivityManagerImpl$overCanvasChangedHandler$lambda(this);
    this.rawTouchStartHandler_kjlw6b$_0 = InteractivityManagerImpl$rawTouchStartHandler$lambda(this);
    this.rawTouchEndHandler_kjlw6b$_0 = InteractivityManagerImpl$rawTouchEndHandler$lambda(this);
    this.rawTouchMoveHandler_kjlw6b$_0 = InteractivityManagerImpl$rawTouchMoveHandler$lambda(this);
    this.rawMouseDownHandler_kjlw6b$_0 = InteractivityManagerImpl$rawMouseDownHandler$lambda(this);
    this.rawMouseUpHandler_kjlw6b$_0 = InteractivityManagerImpl$rawMouseUpHandler$lambda(this);
    this.rawMouseMoveHandler_kjlw6b$_0 = InteractivityManagerImpl$rawMouseMoveHandler$lambda(this);
    this.rawWheelHandler_kjlw6b$_0 = InteractivityManagerImpl$rawWheelHandler$lambda(this);
    this.keyDownHandler_kjlw6b$_0 = InteractivityManagerImpl$keyDownHandler$lambda(this);
    this.keyUpHandler_kjlw6b$_0 = InteractivityManagerImpl$keyUpHandler$lambda(this);
  }
  Object.defineProperty(InteractivityManagerImpl.prototype, 'root_kjlw6b$_0', {
    get: function () {
      var tmp$;
      return (tmp$ = this._root_kjlw6b$_0) != null ? tmp$ : Kotlin.throwNPE();
    }
  });
  InteractivityManagerImpl.prototype.mouseHandler_5yb1ul$_0 = function (type, event) {
    this.mouse_kjlw6b$_0.clear();
    this.mouse_kjlw6b$_0.set_4cgc5a$(event);
    this.mouse_kjlw6b$_0.type = type;
    this.dispatch_qts5q5$(event.canvasX + 0.5, event.canvasY + 0.5, this.mouse_kjlw6b$_0);
    if (this.mouse_kjlw6b$_0.defaultPrevented())
      event.preventDefault();
  };
  InteractivityManagerImpl.prototype.touchHandler_lr8a4b$_0 = function (type, event) {
    this.touch_kjlw6b$_0.clear();
    this.touch_kjlw6b$_0.set_ta938k$(event);
    this.touch_kjlw6b$_0.type = type;
    var first_0 = first(event.changedTouches);
    this.dispatch_qts5q5$(first_0.canvasX + 0.5, first_0.canvasY + 0.5, this.touch_kjlw6b$_0);
    if (this.touch_kjlw6b$_0.defaultPrevented())
      event.preventDefault();
  };
  InteractivityManagerImpl.prototype.keyHandler_r9wwf7$_0 = function (type, event) {
    var tmp$;
    tmp$ = this.focus_kjlw6b$_0.focused();
    if (tmp$ == null) {
      return;
    }
    var f = tmp$;
    this.key_kjlw6b$_0.clear();
    this.key_kjlw6b$_0.type = type;
    this.key_kjlw6b$_0.set_7dr58c$(event);
    this.dispatch_z2oxuu$(f, this.key_kjlw6b$_0);
    if (this.key_kjlw6b$_0.defaultPrevented())
      event.preventDefault();
  };
  InteractivityManagerImpl.prototype.init_k58t2y$ = function (root_0) {
    _assert(this._root_kjlw6b$_0 == null, 'Already initialized.');
    this._root_kjlw6b$_0 = root_0;
    this.mouseInput_kjlw6b$_0.overCanvasChanged.add_trkh7z$(this.overCanvasChangedHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.mouseDown.add_trkh7z$(this.rawMouseDownHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.mouseUp.add_trkh7z$(this.rawMouseUpHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.mouseMove.add_trkh7z$(this.rawMouseMoveHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.mouseWheel.add_trkh7z$(this.rawWheelHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.touchStart.add_trkh7z$(this.rawTouchStartHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.touchEnd.add_trkh7z$(this.rawTouchEndHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.touchMove.add_trkh7z$(this.rawTouchMoveHandler_kjlw6b$_0);
    this.keyInput_kjlw6b$_0.keyDown.add_trkh7z$(this.keyDownHandler_kjlw6b$_0);
    this.keyInput_kjlw6b$_0.keyUp.add_trkh7z$(this.keyUpHandler_kjlw6b$_0);
  };
  InteractivityManagerImpl.prototype.overTarget_o40brh$_0 = function (target) {
    var previousOverTarget = firstOrNull(this.overTargets_kjlw6b$_0);
    if (Kotlin.equals(target, previousOverTarget))
      return;
    this.mouse_kjlw6b$_0.canvasX = this.mouseInput_kjlw6b$_0.canvasX();
    this.mouse_kjlw6b$_0.canvasY = this.mouseInput_kjlw6b$_0.canvasY();
    this.mouse_kjlw6b$_0.button = WhichButton$UNKNOWN_getInstance();
    this.mouse_kjlw6b$_0.timestamp = get_time().nowMs();
    if (previousOverTarget != null) {
      this.mouse_kjlw6b$_0.relatedTarget = target;
      this.mouse_kjlw6b$_0.target = previousOverTarget;
      this.mouse_kjlw6b$_0.type = MouseInteraction$Companion_getInstance().MOUSE_OUT;
      this.dispatch_s2zhgq$_0(this.overTargets_kjlw6b$_0, this.mouse_kjlw6b$_0);
    }
    if (target != null) {
      ancestry(target, this.overTargets_kjlw6b$_0);
      this.mouse_kjlw6b$_0.relatedTarget = previousOverTarget;
      this.mouse_kjlw6b$_0.target = target;
      this.mouse_kjlw6b$_0.type = MouseInteraction$Companion_getInstance().MOUSE_OVER;
      this.dispatch_s2zhgq$_0(this.overTargets_kjlw6b$_0, this.mouse_kjlw6b$_0);
    }
     else {
      this.overTargets_kjlw6b$_0.clear();
    }
  };
  InteractivityManagerImpl.prototype.getSignal_3hf04x$ = function (host, type, isCapture) {
    return new StoppableSignalImpl();
  };
  InteractivityManagerImpl.prototype.dispatch_xp6iql$ = function (canvasX, canvasY, event, useCapture, useBubble) {
    var tmp$;
    var ele = (tmp$ = this.root_kjlw6b$_0.getChildUnderPoint_g1oyt7$(canvasX, canvasY, true)) != null ? tmp$ : this.root_kjlw6b$_0;
    this.dispatch_5tupxi$(ele, event, useCapture, useBubble);
  };
  InteractivityManagerImpl.prototype.dispatch_5tupxi$ = function (target, event, useCapture, useBubble) {
    var tmp$;
    var rawAncestry = Kotlin.isType(tmp$ = collection_0.arrayListPool.obtain(), ArrayList) ? tmp$ : Kotlin.throwCCE();
    event.target = target;
    if (!useCapture && !useBubble) {
      this.dispatchForCurrentTarget_y1nthy$_0(target, event, false);
    }
     else {
      ancestry(target, rawAncestry);
      this.dispatch_s2zhgq$_0(rawAncestry, event, useCapture, useBubble);
    }
    collection_0.arrayListPool.free_11rb$(rawAncestry);
  };
  InteractivityManagerImpl.prototype.dispatch_s2zhgq$_0 = function (rawAncestry, event, useCapture, useBubble) {
    if (useCapture === void 0)
      useCapture = true;
    if (useBubble === void 0)
      useBubble = true;
    var tmp$, tmp$_0;
    if (useCapture) {
      tmp$ = downTo(get_lastIndex(rawAncestry), 0).iterator();
      while (tmp$.hasNext()) {
        var i = tmp$.next();
        if (event.propagation.propagationStopped())
          break;
        this.dispatchForCurrentTarget_y1nthy$_0(rawAncestry.get_za3lpa$(i), event, true);
      }
    }
    if (useBubble) {
      tmp$_0 = get_lastIndex(rawAncestry);
      for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
        if (event.propagation.propagationStopped())
          break;
        this.dispatchForCurrentTarget_y1nthy$_0(rawAncestry.get_za3lpa$(i_0), event, false);
      }
    }
  };
  InteractivityManagerImpl.prototype.dispatchForCurrentTarget_y1nthy$_0 = function (currentTarget, event, isCapture) {
    var tmp$;
    var signal_0 = (tmp$ = currentTarget.getInteractionSignal_j3fyc4$(event.type, isCapture)) == null || Kotlin.isType(tmp$, StoppableSignalImpl) ? tmp$ : Kotlin.throwCCE();
    if (signal_0 != null && signal_0.isNotEmpty()) {
      event.localize_s01kq1$(currentTarget);
      signal_0.dispatch_n80keo$(event);
    }
  };
  InteractivityManagerImpl.prototype.dispose = function () {
    this.overTarget_o40brh$_0(null);
    var mouse = this.mouseInput_kjlw6b$_0;
    mouse.mouseDown.remove_trkh7z$(this.rawMouseDownHandler_kjlw6b$_0);
    mouse.mouseUp.remove_trkh7z$(this.rawMouseUpHandler_kjlw6b$_0);
    mouse.mouseMove.remove_trkh7z$(this.rawMouseMoveHandler_kjlw6b$_0);
    mouse.mouseWheel.remove_trkh7z$(this.rawWheelHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.touchStart.remove_trkh7z$(this.rawTouchStartHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.touchEnd.remove_trkh7z$(this.rawTouchEndHandler_kjlw6b$_0);
    this.mouseInput_kjlw6b$_0.touchMove.remove_trkh7z$(this.rawTouchMoveHandler_kjlw6b$_0);
    var key = this.keyInput_kjlw6b$_0;
    key.keyDown.remove_trkh7z$(this.keyDownHandler_kjlw6b$_0);
    key.keyUp.remove_trkh7z$(this.keyUpHandler_kjlw6b$_0);
  };
  function InteractivityManagerImpl$overCanvasChangedHandler$lambda(this$InteractivityManagerImpl) {
    return function (overCanvas) {
      if (!overCanvas)
        this$InteractivityManagerImpl.overTarget_o40brh$_0(null);
    };
  }
  function InteractivityManagerImpl$rawTouchStartHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.touchHandler_lr8a4b$_0(TouchInteraction$Companion_getInstance().TOUCH_START, event);
    };
  }
  function InteractivityManagerImpl$rawTouchEndHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.touchHandler_lr8a4b$_0(TouchInteraction$Companion_getInstance().TOUCH_END, event);
    };
  }
  function InteractivityManagerImpl$rawTouchMoveHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.touchHandler_lr8a4b$_0(TouchInteraction$Companion_getInstance().TOUCH_MOVE, event);
      this$InteractivityManagerImpl.overTarget_o40brh$_0(this$InteractivityManagerImpl.touch_kjlw6b$_0.target);
    };
  }
  function InteractivityManagerImpl$rawMouseDownHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.mouseHandler_5yb1ul$_0(MouseInteraction$Companion_getInstance().MOUSE_DOWN, event);
    };
  }
  function InteractivityManagerImpl$rawMouseUpHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.mouseHandler_5yb1ul$_0(MouseInteraction$Companion_getInstance().MOUSE_UP, event);
    };
  }
  function InteractivityManagerImpl$rawMouseMoveHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.mouseHandler_5yb1ul$_0(MouseInteraction$Companion_getInstance().MOUSE_MOVE, event);
      this$InteractivityManagerImpl.overTarget_o40brh$_0(this$InteractivityManagerImpl.mouse_kjlw6b$_0.target);
    };
  }
  function InteractivityManagerImpl$rawWheelHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.wheel_kjlw6b$_0.clear();
      this$InteractivityManagerImpl.wheel_kjlw6b$_0.set_4cgc5a$(event);
      this$InteractivityManagerImpl.wheel_kjlw6b$_0.type = WheelInteraction$Companion_getInstance().MOUSE_WHEEL;
      this$InteractivityManagerImpl.dispatch_qts5q5$(event.canvasX + 0.5, event.canvasY + 0.5, this$InteractivityManagerImpl.wheel_kjlw6b$_0);
      if (this$InteractivityManagerImpl.wheel_kjlw6b$_0.defaultPrevented())
        event.preventDefault();
    };
  }
  function InteractivityManagerImpl$keyDownHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.keyHandler_r9wwf7$_0(KeyInteraction$Companion_getInstance().KEY_DOWN, event);
    };
  }
  function InteractivityManagerImpl$keyUpHandler$lambda(this$InteractivityManagerImpl) {
    return function (event) {
      this$InteractivityManagerImpl.keyHandler_r9wwf7$_0(KeyInteraction$Companion_getInstance().KEY_UP, event);
    };
  }
  InteractivityManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'InteractivityManagerImpl',
    interfaces: [InteractivityManager]
  };
  function KeyState() {
    KeyState$Companion_getInstance();
  }
  KeyState.prototype.keyIsDown_3iojlf$ = function (keyCode, location, callback$default) {
    if (location === void 0)
      location = KeyLocation$UNKNOWN_getInstance();
    return callback$default ? callback$default(keyCode, location) : this.keyIsDown_3iojlf$$default(keyCode, location);
  };
  function KeyState$Companion() {
    KeyState$Companion_instance = this;
  }
  KeyState$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var KeyState$Companion_instance = null;
  function KeyState$Companion_getInstance() {
    if (KeyState$Companion_instance === null) {
      new KeyState$Companion();
    }
    return KeyState$Companion_instance;
  }
  KeyState.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'KeyState',
    interfaces: [Disposable]
  };
  function KeyInput() {
    KeyInput$Companion_getInstance();
  }
  function KeyInput$Companion() {
    KeyInput$Companion_instance = this;
    this.extends_vo342k$_0 = KeyState$Companion_getInstance();
  }
  Object.defineProperty(KeyInput$Companion.prototype, 'extends', {
    get: function () {
      return this.extends_vo342k$_0;
    }
  });
  KeyInput$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var KeyInput$Companion_instance = null;
  function KeyInput$Companion_getInstance() {
    if (KeyInput$Companion_instance === null) {
      new KeyInput$Companion();
    }
    return KeyInput$Companion_instance;
  }
  KeyInput.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'KeyInput',
    interfaces: [KeyState]
  };
  function MouseState() {
    MouseState$Companion_getInstance();
  }
  MouseState.prototype.mousePosition_9wm29l$ = function (out) {
    out.set_dleff0$(this.canvasX(), this.canvasY());
    return out;
  };
  function MouseState$Companion() {
    MouseState$Companion_instance = this;
  }
  MouseState$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var MouseState$Companion_instance = null;
  function MouseState$Companion_getInstance() {
    if (MouseState$Companion_instance === null) {
      new MouseState$Companion();
    }
    return MouseState$Companion_instance;
  }
  MouseState.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MouseState',
    interfaces: [Disposable]
  };
  function MouseInput() {
    MouseInput$Companion_getInstance();
  }
  function MouseInput$Companion() {
    MouseInput$Companion_instance = this;
    this.extends_aw1mou$_0 = MouseState$Companion_getInstance();
  }
  Object.defineProperty(MouseInput$Companion.prototype, 'extends', {
    get: function () {
      return this.extends_aw1mou$_0;
    }
  });
  MouseInput$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var MouseInput$Companion_instance = null;
  function MouseInput$Companion_getInstance() {
    if (MouseInput$Companion_instance === null) {
      new MouseInput$Companion();
    }
    return MouseInput$Companion_instance;
  }
  MouseInput.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MouseInput',
    interfaces: [MouseState]
  };
  function Propagation() {
    this._immediatePropagationStopped_nvbhnh$_0 = false;
    this._propagationStopped_nvbhnh$_0 = false;
  }
  Propagation.prototype.immediatePropagationStopped = function () {
    return this._immediatePropagationStopped_nvbhnh$_0;
  };
  Propagation.prototype.stopImmediatePropagation = function () {
    this._immediatePropagationStopped_nvbhnh$_0 = true;
    this._propagationStopped_nvbhnh$_0 = true;
  };
  Propagation.prototype.propagationStopped = function () {
    return this._propagationStopped_nvbhnh$_0;
  };
  Propagation.prototype.stopPropagation = function () {
    this._propagationStopped_nvbhnh$_0 = true;
  };
  Propagation.prototype.clear = function () {
    this._immediatePropagationStopped_nvbhnh$_0 = false;
    this._propagationStopped_nvbhnh$_0 = false;
  };
  Propagation.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Propagation',
    interfaces: [Clearable]
  };
  function WhichButton(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function WhichButton_initFields() {
    WhichButton_initFields = function () {
    };
    WhichButton$UNKNOWN_instance = new WhichButton('UNKNOWN', 0);
    WhichButton$LEFT_instance = new WhichButton('LEFT', 1);
    WhichButton$RIGHT_instance = new WhichButton('RIGHT', 2);
    WhichButton$MIDDLE_instance = new WhichButton('MIDDLE', 3);
    WhichButton$BACK_instance = new WhichButton('BACK', 4);
    WhichButton$FORWARD_instance = new WhichButton('FORWARD', 5);
  }
  var WhichButton$UNKNOWN_instance;
  function WhichButton$UNKNOWN_getInstance() {
    WhichButton_initFields();
    return WhichButton$UNKNOWN_instance;
  }
  var WhichButton$LEFT_instance;
  function WhichButton$LEFT_getInstance() {
    WhichButton_initFields();
    return WhichButton$LEFT_instance;
  }
  var WhichButton$RIGHT_instance;
  function WhichButton$RIGHT_getInstance() {
    WhichButton_initFields();
    return WhichButton$RIGHT_instance;
  }
  var WhichButton$MIDDLE_instance;
  function WhichButton$MIDDLE_getInstance() {
    WhichButton_initFields();
    return WhichButton$MIDDLE_instance;
  }
  var WhichButton$BACK_instance;
  function WhichButton$BACK_getInstance() {
    WhichButton_initFields();
    return WhichButton$BACK_instance;
  }
  var WhichButton$FORWARD_instance;
  function WhichButton$FORWARD_getInstance() {
    WhichButton_initFields();
    return WhichButton$FORWARD_instance;
  }
  WhichButton.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'WhichButton',
    interfaces: [Enum]
  };
  function WhichButton$values() {
    return [WhichButton$UNKNOWN_getInstance(), WhichButton$LEFT_getInstance(), WhichButton$RIGHT_getInstance(), WhichButton$MIDDLE_getInstance(), WhichButton$BACK_getInstance(), WhichButton$FORWARD_getInstance()];
  }
  WhichButton.values = WhichButton$values;
  function WhichButton$valueOf(name) {
    switch (name) {
      case 'UNKNOWN':
        return WhichButton$UNKNOWN_getInstance();
      case 'LEFT':
        return WhichButton$LEFT_getInstance();
      case 'RIGHT':
        return WhichButton$RIGHT_getInstance();
      case 'MIDDLE':
        return WhichButton$MIDDLE_getInstance();
      case 'BACK':
        return WhichButton$BACK_getInstance();
      case 'FORWARD':
        return WhichButton$FORWARD_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.input.WhichButton.' + name);
    }
  }
  WhichButton.valueOf_61zpoe$ = WhichButton$valueOf;
  function BufferFactory() {
    BufferFactory$Companion_getInstance();
  }
  function BufferFactory$Companion() {
    BufferFactory$Companion_instance = this;
    this.instance = void 0;
  }
  BufferFactory$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var BufferFactory$Companion_instance = null;
  function BufferFactory$Companion_getInstance() {
    if (BufferFactory$Companion_instance === null) {
      new BufferFactory$Companion();
    }
    return BufferFactory$Companion_instance;
  }
  BufferFactory.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'BufferFactory',
    interfaces: []
  };
  function Files() {
    Files$Companion_getInstance();
  }
  function Files$Companion() {
    Files$Companion_instance = this;
  }
  Files$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Files$Companion_instance = null;
  function Files$Companion_getInstance() {
    if (Files$Companion_instance === null) {
      new Files$Companion();
    }
    return Files$Companion_instance;
  }
  Files.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Files',
    interfaces: []
  };
  function FilesImpl(manifest) {
    this.map_0 = HashMap_init();
    this.rootDir = new Directory('');
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = manifest.files;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var file = tmp$[tmp$_0];
      var path = file.path;
      var pathSplit = split(path, ['/']);
      var p = this.rootDir;
      tmp$_1 = get_lastIndex(pathSplit) - 1 | 0;
      for (var i = 0; i <= tmp$_1; i++) {
        var part = pathSplit.get_za3lpa$(i);
        var dir = p.directories.get_11rb$(part);
        if (dir == null) {
          var newPath = Kotlin.equals(p, this.rootDir) ? part : p.path + '/' + part;
          dir = new Directory(newPath, p);
          p.directories.put_xwzc9p$(part, dir);
        }
        p = dir;
      }
      var fileEntry = new FileEntry(file.path, file.modified, file.size, p);
      this.map_0.put_xwzc9p$(fileEntry.path, fileEntry);
      p.files.put_xwzc9p$(last(pathSplit), fileEntry);
    }
  }
  FilesImpl.prototype.getFile_61zpoe$ = function (path) {
    var entry = this.map_0.get_11rb$(replace2_0(path, 92, 47));
    return entry;
  };
  FilesImpl.prototype.getDir_61zpoe$ = function (path) {
    var tmp$;
    var p = this.rootDir;
    var pathSplit = split2(replace2_0(path, 92, 47), 47);
    for (tmp$ = 0; tmp$ !== pathSplit.length; ++tmp$) {
      var part = pathSplit[tmp$];
      if (p == null)
        return null;
      p = p.getDir_61zpoe$(part);
    }
    return p;
  };
  FilesImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FilesImpl',
    interfaces: [Files]
  };
  function FileEntry(path, modified, size, parent) {
    if (path === void 0)
      path = '';
    if (modified === void 0)
      modified = Kotlin.Long.ZERO;
    if (size === void 0)
      size = Kotlin.Long.ZERO;
    this.path = path;
    this.modified = modified;
    this.size = size;
    this.parent = parent;
  }
  FileEntry.prototype.siblingFile_61zpoe$ = function (name) {
    return this.parent.getFile_61zpoe$(name);
  };
  FileEntry.prototype.siblingDir_61zpoe$ = function (name) {
    return this.parent.getDir_61zpoe$(name);
  };
  FileEntry.prototype.name = function () {
    return substringAfterLast(this.path, 47);
  };
  FileEntry.prototype.nameNoExtension = function () {
    return substringBeforeLast(substringAfterLast(this.path, 47), 46);
  };
  FileEntry.prototype.extension = function () {
    return substringAfterLast(this.path, 46);
  };
  FileEntry.prototype.hasExtension_61zpoe$ = function (extension) {
    return equals(this.extension(), extension, true);
  };
  FileEntry.prototype.depth = function () {
    var count = -1;
    var index = -1;
    do {
      count = count + 1 | 0;
      index = indexOf_1(this.path, 47, index + 1 | 0);
    }
     while (index !== -1);
    return count;
  };
  FileEntry.prototype.compareTo_11rb$ = function (other) {
    if (this.depth() === other.depth()) {
      return Kotlin.compareTo(this.path, other.path);
    }
     else {
      return Kotlin.primitiveCompareTo(this.depth(), other.depth());
    }
  };
  FileEntry.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FileEntry',
    interfaces: [Comparable]
  };
  function Directory(path, parent) {
    if (parent === void 0)
      parent = null;
    this.path = path;
    this._parent_0 = parent;
    this.directories = HashMap_init();
    this.files = HashMap_init();
  }
  Directory.prototype.name = function () {
    return substringAfterLast(this.path, 47);
  };
  Directory.prototype.depth = function () {
    var count = 0;
    var p = this;
    while (p != null) {
      count = count + 1 | 0;
      p = p.parent();
    }
    return count;
  };
  Directory.prototype.getFile_61zpoe$ = function (name) {
    return this.files.get_11rb$(name);
  };
  Directory.prototype.getDir_61zpoe$ = function (name) {
    return this.directories.get_11rb$(name);
  };
  Directory.prototype.parent = function () {
    return this._parent_0;
  };
  Directory.prototype.mapFiles_bxb80y$ = function (callback, maxDepth) {
    if (maxDepth === void 0)
      maxDepth = 100;
    var tmp$, tmp$_0;
    var openList = ArrayList_init();
    var depths = ArrayList_init();
    openList.add_11rb$(this);
    depths.add_11rb$(0);
    while (!openList.isEmpty()) {
      var next = pop(openList);
      var depth = pop(depths);
      tmp$ = sorted(next.files.values).iterator();
      while (tmp$.hasNext()) {
        var file = tmp$.next();
        var shouldContinue = callback(file);
        if (!shouldContinue)
          return;
      }
      if (depth < maxDepth) {
        tmp$_0 = sorted(next.directories.values).iterator();
        while (tmp$_0.hasNext()) {
          var i = tmp$_0.next();
          openList.add_11rb$(i);
          depths.add_11rb$(depth + 1 | 0);
        }
      }
    }
  };
  Directory.prototype.mapDirectories_35q8sn$ = function (callback, maxDepth) {
    if (maxDepth === void 0)
      maxDepth = 100;
    var tmp$;
    var openList = ArrayList_init();
    var depths = ArrayList_init();
    openList.add_11rb$(this);
    depths.add_11rb$(0);
    while (!openList.isEmpty()) {
      var next = pop(openList);
      var depth = pop(depths);
      tmp$ = sorted(next.directories.values).iterator();
      while (tmp$.hasNext()) {
        var dir = tmp$.next();
        var shouldContinue = callback(dir);
        if (!shouldContinue)
          return;
        if (depth < maxDepth) {
          openList.add_11rb$(dir);
          depths.add_11rb$(depth + 1 | 0);
        }
      }
    }
  };
  Directory.prototype.compareTo_11rb$ = function (other) {
    if (this.depth() === other.depth()) {
      return Kotlin.compareTo(this.path, other.path);
    }
     else {
      return Kotlin.primitiveCompareTo(this.depth(), other.depth());
    }
  };
  Directory.prototype.relativePath_vov5n$ = function (file) {
    return substringAfter(file.path, this.path + '/', this.path);
  };
  Directory.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Directory',
    interfaces: [Comparable]
  };
  var JSON_KEY;
  function Lifecycle() {
  }
  Lifecycle.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Lifecycle',
    interfaces: [Disposable]
  };
  function LifecycleBase() {
    this.activated_s50jxs$_0 = new Signal1();
    this.deactivated_s50jxs$_0 = new Signal1();
    this.disposed_s50jxs$_0 = new Signal1();
    this._isDisposed = false;
    this._isDisposing = false;
    this._isActive = false;
  }
  Object.defineProperty(LifecycleBase.prototype, 'activated', {
    get: function () {
      return this.activated_s50jxs$_0;
    }
  });
  Object.defineProperty(LifecycleBase.prototype, 'deactivated', {
    get: function () {
      return this.deactivated_s50jxs$_0;
    }
  });
  Object.defineProperty(LifecycleBase.prototype, 'disposed', {
    get: function () {
      return this.disposed_s50jxs$_0;
    }
  });
  Object.defineProperty(LifecycleBase.prototype, 'isActive', {
    get: function () {
      return this._isActive;
    }
  });
  Object.defineProperty(LifecycleBase.prototype, 'isDisposed', {
    get: function () {
      return this._isDisposed;
    }
  });
  LifecycleBase.prototype.activate = function () {
    if (this._isDisposed)
      throw new IllegalStateException('Disposed');
    if (this._isActive)
      throw new IllegalStateException('Already active');
    this._isActive = true;
    this.onActivated();
    this.activated.dispatch_11rb$(this);
  };
  LifecycleBase.prototype.onActivated = function () {
  };
  LifecycleBase.prototype.deactivate = function () {
    if (this._isDisposed)
      throw new IllegalStateException('Disposed');
    if (!this._isActive)
      throw new IllegalStateException('Not active');
    this._isActive = false;
    this.onDeactivated();
    this.deactivated.dispatch_11rb$(this);
  };
  LifecycleBase.prototype.onDeactivated = function () {
  };
  LifecycleBase.prototype.dispose = function () {
    if (this._isDisposed)
      throw new IllegalStateException('Already disposed');
    if (this._isDisposing)
      return;
    this._isDisposing = true;
    if (this.isActive) {
      this.deactivate();
    }
    this.disposed.dispatch_11rb$(this);
    this._isDisposed = true;
    this.disposed.dispose();
    this.activated.dispose();
    this.deactivated.dispose();
    this._isDisposing = false;
  };
  LifecycleBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LifecycleBase',
    interfaces: [Lifecycle]
  };
  function Drivable() {
  }
  Drivable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Drivable',
    interfaces: [Lifecycle, Updatable]
  };
  function Updatable() {
  }
  Updatable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Updatable',
    interfaces: [Disposable]
  };
  function DrivableChild() {
  }
  DrivableChild.prototype.remove = function () {
    var tmp$;
    (tmp$ = this.parent) != null ? tmp$.removeChild_6iy558$(this) : null;
  };
  DrivableChild.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'DrivableChild',
    interfaces: [Child, Drivable]
  };
  function DrivableChildBase() {
    LifecycleBase.call(this);
    this.parent_ng38r7$_0 = null;
  }
  Object.defineProperty(DrivableChildBase.prototype, 'parent', {
    get: function () {
      return this.parent_ng38r7$_0;
    },
    set: function (parent) {
      this.parent_ng38r7$_0 = parent;
    }
  });
  DrivableChildBase.prototype.dispose = function () {
    LifecycleBase.prototype.dispose.call(this);
    this.remove();
  };
  DrivableChildBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DrivableChildBase',
    interfaces: [DrivableChild, LifecycleBase]
  };
  function Binder() {
    Binder$Companion_getInstance();
    this.bindings_0 = HashMap_init();
  }
  Binder.prototype.bindable_mh5how$ = function (initialValue) {
    return this.bindable_le71cu$(initialValue, Binder$Companion_getInstance().DATA);
  };
  function Binder$bindable$ObjectLiteral(closure$key, this$Binder, initialValue) {
    this.closure$key = closure$key;
    this.this$Binder = this$Binder;
    ObservableProperty.call(this, initialValue);
  }
  Binder$bindable$ObjectLiteral.prototype.afterChange_jxtfl0$ = function (property, oldValue, newValue) {
    this.this$Binder.notifyKey_61zpoe$(this.closure$key);
  };
  Binder$bindable$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [ObservableProperty]
  };
  Binder.prototype.bindable_le71cu$ = function (initialValue, key) {
    return new Binder$bindable$ObjectLiteral(key, this, initialValue);
  };
  Binder.prototype.bind_o14v8n$ = function (callback) {
    this.bind_a4mwiz$(Binder$Companion_getInstance().ANY, callback);
  };
  Binder.prototype.bind_a4mwiz$ = function (key, callback) {
    this.getBindings_0(key).add_11rb$(callback);
    callback();
  };
  Binder.prototype.notifyKey = function () {
    this.notifyKey_61zpoe$(Binder$Companion_getInstance().ANY);
  };
  Binder.prototype.notifyKey_61zpoe$ = function (key) {
    var tmp$, tmp$_0;
    tmp$ = this.getBindings_0(key).iterator();
    while (tmp$.hasNext()) {
      var binding = tmp$.next();
      binding();
    }
    tmp$_0 = this.getBindings_0(Binder$Companion_getInstance().ANY).iterator();
    while (tmp$_0.hasNext()) {
      var binding_0 = tmp$_0.next();
      binding_0();
    }
  };
  Binder.prototype.getBindings_0 = function (key) {
    var tmp$;
    if (!this.bindings_0.containsKey_11rb$(key)) {
      var $receiver = this.bindings_0;
      var value = ArrayList_init();
      $receiver.put_xwzc9p$(key, value);
    }
    return (tmp$ = this.bindings_0.get_11rb$(key)) != null ? tmp$ : Kotlin.throwNPE();
  };
  Binder.prototype.dispose = function () {
    this.bindings_0.clear();
  };
  function Binder$Companion() {
    Binder$Companion_instance = this;
    this.ANY = '*';
    this.DATA = '~';
  }
  Binder$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Binder$Companion_instance = null;
  function Binder$Companion_getInstance() {
    if (Binder$Companion_instance === null) {
      new Binder$Companion();
    }
    return Binder$Companion_instance;
  }
  Binder.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Binder',
    interfaces: [Disposable]
  };
  function signalBinding$lambda(closure$signal) {
    return function (p, old, new_0) {
      closure$signal.dispatch_xwzc9p$(old, new_0);
    };
  }
  function signalBinding(initialValue, signal_0) {
    return new Kotlin.kotlin.properties.Delegates.observable$f(signalBinding$lambda(signal_0), initialValue);
  }
  function binder() {
    return new Binder();
  }
  function CommandDispatcher() {
    CommandDispatcher$Companion_getInstance();
  }
  function CommandDispatcher$Companion() {
    CommandDispatcher$Companion_instance = this;
  }
  CommandDispatcher$Companion.prototype.factory_r456d0$ = function (injector) {
    return new CommandDispatcherImpl();
  };
  CommandDispatcher$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var CommandDispatcher$Companion_instance = null;
  function CommandDispatcher$Companion_getInstance() {
    if (CommandDispatcher$Companion_instance === null) {
      new CommandDispatcher$Companion();
    }
    return CommandDispatcher$Companion_instance;
  }
  CommandDispatcher.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'CommandDispatcher',
    interfaces: []
  };
  function invokeCommand($receiver, command) {
    inject($receiver, CommandDispatcher$Companion_getInstance()).invokeCommand_ahdzpi$(command);
  }
  function CommandDispatcherImpl() {
    this.commandInvoked_k9wi0j$_0 = new Signal1();
    this.history_k9wi0j$_0 = ArrayList_init();
    this.keepHistory_k9wi0j$_0 = false;
  }
  Object.defineProperty(CommandDispatcherImpl.prototype, 'commandInvoked', {
    get: function () {
      return this.commandInvoked_k9wi0j$_0;
    }
  });
  Object.defineProperty(CommandDispatcherImpl.prototype, 'history', {
    get: function () {
      return this.history_k9wi0j$_0;
    }
  });
  Object.defineProperty(CommandDispatcherImpl.prototype, 'keepHistory', {
    get: function () {
      return this.keepHistory_k9wi0j$_0;
    },
    set: function (keepHistory) {
      this.keepHistory_k9wi0j$_0 = keepHistory;
    }
  });
  CommandDispatcherImpl.prototype.invokeCommand_ahdzpi$ = function (command) {
    if (this.keepHistory)
      this.history.add_11rb$(command);
    this.commandInvoked.dispatch_11rb$(command);
  };
  CommandDispatcherImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CommandDispatcherImpl',
    interfaces: [CommandDispatcher]
  };
  function CommandType() {
  }
  CommandType.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'CommandType',
    interfaces: []
  };
  function Command() {
  }
  Command.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Command',
    interfaces: []
  };
  function Commander(commandDispatcher) {
    this.commandDispatcher_0 = commandDispatcher;
    this.disposables_0 = ArrayList_init();
  }
  function Commander$onCommandInvoked$lambda(closure$type, closure$callback) {
    return function (it) {
      var tmp$;
      if (Kotlin.equals(it.type, closure$type)) {
        closure$callback(Kotlin.isType(tmp$ = it, Command) ? tmp$ : Kotlin.throwCCE());
      }
    };
  }
  Commander.prototype.onCommandInvoked_pi7c6j$ = function (type, callback) {
    return this.onCommandInvoked_79acdr$(Commander$onCommandInvoked$lambda(type, callback));
  };
  function Commander$onCommandInvoked$ObjectLiteral(this$Commander, closure$callback) {
    this.this$Commander = this$Commander;
    this.closure$callback = closure$callback;
  }
  Commander$onCommandInvoked$ObjectLiteral.prototype.dispose = function () {
    this.this$Commander.commandDispatcher_0.commandInvoked.remove_trkh7z$(this.closure$callback);
  };
  Commander$onCommandInvoked$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [Disposable]
  };
  Commander.prototype.onCommandInvoked_79acdr$ = function (callback) {
    this.commandDispatcher_0.commandInvoked.add_trkh7z$(callback);
    var disposable = new Commander$onCommandInvoked$ObjectLiteral(this, callback);
    this.disposables_0.add_11rb$(disposable);
    return disposable;
  };
  Commander.prototype.dispose = function () {
    var tmp$;
    tmp$ = this.disposables_0.iterator();
    while (tmp$.hasNext()) {
      var disposable = tmp$.next();
      disposable.dispose();
    }
    this.disposables_0.clear();
  };
  Commander.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Commander',
    interfaces: [Disposable]
  };
  function commander($receiver) {
    return new Commander($receiver.injector.inject_li8edk$(CommandDispatcher$Companion_getInstance()));
  }
  function NavigationManager() {
    NavigationManager$Companion_getInstance();
  }
  function NavigationManager$path$lambda(closure$split) {
    return function (it) {
      return NavNode$Companion_getInstance().fromStr_61zpoe$(closure$split.get_za3lpa$(it));
    };
  }
  NavigationManager.prototype.path_61zpoe$ = function (value) {
    var split_0 = split(value, ['/']);
    var nodes = Kotlin.newArrayF(split_0.size, NavigationManager$path$lambda(split_0));
    this.path_hmiasb$(nodes);
  };
  NavigationManager.prototype.clear = function () {
    this.path_hmiasb$([]);
  };
  NavigationManager.prototype.push_8twpiv$ = function (node) {
    this.path_hmiasb$.call(this, this.path().concat([node]));
  };
  NavigationManager.prototype.push_hmiasb$ = function (nodes) {
    this.path_hmiasb$.call(this, this.path().concat(nodes));
  };
  NavigationManager.prototype.pop = function () {
    var p = this.path();
    if (!(p.length === 0)) {
      var tmp$ = this.path_hmiasb$;
      var toIndex = get_lastIndex_0(p);
      tmp$.call(this, p.slice(0, toIndex));
    }
  };
  NavigationManager.prototype.pathToString = function () {
    return NavigationManager$Companion_getInstance().pathToString_hmiasb$(this.path());
  };
  function NavigationManager$Companion() {
    NavigationManager$Companion_instance = this;
  }
  NavigationManager$Companion.prototype.factory_r456d0$ = function (injector) {
    return new NavigationManagerImpl();
  };
  NavigationManager$Companion.prototype.pathToString_hmiasb$ = function (path) {
    return '' + joinToString_0(path, '/');
  };
  NavigationManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var NavigationManager$Companion_instance = null;
  function NavigationManager$Companion_getInstance() {
    if (NavigationManager$Companion_instance === null) {
      new NavigationManager$Companion();
    }
    return NavigationManager$Companion_instance;
  }
  NavigationManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'NavigationManager',
    interfaces: [Disposable, Clearable]
  };
  function NavEvent() {
  }
  Object.defineProperty(NavEvent.prototype, 'oldPathStr', {
    get: function () {
      var tmp$ = NavigationManager$Companion_getInstance();
      var $receiver = this.oldPath;
      return tmp$.pathToString_hmiasb$(Kotlin.kotlin.collections.copyToArray($receiver));
    }
  });
  Object.defineProperty(NavEvent.prototype, 'newPathStr', {
    get: function () {
      var tmp$ = NavigationManager$Companion_getInstance();
      var $receiver = this.newPath;
      return tmp$.pathToString_hmiasb$(Kotlin.kotlin.collections.copyToArray($receiver));
    }
  });
  NavEvent.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'NavEvent',
    interfaces: []
  };
  function navigate($receiver, absolutePath) {
    inject($receiver, NavigationManager$Companion_getInstance()).path_61zpoe$(absolutePath);
  }
  function NavNode(name, params) {
    NavNode$Companion_getInstance();
    if (params === void 0)
      params = HashMap_init();
    this.name = name;
    this.params = params;
  }
  function NavNode$toString$lambda(it) {
    return it.key;
  }
  NavNode.prototype.toString = function () {
    var tmp$;
    if (this.params.isEmpty())
      return browser_0.encodeUriComponent2(this.name);
    var str = browser_0.encodeUriComponent2(this.name) + '?';
    var isFirst = true;
    var $receiver = this.params.entries;
    var orderedParams = Kotlin.kotlin.collections.sortedWith_eknfly$($receiver, new Kotlin.kotlin.comparisons.compareBy$f(NavNode$toString$lambda));
    tmp$ = orderedParams.iterator();
    while (tmp$.hasNext()) {
      var entry = tmp$.next();
      if (!isFirst)
        str += '&';
      else
        isFirst = false;
      str += browser_0.encodeUriComponent2(entry.key) + '=' + browser_0.encodeUriComponent2(entry.value);
    }
    return str;
  };
  function NavNode$Companion() {
    NavNode$Companion_instance = this;
  }
  NavNode$Companion.prototype.fromStr_61zpoe$ = function (str) {
    var tmp$;
    var split_0 = split(str, ['?']);
    var params = HashMap_init();
    var name = browser_0.decodeUriComponent2(split_0.get_za3lpa$(0));
    if (split_0.size > 1) {
      var paramsSplit = split(split_0.get_za3lpa$(1), ['&']);
      tmp$ = get_lastIndex(paramsSplit);
      for (var i = 0; i <= tmp$; i++) {
        var keyValue = split(paramsSplit.get_za3lpa$(i), ['=']);
        var key = browser_0.decodeUriComponent2(keyValue.get_za3lpa$(0));
        var value = browser_0.decodeUriComponent2(keyValue.get_za3lpa$(1));
        params.put_xwzc9p$(key, value);
      }
    }
    return new NavNode(name, params);
  };
  NavNode$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var NavNode$Companion_instance = null;
  function NavNode$Companion_getInstance() {
    if (NavNode$Companion_instance === null) {
      new NavNode$Companion();
    }
    return NavNode$Companion_instance;
  }
  NavNode.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NavNode',
    interfaces: []
  };
  NavNode.prototype.component1 = function () {
    return this.name;
  };
  NavNode.prototype.component2 = function () {
    return this.params;
  };
  NavNode.prototype.copy_mvjluj$ = function (name, params) {
    return new NavNode(name === void 0 ? this.name : name, params === void 0 ? this.params : params);
  };
  NavNode.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.params) | 0;
    return result;
  };
  NavNode.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.params, other.params)))));
  };
  function NavigationManagerImpl() {
    this.changed_z0c9b1$_0 = new Signal1();
    this.lastPath_0 = [];
    this.currentPath_0 = [];
    this.event_0 = new NavEventImpl();
    this.isDispatching_0 = false;
  }
  Object.defineProperty(NavigationManagerImpl.prototype, 'changed', {
    get: function () {
      return this.changed_z0c9b1$_0;
    }
  });
  NavigationManagerImpl.prototype.path = function () {
    return this.currentPath_0.slice();
  };
  NavigationManagerImpl.prototype.path_hmiasb$ = function (path) {
    if (equalsArray(this.lastPath_0, path))
      return;
    this.currentPath_0 = path;
    if (this.isDispatching_0)
      return;
    this.isDispatching_0 = true;
    this.event_0.oldPath.clear();
    addAll(this.event_0.oldPath, this.lastPath_0);
    this.event_0.newPath.clear();
    addAll(this.event_0.newPath, path);
    this.changed.dispatch_11rb$(this.event_0);
    this.lastPath_0 = path;
    this.isDispatching_0 = false;
    this.path_hmiasb$(this.currentPath_0);
  };
  NavigationManagerImpl.prototype.dispose = function () {
    this.changed.dispose();
  };
  NavigationManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NavigationManagerImpl',
    interfaces: [NavigationManager]
  };
  function NavEventImpl() {
    this.oldPath_b37vhj$_0 = ArrayList_init();
    this.newPath_b37vhj$_0 = ArrayList_init();
  }
  Object.defineProperty(NavEventImpl.prototype, 'oldPath', {
    get: function () {
      return this.oldPath_b37vhj$_0;
    }
  });
  Object.defineProperty(NavEventImpl.prototype, 'newPath', {
    get: function () {
      return this.newPath_b37vhj$_0;
    }
  });
  NavEventImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NavEventImpl',
    interfaces: [NavEvent]
  };
  function NavBindable() {
  }
  NavBindable.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'NavBindable',
    interfaces: [Scoped, Child]
  };
  function NavBinding(host, defaultPath) {
    this.host = host;
    this.defaultPath_0 = defaultPath;
    this.changed = new Signal1();
    this.event_0 = new NavBindingEvent();
    this.depth_0 = -1;
    this.path_0 = null;
    this.params_0 = emptyMap();
    this.activatedHandler_0 = NavBinding$activatedHandler$lambda(this);
    this.deactivatedHandler_0 = NavBinding$deactivatedHandler$lambda(this);
    this.disposedHandler_0 = NavBinding$disposedHandler$lambda(this);
    this.navChangedHandler_0 = NavBinding$navChangedHandler$lambda(this);
    this.navManager_0 = inject(this.host, NavigationManager$Companion_getInstance());
    if (Kotlin.isType(this.host, Lifecycle)) {
      this.host.activated.add_trkh7z$(this.activatedHandler_0);
      this.host.deactivated.add_trkh7z$(this.deactivatedHandler_0);
      this.host.disposed.add_trkh7z$(this.disposedHandler_0);
      if (this.host.isActive) {
        this.refreshDepth_0();
        this.onNavChanged_0();
      }
    }
     else {
      this.navManager_0.changed.add_trkh7z$(this.navChangedHandler_0);
      this.refreshDepth_0();
      this.onNavChanged_0();
    }
  }
  NavBinding.prototype.refreshDepth_0 = function () {
    this.depth_0 = 0;
    var p = this.host.parent;
    while (p != null) {
      if (Kotlin.isType(p, NavBindable)) {
        this.depth_0 = this.depth_0 + 1 | 0;
      }
      p = p.parent;
    }
  };
  NavBinding.prototype.onNavChanged_0 = function () {
    var fullPath = this.navManager_0.path();
    var oldPath = this.path_0;
    var oldParams = this.params_0;
    if (this.depth_0 < fullPath.length) {
      this.path_0 = fullPath[this.depth_0].name;
    }
     else {
      this.path_0 = null;
    }
    var $receiver = this.path_0;
    if ($receiver == null || $receiver.length === 0)
      this.path_0 = this.defaultPath_0;
    if (this.depth_0 > 0 && (this.depth_0 - 1 | 0) < fullPath.length) {
      this.params_0 = fullPath[this.depth_0 - 1 | 0].params;
    }
     else {
      this.params_0 = emptyMap();
    }
    if (!Kotlin.equals(oldPath, this.path_0) || !Kotlin.equals(oldParams, this.params_0)) {
      this.event_0.oldParams = oldParams;
      this.event_0.oldPath = oldPath;
      this.event_0.newPath = this.path_0;
      this.event_0.newParams = this.params_0;
      this.changed.dispatch_11rb$(this.event_0);
    }
  };
  NavBinding.prototype.navigate_mvjluj$ = function (path, params) {
    if (path === void 0)
      path = this.defaultPath_0;
    if (params === void 0) {
      params = Kotlin.kotlin.collections.HashMap_init_q3lmfv$();
    }
    this.navigate_8twpiv$(new NavNode(path, params));
  };
  NavBinding.prototype.navigate_8twpiv$ = function (node) {
    if (this.depth_0 >= 0) {
      var newPath = this.expandedPath_0;
      newPath[this.depth_0] = node;
      this.navManager_0.path_hmiasb$(newPath);
    }
  };
  function NavBinding$navigate$lambda(closure$split, closure$up) {
    return function (it) {
      return NavNode$Companion_getInstance().fromStr_61zpoe$(closure$split.get_za3lpa$(it + closure$up.v | 0));
    };
  }
  NavBinding.prototype.navigate_61zpoe$ = function (value) {
    var split_0 = split(value, ['/']);
    if (split_0.isEmpty()) {
      this.navManager_0.path_hmiasb$([]);
    }
     else {
      var relativeTo;
      var up = {v: 0};
      if (split_0.size >= 2 && Kotlin.equals(split_0.get_za3lpa$(0), '')) {
        relativeTo = [];
        up.v = 1;
      }
       else {
        while (up.v < split_0.size && Kotlin.equals(split_0.get_za3lpa$(up.v), '..')) {
          up.v = up.v + 1 | 0;
        }
        var oldPath = this.expandedPath_0;
        var toIndex = oldPath.length - up.v | 0;
        relativeTo = oldPath.slice(0, toIndex);
      }
      var nodes = Kotlin.newArrayF(split_0.size - up.v | 0, NavBinding$navigate$lambda(split_0, up));
      this.navManager_0.path_hmiasb$(relativeTo.concat(nodes));
    }
  };
  function NavBinding$get_NavBinding$expandedPath$lambda(it) {
    return new NavNode('');
  }
  Object.defineProperty(NavBinding.prototype, 'expandedPath_0', {
    get: function () {
      if (this.depth_0 < 0)
        throw new Exception('This binding is not currently active.');
      var fullPath = this.navManager_0.path();
      var y = this.depth_0 - get_lastIndex_0(fullPath) | 0;
      var max_sdesaw$result;
      if (Kotlin.compareTo(0, y) >= 0) {
        max_sdesaw$result = 0;
      }
       else {
        max_sdesaw$result = y;
      }
      var elements = Kotlin.newArrayF(max_sdesaw$result, NavBinding$get_NavBinding$expandedPath$lambda);
      return fullPath.concat(elements);
    }
  });
  function NavBinding$bindPathEnter$lambda(closure$path, closure$callback) {
    return function (event) {
      if (Kotlin.equals(event.newPath, closure$path))
        closure$callback();
    };
  }
  NavBinding.prototype.bindPathEnter_9bodf6$ = function (path, callback) {
    this.changed.add_trkh7z$(NavBinding$bindPathEnter$lambda(path, callback));
  };
  function NavBinding$bindPathExit$lambda(closure$path, closure$callback) {
    return function (event) {
      if (Kotlin.equals(event.oldPath, closure$path))
        closure$callback();
    };
  }
  NavBinding.prototype.bindPathExit_9bodf6$ = function (path, callback) {
    this.changed.add_trkh7z$(NavBinding$bindPathExit$lambda(path, callback));
  };
  function NavBinding$bindParam$lambda(closure$key, closure$callback) {
    return function (event) {
      var oldValue = event.oldParams.get_11rb$(closure$key);
      var newValue = event.newParams.get_11rb$(closure$key);
      if (!Kotlin.equals(oldValue, newValue))
        closure$callback(oldValue, newValue);
    };
  }
  NavBinding.prototype.bindParam_twzr8l$ = function (key, callback) {
    this.changed.add_trkh7z$(NavBinding$bindParam$lambda(key, callback));
  };
  NavBinding.prototype.dispose = function () {
    this.navManager_0.changed.remove_trkh7z$(this.navChangedHandler_0);
    if (Kotlin.isType(this.host, Lifecycle)) {
      this.host.activated.remove_trkh7z$(this.activatedHandler_0);
      this.host.deactivated.remove_trkh7z$(this.deactivatedHandler_0);
      this.host.disposed.remove_trkh7z$(this.disposedHandler_0);
    }
    this.changed.dispose();
  };
  function NavBinding$activatedHandler$lambda(this$NavBinding) {
    return function (c) {
      this$NavBinding.refreshDepth_0();
      this$NavBinding.navManager_0.changed.add_trkh7z$(this$NavBinding.navChangedHandler_0);
      this$NavBinding.onNavChanged_0();
    };
  }
  function NavBinding$deactivatedHandler$lambda(this$NavBinding) {
    return function (c) {
      this$NavBinding.depth_0 = -1;
      this$NavBinding.navManager_0.changed.remove_trkh7z$(this$NavBinding.navChangedHandler_0);
    };
  }
  function NavBinding$disposedHandler$lambda(this$NavBinding) {
    return function (c) {
      this$NavBinding.dispose();
    };
  }
  function NavBinding$navChangedHandler$lambda(this$NavBinding) {
    return function (e) {
      this$NavBinding.onNavChanged_0();
    };
  }
  NavBinding.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NavBinding',
    interfaces: [Disposable]
  };
  function NavBindingEvent() {
    this.oldPath = null;
    this.newPath = null;
    this.oldParams = emptyMap();
    this.newParams = emptyMap();
  }
  NavBindingEvent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'NavBindingEvent',
    interfaces: []
  };
  function navBinding($receiver, defaultPath) {
    return new NavBinding($receiver, defaultPath);
  }
  function navAddElement$lambda(closure$component, this$navAddElement) {
    return function () {
      this$navAddElement.addElement_mxweac$(closure$component);
    };
  }
  function navAddElement$lambda_0(closure$component, this$navAddElement) {
    return function () {
      this$navAddElement.removeElement_erfg6z$(closure$component);
    };
  }
  function navAddElement($receiver, nav, path, component_0) {
    nav.bindPathEnter_9bodf6$(path, navAddElement$lambda(component_0, $receiver));
    nav.bindPathExit_9bodf6$(path, navAddElement$lambda_0(component_0, $receiver));
  }
  function navAddChild$lambda$lambda(closure$child, closure$c) {
    return function () {
      if (!closure$child.isDisposed) {
        closure$c.addElement_mxweac$(closure$child);
        focusFirst(closure$child);
      }
    };
  }
  function navAddChild$lambda(closure$lazy, closure$showPreloader, closure$c, this$navAddChild) {
    return function () {
      var child = closure$lazy.instance;
      if (closure$showPreloader) {
        showAssetLoadingBar(this$navAddChild, navAddChild$lambda$lambda(child, closure$c));
      }
       else {
        if (!child.isDisposed) {
          closure$c.addElement_mxweac$(child);
          focusFirst(child);
        }
      }
    };
  }
  function navAddChild$lambda_0(closure$lazy, closure$c, closure$disposeOnRemove) {
    return function () {
      if (closure$lazy.created) {
        closure$c.removeElement_erfg6z$(closure$lazy.instance);
        if (closure$disposeOnRemove) {
          closure$lazy.disposeInstance();
        }
      }
    };
  }
  function navAddChild($receiver, nav, path, showPreloader, disposeOnRemove, factory_0) {
    if (showPreloader === void 0)
      showPreloader = true;
    if (disposeOnRemove === void 0)
      disposeOnRemove = false;
    var lazy_1 = new LazyInstance($receiver, factory_0);
    var c = $receiver;
    nav.bindPathEnter_9bodf6$(path, navAddChild$lambda(lazy_1, showPreloader, c, $receiver));
    nav.bindPathExit_9bodf6$(path, navAddChild$lambda_0(lazy_1, c, disposeOnRemove));
  }
  function bindToPath$lambda(closure$nav, closure$path) {
    return function (it) {
      closure$nav.navigate_61zpoe$('../' + closure$path);
    };
  }
  function bindToPath$lambda_0(this$bindToPath) {
    return function () {
      this$bindToPath.selected = true;
    };
  }
  function bindToPath$lambda_1(this$bindToPath) {
    return function () {
      this$bindToPath.selected = false;
    };
  }
  function bindToPath($receiver, nav, path) {
    click($receiver).add_trkh7z$(bindToPath$lambda(nav, path));
    nav.bindPathEnter_9bodf6$(path, bindToPath$lambda_0($receiver));
    nav.bindPathExit_9bodf6$(path, bindToPath$lambda_1($receiver));
  }
  function Persistence() {
    Persistence$Companion_getInstance();
  }
  function Persistence$Companion() {
    Persistence$Companion_instance = this;
  }
  Persistence$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Persistence$Companion_instance = null;
  function Persistence$Companion_getInstance() {
    if (Persistence$Companion_instance === null) {
      new Persistence$Companion();
    }
    return Persistence$Companion_instance;
  }
  Persistence.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Persistence',
    interfaces: [Clearable]
  };
  function Lift(owner) {
    ElementContainerImpl.call(this, owner);
    this.constrainToStage = true;
    this.onClosed = null;
    this.isModal = false;
    this.priority = 0.0;
    this.focusFirst = false;
    this.highlightFocused = true;
    this.contents_0 = new LiftStack(this);
    this.popUp_0 = inject(this, PopUpManager$Companion_getInstance());
    this.contents_0.invalidated.add_trkh7z$(this.childInvalidatedHandler);
    this.contents_0.invalidated.add_trkh7z$(Lift_init$lambda(this));
    this.windowResizedHandler = Lift$windowResizedHandler$lambda(this);
    this.tmpVec_0 = new Vector3();
    this.tmpMat_0 = new Matrix4();
    this.points_0 = [new Vector2(0.0, 0.0), new Vector2(1.0, 0.0), new Vector2(1.0, 1.0), new Vector2(0.0, 1.0)];
  }
  Object.defineProperty(Lift.prototype, 'focusEnabled', {
    get: function () {
      return this.contents_0.focusEnabled;
    },
    set: function (value) {
      this.contents_0.focusEnabled = value;
    }
  });
  Object.defineProperty(Lift.prototype, 'focusOrder', {
    get: function () {
      return this.contents_0.focusOrder;
    },
    set: function (value) {
      this.contents_0.focusOrder = value;
    }
  });
  Object.defineProperty(Lift.prototype, 'highlight', {
    get: function () {
      return this.contents_0.highlight;
    },
    set: function (value) {
      this.contents_0.highlight = value;
    }
  });
  Object.defineProperty(Lift.prototype, 'layoutAlgorithm', {
    get: function () {
      return this.contents_0.layoutAlgorithm;
    }
  });
  function Lift$onActivated$lambda(this$Lift) {
    return function (it) {
      var tmp$;
      (tmp$ = this$Lift.onClosed) != null ? tmp$() : null;
    };
  }
  Lift.prototype.onActivated = function () {
    ElementContainerImpl.prototype.onActivated.call(this);
    this.window.sizeChanged.add_trkh7z$(this.windowResizedHandler);
    this.popUp_0.addPopUp_gyhesl$(new PopUpInfo(this.contents_0, this.isModal, this.priority, false, this.focusFirst, this.highlightFocused, void 0, Lift$onActivated$lambda(this)));
    if (this.constrainToStage)
      this.invalidate_za3lpa$(ValidationFlags_getInstance().CONCATENATED_TRANSFORM);
  };
  Lift.prototype.onDeactivated = function () {
    ElementContainerImpl.prototype.onDeactivated.call(this);
    this.window.sizeChanged.remove_trkh7z$(this.windowResizedHandler);
    this.popUp_0.removePopUp_k58t2y$(this.contents_0);
  };
  Lift.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.contents_0.addElement_3i6itm$(index, element);
  };
  Lift.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.contents_0.removeElement_erfg6z$(element);
  };
  Lift.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.contents_0.swapElements_tu2188$(elementA, elementB);
  };
  Lift.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    this.contents_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
  };
  Lift.prototype.updateConcatenatedTransform = function () {
    var tmp$, tmp$_0;
    ElementContainerImpl.prototype.updateConcatenatedTransform.call(this);
    this.tmpMat_0.set_1ktw39$(this.concatenatedTransform);
    if (this.constrainToStage) {
      var w = this.window.getWidth();
      var h = this.window.getHeight();
      var contentsW = this.contents_0.width;
      var contentsH = this.contents_0.height;
      tmp$ = this.points_0;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var point = tmp$[tmp$_0];
        this.tmpVec_0.set_y2kzbl$(contentsW * point.x, contentsH * point.y, 0.0);
        this.tmpMat_0.prj_9wm29k$(this.tmpVec_0);
        if (this.tmpVec_0.x > w) {
          this.tmpMat_0.trn_y2kzbl$(w - this.tmpVec_0.x, 0.0, 0.0);
        }
        if (this.tmpVec_0.x < 0.0) {
          this.tmpMat_0.trn_y2kzbl$(-this.tmpVec_0.x, 0.0, 0.0);
        }
        if (this.tmpVec_0.y > h) {
          this.tmpMat_0.trn_y2kzbl$(0.0, h - this.tmpVec_0.y, 0.0);
        }
        if (this.tmpVec_0.y < 0.0) {
          this.tmpMat_0.trn_y2kzbl$(0.0, -this.tmpVec_0.y, 0.0);
        }
      }
    }
    this.contents_0.setExternalTransform_1ktw39$(this.tmpMat_0);
  };
  Lift.prototype.updateConcatenatedColorTransform = function () {
    ElementContainerImpl.prototype.updateConcatenatedColorTransform.call(this);
    this.contents_0.colorTint = this.concatenatedColorTint;
  };
  function Lift_init$lambda(this$Lift) {
    return function (v, flags) {
      if (!this$Lift._isInvalidatingChildren)
        if (this$Lift.constrainToStage)
          this$Lift.invalidate_za3lpa$(ValidationFlags_getInstance().CONCATENATED_TRANSFORM);
    };
  }
  function Lift$windowResizedHandler$lambda(this$Lift) {
    return function (newWidth, newHeight, isUserInteraction) {
      this$Lift.invalidate_za3lpa$(ValidationFlags_getInstance().CONCATENATED_TRANSFORM);
    };
  }
  Lift.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Lift',
    interfaces: [Focusable, LayoutContainer, ElementContainerImpl]
  };
  function lift($receiver, init) {
    var l = new Lift($receiver);
    init(l);
    return l;
  }
  function LiftStack(owner) {
    StackLayoutContainer.call(this, owner);
    this._externalTransform_0 = new Matrix4();
    this.includeInLayout = false;
    this.isSimpleTranslate = false;
  }
  LiftStack.prototype.setExternalTransform_1ktw39$ = function (value) {
    this._externalTransform_0.set_1ktw39$(value);
    this.invalidate_za3lpa$(ValidationFlags_getInstance().TRANSFORM);
  };
  LiftStack.prototype.updateTransform = function () {
    this._transform.set_1ktw39$(this._externalTransform_0);
    this.native.setTransform_1ktw39$(this._transform);
  };
  LiftStack.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LiftStack',
    interfaces: [StackLayoutContainer]
  };
  function PopUpManager() {
    PopUpManager$Companion_getInstance();
  }
  PopUpManager.prototype.removePopUp_k58t2y$ = function (child) {
    var $receiver = this.currentPopUps;
    var firstOrNull_6jwkkr$result;
    firstOrNull_6jwkkr$break: {
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.equals(element.child, child)) {
          firstOrNull_6jwkkr$result = element;
          break firstOrNull_6jwkkr$break;
        }
      }
      firstOrNull_6jwkkr$result = null;
    }
    var info = firstOrNull_6jwkkr$result;
    if (info != null)
      this.removePopUp_gyhesl$(info);
  };
  function PopUpManager$Companion() {
    PopUpManager$Companion_instance = this;
    this.MODAL_STYLE = styleTag();
  }
  PopUpManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var PopUpManager$Companion_instance = null;
  function PopUpManager$Companion_getInstance() {
    if (PopUpManager$Companion_instance === null) {
      new PopUpManager$Companion();
    }
    return PopUpManager$Companion_instance;
  }
  PopUpManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'PopUpManager',
    interfaces: [Clearable]
  };
  function PopUpInfo(child, isModal, priority, dispose, focusFirst_0, highlightFocused, onCloseRequested, onClosed) {
    if (isModal === void 0)
      isModal = true;
    if (priority === void 0)
      priority = 0.0;
    if (dispose === void 0)
      dispose = false;
    if (focusFirst_0 === void 0)
      focusFirst_0 = true;
    if (highlightFocused === void 0)
      highlightFocused = false;
    if (onCloseRequested === void 0)
      onCloseRequested = PopUpInfo_init$lambda;
    if (onClosed === void 0)
      onClosed = PopUpInfo_init$lambda_0;
    this.child = child;
    this.isModal = isModal;
    this.priority = priority;
    this.dispose = dispose;
    this.focusFirst = focusFirst_0;
    this.highlightFocused = highlightFocused;
    this.onCloseRequested = onCloseRequested;
    this.onClosed = onClosed;
  }
  function PopUpInfo_init$lambda(it) {
    return true;
  }
  function PopUpInfo_init$lambda_0(it) {
  }
  PopUpInfo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PopUpInfo',
    interfaces: []
  };
  function PopUpManagerStyle() {
    PopUpManagerStyle$Companion_getInstance();
    StyleBase.call(this);
    this.type_7m1db7$_0 = PopUpManagerStyle$Companion_getInstance();
    this.modalEaseIn$delegate = this.prop_umlfku$('modalEaseIn', math_0.Easing.pow2In);
    this.modalEaseOut$delegate = this.prop_umlfku$('modalEaseOut', math_0.Easing.pow2Out);
    this.modalEaseInDuration$delegate = this.prop_umlfku$('modalEaseInDuration', 0.2);
    this.modalEaseOutDuration$delegate = this.prop_umlfku$('modalEaseOutDuration', 0.2);
  }
  Object.defineProperty(PopUpManagerStyle.prototype, 'type', {
    get: function () {
      return this.type_7m1db7$_0;
    }
  });
  Object.defineProperty(PopUpManagerStyle.prototype, 'modalEaseIn', {
    get: function () {
      return this.modalEaseIn$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('modalEaseIn'));
    },
    set: function (modalEaseIn) {
      this.modalEaseIn$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('modalEaseIn'), modalEaseIn);
    }
  });
  Object.defineProperty(PopUpManagerStyle.prototype, 'modalEaseOut', {
    get: function () {
      return this.modalEaseOut$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('modalEaseOut'));
    },
    set: function (modalEaseOut) {
      this.modalEaseOut$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('modalEaseOut'), modalEaseOut);
    }
  });
  Object.defineProperty(PopUpManagerStyle.prototype, 'modalEaseInDuration', {
    get: function () {
      return this.modalEaseInDuration$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('modalEaseInDuration'));
    },
    set: function (modalEaseInDuration) {
      this.modalEaseInDuration$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('modalEaseInDuration'), modalEaseInDuration);
    }
  });
  Object.defineProperty(PopUpManagerStyle.prototype, 'modalEaseOutDuration', {
    get: function () {
      return this.modalEaseOutDuration$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('modalEaseOutDuration'));
    },
    set: function (modalEaseOutDuration) {
      this.modalEaseOutDuration$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('modalEaseOutDuration'), modalEaseOutDuration);
    }
  });
  function PopUpManagerStyle$Companion() {
    PopUpManagerStyle$Companion_instance = this;
  }
  PopUpManagerStyle$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [StyleType]
  };
  var PopUpManagerStyle$Companion_instance = null;
  function PopUpManagerStyle$Companion_getInstance() {
    if (PopUpManagerStyle$Companion_instance === null) {
      new PopUpManagerStyle$Companion();
    }
    return PopUpManagerStyle$Companion_instance;
  }
  PopUpManagerStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PopUpManagerStyle',
    interfaces: [StyleBase]
  };
  function PopUpManagerImpl(owner) {
    CanvasLayoutContainer.call(this, owner);
    this.view_pltvyy$_0 = this;
    this.stage_0 = inject(this, Stage$Companion_getInstance());
    this.style_0 = style(this, new PopUpManagerStyle());
    this._currentPopUps_0 = ArrayList_init();
    this.modalFill_0 = this.unaryPlus_8db8yx$(rect(this, PopUpManagerImpl$modalFill$lambda(this)));
    this.showingModal_0 = false;
    this.tween_0 = null;
    this.childClosedHandler_0 = PopUpManagerImpl$childClosedHandler$lambda(this);
    this.stageKeyDownHandler_0 = PopUpManagerImpl$stageKeyDownHandler$lambda(this);
    keyDown(this.stage_0).add_trkh7z$(this.stageKeyDownHandler_0);
    this.interactivityMode = InteractivityMode$CHILDREN_getInstance();
  }
  Object.defineProperty(PopUpManagerImpl.prototype, 'view', {
    get: function () {
      return this.view_pltvyy$_0;
    }
  });
  Object.defineProperty(PopUpManagerImpl.prototype, 'currentPopUps', {
    get: function () {
      return this._currentPopUps_0;
    }
  });
  PopUpManagerImpl.prototype.refresh_0 = function () {
    var last_0 = lastOrNull(this._currentPopUps_0);
    if (last_0 != null) {
      if (last_0.focusFirst) {
        focusFirst(last_0.child);
        if (last_0.highlightFocused)
          inject(this, FocusManager$Companion_getInstance()).highlightFocused();
      }
    }
    this.refreshModalBlocker_0();
  };
  function PopUpManagerImpl$refreshModalBlocker$lambda(this$PopUpManagerImpl) {
    return function (it) {
      this$PopUpManagerImpl.tween_0 = null;
    };
  }
  function PopUpManagerImpl$refreshModalBlocker$lambda_0(this$PopUpManagerImpl) {
    return function (it) {
      this$PopUpManagerImpl.modalFill_0.visible = false;
      this$PopUpManagerImpl.tween_0 = null;
    };
  }
  PopUpManagerImpl.prototype.refreshModalBlocker_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var $receiver = this._currentPopUps_0;
    var indexOfLast$result;
    indexOfLast$break: {
      var iterator_3 = $receiver.listIterator_za3lpa$($receiver.size);
      while (iterator_3.hasPrevious()) {
        if (iterator_3.previous().isModal) {
          indexOfLast$result = iterator_3.nextIndex();
          break indexOfLast$break;
        }
      }
      indexOfLast$result = -1;
    }
    var lastModalIndex = indexOfLast$result;
    var shouldShowModal = lastModalIndex !== -1;
    if (shouldShowModal) {
      var lastModal = this._currentPopUps_0.get_za3lpa$(lastModalIndex);
      var childIndex = this.elements.indexOf_11rb$(lastModal.child);
      var modalIndex = this.elements.indexOf_11rb$(this.modalFill_0);
      if (modalIndex !== (childIndex - 1 | 0)) {
        if (modalIndex < childIndex) {
          childIndex = childIndex - 1 | 0;
        }
        this.removeElement_erfg6z$(this.modalFill_0);
        this.addElement_3i6itm$(childIndex, this.modalFill_0);
      }
    }
    var s = this.style_0;
    if (!Kotlin.equals(shouldShowModal, this.showingModal_0)) {
      this.showingModal_0 = shouldShowModal;
      if (shouldShowModal) {
        (tmp$ = this.tween_0) != null ? tmp$.complete() : null;
        this.modalFill_0.visible = true;
        this.modalFill_0.alpha = 0.0;
        this.tween_0 = drive(tweenAlpha(this.modalFill_0, s.modalEaseInDuration, s.modalEaseIn, 1.0), this.timeDriver);
        ((tmp$_0 = this.tween_0) != null ? tmp$_0 : Kotlin.throwNPE()).completed.add_trkh7z$(PopUpManagerImpl$refreshModalBlocker$lambda(this));
      }
       else {
        (tmp$_1 = this.tween_0) != null ? tmp$_1.complete() : null;
        this.tween_0 = drive(tweenAlpha(this.modalFill_0, s.modalEaseOutDuration, s.modalEaseOut, 0.0), this.timeDriver);
        ((tmp$_2 = this.tween_0) != null ? tmp$_2 : Kotlin.throwNPE()).completed.add_trkh7z$(PopUpManagerImpl$refreshModalBlocker$lambda_0(this));
      }
    }
  };
  PopUpManagerImpl.prototype.clear = function () {
    while (!this._currentPopUps_0.isEmpty()) {
      this.removePopUp_gyhesl$(last(this._currentPopUps_0));
    }
  };
  PopUpManagerImpl.prototype.requestModalClose = function () {
    var tmp$, tmp$_0;
    var $receiver = this._currentPopUps_0;
    var indexOfLast$result;
    indexOfLast$break: {
      var iterator_3 = $receiver.listIterator_za3lpa$($receiver.size);
      while (iterator_3.hasPrevious()) {
        if (iterator_3.previous().isModal) {
          indexOfLast$result = iterator_3.nextIndex();
          break indexOfLast$break;
        }
      }
      indexOfLast$result = -1;
    }
    var lastModalIndex = indexOfLast$result;
    if (lastModalIndex === -1)
      return;
    var i = get_lastIndex(this._currentPopUps_0);
    while (i >= 0 && i >= lastModalIndex) {
      var p = Kotlin.isType(tmp$_0 = this._currentPopUps_0.get_za3lpa$((tmp$ = i, i = tmp$ - 1 | 0, tmp$)), PopUpInfo) ? tmp$_0 : Kotlin.throwCCE();
      if (p.onCloseRequested(p.child))
        this.removePopUp_gyhesl$(p);
      else
        break;
    }
  };
  function PopUpManagerImpl$addPopUp$lambda(a, b) {
    return Kotlin.primitiveCompareTo(a.priority, b.priority);
  }
  function PopUpManagerImpl$addPopUp$lambda_0($receiver) {
    $receiver.horizontalCenter = 0.0;
    $receiver.verticalCenter = 0.0;
  }
  PopUpManagerImpl.prototype.addPopUp_gyhesl$ = function (popUpInfo) {
    var child = popUpInfo.child;
    if (child.parent != null)
      throw new Exception('The pop-up must be removed before adding.');
    if (Kotlin.isType(child, Closeable)) {
      child.closed.add_trkh7z$(this.childClosedHandler_0);
    }
    var index = sortedInsertionIndex(this._currentPopUps_0, popUpInfo, PopUpManagerImpl$addPopUp$lambda);
    this._currentPopUps_0.add_wxm5ur$(index, popUpInfo);
    if (index === get_lastIndex(this._currentPopUps_0)) {
      this.addElement_mxweac$(child);
    }
     else {
      this.addElementBefore_tu2188$(child, this._currentPopUps_0.get_za3lpa$(index + 1 | 0).child);
    }
    this.refresh_0();
    if (!Kotlin.isType(child.layoutData, CanvasLayoutData)) {
      var defaultLayoutData = canvasLayoutData(PopUpManagerImpl$addPopUp$lambda_0);
      child.layoutData = defaultLayoutData;
    }
  };
  PopUpManagerImpl.prototype.removePopUp_gyhesl$ = function (popUpInfo) {
    var child = popUpInfo.child;
    this._currentPopUps_0.remove_11rb$(popUpInfo);
    this.removeElement_erfg6z$(child);
    if (Kotlin.isType(child, Closeable)) {
      child.closed.remove_trkh7z$(this.childClosedHandler_0);
    }
    popUpInfo.onClosed(child);
    if (popUpInfo.dispose && !child.isDisposed)
      child.dispose();
    this.refresh_0();
  };
  PopUpManagerImpl.prototype.dispose = function () {
    CanvasLayoutContainer.prototype.dispose.call(this);
    keyDown(this.stage_0).remove_trkh7z$(this.stageKeyDownHandler_0);
  };
  function PopUpManagerImpl$modalFill$lambda$lambda($receiver) {
    $receiver.widthPercent = 1.0;
    $receiver.heightPercent = 1.0;
  }
  function PopUpManagerImpl$modalFill$lambda$lambda_0(this$PopUpManagerImpl) {
    return function (it) {
      this$PopUpManagerImpl.requestModalClose();
    };
  }
  function PopUpManagerImpl$modalFill$lambda(this$PopUpManagerImpl) {
    return function ($receiver) {
      addTag($receiver, PopUpManager$Companion_getInstance().MODAL_STYLE);
      $receiver.visible = false;
      this$PopUpManagerImpl.layout_ge8abi$($receiver, PopUpManagerImpl$modalFill$lambda$lambda);
      click($receiver).add_trkh7z$(PopUpManagerImpl$modalFill$lambda$lambda_0(this$PopUpManagerImpl));
    };
  }
  function PopUpManagerImpl$childClosedHandler$lambda(this$PopUpManagerImpl) {
    return function (it) {
      var tmp$, tmp$_0;
      tmp$_0 = Kotlin.isType(tmp$ = it, UiComponent) ? tmp$ : Kotlin.throwCCE();
      this$PopUpManagerImpl.removePopUp_k58t2y$(tmp$_0);
    };
  }
  function PopUpManagerImpl$stageKeyDownHandler$lambda(this$PopUpManagerImpl) {
    return function (event) {
      if (!this$PopUpManagerImpl._currentPopUps_0.isEmpty()) {
        if (!event.handled && event.keyCode === Ascii_getInstance().ESCAPE) {
          event.handled = true;
          this$PopUpManagerImpl.requestModalClose();
        }
      }
    };
  }
  PopUpManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'PopUpManagerImpl',
    interfaces: [PopUpManager, CanvasLayoutContainer]
  };
  function addPopUp($receiver, popUpInfo) {
    var popUpManager = inject($receiver, PopUpManager$Companion_getInstance());
    popUpManager.addPopUp_gyhesl$(popUpInfo);
    return popUpInfo.child;
  }
  function removePopUp($receiver, child) {
    inject($receiver, PopUpManager$Companion_getInstance()).removePopUp_k58t2y$(child);
  }
  function UrlRequestData(url, method, headers, user, password, formData, variables, responseType, timeout) {
    if (url === void 0)
      url = '';
    if (method === void 0)
      method = UrlRequestMethod_getInstance().GET;
    if (headers === void 0)
      headers = HashMap_init();
    if (user === void 0)
      user = '';
    if (password === void 0)
      password = '';
    if (formData === void 0)
      formData = null;
    if (variables === void 0)
      variables = null;
    if (responseType === void 0)
      responseType = ResponseType$TEXT_getInstance();
    if (timeout === void 0)
      timeout = Kotlin.Long.ZERO;
    this.url = url;
    this.method = method;
    this.headers = headers;
    this.user = user;
    this.password = password;
    this.formData = formData;
    this.variables = variables;
    this.responseType = responseType;
    this.timeout = timeout;
  }
  UrlRequestData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'UrlRequestData',
    interfaces: []
  };
  UrlRequestData.prototype.component1 = function () {
    return this.url;
  };
  UrlRequestData.prototype.component2 = function () {
    return this.method;
  };
  UrlRequestData.prototype.component3 = function () {
    return this.headers;
  };
  UrlRequestData.prototype.component4 = function () {
    return this.user;
  };
  UrlRequestData.prototype.component5 = function () {
    return this.password;
  };
  UrlRequestData.prototype.component6 = function () {
    return this.formData;
  };
  UrlRequestData.prototype.component7 = function () {
    return this.variables;
  };
  UrlRequestData.prototype.component8 = function () {
    return this.responseType;
  };
  UrlRequestData.prototype.component9 = function () {
    return this.timeout;
  };
  UrlRequestData.prototype.copy_pvhc9o$ = function (url, method, headers, user, password, formData, variables, responseType, timeout) {
    return new UrlRequestData(url === void 0 ? this.url : url, method === void 0 ? this.method : method, headers === void 0 ? this.headers : headers, user === void 0 ? this.user : user, password === void 0 ? this.password : password, formData === void 0 ? this.formData : formData, variables === void 0 ? this.variables : variables, responseType === void 0 ? this.responseType : responseType, timeout === void 0 ? this.timeout : timeout);
  };
  UrlRequestData.prototype.toString = function () {
    return 'UrlRequestData(url=' + Kotlin.toString(this.url) + (', method=' + Kotlin.toString(this.method)) + (', headers=' + Kotlin.toString(this.headers)) + (', user=' + Kotlin.toString(this.user)) + (', password=' + Kotlin.toString(this.password)) + (', formData=' + Kotlin.toString(this.formData)) + (', variables=' + Kotlin.toString(this.variables)) + (', responseType=' + Kotlin.toString(this.responseType)) + (', timeout=' + Kotlin.toString(this.timeout)) + ')';
  };
  UrlRequestData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.url) | 0;
    result = result * 31 + Kotlin.hashCode(this.method) | 0;
    result = result * 31 + Kotlin.hashCode(this.headers) | 0;
    result = result * 31 + Kotlin.hashCode(this.user) | 0;
    result = result * 31 + Kotlin.hashCode(this.password) | 0;
    result = result * 31 + Kotlin.hashCode(this.formData) | 0;
    result = result * 31 + Kotlin.hashCode(this.variables) | 0;
    result = result * 31 + Kotlin.hashCode(this.responseType) | 0;
    result = result * 31 + Kotlin.hashCode(this.timeout) | 0;
    return result;
  };
  UrlRequestData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.url, other.url) && Kotlin.equals(this.method, other.method) && Kotlin.equals(this.headers, other.headers) && Kotlin.equals(this.user, other.user) && Kotlin.equals(this.password, other.password) && Kotlin.equals(this.formData, other.formData) && Kotlin.equals(this.variables, other.variables) && Kotlin.equals(this.responseType, other.responseType) && Kotlin.equals(this.timeout, other.timeout)))));
  };
  function UrlRequestMethod() {
    UrlRequestMethod_instance = this;
    this.GET = 'GET';
    this.POST = 'POST';
    this.PUT = 'PUT';
    this.DELETE = 'DELETE';
  }
  UrlRequestMethod.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'UrlRequestMethod',
    interfaces: []
  };
  var UrlRequestMethod_instance = null;
  function UrlRequestMethod_getInstance() {
    if (UrlRequestMethod_instance === null) {
      new UrlRequestMethod();
    }
    return UrlRequestMethod_instance;
  }
  function ResponseType(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ResponseType_initFields() {
    ResponseType_initFields = function () {
    };
    ResponseType$BINARY_instance = new ResponseType('BINARY', 0);
    ResponseType$TEXT_instance = new ResponseType('TEXT', 1);
  }
  var ResponseType$BINARY_instance;
  function ResponseType$BINARY_getInstance() {
    ResponseType_initFields();
    return ResponseType$BINARY_instance;
  }
  var ResponseType$TEXT_instance;
  function ResponseType$TEXT_getInstance() {
    ResponseType_initFields();
    return ResponseType$TEXT_instance;
  }
  ResponseType.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ResponseType',
    interfaces: [Enum]
  };
  function ResponseType$values() {
    return [ResponseType$BINARY_getInstance(), ResponseType$TEXT_getInstance()];
  }
  ResponseType.values = ResponseType$values;
  function ResponseType$valueOf(name) {
    switch (name) {
      case 'BINARY':
        return ResponseType$BINARY_getInstance();
      case 'TEXT':
        return ResponseType$TEXT_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.core.request.ResponseType.' + name);
    }
  }
  ResponseType.valueOf_61zpoe$ = ResponseType$valueOf;
  function RestServiceFactory() {
    RestServiceFactory$Companion_getInstance();
  }
  function RestServiceFactory$Companion() {
    RestServiceFactory$Companion_instance = this;
    this.instance = void 0;
  }
  RestServiceFactory$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var RestServiceFactory$Companion_instance = null;
  function RestServiceFactory$Companion_getInstance() {
    if (RestServiceFactory$Companion_instance === null) {
      new RestServiceFactory$Companion();
    }
    return RestServiceFactory$Companion_instance;
  }
  RestServiceFactory.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'RestServiceFactory',
    interfaces: []
  };
  function HttpRequest() {
  }
  Object.defineProperty(HttpRequest.prototype, 'responseError', {
    get: function () {
      var tmp$;
      return Kotlin.isType(tmp$ = this.error, ResponseException) ? tmp$ : null;
    }
  });
  Object.defineProperty(HttpRequest.prototype, 'resultBinary', {
    get: function () {
      var tmp$;
      if (this.responseType !== ResponseType$BINARY_getInstance())
        throw new Exception('responseType is not BINARY');
      return Kotlin.isType(tmp$ = this.result, NativeBuffer) ? tmp$ : Kotlin.throwCCE();
    }
  });
  Object.defineProperty(HttpRequest.prototype, 'resultText', {
    get: function () {
      var tmp$;
      if (this.responseType !== ResponseType$TEXT_getInstance())
        throw new Exception('responseType is not TEXT');
      return typeof (tmp$ = this.result) === 'string' ? tmp$ : Kotlin.throwCCE();
    }
  });
  HttpRequest.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'HttpRequest',
    interfaces: [Loadable]
  };
  function MutableHttpRequest() {
  }
  MutableHttpRequest.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'MutableHttpRequest',
    interfaces: [MutableLoadable, HttpRequest]
  };
  function createRequest() {
    return RestServiceFactory$Companion_getInstance().instance.create();
  }
  function HttpResponse(text_2, data) {
    if (text_2 === void 0)
      text_2 = null;
    if (data === void 0)
      data = null;
    this.text = text_2;
    this.data = data;
  }
  HttpResponse.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'HttpResponse',
    interfaces: []
  };
  HttpResponse.prototype.component1 = function () {
    return this.text;
  };
  HttpResponse.prototype.component2 = function () {
    return this.data;
  };
  HttpResponse.prototype.copy_xumu4w$ = function (text_2, data) {
    return new HttpResponse(text_2 === void 0 ? this.text : text_2, data === void 0 ? this.data : data);
  };
  HttpResponse.prototype.toString = function () {
    return 'HttpResponse(text=' + Kotlin.toString(this.text) + (', data=' + Kotlin.toString(this.data)) + ')';
  };
  HttpResponse.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  HttpResponse.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.text, other.text) && Kotlin.equals(this.data, other.data)))));
  };
  function ResponseException(status, message, detail) {
    Exception.call(this, message);
    this.status = status;
    this.detail = detail;
    this.name = 'ResponseException';
  }
  ResponseException.prototype.toString = function () {
    return 'ResponseException(status=' + this.status + ', message=' + Kotlin.toString(this.message) + ')';
  };
  ResponseException.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ResponseException',
    interfaces: [Exception]
  };
  function SelectionManager() {
    SelectionManager$Companion_getInstance();
  }
  function SelectionManager$Companion() {
    SelectionManager$Companion_instance = this;
  }
  SelectionManager$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var SelectionManager$Companion_instance = null;
  function SelectionManager$Companion_getInstance() {
    if (SelectionManager$Companion_instance === null) {
      new SelectionManager$Companion();
    }
    return SelectionManager$Companion_instance;
  }
  SelectionManager.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'SelectionManager',
    interfaces: [Disposable]
  };
  function SelectionManagerImpl() {
    this.selectionChanged_vptwna$_0 = new Signal0();
  }
  Object.defineProperty(SelectionManagerImpl.prototype, 'selectionChanged', {
    get: function () {
      return this.selectionChanged_vptwna$_0;
    }
  });
  SelectionManagerImpl.prototype.dispose = function () {
    this.selectionChanged.dispose();
  };
  SelectionManagerImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'SelectionManagerImpl',
    interfaces: [SelectionManager]
  };
  function Formatter() {
  }
  Formatter.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Formatter',
    interfaces: []
  };
  function ToStringFormatter() {
    ToStringFormatter_instance = this;
  }
  ToStringFormatter.prototype.format_trkh7z$ = function (value) {
    return value.toString();
  };
  ToStringFormatter.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'ToStringFormatter',
    interfaces: [Formatter]
  };
  var ToStringFormatter_instance = null;
  function ToStringFormatter_getInstance() {
    if (ToStringFormatter_instance === null) {
      new ToStringFormatter();
    }
    return ToStringFormatter_instance;
  }
  function IntFormatter() {
    IntFormatter_instance = this;
  }
  IntFormatter.prototype.format_trkh7z$ = function (value) {
    return (value | 0).toString();
  };
  IntFormatter.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'IntFormatter',
    interfaces: [Formatter]
  };
  var IntFormatter_instance = null;
  function IntFormatter_getInstance() {
    if (IntFormatter_instance === null) {
      new IntFormatter();
    }
    return IntFormatter_instance;
  }
  function UidUtil() {
    UidUtil_instance = this;
  }
  UidUtil.prototype.createUid = function () {
    var tmp$ = core_0.toString;
    var value = get_time().nowMs().toInt();
    return tmp$.call(core_0, value < 0.0 ? -value : value, 36) + core_0.toString(Math.random() * core_0.INT_MAX_VALUE | 0, 36);
  };
  UidUtil.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'UidUtil',
    interfaces: []
  };
  var UidUtil_instance = null;
  function UidUtil_getInstance() {
    if (UidUtil_instance === null) {
      new UidUtil();
    }
    return UidUtil_instance;
  }
  function Date_0() {
  }
  Date_0.prototype.isLeapYear = function () {
    return DateUtil$Companion_getInstance().isLeapYear_za3lpa$(this.year());
  };
  Date_0.prototype.isSameDate_ok75ku$ = function (o) {
    return this.dayOfMonth() === o.dayOfMonth() && this.month() === o.month() && this.year() === o.year();
  };
  Date_0.prototype.compareTo_11rb$ = function (other) {
    return this.time().compareTo_11rb$(other.time());
  };
  Date_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Date',
    interfaces: [Comparable]
  };
  function DateUtil() {
    DateUtil$Companion_getInstance();
  }
  function DateUtil$Companion() {
    DateUtil$Companion_instance = this;
    this.GREGORIAN_CUTOVER_YEAR_0 = 1582;
  }
  DateUtil$Companion.prototype.isLeapYear_za3lpa$ = function (year) {
    if ((year & 3) !== 0) {
      return false;
    }
    if (year >= this.GREGORIAN_CUTOVER_YEAR_0) {
      return year % 100 !== 0 || year % 400 === 0;
    }
     else {
      return true;
    }
  };
  DateUtil$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DateUtil$Companion_instance = null;
  function DateUtil$Companion_getInstance() {
    if (DateUtil$Companion_instance === null) {
      new DateUtil$Companion();
    }
    return DateUtil$Companion_instance;
  }
  DateUtil.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DateUtil',
    interfaces: []
  };
  function Eras() {
    Eras_instance = this;
    this.BCE = 0;
    this.AD = 1;
  }
  Eras.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Eras',
    interfaces: []
  };
  var Eras_instance = null;
  function Eras_getInstance() {
    if (Eras_instance === null) {
      new Eras();
    }
    return Eras_instance;
  }
  function LimitedCallback(timeDriver, duration, callback) {
    DrivableChildBase.call(this);
    this.timeDriver = timeDriver;
    this.duration = duration;
    this.callback = callback;
    this.currentTime_0 = 0.0;
    this.callAgain_0 = false;
  }
  LimitedCallback.prototype.update_mx4ult$ = function (stepTime) {
    this.currentTime_0 += stepTime;
    if (this.currentTime_0 > this.duration) {
      this.currentTime_0 = 0.0;
      this.remove();
      if (this.callAgain_0) {
        this.callAgain_0 = false;
        this.callback();
      }
    }
  };
  LimitedCallback.prototype.invoke = function () {
    if (!this.isActive) {
      this.timeDriver.addChild_qaye9v$(this);
      this.callback();
    }
     else {
      this.callAgain_0 = true;
    }
  };
  LimitedCallback.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LimitedCallback',
    interfaces: [DrivableChildBase, DrivableChild, Disposable]
  };
  function limitedCallback($receiver, duration, callback) {
    return new LimitedCallback(inject($receiver, TimeDriver$Companion_getInstance()), duration, callback);
  }
  function DelayedCallback(timeDriver, duration, callback) {
    DrivableChildBase.call(this);
    this.timeDriver = timeDriver;
    this.duration = duration;
    this.callback = callback;
    this.currentTime_0 = 0.0;
  }
  DelayedCallback.prototype.update_mx4ult$ = function (stepTime) {
    this.currentTime_0 += stepTime;
    if (this.currentTime_0 > this.duration) {
      this.currentTime_0 = 0.0;
      this.remove();
      this.callback();
    }
  };
  DelayedCallback.prototype.invoke = function () {
    if (!this.isActive) {
      this.timeDriver.addChild_qaye9v$(this);
    }
     else {
      this.currentTime_0 = 0.0;
    }
  };
  DelayedCallback.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DelayedCallback',
    interfaces: [DrivableChildBase, DrivableChild, Disposable]
  };
  function delayedCallback($receiver, duration, callback) {
    return new DelayedCallback(inject($receiver, TimeDriver$Companion_getInstance()), duration, callback);
  }
  function Months() {
    Months_instance = this;
    this.JANUARY = 0;
    this.FEBRUARY = 1;
    this.MARCH = 2;
    this.APRIL = 3;
    this.MAY = 4;
    this.JUNE = 5;
    this.JULY = 6;
    this.AUGUST = 7;
    this.SEPTEMBER = 8;
    this.OCTOBER = 9;
    this.NOVEMBER = 10;
    this.DECEMBER = 11;
  }
  Months.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Months',
    interfaces: []
  };
  var Months_instance = null;
  function Months_getInstance() {
    if (Months_instance === null) {
      new Months();
    }
    return Months_instance;
  }
  function OnTick(component_0, callback) {
    DrivableChildBase.call(this);
    this.component_0 = component_0;
    this.callback_0 = callback;
    this.timeDriver_0 = inject(this.component_0, TimeDriver$Companion_getInstance());
    this.componentActivatedHandler_0 = OnTick$componentActivatedHandler$lambda(this);
    this.componentDeactivatedHandler_0 = OnTick$componentDeactivatedHandler$lambda(this);
    this.componentDisposedHandler_0 = OnTick$componentDisposedHandler$lambda(this);
    this.component_0.activated.add_trkh7z$(this.componentActivatedHandler_0);
    this.component_0.deactivated.add_trkh7z$(this.componentDeactivatedHandler_0);
    this.component_0.disposed.add_trkh7z$(this.componentDisposedHandler_0);
    if (this.component_0.isActive) {
      this.timeDriver_0.addChild_qaye9v$(this);
    }
  }
  OnTick.prototype.update_mx4ult$ = function (stepTime) {
    this.callback_0(stepTime);
  };
  OnTick.prototype.dispose = function () {
    DrivableChildBase.prototype.dispose.call(this);
    this.component_0.activated.remove_trkh7z$(this.componentActivatedHandler_0);
    this.component_0.deactivated.remove_trkh7z$(this.componentDeactivatedHandler_0);
    this.component_0.disposed.remove_trkh7z$(this.componentDisposedHandler_0);
  };
  function OnTick$componentActivatedHandler$lambda(this$OnTick) {
    return function (it) {
      this$OnTick.timeDriver_0.addChild_qaye9v$(this$OnTick);
    };
  }
  function OnTick$componentDeactivatedHandler$lambda(this$OnTick) {
    return function (it) {
      this$OnTick.timeDriver_0.removeChild_6iy558$(this$OnTick);
    };
  }
  function OnTick$componentDisposedHandler$lambda(this$OnTick) {
    return function (it) {
      this$OnTick.dispose();
    };
  }
  OnTick.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'OnTick',
    interfaces: [DrivableChildBase]
  };
  function onTick($receiver, callback) {
    return new OnTick($receiver, callback);
  }
  function TimeDriver() {
    TimeDriver$Companion_getInstance();
  }
  function TimeDriver$Companion() {
    TimeDriver$Companion_instance = this;
  }
  TimeDriver$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var TimeDriver$Companion_instance = null;
  function TimeDriver$Companion_getInstance() {
    if (TimeDriver$Companion_instance === null) {
      new TimeDriver$Companion();
    }
    return TimeDriver$Companion_instance;
  }
  TimeDriver.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TimeDriver',
    interfaces: [Drivable, MutableParent]
  };
  function TimeDriverImpl() {
    LifecycleBase.call(this);
    this.parent_no8z9n$_0 = null;
    this._children_no8z9n$_0 = ActiveList_init_0();
    this.childIterator_no8z9n$_0 = this._children_no8z9n$_0.iterator();
  }
  Object.defineProperty(TimeDriverImpl.prototype, 'parent', {
    get: function () {
      return this.parent_no8z9n$_0;
    },
    set: function (parent) {
      this.parent_no8z9n$_0 = parent;
    }
  });
  function TimeDriverImpl$onActivated$lambda(it) {
    if (!it.isActive) {
      it.activate();
    }
    return true;
  }
  TimeDriverImpl.prototype.onActivated = function () {
    this.iterateChildren_bwf5pq$(TimeDriverImpl$onActivated$lambda);
  };
  function TimeDriverImpl$update$lambda(closure$stepTime) {
    return function (it) {
      it.update_mx4ult$(closure$stepTime);
      return true;
    };
  }
  TimeDriverImpl.prototype.update_mx4ult$ = function (stepTime) {
    this.iterateChildren_bwf5pq$(TimeDriverImpl$update$lambda(stepTime));
  };
  Object.defineProperty(TimeDriverImpl.prototype, 'children', {
    get: function () {
      return this._children_no8z9n$_0;
    }
  });
  TimeDriverImpl.prototype.iterateChildren_bwf5pq$ = function (body) {
    this.childIterator_no8z9n$_0.iterate_ucl7l2$(body);
  };
  TimeDriverImpl.prototype.iterateChildrenReversed_bwf5pq$ = function (body) {
    this.childIterator_no8z9n$_0.iterateReversed_ucl7l2$(body);
  };
  TimeDriverImpl.prototype.addChild_6dvupz$ = function (index, child) {
    var n = this._children_no8z9n$_0.size;
    _assert(index <= n, 'index is out of bounds.');
    _assert(child.parent == null, 'Remove the child before adding it again.');
    if (index === n) {
      this._children_no8z9n$_0.add_11rb$(child);
    }
     else {
      this._children_no8z9n$_0.add_wxm5ur$(index, child);
    }
    child.parent = this;
    if (this.isActive) {
      child.activate();
    }
    return child;
  };
  TimeDriverImpl.prototype.removeChild_za3lpa$ = function (index) {
    var c = this._children_no8z9n$_0;
    var child = c.removeAt_za3lpa$(index);
    child.parent = null;
    if (child.isActive) {
      child.deactivate();
    }
    return child;
  };
  TimeDriverImpl.prototype.swapChildren_vux9f0$ = function (indexA, indexB) {
    var c = this._children_no8z9n$_0;
    var tmp = c.get_za3lpa$(indexA);
    c.set_wxm5ur$(indexA, c.get_za3lpa$(indexB));
    c.set_wxm5ur$(indexB, tmp);
  };
  function TimeDriverImpl$dispose$lambda(it) {
    it.dispose();
    return true;
  }
  TimeDriverImpl.prototype.dispose = function () {
    LifecycleBase.prototype.dispose.call(this);
    this.iterateChildren_bwf5pq$(TimeDriverImpl$dispose$lambda);
    this._children_no8z9n$_0.dispose();
  };
  TimeDriverImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TimeDriverImpl',
    interfaces: [TimeDriver, Drivable, LifecycleBase]
  };
  function drive$ObjectLiteral(closure$update) {
    this.closure$update = closure$update;
    DrivableChildBase.call(this);
  }
  drive$ObjectLiteral.prototype.update_mx4ult$ = function (stepTime) {
    this.closure$update(stepTime);
  };
  drive$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [DrivableChildBase]
  };
  function drive_0($receiver, update) {
    var child = new drive$ObjectLiteral(update);
    inject($receiver, TimeDriver$Companion_getInstance()).addChild_qaye9v$(child);
    return child;
  }
  function TimeProvider() {
  }
  TimeProvider.prototype.nowS = function () {
    return this.nowMs().toNumber() / 1000.0;
  };
  TimeProvider.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TimeProvider',
    interfaces: []
  };
  var time;
  function get_time() {
    return time.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('time'));
  }
  function set_time(time_0) {
    time.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('time'), time_0);
  }
  function Timer() {
    Timer$Companion_getInstance();
    DrivableChildBase.call(this);
    this.duration = 0.0;
    this.repetitions = 1;
    this.currentTime = 0.0;
    this.currentRepetition = 0;
    this.callback = Timer$Companion_getInstance().NOOP_0;
  }
  Timer.prototype.update_mx4ult$ = function (stepTime) {
    this.currentTime += stepTime;
    while (this.currentTime > this.duration) {
      this.currentTime -= this.duration;
      this.currentRepetition = this.currentRepetition + 1 | 0;
      this.callback();
      if (this.repetitions >= 0 && this.currentRepetition >= this.repetitions) {
        this.stop();
      }
    }
  };
  Timer.prototype.stop = function () {
    if (!this.isActive)
      return;
    this.remove();
    Timer$Companion_getInstance().pool_0.free_11rb$(this);
  };
  Timer.prototype.clear = function () {
    this.repetitions = 1;
    this.duration = 0.0;
    this.currentTime = 0.0;
    this.currentRepetition = 0;
    this.callback = Timer$Companion_getInstance().NOOP_0;
  };
  Timer.prototype.dispose = function () {
    DrivableChildBase.prototype.dispose.call(this);
    this.remove();
  };
  function Timer$Companion() {
    Timer$Companion_instance = this;
    this.NOOP_0 = Timer$Companion$NOOP$lambda;
    this.pool_0 = new ClearableObjectPool(void 0, Timer$Companion$pool$lambda);
  }
  Timer$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  function Timer$Companion$NOOP$lambda() {
  }
  function Timer$Companion$pool$lambda() {
    return new Timer();
  }
  Timer$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Timer$Companion_instance = null;
  function Timer$Companion_getInstance() {
    if (Timer$Companion_instance === null) {
      new Timer$Companion();
    }
    return Timer$Companion_instance;
  }
  Timer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Timer',
    interfaces: [Clearable, DrivableChildBase]
  };
  function timer($receiver, duration, repetitions, callback) {
    if (repetitions === void 0)
      repetitions = 1;
    if (repetitions === 0)
      throw new IllegalArgumentException('repetitions argument may not be zero.');
    var wait = Timer$Companion_getInstance().obtain();
    wait.duration = duration;
    wait.callback = callback;
    wait.repetitions = repetitions;
    inject($receiver, TimeDriver$Companion_getInstance()).addChild_qaye9v$(wait);
    return wait;
  }
  function EnterFrame() {
    EnterFrame$Companion_getInstance();
    DrivableChildBase.call(this);
    this.repetitions = 1;
    this.currentRepetition = 0;
    this.callback = EnterFrame$Companion_getInstance().NOOP_0;
  }
  EnterFrame.prototype.update_mx4ult$ = function (stepTime) {
    this.currentRepetition = this.currentRepetition + 1 | 0;
    this.callback();
    if (this.repetitions >= 0 && this.currentRepetition >= this.repetitions) {
      this.stop();
    }
  };
  EnterFrame.prototype.stop = function () {
    this.remove();
    EnterFrame$Companion_getInstance().pool_0.free_11rb$(this);
  };
  EnterFrame.prototype.clear = function () {
    this.repetitions = 1;
    this.currentRepetition = 0;
    this.callback = EnterFrame$Companion_getInstance().NOOP_0;
  };
  function EnterFrame$Companion() {
    EnterFrame$Companion_instance = this;
    this.NOOP_0 = EnterFrame$Companion$NOOP$lambda;
    this.pool_0 = new ClearableObjectPool(void 0, EnterFrame$Companion$pool$lambda);
  }
  EnterFrame$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  function EnterFrame$Companion$NOOP$lambda() {
  }
  function EnterFrame$Companion$pool$lambda() {
    return new EnterFrame();
  }
  EnterFrame$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var EnterFrame$Companion_instance = null;
  function EnterFrame$Companion_getInstance() {
    if (EnterFrame$Companion_instance === null) {
      new EnterFrame$Companion();
    }
    return EnterFrame$Companion_instance;
  }
  EnterFrame.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'EnterFrame',
    interfaces: [Clearable, DrivableChildBase]
  };
  function callLater($receiver, callback) {
    return enterFrame($receiver, 1, callback);
  }
  function callLater_0($receiver, callback) {
    return enterFrame_0($receiver, 1, callback);
  }
  function enterFrame($receiver, repetitions, callback) {
    if (repetitions === void 0)
      repetitions = -1;
    return enterFrame_0(inject($receiver, TimeDriver$Companion_getInstance()), repetitions, callback);
  }
  function enterFrame_0($receiver, repetitions, callback) {
    if (repetitions === void 0)
      repetitions = -1;
    if (repetitions === 0)
      throw new IllegalArgumentException('repetitions argument may not be zero.');
    var enterFrame_1 = EnterFrame$Companion_getInstance().obtain();
    enterFrame_1.callback = callback;
    enterFrame_1.repetitions = repetitions;
    $receiver.addChild_qaye9v$(enterFrame_1);
    return enterFrame_1;
  }
  var measure = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.core.time.measure_wa5o32$', function ($receiver, inner) {
    var start = get_time().nanoElapsed();
    inner();
    var end = get_time().nanoElapsed();
    Kotlin.kotlin.io.println_s8jyv4$('Time: ' + end.subtract(start).toNumber() / 1000000.0);
  });
  var _measuredTotalTime;
  var _measuredIterations;
  function averagedMeasure($receiver, inner) {
    _measuredIterations = _measuredIterations + 1 | 0;
    var start = get_time().nanoElapsed();
    inner();
    var end = get_time().nanoElapsed();
    _measuredTotalTime += end.subtract(start);
  }
  function printFrameMeasure() {
    if (_measuredIterations === 0)
      return;
    println('Total time: ' + _measuredTotalTime / 1000000.0 + ' Iterations: ' + _measuredIterations + ' Average Time: ' + _measuredTotalTime / _measuredIterations / 1000000.0);
    _measuredIterations = 0;
    _measuredTotalTime = 0.0;
  }
  function CallbackTween(duration, ease, delay, loop) {
    CallbackTween$Companion_getInstance();
    TweenBase.call(this);
    this.watchedTimes_0 = ArrayList_init();
    this.watchedTimeSignals_0 = ArrayList_init();
    this._duration = duration <= 0.0 ? 1.0E-7 : duration;
    this._durationInv = 1.0 / duration;
    this.ease = ease;
    this.loopAfter = loop;
    this.allowCompletion = (!this.loopAfter && !this.loopBefore);
    this.jumpTo_mx4ult$(-delay - 1.0E-7);
  }
  CallbackTween.prototype.watchAlpha_mx4ult$ = function (alpha) {
    return this.watchTime_mx4ult$(alpha * this.duration);
  };
  CallbackTween.prototype.watchTime_mx4ult$ = function (time_0) {
    var insertionIndex = sortedInsertionIndex_0(this.watchedTimes_0, time_0);
    if (insertionIndex < this.watchedTimes_0.size && this.watchedTimes_0.get_za3lpa$(insertionIndex) === time_0) {
      return this.watchedTimeSignals_0.get_za3lpa$(insertionIndex);
    }
     else {
      var signal_0 = new Signal1();
      this.watchedTimes_0.add_wxm5ur$(insertionIndex, time_0);
      this.watchedTimeSignals_0.add_wxm5ur$(insertionIndex, signal_0);
      return signal_0;
    }
  };
  CallbackTween.prototype.updateToTime_sczwbf$ = function (lastTime, newTime, apparentLastTime, apparentNewTime, jump) {
    if (jump || this.watchedTimes_0.isEmpty())
      return;
    if (lastTime === newTime)
      return;
    if (this.loopAfter || this.loopBefore) {
      if (newTime >= lastTime) {
        if (apparentNewTime > apparentLastTime) {
          this.invokeWatchedTimeHandlers_0(apparentLastTime, apparentNewTime);
        }
         else {
          this.invokeWatchedTimeHandlers_0(apparentLastTime, this.duration);
          this.invokeWatchedTimeHandlers_0(0.0, apparentNewTime);
        }
      }
       else {
        if (apparentNewTime < apparentLastTime) {
          this.invokeWatchedTimeHandlers_0(apparentLastTime, apparentNewTime);
        }
         else {
          this.invokeWatchedTimeHandlers_0(apparentLastTime, 0.0);
          this.invokeWatchedTimeHandlers_0(this.duration, apparentNewTime);
        }
      }
    }
     else {
      this.invokeWatchedTimeHandlers_0(lastTime, newTime);
    }
  };
  CallbackTween.prototype.invokeWatchedTimeHandlers_0 = function (lastTime, newTime) {
    if (newTime >= lastTime) {
      var index = sortedInsertionIndex_0(this.watchedTimes_0, lastTime, void 0, void 0, true);
      while (index < this.watchedTimes_0.size && newTime >= this.watchedTimes_0.get_za3lpa$(index)) {
        this.watchedTimeSignals_0.get_za3lpa$(index).dispatch_11rb$(this);
        index = index + 1 | 0;
      }
    }
     else {
      var index_0 = sortedInsertionIndex_0(this.watchedTimes_0, lastTime, void 0, void 0, false);
      while (index_0 > 0 && newTime <= this.watchedTimes_0.get_za3lpa$(index_0 - 1 | 0)) {
        this.watchedTimeSignals_0.get_za3lpa$(index_0).dispatch_11rb$(this);
        index_0 = index_0 - 1 | 0;
      }
    }
  };
  function CallbackTween$Companion() {
    CallbackTween$Companion_instance = this;
  }
  CallbackTween$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CallbackTween$Companion_instance = null;
  function CallbackTween$Companion_getInstance() {
    if (CallbackTween$Companion_instance === null) {
      new CallbackTween$Companion();
    }
    return CallbackTween$Companion_instance;
  }
  CallbackTween.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CallbackTween',
    interfaces: [TweenBase]
  };
  function TweenRegistry() {
    TweenRegistry_instance = this;
    this.registry_0 = new DualHashMap(true);
  }
  TweenRegistry.prototype.contains_hwpqgh$ = function (target, property) {
    return this.registry_0.get_xwzc9p$(target, property) != null;
  };
  TweenRegistry.prototype.kill_4hrdoq$ = function (target, property, finish) {
    if (finish === void 0)
      finish = true;
    var tween_0 = this.registry_0.get_xwzc9p$(target, property);
    if (finish)
      tween_0 != null ? tween_0.finish() : null;
    else
      tween_0 != null ? tween_0.complete() : null;
  };
  TweenRegistry.prototype.kill_j44yyw$ = function (target, finish) {
    if (finish === void 0)
      finish = true;
    var tmp$, tmp$_0;
    tmp$ = this.registry_0.remove_11rb$(target);
    if (tmp$ == null) {
      return;
    }
    var targetTweens = tmp$;
    tmp$_0 = targetTweens.values.iterator();
    while (tmp$_0.hasNext()) {
      var i = tmp$_0.next();
      if (finish)
        i.finish();
      else
        i.complete();
    }
  };
  function TweenRegistry$register$lambda(closure$target, closure$property) {
    return function (it) {
      TweenRegistry_getInstance().unregister_hwpqgh$(closure$target, closure$property);
    };
  }
  TweenRegistry.prototype.register_iz789e$ = function (target, property, tween_0) {
    tween_0.completed.add_onkqg$(TweenRegistry$register$lambda(target, property), true);
    this.registry_0.put_1llc0w$(target, property, tween_0);
  };
  TweenRegistry.prototype.unregister_hwpqgh$ = function (target, property) {
    this.registry_0.remove_xwzc9p$(target, property);
  };
  TweenRegistry.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'TweenRegistry',
    interfaces: []
  };
  var TweenRegistry_instance = null;
  function TweenRegistry_getInstance() {
    if (TweenRegistry_instance === null) {
      new TweenRegistry();
    }
    return TweenRegistry_instance;
  }
  function createPropertyTween(target, property, duration, ease, getter, setter, targetValue, delay, loop) {
    if (delay === void 0)
      delay = 0.0;
    if (loop === void 0)
      loop = false;
    TweenRegistry_getInstance().kill_4hrdoq$(target, property, true);
    var tween_0 = toFromTween(getter(), targetValue, duration, ease, delay, loop, setter);
    TweenRegistry_getInstance().register_iz789e$(target, property, tween_0);
    return tween_0;
  }
  function TimelineTween(ease, delay, loop) {
    TweenBase.call(this);
    this.children_0 = ArrayList_init();
    this.offsets_0 = ArrayList_init();
    this.timeScale = 1.0;
    this.ease = ease;
    this.loopAfter = loop;
    this.allowCompletion = (!this.loopAfter && !this.loopBefore);
    this.startTime = -delay - 1.0E-7;
    this.jumpTo_mx4ult$(this.startTime);
  }
  Object.defineProperty(TimelineTween.prototype, 'duration', {
    get: function () {
      return this._duration / this.timeScale;
    }
  });
  Object.defineProperty(TimelineTween.prototype, 'durationInv', {
    get: function () {
      return this._durationInv * this.timeScale;
    }
  });
  TimelineTween.prototype.add_g1mkro$ = function (tween_0, offset) {
    if (offset === void 0)
      offset = 0.0;
    var x = this._duration;
    var y = tween_0.duration + offset - tween_0.startTime;
    var max_sdesaw$result;
    if (Kotlin.compareTo(x, y) >= 0) {
      max_sdesaw$result = x;
    }
     else {
      max_sdesaw$result = y;
    }
    this._duration = max_sdesaw$result;
    this._durationInv = 1.0 / this._duration;
    this.children_0.add_11rb$(tween_0);
    this.offsets_0.add_11rb$(offset);
  };
  TimelineTween.prototype.remove_6u0mbb$ = function (tween_0) {
    var index = this.children_0.indexOf_11rb$(tween_0);
    if (index !== -1) {
      this.children_0.removeAt_za3lpa$(index);
      this.offsets_0.removeAt_za3lpa$(index);
      return true;
    }
    return false;
  };
  TimelineTween.prototype.stagger_g1mkro$ = function (tween_0, offset) {
    if (offset === void 0)
      offset = 0.25;
    var tmp$;
    var lastTweenOffset = (tmp$ = lastOrNull(this.offsets_0)) != null ? tmp$ : 0.0;
    this.add_g1mkro$(tween_0, lastTweenOffset + offset);
  };
  TimelineTween.prototype.then_g1mkro$ = function (tween_0, offset) {
    if (offset === void 0)
      offset = 0.0;
    this.add_g1mkro$(tween_0, this._duration + offset);
  };
  TimelineTween.prototype.updateToTime_sczwbf$ = function (lastTime, newTime, apparentLastTime, apparentNewTime, jump) {
    var tmp$, tmp$_0;
    if (this.children_0.isEmpty())
      return;
    var t = this.ease_mx4ult$(apparentNewTime * this.durationInv) * this._duration;
    if (newTime >= lastTime) {
      tmp$ = get_lastIndex(this.children_0);
      for (var i = 0; i <= tmp$; i++) {
        var c = this.children_0.get_za3lpa$(i);
        c.setCurrentTime_8ca0d4$(t - this.offsets_0.get_za3lpa$(i) + c.startTime, jump);
      }
    }
     else {
      tmp$_0 = downTo(get_lastIndex(this.children_0), 0).iterator();
      while (tmp$_0.hasNext()) {
        var i_0 = tmp$_0.next();
        var c_0 = this.children_0.get_za3lpa$(i_0);
        c_0.setCurrentTime_8ca0d4$(t - this.offsets_0.get_za3lpa$(i_0) + c_0.startTime, jump);
      }
    }
  };
  TimelineTween.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TimelineTween',
    interfaces: [TweenBase]
  };
  function timelineTween(ease, delay, loop) {
    if (ease === void 0)
      ease = math_0.Easing.linear;
    if (delay === void 0)
      delay = 0.0;
    if (loop === void 0)
      loop = false;
    return new TimelineTween(ease, delay, loop);
  }
  function Tween() {
    Tween$Companion_getInstance();
  }
  Tween.prototype.jumpTo_mx4ult$ = function (newTime) {
    this.setCurrentTime_8ca0d4$(newTime, true);
  };
  Object.defineProperty(Tween.prototype, 'alpha', {
    get: function () {
      return this.currentTime * this.durationInv;
    },
    set: function (value) {
      this.currentTime = value * this.duration;
    }
  });
  Tween.prototype.update_mx4ult$ = function (stepTime) {
    this.currentTime = this.currentTime + stepTime;
  };
  Tween.prototype.finish = function () {
    this.setCurrentTime_8ca0d4$(this.currentTime + this.duration - this.apparentTime_mx4ult$(this.currentTime), true);
    this.complete();
  };
  Tween.prototype.rewind = function () {
    this.currentTime = this.startTime;
  };
  Tween.prototype.apparentTime_mx4ult$ = function (value) {
    if (this.loopAfter && value >= this.duration || (this.loopBefore && value <= 0.0)) {
      return math_0.MathUtils.mod_dleff0$(value, this.duration);
    }
     else {
      var max = this.duration;
      var clamp_73gzaq$result;
      clamp_73gzaq$break: {
        if (Kotlin.compareTo(value, 0.0) <= 0) {
          clamp_73gzaq$result = 0.0;
          break clamp_73gzaq$break;
        }
        if (Kotlin.compareTo(value, max) >= 0) {
          clamp_73gzaq$result = max;
          break clamp_73gzaq$break;
        }
        clamp_73gzaq$result = value;
      }
      return clamp_73gzaq$result;
    }
  };
  function Tween$Companion() {
    Tween$Companion_instance = this;
  }
  Tween$Companion.prototype.prepare = function () {
    TweenRegistry_getInstance();
    math_0.Easing;
    TweenDriver$Companion_getInstance();
    CallbackTween$Companion_getInstance();
  };
  Tween$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Tween$Companion_instance = null;
  function Tween$Companion_getInstance() {
    if (Tween$Companion_instance === null) {
      new Tween$Companion();
    }
    return Tween$Companion_instance;
  }
  Tween.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Tween',
    interfaces: []
  };
  function TweenBase() {
    this.completed_p4gtgu$_0 = new Signal1();
    this.loopBefore_p4gtgu$_0 = false;
    this.loopAfter_p4gtgu$_0 = false;
    this.allowCompletion_p4gtgu$_0 = false;
    this._duration = 0.0;
    this._durationInv = 0.0;
    this.startTime_p4gtgu$_0 = 0.0;
    this.ease = math_0.Easing.linear;
    this._currentTime = 0.0;
  }
  Object.defineProperty(TweenBase.prototype, 'completed', {
    get: function () {
      return this.completed_p4gtgu$_0;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'loopBefore', {
    get: function () {
      return this.loopBefore_p4gtgu$_0;
    },
    set: function (loopBefore) {
      this.loopBefore_p4gtgu$_0 = loopBefore;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'loopAfter', {
    get: function () {
      return this.loopAfter_p4gtgu$_0;
    },
    set: function (loopAfter) {
      this.loopAfter_p4gtgu$_0 = loopAfter;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'allowCompletion', {
    get: function () {
      return this.allowCompletion_p4gtgu$_0;
    },
    set: function (allowCompletion) {
      this.allowCompletion_p4gtgu$_0 = allowCompletion;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'duration', {
    get: function () {
      return this._duration;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'durationInv', {
    get: function () {
      return this._durationInv;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'startTime', {
    get: function () {
      return this.startTime_p4gtgu$_0;
    },
    set: function (startTime) {
      this.startTime_p4gtgu$_0 = startTime;
    }
  });
  Object.defineProperty(TweenBase.prototype, 'currentTime', {
    get: function () {
      return this._currentTime;
    },
    set: function (newTime) {
      this.setCurrentTime_8ca0d4$(newTime, false);
    }
  });
  TweenBase.prototype.setCurrentTime_8ca0d4$ = function (newTime, jump) {
    var lastTime = this._currentTime;
    if (lastTime === newTime)
      return;
    this._currentTime = newTime;
    var apparentLastTime = this.apparentTime_mx4ult$(lastTime);
    var apparentTime = this.apparentTime_mx4ult$(newTime);
    if (apparentLastTime !== apparentTime) {
      this.updateToTime_sczwbf$(lastTime, newTime, apparentLastTime, apparentTime, jump);
    }
    if (!jump && this.allowCompletion && this.completionCheck_7b5o5w$(lastTime, newTime, apparentLastTime, apparentTime)) {
      this.complete();
    }
  };
  TweenBase.prototype.completionCheck_7b5o5w$ = function (lastTime, time_0, lastApparentTime, apparentTime) {
    if (apparentTime >= this.duration && lastApparentTime <= this.duration)
      return true;
    else if (apparentTime <= 0.0 && lastApparentTime >= 0.0)
      return true;
    return false;
  };
  TweenBase.prototype.ease_mx4ult$ = function (x) {
    var tmp$ = this.ease;
    var clamp_73gzaq$result;
    clamp_73gzaq$break: {
      if (Kotlin.compareTo(x, 0.0) <= 0) {
        clamp_73gzaq$result = 0.0;
        break clamp_73gzaq$break;
      }
      if (Kotlin.compareTo(x, 1.0) >= 0) {
        clamp_73gzaq$result = 1.0;
        break clamp_73gzaq$break;
      }
      clamp_73gzaq$result = x;
    }
    var y = tmp$.apply_mx4ult$(clamp_73gzaq$result);
    if (y < 1.0E-5 && y > -1.0E-5)
      y = 0.0;
    if (y < 1.00001 && y > 0.99999)
      y = 1.0;
    return y;
  };
  TweenBase.prototype.complete = function () {
    this.completed.dispatch_11rb$(this);
  };
  TweenBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TweenBase',
    interfaces: [Tween]
  };
  function TweenImpl(duration, ease, delay, loop, tween_0) {
    TweenBase.call(this);
    this.tween_0 = null;
    this.previousAlpha_0 = 0.0;
    this._duration = duration <= 0.0 ? 1.0E-7 : duration;
    this._durationInv = 1.0 / duration;
    this.ease = ease;
    this.tween_0 = tween_0;
    this.loopAfter = loop;
    this.allowCompletion = (!this.loopAfter && !this.loopBefore);
    this.startTime = -delay - 1.0E-7;
    this.jumpTo_mx4ult$(this.startTime);
  }
  TweenImpl.prototype.updateToTime_sczwbf$ = function (lastTime, newTime, apparentLastTime, apparentNewTime, jump) {
    var tmp$;
    var currentAlpha = this.ease_mx4ult$(apparentNewTime * this.durationInv);
    ((tmp$ = this.tween_0) != null ? tmp$ : Kotlin.throwNPE())(this.previousAlpha_0, currentAlpha);
    this.previousAlpha_0 = currentAlpha;
  };
  TweenImpl.prototype.complete = function () {
    this.completed.dispatch_11rb$(this);
  };
  TweenImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TweenImpl',
    interfaces: [TweenBase]
  };
  function TweenDriver() {
    TweenDriver$Companion_getInstance();
    DrivableChildBase.call(this);
    this._tween_0 = null;
    this.tweenCompletedHandler_0 = TweenDriver$tweenCompletedHandler$lambda(this);
  }
  Object.defineProperty(TweenDriver.prototype, 'tween', {
    get: function () {
      return this._tween_0;
    },
    set: function (value) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      (tmp$_0 = (tmp$ = this._tween_0) != null ? tmp$.completed : null) != null ? tmp$_0.remove_trkh7z$(this.tweenCompletedHandler_0) : null;
      this._tween_0 = value;
      (tmp$_2 = (tmp$_1 = this._tween_0) != null ? tmp$_1.completed : null) != null ? tmp$_2.add_trkh7z$(this.tweenCompletedHandler_0) : null;
    }
  });
  TweenDriver.prototype.onDeactivated = function () {
    this.tween = null;
    TweenDriver$Companion_getInstance().pool_0.free_11rb$(this);
  };
  TweenDriver.prototype.update_mx4ult$ = function (stepTime) {
    var tmp$;
    (tmp$ = this.tween) != null ? tmp$.update_mx4ult$(stepTime) : null;
  };
  function TweenDriver$Companion() {
    TweenDriver$Companion_instance = this;
    this.pool_0 = new ObjectPool(void 0, TweenDriver$Companion$pool$lambda);
  }
  TweenDriver$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  function TweenDriver$Companion$pool$lambda() {
    return new TweenDriver();
  }
  TweenDriver$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TweenDriver$Companion_instance = null;
  function TweenDriver$Companion_getInstance() {
    if (TweenDriver$Companion_instance === null) {
      new TweenDriver$Companion();
    }
    return TweenDriver$Companion_instance;
  }
  function TweenDriver$tweenCompletedHandler$lambda(this$TweenDriver) {
    return function (t) {
      this$TweenDriver.remove();
    };
  }
  TweenDriver.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TweenDriver',
    interfaces: [DrivableChildBase]
  };
  function driveTween($receiver, tween_0) {
    var driver = TweenDriver$Companion_getInstance().obtain();
    driver.tween = tween_0;
    inject($receiver, TimeDriver$Companion_getInstance()).addChild_qaye9v$(driver);
    return tween_0;
  }
  function drive($receiver, timeDriver) {
    var driver = TweenDriver$Companion_getInstance().obtain();
    driver.tween = $receiver;
    timeDriver.addChild_qaye9v$(driver);
    return $receiver;
  }
  function tween(duration, ease, delay, loop, tween_0) {
    if (delay === void 0)
      delay = 0.0;
    if (loop === void 0)
      loop = false;
    return new TweenImpl(duration, ease, delay, loop, tween_0);
  }
  function toFromTween$lambda(closure$setter, closure$d, closure$start) {
    return function (previousAlpha, currentAlpha) {
      closure$setter(closure$d * currentAlpha + closure$start);
    };
  }
  function toFromTween(start, end, duration, ease, delay, loop, setter) {
    if (delay === void 0)
      delay = 0.0;
    if (loop === void 0)
      loop = false;
    var d = end - start;
    var tweenInstance = new TweenImpl(duration, ease, delay, loop, toFromTween$lambda(setter, d, start));
    return tweenInstance;
  }
  function relativeTween$lambda(closure$setter, closure$getter, closure$delta) {
    return function (previousAlpha, currentAlpha) {
      closure$setter(closure$getter() + (currentAlpha - previousAlpha) * closure$delta);
    };
  }
  function relativeTween(delta, duration, ease, delay, loop, getter, setter) {
    if (delay === void 0)
      delay = 0.0;
    if (loop === void 0)
      loop = false;
    var tweenInstance = new TweenImpl(duration, ease, delay, loop, relativeTween$lambda(setter, getter, delta));
    return tweenInstance;
  }
  function tweenCall$lambda(closure$setter) {
    return function (previousAlpha, currentAlpha) {
      closure$setter();
    };
  }
  function tweenCall(delay, setter) {
    if (delay === void 0)
      delay = 0.0;
    var tweenInstance = new TweenImpl(0.0, math_0.Easing.linear, delay, false, tweenCall$lambda(setter));
    return tweenInstance;
  }
  function tweenAlpha$lambda(this$tweenAlpha) {
    return function () {
      return this$tweenAlpha.alpha;
    };
  }
  function tweenAlpha$lambda_0(this$tweenAlpha) {
    return function (it) {
      this$tweenAlpha.alpha = it;
    };
  }
  function tweenAlpha($receiver, duration, ease, toAlpha, delay) {
    if (delay === void 0)
      delay = 0.0;
    return createPropertyTween($receiver, 'alpha', duration, ease, tweenAlpha$lambda($receiver), tweenAlpha$lambda_0($receiver), toAlpha, delay);
  }
  function tweenX$lambda(this$tweenX) {
    return function () {
      return this$tweenX.x;
    };
  }
  function tweenX$lambda_0(this$tweenX) {
    return function (it) {
      this$tweenX.x = it;
    };
  }
  function tweenX($receiver, duration, ease, toX, delay) {
    if (delay === void 0)
      delay = 0.0;
    return createPropertyTween($receiver, 'x', duration, ease, tweenX$lambda($receiver), tweenX$lambda_0($receiver), toX, delay);
  }
  function tweenY$lambda(this$tweenY) {
    return function () {
      return this$tweenY.y;
    };
  }
  function tweenY$lambda_0(this$tweenY) {
    return function (it) {
      this$tweenY.y = it;
    };
  }
  function tweenY($receiver, duration, ease, toY, delay) {
    if (delay === void 0)
      delay = 0.0;
    return createPropertyTween($receiver, 'y', duration, ease, tweenY$lambda($receiver), tweenY$lambda_0($receiver), toY, delay);
  }
  function tweenZ$lambda(this$tweenZ) {
    return function () {
      return this$tweenZ.z;
    };
  }
  function tweenZ$lambda_0(this$tweenZ) {
    return function (it) {
      this$tweenZ.z = it;
    };
  }
  function tweenZ($receiver, duration, ease, toZ, delay) {
    if (delay === void 0)
      delay = 0.0;
    return createPropertyTween($receiver, 'z', duration, ease, tweenZ$lambda($receiver), tweenZ$lambda_0($receiver), toZ, delay);
  }
  function tweenScale$lambda(this$tweenScale) {
    return function () {
      return this$tweenScale.scaleX;
    };
  }
  function tweenScale$lambda_0(this$tweenScale) {
    return function (it) {
      this$tweenScale.scaleX = it;
    };
  }
  function tweenScale$lambda_1(this$tweenScale) {
    return function () {
      return this$tweenScale.scaleY;
    };
  }
  function tweenScale$lambda_2(this$tweenScale) {
    return function (it) {
      this$tweenScale.scaleY = it;
    };
  }
  function tweenScale($receiver, duration, ease, toScaleX, toScaleY, delay) {
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'scaleX', duration, ease, tweenScale$lambda($receiver), tweenScale$lambda_0($receiver), toScaleX, delay);
    createPropertyTween($receiver, 'scaleY', duration, ease, tweenScale$lambda_1($receiver), tweenScale$lambda_2($receiver), toScaleY, delay);
  }
  function tweenScaleX$lambda(this$tweenScaleX) {
    return function () {
      return this$tweenScaleX.scaleX;
    };
  }
  function tweenScaleX$lambda_0(this$tweenScaleX) {
    return function (it) {
      this$tweenScaleX.scaleX = it;
    };
  }
  function tweenScaleX($receiver, duration, ease, toScaleX, delay) {
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'scaleX', duration, ease, tweenScaleX$lambda($receiver), tweenScaleX$lambda_0($receiver), toScaleX, delay);
  }
  function tweenScaleY$lambda(this$tweenScaleY) {
    return function () {
      return this$tweenScaleY.scaleY;
    };
  }
  function tweenScaleY$lambda_0(this$tweenScaleY) {
    return function (it) {
      this$tweenScaleY.scaleY = it;
    };
  }
  function tweenScaleY($receiver, duration, ease, y, delay) {
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'scaleY', duration, ease, tweenScaleY$lambda($receiver), tweenScaleY$lambda_0($receiver), y, delay);
  }
  function tweenRotationX$lambda(this$tweenRotationX) {
    return function () {
      return this$tweenRotationX.rotationX;
    };
  }
  function tweenRotationX$lambda_0(this$tweenRotationX) {
    return function (it) {
      this$tweenRotationX.rotationX = it;
    };
  }
  function tweenRotationX($receiver, duration, ease, r, delay) {
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'rotationX', duration, ease, tweenRotationX$lambda($receiver), tweenRotationX$lambda_0($receiver), r, delay);
  }
  function tweenRotationY$lambda(this$tweenRotationY) {
    return function () {
      return this$tweenRotationY.rotationY;
    };
  }
  function tweenRotationY$lambda_0(this$tweenRotationY) {
    return function (it) {
      this$tweenRotationY.rotationY = it;
    };
  }
  function tweenRotationY($receiver, duration, ease, r, delay) {
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'rotationY', duration, ease, tweenRotationY$lambda($receiver), tweenRotationY$lambda_0($receiver), r, delay);
  }
  function tweenRotation$lambda(this$tweenRotation) {
    return function () {
      return this$tweenRotation.rotation;
    };
  }
  function tweenRotation$lambda_0(this$tweenRotation) {
    return function (it) {
      this$tweenRotation.rotation = it;
    };
  }
  function tweenRotation($receiver, duration, ease, r, delay) {
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'rotation', duration, ease, tweenRotation$lambda($receiver), tweenRotation$lambda_0($receiver), r, delay);
  }
  function tweenPosition$lambda(this$tweenPosition) {
    return function () {
      return this$tweenPosition.x;
    };
  }
  function tweenPosition$lambda_0(this$tweenPosition) {
    return function (it) {
      this$tweenPosition.x = it;
    };
  }
  function tweenPosition$lambda_1(this$tweenPosition) {
    return function () {
      return this$tweenPosition.y;
    };
  }
  function tweenPosition$lambda_2(this$tweenPosition) {
    return function (it) {
      this$tweenPosition.y = it;
    };
  }
  function tweenPosition$lambda_3(this$tweenPosition) {
    return function () {
      return this$tweenPosition.z;
    };
  }
  function tweenPosition$lambda_4(this$tweenPosition) {
    return function (it) {
      this$tweenPosition.z = it;
    };
  }
  function tweenPosition($receiver, duration, ease, toX, toY, toZ, delay) {
    if (toZ === void 0)
      toZ = 0.0;
    if (delay === void 0)
      delay = 0.0;
    createPropertyTween($receiver, 'x', duration, ease, tweenPosition$lambda($receiver), tweenPosition$lambda_0($receiver), toX, delay);
    createPropertyTween($receiver, 'y', duration, ease, tweenPosition$lambda_1($receiver), tweenPosition$lambda_2($receiver), toY, delay);
    createPropertyTween($receiver, 'z', duration, ease, tweenPosition$lambda_3($receiver), tweenPosition$lambda_4($receiver), toZ, delay);
  }
  function tweenTint$lambda(closure$colorTint) {
    return function () {
      return closure$colorTint.r;
    };
  }
  function tweenTint$lambda_0(closure$colorTint) {
    return function (it) {
      closure$colorTint.r = it;
    };
  }
  function tweenTint$lambda_1(closure$colorTint) {
    return function () {
      return closure$colorTint.g;
    };
  }
  function tweenTint$lambda_2(closure$colorTint) {
    return function (it) {
      closure$colorTint.g = it;
    };
  }
  function tweenTint$lambda_3(closure$colorTint) {
    return function () {
      return closure$colorTint.b;
    };
  }
  function tweenTint$lambda_4(closure$colorTint) {
    return function (it) {
      closure$colorTint.b = it;
    };
  }
  function tweenTint$lambda_5(closure$colorTint) {
    return function () {
      return closure$colorTint.a;
    };
  }
  function tweenTint$lambda_6(closure$colorTint, this$tweenTint) {
    return function (it) {
      closure$colorTint.a = it;
      this$tweenTint.invalidate_za3lpa$(ValidationFlags_getInstance().COLOR_TRANSFORM);
    };
  }
  function tweenTint($receiver, duration, ease, tint, delay) {
    if (delay === void 0)
      delay = 0.0;
    var colorTint = $receiver.colorTint;
    createPropertyTween($receiver, 'colorTint.r', duration, ease, tweenTint$lambda(colorTint), tweenTint$lambda_0(colorTint), tint.r, delay);
    createPropertyTween($receiver, 'colorTint.g', duration, ease, tweenTint$lambda_1(colorTint), tweenTint$lambda_2(colorTint), tint.g, delay);
    createPropertyTween($receiver, 'colorTint.b', duration, ease, tweenTint$lambda_3(colorTint), tweenTint$lambda_4(colorTint), tint.b, delay);
    createPropertyTween($receiver, 'colorTint.a', duration, ease, tweenTint$lambda_5(colorTint), tweenTint$lambda_6(colorTint, $receiver), tint.a, delay);
  }
  function Version(major, minor, patch, build) {
    Version$Companion_getInstance();
    this.major = major;
    this.minor = minor;
    this.patch = patch;
    this.build = build;
  }
  Version.prototype.toString = function () {
    return this.major.toString() + '.' + this.minor + '.' + this.patch + '.' + this.build;
  };
  Version.prototype.compareTo_11rb$ = function (other) {
    var c1 = Kotlin.primitiveCompareTo(this.major, other.major);
    if (c1 !== 0)
      return c1;
    var c2 = Kotlin.primitiveCompareTo(this.minor, other.minor);
    if (c2 !== 0)
      return c2;
    var c3 = Kotlin.primitiveCompareTo(this.patch, other.patch);
    if (c3 !== 0)
      return c3;
    var c4 = Kotlin.primitiveCompareTo(this.build, other.build);
    if (c4 !== 0)
      return c4;
    return 0;
  };
  Version.prototype.isApiCompatible_48ysrr$ = function (other) {
    return this.major === other.major && this.minor === other.minor;
  };
  function Version$Companion() {
    Version$Companion_instance = this;
  }
  Version$Companion.prototype.fromStr_61zpoe$ = function (value) {
    var split_0 = split(value, ['.']);
    if (split_0.size !== 4)
      throw new IllegalArgumentException("Version '" + value + "' is not in the format major.minor.patch.build");
    var v = new Version(toInt(split_0.get_za3lpa$(0)), toInt(split_0.get_za3lpa$(1)), toInt(split_0.get_za3lpa$(2)), toInt(split_0.get_za3lpa$(3)));
    return v;
  };
  Version$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Version$Companion_instance = null;
  function Version$Companion_getInstance() {
    if (Version$Companion_instance === null) {
      new Version$Companion();
    }
    return Version$Companion_instance;
  }
  Version.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Version',
    interfaces: [Comparable]
  };
  Version.prototype.component1 = function () {
    return this.major;
  };
  Version.prototype.component2 = function () {
    return this.minor;
  };
  Version.prototype.component3 = function () {
    return this.patch;
  };
  Version.prototype.component4 = function () {
    return this.build;
  };
  Version.prototype.copy_tjonv8$ = function (major, minor, patch, build) {
    return new Version(major === void 0 ? this.major : major, minor === void 0 ? this.minor : minor, patch === void 0 ? this.patch : patch, build === void 0 ? this.build : build);
  };
  Version.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.major) | 0;
    result = result * 31 + Kotlin.hashCode(this.minor) | 0;
    result = result * 31 + Kotlin.hashCode(this.patch) | 0;
    result = result * 31 + Kotlin.hashCode(this.build) | 0;
    return result;
  };
  Version.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.major, other.major) && Kotlin.equals(this.minor, other.minor) && Kotlin.equals(this.patch, other.patch) && Kotlin.equals(this.build, other.build)))));
  };
  function debugWhyCantSee$lambda(closure$target) {
    return function () {
      canSee(closure$target);
    };
  }
  function debugWhyCantSee(target) {
    callLater(target, debugWhyCantSee$lambda(target));
  }
  function canSee(target, print) {
    if (print === void 0)
      print = true;
    get_stage(target).validate();
    var canSee_0 = {v: true};
    parentWalk$break: {
      var tmp$;
      var p = target;
      while (p != null) {
        var closure$print = print;
        var it = p;
        if (!it.visible) {
          if (closure$print)
            println(debugFullPath(it) + ' is not visible');
          canSee_0.v = false;
        }
        if (it.alpha <= 0.1) {
          if (closure$print)
            println(debugFullPath(it) + ' has low opacity');
          canSee_0.v = false;
        }
        if (it.width <= 4.0) {
          if (closure$print)
            println(debugFullPath(it) + ' has width ' + it.width);
          canSee_0.v = false;
        }
        if (it.height <= 4.0) {
          if (closure$print)
            println(debugFullPath(it) + ' has height ' + it.height);
          canSee_0.v = false;
        }
        if (!Kotlin.isType(it, Stage)) {
          if (it.parent == null) {
            if (closure$print)
              println(debugFullPath(it) + ' is not on the stage');
            canSee_0.v = false;
          }
        }
        var shouldContinue = true;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    canSee_0.v = (isInBounds(target, print) && canSee_0.v);
    if (print && canSee_0.v)
      println('Unknown reason for invisibility.');
    return canSee_0.v;
  }
  function isInBounds(target, print) {
    var canSee_0 = {v: true};
    var topLeftGlobal = target.localToGlobal_9wm29k$(new Vector3(0.0, 0.0));
    var topRightGlobal = target.localToGlobal_9wm29k$(new Vector3(target.width, 0.0));
    var bottomRightGlobal = target.localToGlobal_9wm29k$(new Vector3(target.width, target.height));
    var bottomLeftGlobal = target.localToGlobal_9wm29k$(new Vector3(0.0, target.height));
    var topLeftLocal = new Vector3();
    var topRightLocal = new Vector3();
    var bottomRightLocal = new Vector3();
    var bottomLeftLocal = new Vector3();
    parentWalk$break: {
      var tmp$;
      var p = target;
      while (p != null) {
        var it = p;
        var callback$result;
        if (Kotlin.equals(it, target)) {
          callback$result = true;
        }
         else {
          it.globalToLocal_9wm29k$(topLeftLocal.set_1fv2cb$(topLeftGlobal));
          it.globalToLocal_9wm29k$(topRightLocal.set_1fv2cb$(topRightGlobal));
          it.globalToLocal_9wm29k$(bottomRightLocal.set_1fv2cb$(bottomRightGlobal));
          it.globalToLocal_9wm29k$(bottomLeftLocal.set_1fv2cb$(bottomLeftGlobal));
          var $this = math_0.MathUtils;
          var w = topLeftLocal.x;
          var x = topRightLocal.x;
          var y = bottomRightLocal.x;
          var z = bottomRightLocal.x;
          $this.min_sdesaw$;
          $this.min_sdesaw$;
          var min_sdesaw$result;
          if (Kotlin.compareTo(w, x) <= 0) {
            min_sdesaw$result = w;
          }
           else {
            min_sdesaw$result = x;
          }
          var x_0 = min_sdesaw$result;
          var inline$result;
          if (Kotlin.compareTo(x_0, y) <= 0) {
            inline$result = x_0;
          }
           else {
            inline$result = y;
          }
          var x_1 = inline$result;
          var inline$result_0;
          if (Kotlin.compareTo(x_1, z) <= 0) {
            inline$result_0 = x_1;
          }
           else {
            inline$result_0 = z;
          }
          var left = inline$result_0;
          var $this_0 = math_0.MathUtils;
          var w_0 = topLeftLocal.y;
          var x_2 = topRightLocal.y;
          var y_0 = bottomRightLocal.y;
          var z_0 = bottomRightLocal.y;
          $this_0.min_sdesaw$;
          $this_0.min_sdesaw$;
          var min_sdesaw$result_0;
          if (Kotlin.compareTo(w_0, x_2) <= 0) {
            min_sdesaw$result_0 = w_0;
          }
           else {
            min_sdesaw$result_0 = x_2;
          }
          var x_3 = min_sdesaw$result_0;
          var inline$result_1;
          if (Kotlin.compareTo(x_3, y_0) <= 0) {
            inline$result_1 = x_3;
          }
           else {
            inline$result_1 = y_0;
          }
          var x_4 = inline$result_1;
          var inline$result_2;
          if (Kotlin.compareTo(x_4, z_0) <= 0) {
            inline$result_2 = x_4;
          }
           else {
            inline$result_2 = z_0;
          }
          var top = inline$result_2;
          var $this_1 = math_0.MathUtils;
          var w_1 = topLeftLocal.x;
          var x_5 = topRightLocal.x;
          var y_1 = bottomRightLocal.x;
          var z_1 = bottomRightLocal.x;
          $this_1.max_sdesaw$;
          $this_1.max_sdesaw$;
          var max_sdesaw$result;
          if (Kotlin.compareTo(w_1, x_5) >= 0) {
            max_sdesaw$result = w_1;
          }
           else {
            max_sdesaw$result = x_5;
          }
          var x_6 = max_sdesaw$result;
          var inline$result_3;
          if (Kotlin.compareTo(x_6, y_1) >= 0) {
            inline$result_3 = x_6;
          }
           else {
            inline$result_3 = y_1;
          }
          var x_7 = inline$result_3;
          var inline$result_4;
          if (Kotlin.compareTo(x_7, z_1) >= 0) {
            inline$result_4 = x_7;
          }
           else {
            inline$result_4 = z_1;
          }
          var right = inline$result_4;
          var $this_2 = math_0.MathUtils;
          var w_2 = topLeftLocal.y;
          var x_8 = topRightLocal.y;
          var y_2 = bottomRightLocal.y;
          var z_2 = bottomRightLocal.y;
          $this_2.max_sdesaw$;
          $this_2.max_sdesaw$;
          var max_sdesaw$result_0;
          if (Kotlin.compareTo(w_2, x_8) >= 0) {
            max_sdesaw$result_0 = w_2;
          }
           else {
            max_sdesaw$result_0 = x_8;
          }
          var x_9 = max_sdesaw$result_0;
          var inline$result_5;
          if (Kotlin.compareTo(x_9, y_2) >= 0) {
            inline$result_5 = x_9;
          }
           else {
            inline$result_5 = y_2;
          }
          var x_10 = inline$result_5;
          var inline$result_6;
          if (Kotlin.compareTo(x_10, z_2) >= 0) {
            inline$result_6 = x_10;
          }
           else {
            inline$result_6 = z_2;
          }
          var bottom = inline$result_6;
          if (right < 0.0) {
            if (print)
              println(debugFullPath(target) + ' is offscreen left for parent ' + debugFullPath(it) + ': ' + right);
            canSee_0.v = false;
          }
          if (bottom < 0.0) {
            if (print)
              println(debugFullPath(target) + ' is offscreen top for parent ' + debugFullPath(it) + ': ' + bottom);
            canSee_0.v = false;
          }
          if (left > it.width) {
            if (print)
              println(debugFullPath(target) + ' is offscreen right for parent ' + debugFullPath(it) + ': ' + left + ' > ' + it.width);
            canSee_0.v = false;
          }
          if (top > it.height) {
            if (print)
              println(debugFullPath(target) + ' is offscreen bottom for parent ' + debugFullPath(it) + ': ' + top + ' > ' + it.height);
            canSee_0.v = false;
          }
          callback$result = canSee_0.v;
        }
        var shouldContinue = callback$result;
        if (!shouldContinue)
          break parentWalk$break;
        p = (tmp$ = p.parent) == null || Kotlin.isType(tmp$, _.com.acornui.core.Child) ? tmp$ : Kotlin.throwCCE();
      }
    }
    return canSee_0.v;
  }
  function debugFullPath(target) {
    var ancestry_0 = ancestry(target, ArrayList_init());
    reverse(ancestry_0);
    return joinToString(ancestry_0, '.');
  }
  function DynamicMeshComponent(owner) {
    DynamicMeshComponent$Companion_getInstance();
    UiComponentImpl.call(this, owner);
    this.data_7h9yhp$_0 = new MeshData();
    this.intersectionType = MeshIntersectionType$BOUNDING_BOX_getInstance();
    this.boundingBox = new Box();
    this.globalBoundingBox_7h9yhp$_0 = new Box();
    this.glState_7h9yhp$_0 = inject(this, GlState$Companion_getInstance());
    this.globalPrimitivesAreValid_7h9yhp$_0 = false;
    this._globalPrimitives_7h9yhp$_0 = ArrayList_init();
    this.validation.addNode_sxjeop$(DynamicMeshComponent$Companion_getInstance().VERTEX_TRANSFORM, ValidationFlags_getInstance().CONCATENATED_TRANSFORM, DynamicMeshComponent_init$lambda(this));
    this.validation.addNode_sxjeop$(DynamicMeshComponent$Companion_getInstance().VERTEX_COLOR_TRANSFORM, ValidationFlags_getInstance().CONCATENATED_COLOR_TRANSFORM, DynamicMeshComponent_init$lambda_0(this));
    this.validation.addNode_sxjeop$(DynamicMeshComponent$Companion_getInstance().GLOBAL_BOUNDING_BOX_0, ValidationFlags_getInstance().LAYOUT | ValidationFlags_getInstance().CONCATENATED_TRANSFORM, DynamicMeshComponent_init$lambda_1(this));
    this.globalPrimitiveIndex_7h9yhp$_0 = 0;
  }
  Object.defineProperty(DynamicMeshComponent.prototype, 'globalPrimitives_7h9yhp$_0', {
    get: function () {
      if (!this.globalPrimitivesAreValid_7h9yhp$_0) {
        this.globalPrimitivesAreValid_7h9yhp$_0 = true;
        this.clearGlobalPrimitives_7h9yhp$_0();
        var $receiver = this.data_7h9yhp$_0;
        var tmp$, tmp$_0, tmp$_1;
        var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
        openList.add_11rb$($receiver);
        loop: while (true) {
          if (!!openList.isEmpty())
            break;
          var next = openList.pop();
          var tmp$_2, tmp$_3;
          var globalPrimitive = Kotlin.isType(tmp$_2 = collection_0.arrayListPool.obtain(), ArrayList) ? tmp$_2 : Kotlin.throwCCE();
          tmp$_3 = get_lastIndex(next.vertices);
          for (var j = 0; j <= tmp$_3; j++) {
            var localVertex = next.vertices.get_za3lpa$(j);
            var globalVertex = Vertex$Companion_getInstance().obtain();
            globalVertex.u = localVertex.u;
            globalVertex.v = localVertex.v;
            globalPrimitive.add_11rb$(globalVertex);
          }
          this._globalPrimitives_7h9yhp$_0.add_11rb$(globalPrimitive);
          var treeWalk = TreeWalk$CONTINUE_getInstance();
          if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
            break loop;
          else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
            continue loop;
          else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
            openList.clear();
          (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
        }
        $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
      }
      return this._globalPrimitives_7h9yhp$_0;
    }
  });
  DynamicMeshComponent.prototype.clearGlobalPrimitives_7h9yhp$_0 = function () {
    var tmp$, tmp$_0;
    tmp$ = get_lastIndex(this._globalPrimitives_7h9yhp$_0);
    for (var i = 0; i <= tmp$; i++) {
      tmp$_0 = get_lastIndex(this._globalPrimitives_7h9yhp$_0.get_za3lpa$(i));
      for (var j = 0; j <= tmp$_0; j++) {
        this._globalPrimitives_7h9yhp$_0.get_za3lpa$(i).get_za3lpa$(j).free();
      }
      collection_0.arrayListPool.free_11rb$(this._globalPrimitives_7h9yhp$_0.get_za3lpa$(i));
    }
    this._globalPrimitives_7h9yhp$_0.clear();
  };
  DynamicMeshComponent.prototype.buildMesh_1sp366$ = function (inner) {
    fillStyle.clear();
    lineStyle.clear();
    this.data_7h9yhp$_0.clear();
    inner(this.data_7h9yhp$_0);
    this.invalidate_za3lpa$(DynamicMeshComponent$Companion_getInstance().VERTEX_TRANSFORM | DynamicMeshComponent$Companion_getInstance().VERTEX_COLOR_TRANSFORM | ValidationFlags_getInstance().LAYOUT);
    this.globalPrimitivesAreValid_7h9yhp$_0 = false;
  };
  DynamicMeshComponent.prototype.clear = function () {
    this.data_7h9yhp$_0.clear();
    this.invalidate_za3lpa$(DynamicMeshComponent$Companion_getInstance().VERTEX_TRANSFORM | DynamicMeshComponent$Companion_getInstance().VERTEX_COLOR_TRANSFORM | ValidationFlags_getInstance().LAYOUT);
    this.globalPrimitivesAreValid_7h9yhp$_0 = false;
  };
  DynamicMeshComponent.prototype.validateGlobalTransform_7h9yhp$_0 = function () {
    var index = {v: 0};
    var $receiver = this.data_7h9yhp$_0;
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var tmp$_2, tmp$_3;
      var cT = this.concatenatedTransform;
      var globalPrimitive = this.globalPrimitives_7h9yhp$_0.get_za3lpa$((tmp$_2 = index.v, index.v = tmp$_2 + 1 | 0, tmp$_2));
      tmp$_3 = get_lastIndex(next.vertices);
      for (var j = 0; j <= tmp$_3; j++) {
        var localVertex = next.vertices.get_za3lpa$(j);
        var globalVertex = globalPrimitive.get_za3lpa$(j);
        cT.prj_9wm29k$(globalVertex.position.set_1fv2cb$(localVertex.position));
        cT.rot_9wm29k$(globalVertex.normal.set_1fv2cb$(localVertex.normal));
      }
      var treeWalk = TreeWalk$CONTINUE_getInstance();
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  };
  DynamicMeshComponent.prototype.validateGlobalColor_7h9yhp$_0 = function () {
    var index = {v: 0};
    var $receiver = this.data_7h9yhp$_0;
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var tmp$_2, tmp$_3;
      var cCt = this.concatenatedColorTint;
      var globalPrimitive = this.globalPrimitives_7h9yhp$_0.get_za3lpa$((tmp$_2 = index.v, index.v = tmp$_2 + 1 | 0, tmp$_2));
      tmp$_3 = get_lastIndex(next.vertices);
      for (var j = 0; j <= tmp$_3; j++) {
        var localVertex = next.vertices.get_za3lpa$(j);
        var globalVertex = globalPrimitive.get_za3lpa$(j);
        globalVertex.colorTint.set_1qghwi$(localVertex.colorTint).mul_1qghwi$(cCt);
      }
      var treeWalk = TreeWalk$CONTINUE_getInstance();
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
  };
  DynamicMeshComponent.prototype.intersectsGlobalRay_94uff6$ = function (globalRay, intersection) {
    this.validate_za3lpa$(DynamicMeshComponent$Companion_getInstance().VERTEX_TRANSFORM | DynamicMeshComponent$Companion_getInstance().GLOBAL_BOUNDING_BOX_0);
    if (!this.globalBoundingBox_7h9yhp$_0.intersects_y8xsj$(globalRay, intersection)) {
      return false;
    }
    if (this.intersectionType === MeshIntersectionType$EXACT_getInstance()) {
      if (this.data_7h9yhp$_0.children.isEmpty() && this.data_7h9yhp$_0.vertices.isEmpty())
        return false;
      var index = {v: 0};
      var $receiver = this.data_7h9yhp$_0;
      var tmp$, tmp$_0, tmp$_1;
      var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
      openList.add_11rb$($receiver);
      loop: while (true) {
        if (!!openList.isEmpty())
          break;
        var next = openList.pop();
        var tmp$_2, tmp$_3;
        var indices = next.indices;
        var globalPrimitive = this.globalPrimitives_7h9yhp$_0.get_za3lpa$((tmp$_2 = index.v, index.v = tmp$_2 + 1 | 0, tmp$_2));
        if (next.drawMode === Gl20$Companion_getInstance().TRIANGLES) {
          tmp$_3 = step(new IntRange(0, get_lastIndex(indices)), 3).iterator();
          while (tmp$_3.hasNext()) {
            var j = tmp$_3.next();
            var p1 = globalPrimitive.get_za3lpa$(indices.get_za3lpa$(j)).position;
            var p2 = globalPrimitive.get_za3lpa$(indices.get_za3lpa$(j + 1 | 0)).position;
            var p3 = globalPrimitive.get_za3lpa$(indices.get_za3lpa$(j + 2 | 0)).position;
            if (globalRay.intersects_fvcu7h$(p1, p2, p3, intersection)) {
              return true;
            }
          }
        }
        var treeWalk = TreeWalk$CONTINUE_getInstance();
        if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
          break loop;
        else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
          continue loop;
        else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
          openList.clear();
        (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !true) : null;
      }
      $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
      return false;
    }
     else {
      return true;
    }
  };
  DynamicMeshComponent.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    out.clear();
    this.boundingBox.inf();
    if (this.data_7h9yhp$_0.children.isEmpty() && this.data_7h9yhp$_0.vertices.isEmpty())
      return;
    var $receiver = this.data_7h9yhp$_0;
    var tmp$, tmp$_0, tmp$_1;
    var openList = Kotlin.isType(tmp$ = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$ : Kotlin.throwCCE();
    openList.add_11rb$($receiver);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.pop();
      var tmp$_2;
      tmp$_2 = get_lastIndex(next.vertices);
      for (var j = 0; j <= tmp$_2; j++) {
        var p = next.vertices.get_za3lpa$(j).position;
        this.boundingBox.ext_f6e669$(p, false);
      }
      var treeWalk = TreeWalk$CONTINUE_getInstance();
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_1 = Kotlin.isType(tmp$_0 = next, _.com.acornui.core.Parent) ? tmp$_0 : null) != null ? tmp$_1.iterateChildren_9z398f$(_.com.acornui.core.childWalkPreOrder$f(openList), !false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    this.boundingBox.update();
    out.ext_dleff0$(this.boundingBox.max.x, this.boundingBox.max.y);
  };
  DynamicMeshComponent.prototype.draw = function () {
    this.glState_7h9yhp$_0.camera_9ynqw0$(this.camera);
    this.globalPrimitiveIndex_7h9yhp$_0 = 0;
    this.renderMeshData_ghpqau$_0(this.data_7h9yhp$_0);
  };
  function DynamicMeshComponent$renderMeshData$lambda(this$DynamicMeshComponent) {
    return function (it) {
      this$DynamicMeshComponent.renderMeshData_ghpqau$_0(it);
      return true;
    };
  }
  DynamicMeshComponent.prototype.renderMeshData_ghpqau$_0 = function (meshData_0) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var batch_0 = this.glState_7h9yhp$_0.batch;
    var indices = meshData_0.indices;
    var vertices = meshData_0.vertices;
    var globalPrimitive = this.globalPrimitives_7h9yhp$_0.get_za3lpa$((tmp$ = this.globalPrimitiveIndex_7h9yhp$_0, this.globalPrimitiveIndex_7h9yhp$_0 = tmp$ + 1 | 0, tmp$));
    if (meshData_0.flushBatch)
      batch_0.flush_6taknv$(true);
    if (!indices.isEmpty()) {
      if (assertionsEnabled) {
        if (meshData_0.drawMode === Gl20$Companion_getInstance().LINES) {
          var value = indices.size % 2 === 0;
          if (_.com.acornui.assertionsEnabled) {
            if (!value) {
              var message = 'indices size ' + indices.size + ' not evenly divisible by 2';
              throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message));
            }
          }
        }
         else if (meshData_0.drawMode === Gl20$Companion_getInstance().TRIANGLES) {
          var value_0 = indices.size % 3 === 0;
          if (_.com.acornui.assertionsEnabled) {
            if (!value_0) {
              var message_0 = 'indices size ' + indices.size + ' not evenly divisible by 3';
              throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message_0));
            }
          }
        }
        _assert(!vertices.isEmpty(), 'Indices pushed with no vertices.');
      }
      this.glState_7h9yhp$_0.setTexture_2kg320$((tmp$_0 = meshData_0.texture) != null ? tmp$_0 : this.glState_7h9yhp$_0.whitePixel);
      batch_0.begin_za3lpa$(meshData_0.drawMode);
      this.glState_7h9yhp$_0.blendMode_rwn2t7$(meshData_0.blendMode, false);
      tmp$_1 = get_lastIndex(globalPrimitive);
      for (var j = 0; j <= tmp$_1; j++) {
        var v = globalPrimitive.get_za3lpa$(j);
        batch_0.putVertex_qr5cn2$(v.position, v.normal, v.colorTint, v.u, v.v);
      }
      var n = batch_0.highestIndex + 1;
      tmp$_2 = get_lastIndex(indices);
      for (var j_0 = 0; j_0 <= tmp$_2; j_0++) {
        batch_0.putIndex_za3lpa$(n + indices.get_za3lpa$(j_0) | 0);
      }
    }
    meshData_0.iterateChildren_bwf5pq$(DynamicMeshComponent$renderMeshData$lambda(this));
    if (meshData_0.flushBatch)
      batch_0.flush_6taknv$(true);
  };
  DynamicMeshComponent.prototype.dispose = function () {
    UiComponentImpl.prototype.dispose.call(this);
    this.clearGlobalPrimitives_7h9yhp$_0();
  };
  function DynamicMeshComponent$Companion() {
    DynamicMeshComponent$Companion_instance = this;
    this.VERTEX_TRANSFORM = 1 << 16;
    this.VERTEX_COLOR_TRANSFORM = 1 << 17;
    this.GLOBAL_BOUNDING_BOX_0 = 1 << 18;
  }
  DynamicMeshComponent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DynamicMeshComponent$Companion_instance = null;
  function DynamicMeshComponent$Companion_getInstance() {
    if (DynamicMeshComponent$Companion_instance === null) {
      new DynamicMeshComponent$Companion();
    }
    return DynamicMeshComponent$Companion_instance;
  }
  function DynamicMeshComponent_init$lambda(this$DynamicMeshComponent) {
    return function () {
      this$DynamicMeshComponent.validateGlobalTransform_7h9yhp$_0();
    };
  }
  function DynamicMeshComponent_init$lambda_0(this$DynamicMeshComponent) {
    return function () {
      this$DynamicMeshComponent.validateGlobalColor_7h9yhp$_0();
    };
  }
  function DynamicMeshComponent_init$lambda_1(this$DynamicMeshComponent) {
    return function () {
      this$DynamicMeshComponent.globalBoundingBox_7h9yhp$_0.set_ujzywt$(this$DynamicMeshComponent.boundingBox).mul_1ktw39$(this$DynamicMeshComponent.concatenatedTransform);
    };
  }
  DynamicMeshComponent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DynamicMeshComponent',
    interfaces: [Clearable, UiComponentImpl]
  };
  function dynamicMeshC$lambda($receiver) {
  }
  function dynamicMeshC($receiver, init) {
    if (init === void 0)
      init = dynamicMeshC$lambda;
    var s = new DynamicMeshComponent($receiver);
    init(s);
    return s;
  }
  function MeshData() {
    MeshData$Companion_getInstance();
    this.flushBatch = false;
    this.children_uylqtl$_0 = ArrayList_init();
    this.parent_uylqtl$_0 = null;
    this.texture = null;
    this.blendMode = BlendMode$Companion_getInstance().NORMAL;
    this.drawMode = Gl20$Companion_getInstance().TRIANGLES;
    this.vertices = ArrayList_init();
    this.indices = ArrayList_init();
    this.highestIndex = -1;
  }
  Object.defineProperty(MeshData.prototype, 'children', {
    get: function () {
      return this.children_uylqtl$_0;
    }
  });
  Object.defineProperty(MeshData.prototype, 'parent', {
    get: function () {
      return this.parent_uylqtl$_0;
    },
    set: function (parent) {
      this.parent_uylqtl$_0 = parent;
    }
  });
  MeshData.prototype.transform_1ktw39$ = function (value) {
    var tmp$, tmp$_0;
    tmp$ = get_lastIndex(this.vertices);
    for (var i = 0; i <= tmp$; i++) {
      var vertex = this.vertices.get_za3lpa$(i);
      value.prj_9wm29k$(vertex.position);
      value.rot_9wm29k$(vertex.normal);
    }
    tmp$_0 = get_lastIndex(this.children);
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      this.children.get_za3lpa$(i_0).transform_1ktw39$(value);
    }
  };
  MeshData.prototype.trn_y2kzbl$ = function (x, y, z) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (z === void 0)
      z = 0.0;
    var tmp$, tmp$_0;
    tmp$ = get_lastIndex(this.vertices);
    for (var i = 0; i <= tmp$; i++) {
      var vertex = this.vertices.get_za3lpa$(i);
      vertex.position.add_y2kzbl$(x, y, z);
    }
    tmp$_0 = get_lastIndex(this.children);
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      this.children.get_za3lpa$(i_0).trn_y2kzbl$(x, y, z);
    }
  };
  MeshData.prototype.scl_y2kzbl$ = function (x, y, z) {
    if (x === void 0)
      x = 1.0;
    if (y === void 0)
      y = 1.0;
    if (z === void 0)
      z = 1.0;
    var tmp$, tmp$_0;
    tmp$ = get_lastIndex(this.vertices);
    for (var i = 0; i <= tmp$; i++) {
      var vertex = this.vertices.get_za3lpa$(i);
      vertex.position.scl_y2kzbl$(x, y, z);
    }
    tmp$_0 = get_lastIndex(this.children);
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      this.children.get_za3lpa$(i_0).scl_y2kzbl$(x, y, z);
    }
  };
  MeshData.prototype.colorTransform_1qghwi$ = function (colorTint) {
    var tmp$, tmp$_0;
    tmp$ = get_lastIndex(this.vertices);
    for (var i = 0; i <= tmp$; i++) {
      var vertex = this.vertices.get_za3lpa$(i);
      vertex.colorTint.mul_1qghwi$(colorTint);
    }
    tmp$_0 = get_lastIndex(this.children);
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      this.children.get_za3lpa$(i_0).colorTransform_1qghwi$(colorTint);
    }
  };
  MeshData.prototype.pushIndex_za3lpa$ = function (index) {
    this.indices.add_11rb$(index);
    if (index > this.highestIndex)
      this.highestIndex = index;
  };
  MeshData.prototype.pushIndices_q5rwfd$ = function (arr) {
    var tmp$;
    var n = this.highestIndex + 1 | 0;
    tmp$ = get_lastIndex_2(arr);
    for (var i = 0; i <= tmp$; i++) {
      this.pushIndex_za3lpa$(arr[i] + n | 0);
    }
  };
  MeshData.prototype.pushVertex_1pfdoq$ = function (position, fillStyle_0) {
    MeshData$Companion_getInstance().tmpUv_0.set_1fv330$(position).scl_1fv330$(fillStyle_0.uvDir).add_1fv330$(fillStyle_0.uvOffset);
    var u = MeshData$Companion_getInstance().tmpUv_0.x;
    var v = MeshData$Companion_getInstance().tmpUv_0.y;
    this.pushVertex_g8ktjq$(position.x, position.y, 0.0, fillStyle_0.colorTint, u, v);
  };
  MeshData.prototype.pushVertex_6s912v$ = function (position, z, fillStyle_0) {
    MeshData$Companion_getInstance().tmpUv_0.set_1fv330$(position).scl_1fv330$(fillStyle_0.uvDir).add_1fv330$(fillStyle_0.uvOffset);
    var u = MeshData$Companion_getInstance().tmpUv_0.x;
    var v = MeshData$Companion_getInstance().tmpUv_0.y;
    this.pushVertex_g8ktjq$(position.x, position.y, z, fillStyle_0.colorTint, u, v);
  };
  MeshData.prototype.pushVertex_hv3uxj$ = function (position, fillStyle_0) {
    MeshData$Companion_getInstance().tmpUv_0.set_dleff0$(position.x, position.y).scl_1fv330$(fillStyle_0.uvDir).add_1fv330$(fillStyle_0.uvOffset);
    var u = MeshData$Companion_getInstance().tmpUv_0.x;
    var v = MeshData$Companion_getInstance().tmpUv_0.y;
    this.pushVertex_g8ktjq$(position.x, position.y, position.z, fillStyle_0.colorTint, u, v);
  };
  MeshData.prototype.pushVertex_obfnaw$ = function (position, fillStyle_0, normal) {
    MeshData$Companion_getInstance().tmpUv_0.set_dleff0$(position.x, position.y).scl_1fv330$(fillStyle_0.uvDir).add_1fv330$(fillStyle_0.uvOffset);
    var u = MeshData$Companion_getInstance().tmpUv_0.x;
    var v = MeshData$Companion_getInstance().tmpUv_0.y;
    this.pushVertex_g8ktjq$(position.x, position.y, position.z, fillStyle_0.colorTint, u, v, normal);
  };
  MeshData.prototype.pushVertex_g8ktjq$ = function (x, y, z, colorTint, u, v, normal) {
    if (u === void 0)
      u = 0.0;
    if (v === void 0)
      v = 0.0;
    if (normal === void 0)
      normal = Vector3.Companion.NEG_Z;
    var localV = new Vertex();
    localV.normal.set_1fv2cb$(normal);
    localV.position.set_y2kzbl$(x, y, z);
    localV.colorTint.set_1qghwi$(colorTint);
    localV.u = u;
    localV.v = v;
    this.vertices.add_11rb$(localV);
  };
  MeshData.prototype.clear = function () {
    var tmp$;
    this.vertices.clear();
    this.indices.clear();
    this.drawMode = Gl20$Companion_getInstance().TRIANGLES;
    this.blendMode = BlendMode$Companion_getInstance().NORMAL;
    this.highestIndex = -1;
    this.flushBatch = false;
    tmp$ = get_lastIndex(this.children);
    for (var i = 0; i <= tmp$; i++) {
      var child = this.children.get_za3lpa$(i);
      child.parent = null;
      child.clear();
    }
    this.children.clear();
  };
  MeshData.prototype.addChild_6dvupz$ = function (index, child) {
    if (Kotlin.equals(child, this))
      throw new Exception('Cannot add a child to itself.');
    if (child.parent != null)
      throw new Exception('Child already has a parent.');
    child.parent = this;
    this.children.add_wxm5ur$(index, child);
    return child;
  };
  MeshData.prototype.unaryPlus_1hrmni$ = function ($receiver) {
    this.addChild_6dvupz$(this.numChildren, $receiver);
    return $receiver;
  };
  MeshData.prototype.unaryMinus_1hrmni$ = function ($receiver) {
    this.removeChild_6iy558$($receiver);
    return $receiver;
  };
  MeshData.prototype.swapChildren_vux9f0$ = function (indexA, indexB) {
    var c = this.children;
    var tmp = c.get_za3lpa$(indexA);
    c.set_wxm5ur$(indexA, c.get_za3lpa$(indexB));
    c.set_wxm5ur$(indexB, tmp);
  };
  MeshData.prototype.removeChild_za3lpa$ = function (index) {
    var child = this.children.get_za3lpa$(index);
    child.parent = null;
    this.children.removeAt_za3lpa$(index);
    return child;
  };
  MeshData.prototype.remove = function () {
    var tmp$;
    (tmp$ = this.parent) != null ? tmp$.removeChild_6iy558$(this) : null;
  };
  function MeshData$Companion() {
    MeshData$Companion_instance = this;
    this.tmpUv_0 = new Vector2();
  }
  MeshData$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MeshData$Companion_instance = null;
  function MeshData$Companion_getInstance() {
    if (MeshData$Companion_instance === null) {
      new MeshData$Companion();
    }
    return MeshData$Companion_instance;
  }
  MeshData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MeshData',
    interfaces: [Clearable, MutableParent]
  };
  var mat;
  var quat;
  function rotate($receiver, yaw, pitch, roll) {
    if (yaw === void 0)
      yaw = 0.0;
    if (pitch === void 0)
      pitch = 0.0;
    if (roll === void 0)
      roll = 0.0;
    mat.idt();
    quat.setEulerAnglesRad_y2kzbl$(yaw, pitch, roll);
    mat.rotate_sa462$(quat);
    $receiver.transform_1ktw39$(mat);
  }
  function transform($receiver, position, scale, rotation, origin) {
    if (position === void 0)
      position = Vector3.Companion.ZERO;
    if (scale === void 0)
      scale = Vector3.Companion.ONE;
    if (rotation === void 0)
      rotation = Vector3.Companion.ZERO;
    if (origin === void 0)
      origin = Vector3.Companion.ZERO;
    mat.idt();
    mat.trn_1fv2cb$(position);
    mat.scl_1fv2cb$(scale);
    if (!rotation.isZero()) {
      quat.setEulerAnglesRad_y2kzbl$(rotation.y, rotation.x, rotation.z);
      mat.rotate_sa462$(quat);
    }
    if (!origin.isZero())
      mat.translate_y2kzbl$(-origin.x, -origin.y, -origin.z);
    $receiver.transform_1ktw39$(mat);
  }
  function meshData$lambda($receiver) {
  }
  function meshData(init) {
    if (init === void 0)
      init = meshData$lambda;
    var p = new MeshData();
    init(p);
    return p;
  }
  function FillStyle(colorTint, uvDir, uvOffset, texture, isVisible) {
    if (colorTint === void 0)
      colorTint = Color.Companion.WHITE.copy_7b5o5w$();
    if (uvDir === void 0)
      uvDir = new Vector2(1.0, 1.0);
    if (uvOffset === void 0)
      uvOffset = new Vector2();
    if (texture === void 0)
      texture = null;
    if (isVisible === void 0)
      isVisible = true;
    this.colorTint = colorTint;
    this.uvDir = uvDir;
    this.uvOffset = uvOffset;
    this.texture = texture;
    this.isVisible = isVisible;
  }
  FillStyle.prototype.clear = function () {
    this.colorTint.set_1qghwi$(Color.Companion.WHITE);
    this.uvDir.clear();
    this.uvOffset.clear();
    this.texture = null;
    this.isVisible = true;
  };
  Object.defineProperty(FillStyle.prototype, 'isTransparent', {
    get: function () {
      return this.colorTint.a <= 0.0;
    }
  });
  FillStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FillStyle',
    interfaces: [Clearable]
  };
  FillStyle.prototype.component1 = function () {
    return this.colorTint;
  };
  FillStyle.prototype.component2 = function () {
    return this.uvDir;
  };
  FillStyle.prototype.component3 = function () {
    return this.uvOffset;
  };
  FillStyle.prototype.component4 = function () {
    return this.texture;
  };
  FillStyle.prototype.component5 = function () {
    return this.isVisible;
  };
  FillStyle.prototype.copy_f3w6gt$ = function (colorTint, uvDir, uvOffset, texture, isVisible) {
    return new FillStyle(colorTint === void 0 ? this.colorTint : colorTint, uvDir === void 0 ? this.uvDir : uvDir, uvOffset === void 0 ? this.uvOffset : uvOffset, texture === void 0 ? this.texture : texture, isVisible === void 0 ? this.isVisible : isVisible);
  };
  FillStyle.prototype.toString = function () {
    return 'FillStyle(colorTint=' + Kotlin.toString(this.colorTint) + (', uvDir=' + Kotlin.toString(this.uvDir)) + (', uvOffset=' + Kotlin.toString(this.uvOffset)) + (', texture=' + Kotlin.toString(this.texture)) + (', isVisible=' + Kotlin.toString(this.isVisible)) + ')';
  };
  FillStyle.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.colorTint) | 0;
    result = result * 31 + Kotlin.hashCode(this.uvDir) | 0;
    result = result * 31 + Kotlin.hashCode(this.uvOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.texture) | 0;
    result = result * 31 + Kotlin.hashCode(this.isVisible) | 0;
    return result;
  };
  FillStyle.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.colorTint, other.colorTint) && Kotlin.equals(this.uvDir, other.uvDir) && Kotlin.equals(this.uvOffset, other.uvOffset) && Kotlin.equals(this.texture, other.texture) && Kotlin.equals(this.isVisible, other.isVisible)))));
  };
  function LineStyle(capStyle, thickness, fillStyle_0) {
    if (capStyle === void 0)
      capStyle = CapStyle_getInstance().MITER;
    if (thickness === void 0)
      thickness = 1.0;
    if (fillStyle_0 === void 0)
      fillStyle_0 = new FillStyle();
    this.capStyle = capStyle;
    this.thickness = thickness;
    this.fillStyle = fillStyle_0;
  }
  Object.defineProperty(LineStyle.prototype, 'isVisible', {
    get: function () {
      return this.thickness > 0.0 && this.fillStyle.isVisible;
    },
    set: function (value) {
      this.fillStyle.isVisible = value;
    }
  });
  LineStyle.prototype.clear = function () {
    this.capStyle = CapStyle_getInstance().MITER;
    this.thickness = 1.0;
    this.fillStyle.clear();
  };
  LineStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LineStyle',
    interfaces: [Clearable]
  };
  LineStyle.prototype.component1 = function () {
    return this.capStyle;
  };
  LineStyle.prototype.component2 = function () {
    return this.thickness;
  };
  LineStyle.prototype.component3 = function () {
    return this.fillStyle;
  };
  LineStyle.prototype.copy_dpm9ch$ = function (capStyle, thickness, fillStyle_0) {
    return new LineStyle(capStyle === void 0 ? this.capStyle : capStyle, thickness === void 0 ? this.thickness : thickness, fillStyle_0 === void 0 ? this.fillStyle : fillStyle_0);
  };
  LineStyle.prototype.toString = function () {
    return 'LineStyle(capStyle=' + Kotlin.toString(this.capStyle) + (', thickness=' + Kotlin.toString(this.thickness)) + (', fillStyle=' + Kotlin.toString(this.fillStyle)) + ')';
  };
  LineStyle.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.capStyle) | 0;
    result = result * 31 + Kotlin.hashCode(this.thickness) | 0;
    result = result * 31 + Kotlin.hashCode(this.fillStyle) | 0;
    return result;
  };
  LineStyle.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.capStyle, other.capStyle) && Kotlin.equals(this.thickness, other.thickness) && Kotlin.equals(this.fillStyle, other.fillStyle)))));
  };
  function CapStyle() {
    CapStyle_instance = this;
    this.NONE = 'none';
    this.MITER = 'miter';
    this.CAP_BUILDERS_0 = HashMap_init();
    var $receiver = this.CAP_BUILDERS_0;
    var key = this.MITER;
    var value = MiterCap_getInstance();
    $receiver.put_xwzc9p$(key, value);
    var $receiver_0 = this.CAP_BUILDERS_0;
    var key_0 = this.NONE;
    var value_0 = NoCap_getInstance();
    $receiver_0.put_xwzc9p$(key_0, value_0);
  }
  CapStyle.prototype.getCapBuilder_61zpoe$ = function (style_0) {
    return this.CAP_BUILDERS_0.get_11rb$(style_0);
  };
  CapStyle.prototype.setCapBuilder_6mgk4n$ = function (style_0, builder) {
    this.CAP_BUILDERS_0.put_xwzc9p$(style_0, builder);
  };
  CapStyle.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'CapStyle',
    interfaces: []
  };
  var CapStyle_instance = null;
  function CapStyle_getInstance() {
    if (CapStyle_instance === null) {
      new CapStyle();
    }
    return CapStyle_instance;
  }
  function CapBuilder() {
  }
  CapBuilder.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'CapBuilder',
    interfaces: []
  };
  function MeshIntersectionType(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function MeshIntersectionType_initFields() {
    MeshIntersectionType_initFields = function () {
    };
    MeshIntersectionType$BOUNDING_BOX_instance = new MeshIntersectionType('BOUNDING_BOX', 0);
    MeshIntersectionType$EXACT_instance = new MeshIntersectionType('EXACT', 1);
  }
  var MeshIntersectionType$BOUNDING_BOX_instance;
  function MeshIntersectionType$BOUNDING_BOX_getInstance() {
    MeshIntersectionType_initFields();
    return MeshIntersectionType$BOUNDING_BOX_instance;
  }
  var MeshIntersectionType$EXACT_instance;
  function MeshIntersectionType$EXACT_getInstance() {
    MeshIntersectionType_initFields();
    return MeshIntersectionType$EXACT_instance;
  }
  MeshIntersectionType.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MeshIntersectionType',
    interfaces: [Enum]
  };
  function MeshIntersectionType$values() {
    return [MeshIntersectionType$BOUNDING_BOX_getInstance(), MeshIntersectionType$EXACT_getInstance()];
  }
  MeshIntersectionType.values = MeshIntersectionType$values;
  function MeshIntersectionType$valueOf(name) {
    switch (name) {
      case 'BOUNDING_BOX':
        return MeshIntersectionType$BOUNDING_BOX_getInstance();
      case 'EXACT':
        return MeshIntersectionType$EXACT_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.component.drawing.MeshIntersectionType.' + name);
    }
  }
  MeshIntersectionType.valueOf_61zpoe$ = MeshIntersectionType$valueOf;
  var fillStyle;
  var lineStyle;
  function MiterCap() {
    MiterCap_instance = this;
    this.perpLine_0 = new Vector2();
    this.perpControl_0 = new Vector2();
    this.dirLine_0 = new Vector2();
    this.dirControl_0 = new Vector2();
    this.joinedPoint_0 = new Vector2();
  }
  MiterCap.prototype.createCap_kecg8q$ = function (p1, p2, control, meshData_0, lineStyle_0, controlLineThickness, clockwise) {
    if (control == null) {
      NoCap_getInstance().createCap_kecg8q$(p1, p2, null, meshData_0, lineStyle_0, controlLineThickness, clockwise);
      return;
    }
    var t = (clockwise ? lineStyle_0.thickness : -lineStyle_0.thickness) * 0.5;
    var t2 = (clockwise ? controlLineThickness : -controlLineThickness) * 0.5;
    this.dirLine_0.set_1fv330$(p2).sub_1fv330$(p1).nor();
    this.dirControl_0.set_1fv330$(p1).sub_1fv330$(control).nor();
    this.perpLine_0.set_dleff0$(this.dirLine_0.y, -this.dirLine_0.x).scl_mx4ult$(t).add_1fv330$(p1);
    this.perpControl_0.set_dleff0$(this.dirControl_0.y, -this.dirControl_0.x).scl_mx4ult$(t2).add_1fv330$(p1);
    Ray2.Companion.intersects_x4flbt$(this.perpLine_0, this.dirLine_0, this.perpControl_0, this.dirControl_0, this.joinedPoint_0);
    meshData_0.pushVertex_6s912v$(this.joinedPoint_0, -0.001, lineStyle_0.fillStyle);
    this.perpLine_0.set_dleff0$(-this.dirLine_0.y, this.dirLine_0.x).scl_mx4ult$(t).add_1fv330$(p1);
    this.perpControl_0.set_dleff0$(-this.dirControl_0.y, this.dirControl_0.x).scl_mx4ult$(t2).add_1fv330$(p1);
    Ray2.Companion.intersects_x4flbt$(this.perpLine_0, this.dirLine_0, this.perpControl_0, this.dirControl_0, this.joinedPoint_0);
    meshData_0.pushVertex_6s912v$(this.joinedPoint_0, -0.001, lineStyle_0.fillStyle);
  };
  MiterCap.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'MiterCap',
    interfaces: [CapBuilder]
  };
  var MiterCap_instance = null;
  function MiterCap_getInstance() {
    if (MiterCap_instance === null) {
      new MiterCap();
    }
    return MiterCap_instance;
  }
  function NoCap() {
    NoCap_instance = this;
    this.perpLine_0 = new Vector2();
    this.dirLine_0 = new Vector2();
  }
  NoCap.prototype.createCap_kecg8q$ = function (p1, p2, control, meshData_0, lineStyle_0, controlLineThickness, clockwise) {
    var t = (clockwise ? lineStyle_0.thickness : -lineStyle_0.thickness) * 0.5;
    this.dirLine_0.set_1fv330$(p2).sub_1fv330$(p1).nor();
    this.perpLine_0.set_dleff0$(this.dirLine_0.y, -this.dirLine_0.x).scl_mx4ult$(t).add_1fv330$(p1);
    meshData_0.pushVertex_6s912v$(this.perpLine_0, -0.001, lineStyle_0.fillStyle);
    this.perpLine_0.set_dleff0$(-this.dirLine_0.y, this.dirLine_0.x).scl_mx4ult$(t).add_1fv330$(p1);
    meshData_0.pushVertex_6s912v$(this.perpLine_0, -0.001, lineStyle_0.fillStyle);
  };
  NoCap.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'NoCap',
    interfaces: [CapBuilder]
  };
  var NoCap_instance = null;
  function NoCap_getInstance() {
    if (NoCap_instance === null) {
      new NoCap();
    }
    return NoCap_instance;
  }
  var v1;
  var v2;
  var v3;
  var v4;
  var QUAD_INDICES;
  var TRIANGLE_INDICES;
  function fillTriangle(v1_0, v2_0, v3_0) {
    var primitive = meshData();
    primitive.texture = fillStyle.texture;
    primitive.pushVertex_1pfdoq$(v1_0, fillStyle);
    primitive.pushVertex_1pfdoq$(v2_0, fillStyle);
    primitive.pushVertex_1pfdoq$(v3_0, fillStyle);
    primitive.pushIndices_q5rwfd$(TRIANGLE_INDICES);
    return primitive;
  }
  function fillQuad(v1_0, v2_0, v3_0, v4_0) {
    var primitive = meshData();
    primitive.texture = fillStyle.texture;
    primitive.pushVertex_1pfdoq$(v1_0, fillStyle);
    primitive.pushVertex_1pfdoq$(v2_0, fillStyle);
    primitive.pushVertex_1pfdoq$(v3_0, fillStyle);
    primitive.pushVertex_1pfdoq$(v4_0, fillStyle);
    primitive.pushIndices_q5rwfd$(QUAD_INDICES);
    return primitive;
  }
  function line$lambda($receiver) {
  }
  function line(x1, y1, x2, y2, controlA, controlB, controlAThickness, controlBThickness, init) {
    if (controlA === void 0)
      controlA = null;
    if (controlB === void 0)
      controlB = null;
    if (controlAThickness === void 0)
      controlAThickness = lineStyle.thickness;
    if (controlBThickness === void 0)
      controlBThickness = lineStyle.thickness;
    if (init === void 0)
      init = line$lambda;
    var p1 = Vector2.Companion.obtain().set_dleff0$(x1, y1);
    var p2 = Vector2.Companion.obtain().set_dleff0$(x2, y2);
    var ret = line_0(p1, p2, controlA, controlB, controlAThickness, controlBThickness, init);
    p1.free();
    p2.free();
    return ret;
  }
  function line$lambda_0($receiver) {
  }
  function line_0(p1, p2, controlA, controlB, controlAThickness, controlBThickness, init) {
    if (controlA === void 0)
      controlA = null;
    if (controlB === void 0)
      controlB = null;
    if (controlAThickness === void 0)
      controlAThickness = lineStyle.thickness;
    if (controlBThickness === void 0)
      controlBThickness = lineStyle.thickness;
    if (init === void 0)
      init = line$lambda_0;
    var tmp$;
    var primitive = meshData();
    primitive.texture = lineStyle.fillStyle.texture;
    tmp$ = CapStyle_getInstance().getCapBuilder_61zpoe$(lineStyle.capStyle);
    if (tmp$ == null) {
      throw new Exception('No cap builder defined for: ' + lineStyle.capStyle);
    }
    var capBuilder = tmp$;
    capBuilder.createCap_kecg8q$(p1, p2, controlA, primitive, lineStyle, controlAThickness, true);
    var indexA = primitive.vertices.size - 2 | 0;
    _assert(indexA >= 0, 'Cap builder did not create at least two vertices');
    var indexB = indexA + 1 | 0;
    capBuilder.createCap_kecg8q$(p2, p1, controlB, primitive, lineStyle, controlBThickness, false);
    var indexC = primitive.vertices.size - 2 | 0;
    _assert(indexC >= (indexA + 2 | 0), 'Cap builder did not create at least two vertices');
    var indexD = indexC + 1 | 0;
    primitive.pushIndex_za3lpa$(indexA);
    primitive.pushIndex_za3lpa$(indexC);
    primitive.pushIndex_za3lpa$(indexB);
    primitive.pushIndex_za3lpa$(indexB);
    primitive.pushIndex_za3lpa$(indexC);
    primitive.pushIndex_za3lpa$(indexD);
    init(primitive);
    return primitive;
  }
  function triangle$lambda($receiver) {
  }
  function triangle(x1, y1, x2, y2, x3, y3, init) {
    if (init === void 0)
      init = triangle$lambda;
    v1.set_dleff0$(x1, y1);
    v2.set_dleff0$(x2, y2);
    v3.set_dleff0$(x3, y3);
    return triangle_0(v1, v2, v3, init);
  }
  function triangle$lambda_0($receiver) {
  }
  function triangle$lambda_1(closure$v1, closure$v2, closure$v3, closure$init) {
    return function ($receiver) {
      if (fillStyle.isVisible)
        $receiver.unaryPlus_1hrmni$(fillTriangle(closure$v1, closure$v2, closure$v3));
      if (lineStyle.isVisible) {
        $receiver.unaryPlus_1hrmni$(line_0(closure$v1, closure$v2, closure$v3, closure$v3));
        $receiver.unaryPlus_1hrmni$(line_0(closure$v2, closure$v3, closure$v1, closure$v1));
        $receiver.unaryPlus_1hrmni$(line_0(closure$v3, closure$v1, closure$v2, closure$v2));
      }
      closure$init($receiver);
    };
  }
  function triangle_0(v1_0, v2_0, v3_0, init) {
    if (init === void 0)
      init = triangle$lambda_0;
    return meshData(triangle$lambda_1(v1_0, v2_0, v3_0, init));
  }
  function quad$lambda($receiver) {
  }
  function quad(x1, y1, x2, y2, x3, y3, x4, y4, init) {
    if (init === void 0)
      init = quad$lambda;
    v1.set_dleff0$(x1, y1);
    v2.set_dleff0$(x2, y2);
    v3.set_dleff0$(x3, y3);
    v4.set_dleff0$(x4, y4);
    return quad_0(v1, v2, v3, v4, init);
  }
  function rect$lambda_0($receiver) {
  }
  function rect_0(x, y, w, h, init) {
    if (init === void 0)
      init = rect$lambda_0;
    v1.set_dleff0$(x, y);
    v2.set_dleff0$(x + w, y);
    v3.set_dleff0$(x + w, y + h);
    v4.set_dleff0$(x, y + h);
    return quad_0(v1, v2, v3, v4, init);
  }
  function quad$lambda_0($receiver) {
  }
  function quad$lambda_1(closure$v1, closure$v2, closure$v3, closure$v4, closure$init) {
    return function ($receiver) {
      if (fillStyle.isVisible)
        $receiver.unaryPlus_1hrmni$(fillQuad(closure$v1, closure$v2, closure$v3, closure$v4));
      if (lineStyle.isVisible) {
        $receiver.unaryPlus_1hrmni$(line_0(closure$v1, closure$v2, closure$v4, closure$v3));
        $receiver.unaryPlus_1hrmni$(line_0(closure$v2, closure$v3, closure$v1, closure$v4));
        $receiver.unaryPlus_1hrmni$(line_0(closure$v3, closure$v4, closure$v2, closure$v1));
        $receiver.unaryPlus_1hrmni$(line_0(closure$v4, closure$v1, closure$v3, closure$v2));
      }
      closure$init($receiver);
    };
  }
  function quad_0(v1_0, v2_0, v3_0, v4_0, init) {
    if (init === void 0)
      init = quad$lambda_0;
    return meshData(quad$lambda_1(v1_0, v2_0, v3_0, v4_0, init));
  }
  function circle$lambda($receiver) {
  }
  function circle(radius, segments, init) {
    if (init === void 0)
      init = circle$lambda;
    return oval(radius, radius, segments, init);
  }
  function oval$lambda($receiver) {
  }
  function oval$lambda_0(closure$segments, closure$width, closure$height) {
    return function ($receiver) {
      var tmp$;
      var fill_0 = fillStyle.isVisible;
      var fillPrimitive;
      if (fill_0) {
        fillPrimitive = $receiver.unaryPlus_1hrmni$(meshData());
        fillPrimitive.texture = fillStyle.texture;
        fillPrimitive.pushVertex_1pfdoq$(Vector2.Companion.obtain(), fillStyle);
      }
       else {
        fillPrimitive = null;
      }
      var thetaInc = math_0.PI2 / closure$segments;
      calculateOvalPoint(math_0.PI2 - thetaInc * 3.0, closure$width, closure$height, v4);
      calculateOvalPoint(math_0.PI2 - thetaInc * 2.0, closure$width, closure$height, v3);
      calculateOvalPoint(math_0.PI2 - thetaInc, closure$width, closure$height, v2);
      tmp$ = closure$segments;
      for (var i = 0; i <= tmp$; i++) {
        var theta = i / closure$segments * math_0.PI2;
        calculateOvalPoint(theta, closure$width, closure$height, v1);
        if (fillPrimitive != null) {
          fillPrimitive.pushVertex_1pfdoq$(v1, fillStyle);
          if (i > 0) {
            fillPrimitive.pushIndex_za3lpa$(0);
            fillPrimitive.pushIndex_za3lpa$(i);
            fillPrimitive.pushIndex_za3lpa$(i + 1 | 0);
          }
        }
        if (i > 0) {
          if (lineStyle.isVisible)
            $receiver.unaryPlus_1hrmni$(line_0(v3, v2, v4, v1));
        }
        v4.set_1fv330$(v3);
        v3.set_1fv330$(v2);
        v2.set_1fv330$(v1);
      }
    };
  }
  function oval(width, height, segments, init) {
    if (segments === void 0)
      segments = 180;
    if (init === void 0)
      init = oval$lambda;
    var m = meshData(oval$lambda_0(segments, width, height));
    init(m);
    return m;
  }
  function calculateOvalPoint(theta, width, height, out) {
    out.set_dleff0$((math_0.MathUtils.cos_mx4ult$(theta) + 1.0) * width * 0.5, (math_0.MathUtils.sin_mx4ult$(theta) + 1.0) * height * 0.5);
  }
  function curvedRect$lambda($receiver) {
  }
  function curvedRect$lambda_0(closure$corners, closure$w, closure$h, closure$segments) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      var topLeftX = fitSize(closure$corners.topLeft.x, closure$corners.topRight.x, closure$w);
      var topLeftY = fitSize(closure$corners.topLeft.y, closure$corners.bottomLeft.y, closure$h);
      var topRightX = fitSize(closure$corners.topRight.x, closure$corners.topLeft.x, closure$w);
      var topRightY = fitSize(closure$corners.topRight.y, closure$corners.bottomRight.y, closure$h);
      var bottomRightX = fitSize(closure$corners.bottomRight.x, closure$corners.bottomLeft.x, closure$w);
      var bottomRightY = fitSize(closure$corners.bottomRight.y, closure$corners.topRight.y, closure$h);
      var bottomLeftX = fitSize(closure$corners.bottomLeft.x, closure$corners.bottomRight.x, closure$w);
      var bottomLeftY = fitSize(closure$corners.bottomLeft.y, closure$corners.topLeft.y, closure$h);
      var colorTint = fillStyle.colorTint;
      var closure$w_0 = closure$w;
      var closure$h_0 = closure$h;
      var max_sdesaw$result_7;
      if (Kotlin.compareTo(topLeftX, bottomLeftX) >= 0) {
        max_sdesaw$result_7 = topLeftX;
      }
       else {
        max_sdesaw$result_7 = bottomLeftX;
      }
      var left = max_sdesaw$result_7;
      var max_sdesaw$result_8;
      if (Kotlin.compareTo(topRightX, bottomRightX) >= 0) {
        max_sdesaw$result_8 = topRightX;
      }
       else {
        max_sdesaw$result_8 = bottomRightX;
      }
      var right = closure$w_0 - max_sdesaw$result_8;
      if (right > left) {
        $receiver.pushVertex_g8ktjq$(left, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(right, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(right, closure$h_0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(left, closure$h_0, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (topLeftX > 0.0 || bottomLeftX > 0.0) {
        var max_sdesaw$result;
        if (Kotlin.compareTo(topLeftX, bottomLeftX) >= 0) {
          max_sdesaw$result = topLeftX;
        }
         else {
          max_sdesaw$result = bottomLeftX;
        }
        var leftW = max_sdesaw$result;
        $receiver.pushVertex_g8ktjq$(0.0, topLeftY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(leftW, topLeftY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(leftW, closure$h - bottomLeftY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(0.0, closure$h - bottomLeftY, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (topRightX > 0.0 || bottomRightX > 0.0) {
        var max_sdesaw$result_0;
        if (Kotlin.compareTo(topRightX, bottomRightX) >= 0) {
          max_sdesaw$result_0 = topRightX;
        }
         else {
          max_sdesaw$result_0 = bottomRightX;
        }
        var rightW = max_sdesaw$result_0;
        $receiver.pushVertex_g8ktjq$(closure$w - rightW, topRightY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w, topRightY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w, closure$h - bottomRightY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - rightW, closure$h - bottomRightY, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (topLeftX < bottomLeftX) {
        var anchorX = topLeftX;
        var anchorY = topLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX, 0.0, 0.0, colorTint);
        var max_sdesaw$result_1;
        if (Kotlin.compareTo(topLeftX, bottomLeftX) >= 0) {
          max_sdesaw$result_1 = topLeftX;
        }
         else {
          max_sdesaw$result_1 = bottomLeftX;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_1, 0.0, 0.0, colorTint);
        var max_sdesaw$result_2;
        if (Kotlin.compareTo(topLeftX, bottomLeftX) >= 0) {
          max_sdesaw$result_2 = topLeftX;
        }
         else {
          max_sdesaw$result_2 = bottomLeftX;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_2, anchorY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX, anchorY, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
       else if (topLeftX > bottomLeftX) {
        var anchorX_0 = bottomLeftX;
        var anchorY_0 = closure$h - bottomLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX_0, anchorY_0, 0.0, colorTint);
        var max_sdesaw$result_3;
        if (Kotlin.compareTo(topLeftX, bottomLeftX) >= 0) {
          max_sdesaw$result_3 = topLeftX;
        }
         else {
          max_sdesaw$result_3 = bottomLeftX;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_3, anchorY_0, 0.0, colorTint);
        var max_sdesaw$result_4;
        if (Kotlin.compareTo(topLeftX, bottomLeftX) >= 0) {
          max_sdesaw$result_4 = topLeftX;
        }
         else {
          max_sdesaw$result_4 = bottomLeftX;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_4, closure$h, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX_0, closure$h, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (topRightX < bottomRightX) {
        var tmp$_3 = closure$w;
        var max_sdesaw$result_5;
        if (Kotlin.compareTo(topRightX, bottomRightX) >= 0) {
          max_sdesaw$result_5 = topRightX;
        }
         else {
          max_sdesaw$result_5 = bottomRightX;
        }
        var anchorX_1 = tmp$_3 - max_sdesaw$result_5;
        var anchorY_1 = topRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_1, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - topRightX, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - topRightX, anchorY_1, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX_1, anchorY_1, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
       else if (topRightX > bottomRightX) {
        var tmp$_4 = closure$w;
        var max_sdesaw$result_6;
        if (Kotlin.compareTo(topRightX, bottomRightX) >= 0) {
          max_sdesaw$result_6 = topRightX;
        }
         else {
          max_sdesaw$result_6 = bottomRightX;
        }
        var anchorX_2 = tmp$_4 - max_sdesaw$result_6;
        var anchorY_2 = closure$h - bottomRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_2, anchorY_2, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - bottomRightX, anchorY_2, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - bottomRightX, closure$h, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX_2, closure$h, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (topLeftX > 0.0 && topLeftY > 0.0) {
        var n = $receiver.highestIndex + 1 | 0;
        var anchorX_3 = topLeftX;
        var anchorY_3 = topLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX_3, anchorY_3, 0.0, colorTint);
        tmp$ = closure$segments;
        for (var i = 0; i <= tmp$; i++) {
          var theta = math_0.PI * 0.5 * (i / closure$segments);
          $receiver.pushVertex_g8ktjq$(anchorX_3 - math_0.MathUtils.cos_mx4ult$(theta) * topLeftX, anchorY_3 - math_0.MathUtils.sin_mx4ult$(theta) * topLeftY, 0.0, colorTint);
          if (i > 0) {
            $receiver.pushIndex_za3lpa$(n);
            $receiver.pushIndex_za3lpa$(n + i | 0);
            $receiver.pushIndex_za3lpa$(n + i + 1 | 0);
          }
        }
      }
      if (topRightX > 0.0 && topRightY > 0.0) {
        var n_0 = $receiver.highestIndex + 1 | 0;
        var anchorX_4 = closure$w - topRightX;
        var anchorY_4 = topRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_4, anchorY_4, 0.0, colorTint);
        tmp$_0 = closure$segments;
        for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
          var theta_0 = math_0.PI * 0.5 * (i_0 / closure$segments);
          $receiver.pushVertex_g8ktjq$(anchorX_4 + math_0.MathUtils.cos_mx4ult$(theta_0) * topRightX, anchorY_4 - math_0.MathUtils.sin_mx4ult$(theta_0) * topRightY, 0.0, colorTint);
          if (i_0 > 0) {
            $receiver.pushIndex_za3lpa$(n_0);
            $receiver.pushIndex_za3lpa$(n_0 + i_0 | 0);
            $receiver.pushIndex_za3lpa$(n_0 + i_0 + 1 | 0);
          }
        }
      }
      if (bottomRightX > 0.0 && bottomRightY > 0.0) {
        var n_1 = $receiver.highestIndex + 1 | 0;
        var anchorX_5 = closure$w - bottomRightX;
        var anchorY_5 = closure$h - bottomRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_5, anchorY_5, 0.0, colorTint);
        tmp$_1 = closure$segments;
        for (var i_1 = 0; i_1 <= tmp$_1; i_1++) {
          var theta_1 = math_0.PI * 0.5 * (i_1 / closure$segments);
          $receiver.pushVertex_g8ktjq$(anchorX_5 + math_0.MathUtils.cos_mx4ult$(theta_1) * bottomRightX, anchorY_5 + math_0.MathUtils.sin_mx4ult$(theta_1) * bottomRightY, 0.0, colorTint);
          if (i_1 > 0) {
            $receiver.pushIndex_za3lpa$(n_1);
            $receiver.pushIndex_za3lpa$(n_1 + i_1 | 0);
            $receiver.pushIndex_za3lpa$(n_1 + i_1 + 1 | 0);
          }
        }
      }
      if (bottomLeftX > 0.0 && bottomLeftY > 0.0) {
        var n_2 = $receiver.highestIndex + 1 | 0;
        var anchorX_6 = bottomLeftX;
        var anchorY_6 = closure$h - bottomLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX_6, anchorY_6, 0.0, colorTint);
        tmp$_2 = closure$segments;
        for (var i_2 = 0; i_2 <= tmp$_2; i_2++) {
          var theta_2 = math_0.PI * 0.5 * (i_2 / closure$segments);
          $receiver.pushVertex_g8ktjq$(anchorX_6 - math_0.MathUtils.cos_mx4ult$(theta_2) * bottomLeftX, anchorY_6 + math_0.MathUtils.sin_mx4ult$(theta_2) * bottomLeftY, 0.0, colorTint);
          if (i_2 > 0) {
            $receiver.pushIndex_za3lpa$(n_2);
            $receiver.pushIndex_za3lpa$(n_2 + i_2 | 0);
            $receiver.pushIndex_za3lpa$(n_2 + i_2 + 1 | 0);
          }
        }
      }
    };
  }
  function curvedRect(w, h, corners, segments, init) {
    if (segments === void 0)
      segments = 30;
    if (init === void 0)
      init = curvedRect$lambda;
    var m = meshData(curvedRect$lambda_0(corners, w, h, segments));
    init(m);
    return m;
  }
  function fitSize(value, other, max) {
    var v1_0 = value < 0.0 ? 0.0 : value;
    var v2_0 = other < 0.0 ? 0.0 : other;
    var total = v1_0 + v2_0;
    if (total > max) {
      return v1_0 * max / total;
    }
     else {
      return v1_0;
    }
  }
  var v1_3;
  function cylinder$lambda($receiver) {
  }
  function cylinder$lambda_0(closure$width, closure$height, closure$depth, closure$segments) {
    return function ($receiver) {
      var tmp$;
      var hW = closure$width * 0.5;
      var hH = closure$height * 0.5;
      $receiver.texture = fillStyle.texture;
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(hW, hH, 0.0), fillStyle, Vector3.Companion.NEG_Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(hW, hH, closure$depth), fillStyle, Vector3.Companion.Z);
      var index = 2;
      tmp$ = closure$segments;
      for (var i = 0; i <= tmp$; i++) {
        var theta = i / closure$segments * math_0.PI2;
        var cos = math_0.MathUtils.cos_mx4ult$(theta);
        var sin = math_0.MathUtils.sin_mx4ult$(theta);
        var x = (cos + 1.0) * hW;
        var y = (sin + 1.0) * hH;
        $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(x, y, 0.0), fillStyle, Vector3.Companion.NEG_Z);
        $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(x, y, closure$depth), fillStyle, Vector3.Companion.Z);
        $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(x, y, 0.0), fillStyle, new Vector3(cos, sin));
        $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(x, y, closure$depth), fillStyle, new Vector3(cos, sin));
        index = index + 4 | 0;
        if (i > 0) {
          $receiver.pushIndex_za3lpa$(0);
          $receiver.pushIndex_za3lpa$(index - 8 | 0);
          $receiver.pushIndex_za3lpa$(index - 4 | 0);
          $receiver.pushIndex_za3lpa$(index - 3 | 0);
          $receiver.pushIndex_za3lpa$(index - 7 | 0);
          $receiver.pushIndex_za3lpa$(1);
          $receiver.pushIndex_za3lpa$(index - 1 | 0);
          $receiver.pushIndex_za3lpa$(index - 2 | 0);
          $receiver.pushIndex_za3lpa$(index - 6 | 0);
          $receiver.pushIndex_za3lpa$(index - 6 | 0);
          $receiver.pushIndex_za3lpa$(index - 5 | 0);
          $receiver.pushIndex_za3lpa$(index - 1 | 0);
        }
      }
    };
  }
  function cylinder(width, height, depth, segments, init) {
    if (segments === void 0)
      segments = 180;
    if (init === void 0)
      init = cylinder$lambda;
    var m = meshData(cylinder$lambda_0(width, height, depth, segments));
    init(m);
    return m;
  }
  function box$lambda($receiver) {
  }
  function box$lambda_0(closure$width, closure$height, closure$depth) {
    return function ($receiver) {
      $receiver.texture = fillStyle.texture;
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, 0.0, 0.0), fillStyle, Vector3.Companion.NEG_Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, 0.0, 0.0), fillStyle, Vector3.Companion.NEG_Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, closure$height, 0.0), fillStyle, Vector3.Companion.NEG_Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, closure$height, 0.0), fillStyle, Vector3.Companion.NEG_Z);
      $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, closure$height, 0.0), fillStyle, Vector3.Companion.X);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, 0.0, 0.0), fillStyle, Vector3.Companion.X);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, 0.0, closure$depth), fillStyle, Vector3.Companion.X);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, closure$height, closure$depth), fillStyle, Vector3.Companion.X);
      $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, 0.0, 0.0), fillStyle, Vector3.Companion.NEG_Y);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, 0.0, 0.0), fillStyle, Vector3.Companion.NEG_Y);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, 0.0, closure$depth), fillStyle, Vector3.Companion.NEG_Y);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, 0.0, closure$depth), fillStyle, Vector3.Companion.NEG_Y);
      $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, 0.0, 0.0), fillStyle, Vector3.Companion.NEG_X);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, closure$height, 0.0), fillStyle, Vector3.Companion.NEG_X);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, closure$height, closure$depth), fillStyle, Vector3.Companion.NEG_X);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, 0.0, closure$depth), fillStyle, Vector3.Companion.NEG_X);
      $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, closure$height, 0.0), fillStyle, Vector3.Companion.Y);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, closure$height, 0.0), fillStyle, Vector3.Companion.Y);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, closure$height, closure$depth), fillStyle, Vector3.Companion.Y);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, closure$height, closure$depth), fillStyle, Vector3.Companion.Y);
      $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, closure$height, closure$depth), fillStyle, Vector3.Companion.Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, closure$height, closure$depth), fillStyle, Vector3.Companion.Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(closure$width, 0.0, closure$depth), fillStyle, Vector3.Companion.Z);
      $receiver.pushVertex_obfnaw$(v1_3.set_y2kzbl$(0.0, 0.0, closure$depth), fillStyle, Vector3.Companion.Z);
      $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
    };
  }
  function box(width, height, depth, init) {
    if (init === void 0)
      init = box$lambda;
    var m = meshData(box$lambda_0(width, height, depth));
    init(m);
    return m;
  }
  function StaticMeshComponent(owner) {
    StaticMeshComponent$Companion_getInstance();
    UiComponentImpl.call(this, owner);
    this.intersectionType = MeshIntersectionType$BOUNDING_BOX_getInstance();
    this.glState_m0cv6k$_0 = inject(this, GlState$Companion_getInstance());
    this.gl_m0cv6k$_0 = inject(this, Gl20$Companion_getInstance());
    this.globalBoundingBox_m0cv6k$_0 = new Box();
    this.meshChangedHandler_m0cv6k$_0 = StaticMeshComponent$meshChangedHandler$lambda(this);
    this._mesh_m0cv6k$_0 = null;
    this.validation.addNode_sxjeop$(StaticMeshComponent$Companion_getInstance().GLOBAL_BOUNDING_BOX_0, ValidationFlags_getInstance().CONCATENATED_TRANSFORM, StaticMeshComponent_init$lambda(this));
  }
  Object.defineProperty(StaticMeshComponent.prototype, 'mesh', {
    get: function () {
      return this._mesh_m0cv6k$_0;
    },
    set: function (value) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      (tmp$_0 = (tmp$ = this._mesh_m0cv6k$_0) != null ? tmp$.changed : null) != null ? tmp$_0.remove_trkh7z$(this.meshChangedHandler_m0cv6k$_0) : null;
      if (this.isActive)
        (tmp$_1 = this._mesh_m0cv6k$_0) != null ? tmp$_1.refDec_x1ndp5$(this.gl_m0cv6k$_0) : null;
      this._mesh_m0cv6k$_0 = value;
      if (this.isActive)
        (tmp$_2 = this._mesh_m0cv6k$_0) != null ? tmp$_2.refInc_x1ndp5$(this.gl_m0cv6k$_0) : null;
      (tmp$_4 = (tmp$_3 = this._mesh_m0cv6k$_0) != null ? tmp$_3.changed : null) != null ? tmp$_4.add_trkh7z$(this.meshChangedHandler_m0cv6k$_0) : null;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  StaticMeshComponent.prototype.onActivated = function () {
    var tmp$;
    (tmp$ = this._mesh_m0cv6k$_0) != null ? tmp$.refInc_x1ndp5$(this.gl_m0cv6k$_0) : null;
  };
  StaticMeshComponent.prototype.onDeactivated = function () {
    var tmp$;
    (tmp$ = this._mesh_m0cv6k$_0) != null ? tmp$.refDec_x1ndp5$(this.gl_m0cv6k$_0) : null;
  };
  StaticMeshComponent.prototype.intersectsGlobalRay_94uff6$ = function (globalRay, intersection) {
    var tmp$;
    if (this.mesh == null)
      return false;
    this.validate_za3lpa$(StaticMeshComponent$Companion_getInstance().GLOBAL_BOUNDING_BOX_0);
    if (!this.globalBoundingBox_m0cv6k$_0.intersects_y8xsj$(globalRay, intersection)) {
      return false;
    }
    if (this.intersectionType === MeshIntersectionType$EXACT_getInstance()) {
      this.globalToLocal_ujzndq$(StaticMeshComponent$Companion_getInstance().localRay_0.set_ujzndq$(globalRay));
      if (!((tmp$ = this.mesh) != null ? tmp$ : Kotlin.throwNPE()).intersects_94uff6$(StaticMeshComponent$Companion_getInstance().localRay_0, intersection)) {
        return false;
      }
    }
    return true;
  };
  StaticMeshComponent.prototype.draw = function () {
    var tmp$;
    tmp$ = this.mesh;
    if (tmp$ == null) {
      return;
    }
    var mesh = tmp$;
    this.glState_m0cv6k$_0.camera_9ynqw0$(this.camera, this.concatenatedTransform);
    mesh.render_kmnbvn$(this.gl_m0cv6k$_0, this.glState_m0cv6k$_0);
  };
  StaticMeshComponent.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    out.set_dleff0$(100.0, 100.0);
  };
  StaticMeshComponent.prototype.dispose = function () {
    UiComponentImpl.prototype.dispose.call(this);
    this.mesh = null;
  };
  function StaticMeshComponent$Companion() {
    StaticMeshComponent$Companion_instance = this;
    this.localRay_0 = new Ray();
    this.GLOBAL_BOUNDING_BOX_0 = 1 << 16;
  }
  StaticMeshComponent$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var StaticMeshComponent$Companion_instance = null;
  function StaticMeshComponent$Companion_getInstance() {
    if (StaticMeshComponent$Companion_instance === null) {
      new StaticMeshComponent$Companion();
    }
    return StaticMeshComponent$Companion_instance;
  }
  function StaticMeshComponent$meshChangedHandler$lambda(this$StaticMeshComponent) {
    return function () {
      this$StaticMeshComponent.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      kotlin_0.Unit;
    };
  }
  function StaticMeshComponent_init$lambda(this$StaticMeshComponent) {
    return function () {
      var tmp$;
      if (this$StaticMeshComponent.mesh != null) {
        this$StaticMeshComponent.globalBoundingBox_m0cv6k$_0.set_ujzywt$(((tmp$ = this$StaticMeshComponent.mesh) != null ? tmp$ : Kotlin.throwNPE()).boundingBox).mul_1ktw39$(this$StaticMeshComponent.concatenatedTransform);
      }
       else {
        this$StaticMeshComponent.globalBoundingBox_m0cv6k$_0.inf();
      }
    };
  }
  StaticMeshComponent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StaticMeshComponent',
    interfaces: [UiComponentImpl]
  };
  function staticMeshC$lambda($receiver) {
  }
  function staticMeshC($receiver, init) {
    if (init === void 0)
      init = staticMeshC$lambda;
    var s = new StaticMeshComponent($receiver);
    init(s);
    return s;
  }
  function staticMeshC$lambda_0($receiver) {
  }
  function staticMeshC_0($receiver, mesh, init) {
    if (init === void 0)
      init = staticMeshC$lambda_0;
    var s = new StaticMeshComponent($receiver);
    init(s);
    s.mesh = mesh;
    return s;
  }
  function StaticMesh() {
    StaticMesh$Companion_getInstance();
    this._changed_0 = new Signal0();
    this.vertexAttributes = standardVertexAttributes;
    this.boundingBox = new Box();
    this.indicesBuffer_0 = null;
    this.indices_0 = null;
    this.vertexDataBuffer_0 = null;
    this.vertexData_0 = null;
    this.drawCall_0 = DrawElementsCall$Companion_getInstance().obtain();
    this.drawCalls_0 = arrayListOf([this.drawCall_0]);
    this.refCount_0 = 0;
    this.needsUpload_0 = false;
  }
  Object.defineProperty(StaticMesh.prototype, 'changed', {
    get: function () {
      return this._changed_0;
    }
  });
  StaticMesh.prototype.refInc_x1ndp5$ = function (gl_0) {
    var tmp$;
    if ((tmp$ = this.refCount_0, this.refCount_0 = tmp$ + 1 | 0, tmp$) === 0) {
      this.create_0(gl_0);
    }
  };
  StaticMesh.prototype.refDec_x1ndp5$ = function (gl_0) {
    if ((this.refCount_0 = this.refCount_0 - 1 | 0, this.refCount_0) === 0) {
      this.delete_0(gl_0);
    }
  };
  StaticMesh.prototype.create_0 = function (gl_0) {
    this.indicesBuffer_0 = gl_0.createBuffer();
    this.vertexDataBuffer_0 = gl_0.createBuffer();
  };
  StaticMesh.prototype.delete_0 = function (gl_0) {
    var tmp$, tmp$_0;
    this.needsUpload_0 = true;
    if (this.indicesBuffer_0 != null) {
      gl_0.deleteBuffer_qv4l9y$((tmp$ = this.indicesBuffer_0) != null ? tmp$ : Kotlin.throwNPE());
      this.indicesBuffer_0 = null;
    }
    if (this.vertexDataBuffer_0 != null) {
      gl_0.deleteBuffer_qv4l9y$((tmp$_0 = this.vertexDataBuffer_0) != null ? tmp$_0 : Kotlin.throwNPE());
      this.vertexDataBuffer_0 = null;
    }
  };
  StaticMesh.prototype.buildMesh_1sp366$ = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.gl.component.drawing.StaticMesh.buildMesh_1sp366$', function (inner) {
    _.com.acornui.gl.component.drawing.fillStyle.clear();
    _.com.acornui.gl.component.drawing.lineStyle.clear();
    var meshData_0 = new _.com.acornui.gl.component.drawing.MeshData();
    inner(meshData_0);
    this.feed_qhw80z$(meshData_0);
  });
  StaticMesh.prototype.feed_qhw80z$ = function (meshData_0) {
    var tmp$, tmp$_0, tmp$_1;
    this.needsUpload_0 = true;
    var indicesL = {v: 0};
    var verticesL = {v: 0};
    var tmp$_2, tmp$_3, tmp$_4;
    var openList = Kotlin.isType(tmp$_2 = $module$AcornUtils.com.acornui.collection.cyclicListPool.obtain(), $module$AcornUtils.com.acornui.collection.CyclicList) ? tmp$_2 : Kotlin.throwCCE();
    openList.add_11rb$(meshData_0);
    loop: while (true) {
      if (!!openList.isEmpty())
        break;
      var next = openList.shift();
      indicesL.v = indicesL.v + next.indices.size | 0;
      verticesL.v = verticesL.v + next.vertices.size | 0;
      var treeWalk = TreeWalk$CONTINUE_getInstance();
      if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.HALT))
        break loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.SKIP))
        continue loop;
      else if (Kotlin.equals(treeWalk, _.com.acornui.core.TreeWalk.ISOLATE))
        openList.clear();
      (tmp$_4 = Kotlin.isType(tmp$_3 = next, _.com.acornui.core.Parent) ? tmp$_3 : null) != null ? tmp$_4.iterateChildren_9z398f$(_.com.acornui.core.childWalkLevelOrder$f(openList), false) : null;
    }
    $module$AcornUtils.com.acornui.collection.cyclicListPool.free_11rb$(openList);
    tmp$ = get_lastIndex(this.drawCalls_0);
    for (var i = 0; i <= tmp$; i++) {
      this.drawCalls_0.get_za3lpa$(i).free();
    }
    this.drawCalls_0.clear();
    this.drawCall_0 = DrawElementsCall$Companion_getInstance().obtain();
    this.drawCalls_0.add_11rb$(this.drawCall_0);
    this.indices_0 = BufferFactory$Companion_getInstance().instance.shortBuffer_za3lpa$(indicesL.v);
    this.vertexData_0 = BufferFactory$Companion_getInstance().instance.floatBuffer_za3lpa$(Kotlin.imul(verticesL.v, this.vertexAttributes.vertexSize));
    this.boundingBox.inf();
    this.populateMeshData_0(meshData_0);
    this.boundingBox.update();
    ((tmp$_0 = this.indices_0) != null ? tmp$_0 : Kotlin.throwNPE()).flip();
    ((tmp$_1 = this.vertexData_0) != null ? tmp$_1 : Kotlin.throwNPE()).flip();
    this._changed_0.dispatch();
  };
  function StaticMesh$populateMeshData$lambda(this$StaticMesh) {
    return function (it) {
      this$StaticMesh.populateMeshData_0(it);
      return true;
    };
  }
  StaticMesh.prototype.populateMeshData_0 = function (meshData_0) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    var indices = meshData_0.indices;
    var vertices = meshData_0.vertices;
    if (meshData_0.flushBatch)
      this.nextDrawCall_0();
    if (!indices.isEmpty()) {
      this.checkDrawCall_0(meshData_0.texture, meshData_0.blendMode, false, meshData_0.drawMode);
      tmp$ = this.drawCall_0;
      tmp$.count = tmp$.count + indices.size | 0;
      if (assertionsEnabled) {
        if (meshData_0.drawMode === Gl20$Companion_getInstance().LINES) {
          var value = indices.size % 2 === 0;
          if (_.com.acornui.assertionsEnabled) {
            if (!value) {
              var message = 'indices size ' + indices.size + ' not evenly divisible by 2';
              throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message));
            }
          }
        }
         else if (meshData_0.drawMode === Gl20$Companion_getInstance().TRIANGLES) {
          var value_0 = indices.size % 3 === 0;
          if (_.com.acornui.assertionsEnabled) {
            if (!value_0) {
              var message_0 = 'indices size ' + indices.size + ' not evenly divisible by 3';
              throw new Kotlin.kotlin.Exception('' + Kotlin.toString(message_0));
            }
          }
        }
        _assert(!vertices.isEmpty(), 'Indices pushed with no vertices.');
      }
      var vertexData = (tmp$_0 = this.vertexData_0) != null ? tmp$_0 : Kotlin.throwNPE();
      var n = vertexData.position / this.vertexAttributes.vertexSize | 0;
      tmp$_1 = get_lastIndex(vertices);
      for (var j = 0; j <= tmp$_1; j++) {
        var v = vertices.get_za3lpa$(j);
        this.vertexAttributes.putVertex_4wyewx$(vertexData, v.position, v.normal, v.colorTint, v.u, v.v);
        this.boundingBox.ext_f6e669$(v.position, false);
      }
      tmp$_2 = get_lastIndex(indices);
      for (var j_0 = 0; j_0 <= tmp$_2; j_0++) {
        var index = Kotlin.toShort(n + indices.get_za3lpa$(j_0) | 0);
        ((tmp$_3 = this.indices_0) != null ? tmp$_3 : Kotlin.throwNPE()).put_11rb$(index);
      }
    }
    meshData_0.iterateChildren_bwf5pq$(StaticMesh$populateMeshData$lambda(this));
    if (meshData_0.flushBatch)
      this.nextDrawCall_0();
  };
  StaticMesh.prototype.nextDrawCall_0 = function () {
    var tmp$;
    if (this.drawCall_0.count !== 0) {
      var e = this.drawCall_0.offset + this.drawCall_0.count | 0;
      this.drawCall_0 = new DrawElementsCall();
      tmp$ = this.drawCall_0;
      tmp$.offset = tmp$.offset + e | 0;
      this.drawCalls_0.add_11rb$(this.drawCall_0);
    }
  };
  StaticMesh.prototype.checkDrawCall_0 = function (texture, blendMode, premultipliedAlpha, mode) {
    if (!Kotlin.equals(this.drawCall_0.texture, texture) || !Kotlin.equals(this.drawCall_0.blendMode, blendMode) || !Kotlin.equals(this.drawCall_0.premultipliedAlpha, premultipliedAlpha) || this.drawCall_0.mode !== mode) {
      this.nextDrawCall_0();
      this.drawCall_0.texture = texture;
      this.drawCall_0.blendMode = blendMode;
      this.drawCall_0.premultipliedAlpha = premultipliedAlpha;
      this.drawCall_0.mode = mode;
      return true;
    }
     else {
      return false;
    }
  };
  StaticMesh.prototype.intersects_94uff6$ = function (localRay, intersection) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    tmp$ = this.vertexData_0;
    if (tmp$ == null) {
      return false;
    }
    var vertexData = tmp$;
    tmp$_0 = this.indices_0;
    if (tmp$_0 == null) {
      return false;
    }
    var indices = tmp$_0;
    vertexData.rewind();
    indices.rewind();
    var vertexAttributes = this.vertexAttributes;
    var vertexSize = vertexAttributes.vertexSize;
    tmp$_1 = downTo(get_lastIndex(this.drawCalls_0), 0).iterator();
    while (tmp$_1.hasNext()) {
      var i = tmp$_1.next();
      var drawCall = this.drawCalls_0.get_za3lpa$(i);
      if (drawCall.count !== 0) {
        indices.position = drawCall.offset;
        if (drawCall.mode === Gl20$Companion_getInstance().TRIANGLES) {
          tmp$_2 = step(new IntRange(0, drawCall.count - 1 | 0), 3).iterator();
          while (tmp$_2.hasNext()) {
            var j = tmp$_2.next();
            vertexData.position = indices.get() * vertexSize;
            vertexAttributes.getVertex_63flxo$(vertexData, StaticMesh$Companion_getInstance().v0_0);
            vertexData.position = indices.get() * vertexSize;
            vertexAttributes.getVertex_63flxo$(vertexData, StaticMesh$Companion_getInstance().v1_0);
            vertexData.position = indices.get() * vertexSize;
            vertexAttributes.getVertex_63flxo$(vertexData, StaticMesh$Companion_getInstance().v2_0);
            if (localRay.intersects_fvcu7h$(StaticMesh$Companion_getInstance().v0_0.position, StaticMesh$Companion_getInstance().v1_0.position, StaticMesh$Companion_getInstance().v2_0.position, intersection)) {
              return true;
            }
          }
        }
      }
    }
    return false;
  };
  StaticMesh.prototype.render_kmnbvn$ = function (gl_0, glState) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    if (this.drawCalls_0.isEmpty())
      return;
    tmp$ = this.indices_0;
    if (tmp$ == null) {
      return;
    }
    var indices = tmp$;
    tmp$_0 = this.vertexData_0;
    if (tmp$_0 == null) {
      return;
    }
    var vertexData = tmp$_0;
    gl_0.bindBuffer_gtr22n$(Gl20$Companion_getInstance().ARRAY_BUFFER, this.vertexDataBuffer_0);
    gl_0.bindBuffer_gtr22n$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, this.indicesBuffer_0);
    this.vertexAttributes.bind_ppmkoa$(gl_0, (tmp$_1 = glState.shader) != null ? tmp$_1 : Kotlin.throwNPE());
    if (this.needsUpload_0) {
      this.needsUpload_0 = false;
      indices.rewind();
      gl_0.bufferData_qt1dr2$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, indices.limit << 1, Gl20$Companion_getInstance().DYNAMIC_DRAW);
      gl_0.bufferSubDatasv_ls9hec$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, 0, indices);
      vertexData.rewind();
      gl_0.bufferData_qt1dr2$(Gl20$Companion_getInstance().ARRAY_BUFFER, vertexData.limit << 2, Gl20$Companion_getInstance().DYNAMIC_DRAW);
      gl_0.bufferSubDatafv_fov81g$(Gl20$Companion_getInstance().ARRAY_BUFFER, 0, vertexData);
    }
    tmp$_2 = get_lastIndex(this.drawCalls_0);
    for (var i = 0; i <= tmp$_2; i++) {
      var drawCall = this.drawCalls_0.get_za3lpa$(i);
      if (drawCall.count !== 0) {
        glState.blendMode_rwn2t7$(drawCall.blendMode, drawCall.premultipliedAlpha);
        glState.setTexture_2kg320$((tmp$_3 = drawCall.texture) != null ? tmp$_3 : glState.whitePixel);
        gl_0.drawElements_tjonv8$(drawCall.mode, drawCall.count, Gl20$Companion_getInstance().UNSIGNED_SHORT, drawCall.offset);
      }
    }
    this.vertexAttributes.unbind_ppmkoa$(gl_0, (tmp$_4 = glState.shader) != null ? tmp$_4 : Kotlin.throwNPE());
  };
  function StaticMesh$Companion() {
    StaticMesh$Companion_instance = this;
    this.v0_0 = new Vertex();
    this.v1_0 = new Vertex();
    this.v2_0 = new Vertex();
  }
  StaticMesh$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var StaticMesh$Companion_instance = null;
  function StaticMesh$Companion_getInstance() {
    if (StaticMesh$Companion_instance === null) {
      new StaticMesh$Companion();
    }
    return StaticMesh$Companion_instance;
  }
  StaticMesh.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'StaticMesh',
    interfaces: []
  };
  function DrawElementsCall() {
    DrawElementsCall$Companion_getInstance();
    this.texture = null;
    this.blendMode = BlendMode$Companion_getInstance().NORMAL;
    this.premultipliedAlpha = false;
    this.mode = Gl20$Companion_getInstance().TRIANGLES;
    this.count = 0;
    this.offset = 0;
  }
  DrawElementsCall.prototype.reset = function () {
    this.texture = null;
    this.blendMode = BlendMode$Companion_getInstance().NORMAL;
    this.premultipliedAlpha = false;
    this.mode = Gl20$Companion_getInstance().TRIANGLES;
    this.count = 0;
    this.offset = 0;
  };
  DrawElementsCall.prototype.free = function () {
    this.reset();
    DrawElementsCall$Companion_getInstance().pool_0.free_11rb$(this);
  };
  function DrawElementsCall$Companion() {
    DrawElementsCall$Companion_instance = this;
    this.pool_0 = new ObjectPool(void 0, DrawElementsCall$Companion$pool$lambda);
  }
  DrawElementsCall$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  function DrawElementsCall$Companion$pool$lambda() {
    return new DrawElementsCall();
  }
  DrawElementsCall$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DrawElementsCall$Companion_instance = null;
  function DrawElementsCall$Companion_getInstance() {
    if (DrawElementsCall$Companion_instance === null) {
      new DrawElementsCall$Companion();
    }
    return DrawElementsCall$Companion_instance;
  }
  DrawElementsCall.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DrawElementsCall',
    interfaces: []
  };
  function staticMesh$lambda($receiver) {
  }
  function staticMesh(init) {
    if (init === void 0)
      init = staticMesh$lambda;
    var m = new StaticMesh();
    init(m);
    return m;
  }
  function GlFilter(owner, shader, hasStencil, hasDepth) {
    if (hasStencil === void 0)
      hasStencil = true;
    if (hasDepth === void 0)
      hasDepth = true;
    StackLayoutContainer.call(this, owner);
    this.shader = shader;
    this.hasStencil = hasStencil;
    this.hasDepth = hasDepth;
    this.sizePadding = Pad_init();
    this.maxSize = 1024;
    this.gl_0 = inject(this, Gl20$Companion_getInstance());
    this.glState_0 = inject(this, GlState$Companion_getInstance());
    this.framebuffer_0 = null;
    this.tempTransform_0 = new Matrix4();
    this.sprite_0 = new Sprite();
  }
  GlFilter.prototype.draw = function () {
    this.tempTransform_0.set_1ktw39$(this._concatenatedTransform);
    var tmp$ = this.maxSize;
    var tmp$_0 = math_0.MathUtils;
    var $receiver = this.sizePadding.expandWidth2_mx4ult$(this.width);
    var b = tmp$_0.nextPowerOfTwo_za3lpa$(Math.ceil($receiver));
    var fbWidth = Math.min(tmp$, b);
    var tmp$_1 = this.maxSize;
    var tmp$_2 = math_0.MathUtils;
    var $receiver_0 = this.sizePadding.expandHeight2_mx4ult$(this.height);
    var b_0 = tmp$_2.nextPowerOfTwo_za3lpa$(Math.ceil($receiver_0));
    var fbHeight = Math.min(tmp$_1, b_0);
    var framebuffer = this.framebuffer_0;
    if (framebuffer == null || fbWidth > framebuffer.width || fbHeight > framebuffer.height) {
      this.resizeFramebuffer_0(fbWidth, fbHeight);
    }
    var previousShader = this.glState_0.shader;
    (framebuffer != null ? framebuffer : Kotlin.throwNPE()).begin();
    this.gl_0.clear_za3lpa$(Gl20$Companion_getInstance().COLOR_BUFFER_BIT | Gl20$Companion_getInstance().DEPTH_BUFFER_BIT | Gl20$Companion_getInstance().STENCIL_BUFFER_BIT);
    StackLayoutContainer.prototype.draw.call(this);
    framebuffer.end();
    this.glState_0.shader = this.shader;
    this.sprite_0.texture = framebuffer.texture;
    this.sprite_0.updateWorldVertices_tvyx4l$(this.concatenatedTransform, this.sprite_0.naturalWidth, this.sprite_0.naturalHeight, void 0, void 0, 0.0);
    this.glState_0.camera_9ynqw0$(this.camera);
    this.sprite_0.draw_jqw61q$(this.glState_0, this.concatenatedColorTint);
    this.glState_0.shader = previousShader;
  };
  GlFilter.prototype.resizeFramebuffer_0 = function (width, height) {
    var tmp$;
    (tmp$ = this.framebuffer_0) != null ? tmp$.dispose() : null;
    this.framebuffer_0 = new Framebuffer(this.injector, width, height, this.hasStencil, this.hasDepth);
  };
  GlFilter.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlFilter',
    interfaces: [StackLayoutContainer]
  };
  function GlRect(owner) {
    ContainerImpl.call(this, owner);
    this.style_ei6sb9$_0 = style(this, new BoxStyle());
    this.segments = 40;
    this.fill_ei6sb9$_0 = this.addChild_mxweac$(dynamicMeshC(this));
    this.gradient_ei6sb9$_0 = this.addChild_mxweac$(dynamicMeshC(this));
    this.stroke_ei6sb9$_0 = this.addChild_mxweac$(dynamicMeshC(this));
    this.fill_ei6sb9$_0.interactivityMode = InteractivityMode$NONE_getInstance();
    this.gradient_ei6sb9$_0.interactivityMode = InteractivityMode$NONE_getInstance();
    this.stroke_ei6sb9$_0.interactivityMode = InteractivityMode$NONE_getInstance();
    onChanged(this.style, GlRect_init$lambda(this));
    this.glState_ei6sb9$_0 = inject(this, GlState$Companion_getInstance());
    this.gl_ei6sb9$_0 = inject(this, Gl20$Companion_getInstance());
  }
  Object.defineProperty(GlRect.prototype, 'style', {
    get: function () {
      return this.style_ei6sb9$_0;
    }
  });
  function GlRect$updateLayout$lambda(this$GlRect, closure$topLeftX, closure$bottomLeftX, closure$w, closure$topRightX, closure$bottomRightX, closure$h, closure$topLeftY, closure$bottomLeftY, closure$topRightY, closure$bottomRightY, closure$margin) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      var colorTint = this$GlRect.style.linearGradient == null ? this$GlRect.style.backgroundColor : Color.Companion.WHITE;
      var closure$topLeftX_0 = closure$topLeftX;
      var closure$bottomLeftX_0 = closure$bottomLeftX;
      var closure$w_0 = closure$w;
      var closure$topRightX_0 = closure$topRightX;
      var closure$bottomRightX_0 = closure$bottomRightX;
      var closure$h_0 = closure$h;
      var max_sdesaw$result_7;
      if (Kotlin.compareTo(closure$topLeftX_0, closure$bottomLeftX_0) >= 0) {
        max_sdesaw$result_7 = closure$topLeftX_0;
      }
       else {
        max_sdesaw$result_7 = closure$bottomLeftX_0;
      }
      var left = max_sdesaw$result_7;
      var max_sdesaw$result_8;
      if (Kotlin.compareTo(closure$topRightX_0, closure$bottomRightX_0) >= 0) {
        max_sdesaw$result_8 = closure$topRightX_0;
      }
       else {
        max_sdesaw$result_8 = closure$bottomRightX_0;
      }
      var right = closure$w_0 - max_sdesaw$result_8;
      if (right > left) {
        $receiver.pushVertex_g8ktjq$(left, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(right, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(right, closure$h_0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(left, closure$h_0, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (closure$topLeftX > 0.0 || closure$bottomLeftX > 0.0) {
        var x = closure$topLeftX;
        var y = closure$bottomLeftX;
        var max_sdesaw$result;
        if (Kotlin.compareTo(x, y) >= 0) {
          max_sdesaw$result = x;
        }
         else {
          max_sdesaw$result = y;
        }
        var leftW = max_sdesaw$result;
        $receiver.pushVertex_g8ktjq$(0.0, closure$topLeftY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(leftW, closure$topLeftY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(leftW, closure$h - closure$bottomLeftY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(0.0, closure$h - closure$bottomLeftY, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (closure$topRightX > 0.0 || closure$bottomRightX > 0.0) {
        var x_0 = closure$topRightX;
        var y_0 = closure$bottomRightX;
        var max_sdesaw$result_0;
        if (Kotlin.compareTo(x_0, y_0) >= 0) {
          max_sdesaw$result_0 = x_0;
        }
         else {
          max_sdesaw$result_0 = y_0;
        }
        var rightW = max_sdesaw$result_0;
        $receiver.pushVertex_g8ktjq$(closure$w - rightW, closure$topRightY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w, closure$topRightY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w, closure$h - closure$bottomRightY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - rightW, closure$h - closure$bottomRightY, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (closure$topLeftX < closure$bottomLeftX) {
        var anchorX = closure$topLeftX;
        var anchorY = closure$topLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX, 0.0, 0.0, colorTint);
        var x_1 = closure$topLeftX;
        var y_1 = closure$bottomLeftX;
        var max_sdesaw$result_1;
        if (Kotlin.compareTo(x_1, y_1) >= 0) {
          max_sdesaw$result_1 = x_1;
        }
         else {
          max_sdesaw$result_1 = y_1;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_1, 0.0, 0.0, colorTint);
        var x_2 = closure$topLeftX;
        var y_2 = closure$bottomLeftX;
        var max_sdesaw$result_2;
        if (Kotlin.compareTo(x_2, y_2) >= 0) {
          max_sdesaw$result_2 = x_2;
        }
         else {
          max_sdesaw$result_2 = y_2;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_2, anchorY, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX, anchorY, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
       else if (closure$topLeftX > closure$bottomLeftX) {
        var anchorX_0 = closure$bottomLeftX;
        var anchorY_0 = closure$h - closure$bottomLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX_0, anchorY_0, 0.0, colorTint);
        var x_3 = closure$topLeftX;
        var y_3 = closure$bottomLeftX;
        var max_sdesaw$result_3;
        if (Kotlin.compareTo(x_3, y_3) >= 0) {
          max_sdesaw$result_3 = x_3;
        }
         else {
          max_sdesaw$result_3 = y_3;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_3, anchorY_0, 0.0, colorTint);
        var x_4 = closure$topLeftX;
        var y_4 = closure$bottomLeftX;
        var max_sdesaw$result_4;
        if (Kotlin.compareTo(x_4, y_4) >= 0) {
          max_sdesaw$result_4 = x_4;
        }
         else {
          max_sdesaw$result_4 = y_4;
        }
        $receiver.pushVertex_g8ktjq$(max_sdesaw$result_4, closure$h, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX_0, closure$h, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (closure$topRightX < closure$bottomRightX) {
        var tmp$_3 = closure$w;
        var x_5 = closure$topRightX;
        var y_5 = closure$bottomRightX;
        var max_sdesaw$result_5;
        if (Kotlin.compareTo(x_5, y_5) >= 0) {
          max_sdesaw$result_5 = x_5;
        }
         else {
          max_sdesaw$result_5 = y_5;
        }
        var anchorX_1 = tmp$_3 - max_sdesaw$result_5;
        var anchorY_1 = closure$topRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_1, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - closure$topRightX, 0.0, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - closure$topRightX, anchorY_1, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX_1, anchorY_1, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
       else if (closure$topRightX > closure$bottomRightX) {
        var tmp$_4 = closure$w;
        var x_6 = closure$topRightX;
        var y_6 = closure$bottomRightX;
        var max_sdesaw$result_6;
        if (Kotlin.compareTo(x_6, y_6) >= 0) {
          max_sdesaw$result_6 = x_6;
        }
         else {
          max_sdesaw$result_6 = y_6;
        }
        var anchorX_2 = tmp$_4 - max_sdesaw$result_6;
        var anchorY_2 = closure$h - closure$bottomRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_2, anchorY_2, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - closure$bottomRightX, anchorY_2, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(closure$w - closure$bottomRightX, closure$h, 0.0, colorTint);
        $receiver.pushVertex_g8ktjq$(anchorX_2, closure$h, 0.0, colorTint);
        $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
      }
      if (closure$topLeftX > 0.0 && closure$topLeftY > 0.0) {
        var n = $receiver.highestIndex + 1 | 0;
        var anchorX_3 = closure$topLeftX;
        var anchorY_3 = closure$topLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX_3, anchorY_3, 0.0, colorTint);
        tmp$ = this$GlRect.segments;
        for (var i = 0; i <= tmp$; i++) {
          var theta = math_0.PI * 0.5 * (i / this$GlRect.segments);
          $receiver.pushVertex_g8ktjq$(anchorX_3 - math_0.MathUtils.cos_mx4ult$(theta) * closure$topLeftX, anchorY_3 - math_0.MathUtils.sin_mx4ult$(theta) * closure$topLeftY, 0.0, colorTint);
          if (i > 0) {
            $receiver.pushIndex_za3lpa$(n);
            $receiver.pushIndex_za3lpa$(n + i | 0);
            $receiver.pushIndex_za3lpa$(n + i + 1 | 0);
          }
        }
      }
      if (closure$topRightX > 0.0 && closure$topRightY > 0.0) {
        var n_0 = $receiver.highestIndex + 1 | 0;
        var anchorX_4 = closure$w - closure$topRightX;
        var anchorY_4 = closure$topRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_4, anchorY_4, 0.0, colorTint);
        tmp$_0 = this$GlRect.segments;
        for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
          var theta_0 = math_0.PI * 0.5 * (i_0 / this$GlRect.segments);
          $receiver.pushVertex_g8ktjq$(anchorX_4 + math_0.MathUtils.cos_mx4ult$(theta_0) * closure$topRightX, anchorY_4 - math_0.MathUtils.sin_mx4ult$(theta_0) * closure$topRightY, 0.0, colorTint);
          if (i_0 > 0) {
            $receiver.pushIndex_za3lpa$(n_0);
            $receiver.pushIndex_za3lpa$(n_0 + i_0 + 1 | 0);
            $receiver.pushIndex_za3lpa$(n_0 + i_0 | 0);
          }
        }
      }
      if (closure$bottomRightX > 0.0 && closure$bottomRightY > 0.0) {
        var n_1 = $receiver.highestIndex + 1 | 0;
        var anchorX_5 = closure$w - closure$bottomRightX;
        var anchorY_5 = closure$h - closure$bottomRightY;
        $receiver.pushVertex_g8ktjq$(anchorX_5, anchorY_5, 0.0, colorTint);
        tmp$_1 = this$GlRect.segments;
        for (var i_1 = 0; i_1 <= tmp$_1; i_1++) {
          var theta_1 = math_0.PI * 0.5 * (i_1 / this$GlRect.segments);
          $receiver.pushVertex_g8ktjq$(anchorX_5 + math_0.MathUtils.cos_mx4ult$(theta_1) * closure$bottomRightX, anchorY_5 + math_0.MathUtils.sin_mx4ult$(theta_1) * closure$bottomRightY, 0.0, colorTint);
          if (i_1 > 0) {
            $receiver.pushIndex_za3lpa$(n_1);
            $receiver.pushIndex_za3lpa$(n_1 + i_1 | 0);
            $receiver.pushIndex_za3lpa$(n_1 + i_1 + 1 | 0);
          }
        }
      }
      if (closure$bottomLeftX > 0.0 && closure$bottomLeftY > 0.0) {
        var n_2 = $receiver.highestIndex + 1 | 0;
        var anchorX_6 = closure$bottomLeftX;
        var anchorY_6 = closure$h - closure$bottomLeftY;
        $receiver.pushVertex_g8ktjq$(anchorX_6, anchorY_6, 0.0, colorTint);
        tmp$_2 = this$GlRect.segments;
        for (var i_2 = 0; i_2 <= tmp$_2; i_2++) {
          var theta_2 = math_0.PI * 0.5 * (i_2 / this$GlRect.segments);
          $receiver.pushVertex_g8ktjq$(anchorX_6 - math_0.MathUtils.cos_mx4ult$(theta_2) * closure$bottomLeftX, anchorY_6 + math_0.MathUtils.sin_mx4ult$(theta_2) * closure$bottomLeftY, 0.0, colorTint);
          if (i_2 > 0) {
            $receiver.pushIndex_za3lpa$(n_2);
            $receiver.pushIndex_za3lpa$(n_2 + i_2 + 1 | 0);
            $receiver.pushIndex_za3lpa$(n_2 + i_2 | 0);
          }
        }
      }
      $receiver.trn_y2kzbl$(closure$margin.left, closure$margin.top);
    };
  }
  function GlRect$updateLayout$lambda_0(this$GlRect, closure$h, closure$w, closure$topLeftX, closure$topLeftY, closure$topRightX, closure$topRightY, closure$bottomRightX, closure$bottomRightY, closure$bottomLeftX, closure$bottomLeftY, closure$margin) {
    return function ($receiver) {
      var borderColor = this$GlRect.style.borderColor;
      var border = this$GlRect.style.borderThickness;
      var topBorder = fitSize_0(border.top, border.bottom, closure$h);
      var leftBorder = fitSize_0(border.left, border.right, closure$w);
      var rightBorder = fitSize_0(border.right, border.left, closure$w);
      var bottomBorder = fitSize_0(border.bottom, border.top, closure$h);
      var x = closure$topLeftX;
      var max_sdesaw$result;
      if (Kotlin.compareTo(x, leftBorder) >= 0) {
        max_sdesaw$result = x;
      }
       else {
        max_sdesaw$result = leftBorder;
      }
      var innerTopLeftX = max_sdesaw$result;
      var x_0 = closure$topLeftY;
      var max_sdesaw$result_0;
      if (Kotlin.compareTo(x_0, topBorder) >= 0) {
        max_sdesaw$result_0 = x_0;
      }
       else {
        max_sdesaw$result_0 = topBorder;
      }
      var innerTopLeftY = max_sdesaw$result_0;
      var x_1 = closure$topRightX;
      var max_sdesaw$result_1;
      if (Kotlin.compareTo(x_1, rightBorder) >= 0) {
        max_sdesaw$result_1 = x_1;
      }
       else {
        max_sdesaw$result_1 = rightBorder;
      }
      var innerTopRightX = max_sdesaw$result_1;
      var x_2 = closure$topRightY;
      var max_sdesaw$result_2;
      if (Kotlin.compareTo(x_2, topBorder) >= 0) {
        max_sdesaw$result_2 = x_2;
      }
       else {
        max_sdesaw$result_2 = topBorder;
      }
      var innerTopRightY = max_sdesaw$result_2;
      var x_3 = closure$bottomRightX;
      var max_sdesaw$result_3;
      if (Kotlin.compareTo(x_3, rightBorder) >= 0) {
        max_sdesaw$result_3 = x_3;
      }
       else {
        max_sdesaw$result_3 = rightBorder;
      }
      var innerBottomRightX = max_sdesaw$result_3;
      var x_4 = closure$bottomRightY;
      var max_sdesaw$result_4;
      if (Kotlin.compareTo(x_4, bottomBorder) >= 0) {
        max_sdesaw$result_4 = x_4;
      }
       else {
        max_sdesaw$result_4 = bottomBorder;
      }
      var innerBottomRightY = max_sdesaw$result_4;
      var x_5 = closure$bottomLeftX;
      var max_sdesaw$result_5;
      if (Kotlin.compareTo(x_5, leftBorder) >= 0) {
        max_sdesaw$result_5 = x_5;
      }
       else {
        max_sdesaw$result_5 = leftBorder;
      }
      var innerBottomLeftX = max_sdesaw$result_5;
      var x_6 = closure$bottomLeftY;
      var max_sdesaw$result_6;
      if (Kotlin.compareTo(x_6, bottomBorder) >= 0) {
        max_sdesaw$result_6 = x_6;
      }
       else {
        max_sdesaw$result_6 = bottomBorder;
      }
      var innerBottomLeftY = max_sdesaw$result_6;
      if (topBorder > 0.0) {
        var left = closure$topLeftX;
        var right = closure$w - closure$topRightX;
        if (right > left) {
          $receiver.pushVertex_g8ktjq$(left, 0.0, 0.0, borderColor.top);
          $receiver.pushVertex_g8ktjq$(right, 0.0, 0.0, borderColor.top);
          $receiver.pushVertex_g8ktjq$(closure$w - innerTopRightX, topBorder, 0.0, borderColor.top);
          $receiver.pushVertex_g8ktjq$(innerTopLeftX, topBorder, 0.0, borderColor.top);
          $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
        }
      }
      if (rightBorder > 0.0) {
        var top = closure$topRightY;
        var bottom = closure$h - closure$bottomRightY;
        var right_0 = closure$w;
        if (bottom > top) {
          $receiver.pushVertex_g8ktjq$(right_0, top, 0.0, borderColor.right);
          $receiver.pushVertex_g8ktjq$(right_0, bottom, 0.0, borderColor.right);
          $receiver.pushVertex_g8ktjq$(right_0 - rightBorder, closure$h - innerBottomRightY, 0.0, borderColor.right);
          $receiver.pushVertex_g8ktjq$(right_0 - rightBorder, innerTopRightY, 0.0, borderColor.right);
          $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
        }
      }
      if (bottomBorder > 0.0) {
        var left_0 = closure$bottomLeftX;
        var right_1 = closure$w - closure$bottomRightX;
        var bottom_0 = closure$h;
        if (right_1 > left_0) {
          $receiver.pushVertex_g8ktjq$(right_1, bottom_0, 0.0, borderColor.bottom);
          $receiver.pushVertex_g8ktjq$(left_0, bottom_0, 0.0, borderColor.bottom);
          $receiver.pushVertex_g8ktjq$(innerBottomLeftX, bottom_0 - bottomBorder, 0.0, borderColor.bottom);
          $receiver.pushVertex_g8ktjq$(closure$w - innerBottomRightX, bottom_0 - bottomBorder, 0.0, borderColor.bottom);
          $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
        }
      }
      if (leftBorder > 0.0) {
        var top_0 = closure$topLeftY;
        var bottom_1 = closure$h - closure$bottomLeftY;
        if (bottom_1 > top_0) {
          $receiver.pushVertex_g8ktjq$(0.0, bottom_1, 0.0, borderColor.left);
          $receiver.pushVertex_g8ktjq$(0.0, top_0, 0.0, borderColor.left);
          $receiver.pushVertex_g8ktjq$(leftBorder, innerTopLeftY, 0.0, borderColor.left);
          $receiver.pushVertex_g8ktjq$(leftBorder, closure$h - innerBottomLeftY, 0.0, borderColor.left);
          $receiver.pushIndices_q5rwfd$(QUAD_INDICES);
        }
      }
      this$GlRect.borderCorner_xams5n$_0($receiver, 0.0, closure$topLeftY, closure$topLeftX, 0.0, leftBorder, innerTopLeftY, innerTopLeftX, topBorder, borderColor.left, borderColor.top);
      this$GlRect.borderCorner_xams5n$_0($receiver, closure$w - rightBorder, innerTopRightY, closure$w - innerTopRightX, topBorder, closure$w, closure$topRightY, closure$w - closure$topRightX, 0.0, borderColor.right, borderColor.top);
      this$GlRect.borderCorner_xams5n$_0($receiver, closure$w, closure$h - closure$bottomRightY, closure$w - closure$bottomRightX, closure$h, closure$w - rightBorder, closure$h - innerBottomRightY, closure$w - innerBottomRightX, closure$h - bottomBorder, borderColor.right, borderColor.bottom);
      this$GlRect.borderCorner_xams5n$_0($receiver, leftBorder, closure$h - innerBottomLeftY, innerBottomLeftX, closure$h - bottomBorder, 0.0, closure$h - closure$bottomLeftY, closure$bottomLeftX, closure$h, borderColor.left, borderColor.bottom);
      $receiver.trn_y2kzbl$(closure$margin.left, closure$margin.top);
    };
  }
  function GlRect$updateLayout$lambda_1(closure$linearGradient, closure$w, closure$h, closure$margin) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      var tmp$_1;
      var tmp$_2, tmp$_3;
      var tmp$_4;
      var angle = closure$linearGradient.getAngle_dleff0$(closure$w, closure$h) - math_0.PI * 0.5;
      var a = math_0.MathUtils.cos_mx4ult$(angle) * closure$w;
      var b = math_0.MathUtils.sin_mx4ult$(angle) * closure$h;
      var len = (a < 0.0 ? -a : a) + (b < 0.0 ? -b : b);
      var v = closure$w * closure$w + closure$h * closure$h;
      var thickness = Math.sqrt(v);
      var pixel = 0.0;
      var n = 2;
      $receiver.pushVertex_g8ktjq$(0.0, 0.0, 0.0, closure$linearGradient.colorStops.get_za3lpa$(0).color);
      $receiver.pushVertex_g8ktjq$(0.0, thickness, 0.0, closure$linearGradient.colorStops.get_za3lpa$(0).color);
      var numColorStops = closure$linearGradient.colorStops.size;
      tmp$ = numColorStops - 1 | 0;
      for (var i = 0; i <= tmp$; i++) {
        var colorStop = closure$linearGradient.colorStops.get_za3lpa$(i);
        if (colorStop.percent != null) {
          math_0.MathUtils;
          var x = pixel;
          var y = ((tmp$_0 = colorStop.percent) != null ? tmp$_0 : Kotlin.throwNPE()) * len;
          var max_sdesaw$result;
          if (Kotlin.compareTo(x, y) >= 0) {
            max_sdesaw$result = x;
          }
           else {
            max_sdesaw$result = y;
          }
          pixel = max_sdesaw$result;
        }
         else if (colorStop.pixels != null) {
          math_0.MathUtils;
          var x_0 = pixel;
          var y_0 = (tmp$_1 = colorStop.pixels) != null ? tmp$_1 : Kotlin.throwNPE();
          var max_sdesaw$result_0;
          if (Kotlin.compareTo(x_0, y_0) >= 0) {
            max_sdesaw$result_0 = x_0;
          }
           else {
            max_sdesaw$result_0 = y_0;
          }
          pixel = max_sdesaw$result_0;
        }
         else if (i === (numColorStops - 1 | 0)) {
          pixel = len;
        }
         else if (i > 0) {
          var nextKnownPixel = len;
          var nextKnownJ = numColorStops - 1 | 0;
          tmp$_2 = get_lastIndex(closure$linearGradient.colorStops);
          for (var j = i + 1 | 0; j <= tmp$_2; j++) {
            var jColorStop = closure$linearGradient.colorStops.get_za3lpa$(j);
            if (jColorStop.percent != null) {
              nextKnownJ = j;
              math_0.MathUtils;
              var x_1 = pixel;
              var y_1 = ((tmp$_3 = jColorStop.percent) != null ? tmp$_3 : Kotlin.throwNPE()) * len;
              var max_sdesaw$result_1;
              if (Kotlin.compareTo(x_1, y_1) >= 0) {
                max_sdesaw$result_1 = x_1;
              }
               else {
                max_sdesaw$result_1 = y_1;
              }
              nextKnownPixel = max_sdesaw$result_1;
              break;
            }
             else if (jColorStop.pixels != null) {
              nextKnownJ = j;
              math_0.MathUtils;
              var x_2 = pixel;
              var y_2 = (tmp$_4 = jColorStop.pixels) != null ? tmp$_4 : Kotlin.throwNPE();
              var max_sdesaw$result_2;
              if (Kotlin.compareTo(x_2, y_2) >= 0) {
                max_sdesaw$result_2 = x_2;
              }
               else {
                max_sdesaw$result_2 = y_2;
              }
              nextKnownPixel = max_sdesaw$result_2;
              break;
            }
          }
          pixel += (nextKnownPixel - pixel) / (1.0 + nextKnownJ - i);
        }
        if (pixel > 0.0) {
          $receiver.pushVertex_g8ktjq$(pixel, 0.0, 0.0, colorStop.color);
          $receiver.pushVertex_g8ktjq$(pixel, thickness, 0.0, colorStop.color);
          if (i > 0) {
            $receiver.pushIndex_za3lpa$(n);
            $receiver.pushIndex_za3lpa$(n + 1 | 0);
            $receiver.pushIndex_za3lpa$(n - 1 | 0);
            $receiver.pushIndex_za3lpa$(n - 1 | 0);
            $receiver.pushIndex_za3lpa$(n - 2 | 0);
            $receiver.pushIndex_za3lpa$(n);
          }
          n = n + 2 | 0;
        }
      }
      if (pixel < len) {
        var lastColor = last(closure$linearGradient.colorStops).color;
        $receiver.pushVertex_g8ktjq$(len, 0.0, 0.0, lastColor);
        $receiver.pushVertex_g8ktjq$(len, thickness, 0.0, lastColor);
        $receiver.pushIndex_za3lpa$(n);
        $receiver.pushIndex_za3lpa$(n + 1 | 0);
        $receiver.pushIndex_za3lpa$(n - 1 | 0);
        $receiver.pushIndex_za3lpa$(n - 1 | 0);
        $receiver.pushIndex_za3lpa$(n - 2 | 0);
        $receiver.pushIndex_za3lpa$(n);
      }
      transform($receiver, new Vector3(closure$margin.left + closure$w * 0.5, closure$margin.top + closure$h * 0.5), void 0, new Vector3(void 0, void 0, angle), new Vector3(len * 0.5, thickness * 0.5));
    };
  }
  GlRect.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    var margin = this.style.margin;
    var w = (explicitWidth != null ? explicitWidth : 0.0) - margin.right - margin.left;
    var h = (explicitHeight != null ? explicitHeight : 0.0) - margin.top - margin.bottom;
    if (w <= 0.0 || h <= 0.0) {
      this.fill_ei6sb9$_0.clear();
      this.stroke_ei6sb9$_0.clear();
      return;
    }
    var corners = this.style.borderRadius;
    var topLeftX = fitSize_0(corners.topLeft.x, corners.topRight.x, w);
    var topLeftY = fitSize_0(corners.topLeft.y, corners.bottomLeft.y, h);
    var topRightX = fitSize_0(corners.topRight.x, corners.topLeft.x, w);
    var topRightY = fitSize_0(corners.topRight.y, corners.bottomRight.y, h);
    var bottomRightX = fitSize_0(corners.bottomRight.x, corners.bottomLeft.x, w);
    var bottomRightY = fitSize_0(corners.bottomRight.y, corners.topRight.y, h);
    var bottomLeftX = fitSize_0(corners.bottomLeft.x, corners.bottomRight.x, w);
    var bottomLeftY = fitSize_0(corners.bottomLeft.y, corners.topLeft.y, h);
    this.fill_ei6sb9$_0.buildMesh_1sp366$(GlRect$updateLayout$lambda(this, topLeftX, bottomLeftX, w, topRightX, bottomRightX, h, topLeftY, bottomLeftY, topRightY, bottomRightY, margin));
    this.stroke_ei6sb9$_0.buildMesh_1sp366$(GlRect$updateLayout$lambda_0(this, h, w, topLeftX, topLeftY, topRightX, topRightY, bottomRightX, bottomRightY, bottomLeftX, bottomLeftY, margin));
    this.gradient_ei6sb9$_0.clear();
    if (this.style.linearGradient != null) {
      var linearGradient = (tmp$ = this.style.linearGradient) != null ? tmp$ : Kotlin.throwNPE();
      this.gradient_ei6sb9$_0.buildMesh_1sp366$(GlRect$updateLayout$lambda_1(linearGradient, w, h, margin));
    }
  };
  GlRect.prototype.borderCorner_xams5n$_0 = function ($receiver, outerX1, outerY1, outerX2, outerY2, innerX1, innerY1, innerX2, innerY2, color1, color2) {
    var tmp$;
    var outerW = outerX2 - outerX1;
    var outerH = outerY2 - outerY1;
    var innerW = innerX2 - innerX1;
    var innerH = innerY2 - innerY1;
    if (outerW !== 0.0 || outerH !== 0.0 || innerW !== 0.0 || innerH !== 0.0) {
      var n = $receiver.highestIndex + 1 | 0;
      tmp$ = this.segments;
      for (var i = 0; i <= tmp$; i++) {
        var theta = math_0.PI * 0.5 * (i / this.segments);
        var color_3 = i < this.segments >> 1 ? color1 : color2;
        $receiver.pushVertex_g8ktjq$(outerX2 - math_0.MathUtils.cos_mx4ult$(theta) * outerW, outerY1 + math_0.MathUtils.sin_mx4ult$(theta) * outerH, 0.0, color_3);
        $receiver.pushVertex_g8ktjq$(innerX2 - math_0.MathUtils.cos_mx4ult$(theta) * innerW, innerY1 + math_0.MathUtils.sin_mx4ult$(theta) * innerH, 0.0, color_3);
        if (i > 0) {
          $receiver.pushIndex_za3lpa$(n);
          $receiver.pushIndex_za3lpa$(n + 1 | 0);
          $receiver.pushIndex_za3lpa$(n - 1 | 0);
          $receiver.pushIndex_za3lpa$(n - 1 | 0);
          $receiver.pushIndex_za3lpa$(n - 2 | 0);
          $receiver.pushIndex_za3lpa$(n);
        }
        n = n + 2 | 0;
      }
    }
  };
  GlRect.prototype.draw = function () {
    if (this.style.linearGradient != null) {
      var $this = StencilUtil_getInstance();
      var batch_0 = this.glState_ei6sb9$_0.batch;
      var gl_0 = this.gl_ei6sb9$_0;
      batch_0.flush_6taknv$(true);
      $this.depth = $this.depth + 1 | 0;
      if ($this.depth >= 65535)
        throw new Kotlin.kotlin.IllegalStateException('There may not be more than 65535 nested masks.');
      if ($this.depth === 0) {
        gl_0.enable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.STENCIL_TEST);
      }
      gl_0.colorMask_nyyhg$(false, false, false, false);
      gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.ALWAYS, 0, ~0);
      gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.INCR, _.com.acornui.gl.core.Gl20.Companion.INCR, _.com.acornui.gl.core.Gl20.Companion.INCR);
      this.fill_ei6sb9$_0.render();
      batch_0.flush_6taknv$(true);
      gl_0.colorMask_nyyhg$(true, true, true, true);
      gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.EQUAL, $this.depth + 1 | 0, ~0);
      gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP);
      this.gradient_ei6sb9$_0.render();
      this.stroke_ei6sb9$_0.render();
      batch_0.flush_6taknv$(true);
      gl_0.colorMask_nyyhg$(false, false, false, false);
      gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.ALWAYS, 0, ~0);
      gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.DECR, _.com.acornui.gl.core.Gl20.Companion.DECR, _.com.acornui.gl.core.Gl20.Companion.DECR);
      this.fill_ei6sb9$_0.render();
      batch_0.flush_6taknv$(true);
      gl_0.colorMask_nyyhg$(true, true, true, true);
      gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.EQUAL, $this.depth, ~0);
      gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP);
      if ($this.depth === 0) {
        gl_0.disable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.STENCIL_TEST);
      }
      $this.depth = $this.depth - 1 | 0;
    }
     else {
      ContainerImpl.prototype.draw.call(this);
    }
  };
  function GlRect_init$lambda(this$GlRect) {
    return function (it) {
      this$GlRect.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  GlRect.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlRect',
    interfaces: [Rect, ContainerImpl]
  };
  function fitSize_0(value, other, max) {
    var v1_0 = value < 0.0 ? 0.0 : value;
    var v2_0 = other < 0.0 ? 0.0 : other;
    var total = v1_0 + v2_0;
    if (total > max) {
      return v1_0 * max / total;
    }
     else {
      return v1_0;
    }
  }
  function GlScrollArea(owner) {
    ElementContainerImpl.call(this, owner);
    this.style_230nr3$_0 = style(this, new ScrollAreaStyle());
    this.scrollRect_230nr3$_0 = scrollRect(this);
    this.contents_230nr3$_0 = this.scrollRect_230nr3$_0.addElement_mxweac$(stack(this));
    this.layoutAlgorithm_230nr3$_0 = this.contents_230nr3$_0.layoutAlgorithm;
    this.hScrollBar_230nr3$_0 = new HScrollBar(this);
    this.vScrollBar_230nr3$_0 = new VScrollBar(this);
    this.corner_230nr3$_0 = null;
    this._tossScrolling_230nr3$_0 = false;
    this.hScrollPolicy$delegate = validationProp(this, ScrollPolicy$AUTO_getInstance(), ValidationFlags_getInstance().LAYOUT);
    this.vScrollPolicy$delegate = validationProp(this, ScrollPolicy$AUTO_getInstance(), ValidationFlags_getInstance().LAYOUT);
    this.wheelHandler_230nr3$_0 = GlScrollArea$wheelHandler$lambda(this);
    this.tossScroller_230nr3$_0 = null;
    this.tossBinding_230nr3$_0 = null;
    this.scrollChangedHandler_230nr3$_0 = GlScrollArea$scrollChangedHandler$lambda(this);
    addTag(this, ScrollArea$Companion_getInstance());
    this.validation.addNode_sxjeop$(ScrollArea$Companion_getInstance().SCROLLING, ValidationFlags_getInstance().LAYOUT, Kotlin.getCallableRef('validateScroll', function ($receiver) {
      return $receiver.validateScroll();
    }.bind(null, this)));
    this.hScrollBar_230nr3$_0.includeInLayout = false;
    this.vScrollBar_230nr3$_0.includeInLayout = false;
    addTag(this.hScrollBar_230nr3$_0, ScrollArea$Companion_getInstance().HBAR_STYLE);
    addTag(this.vScrollBar_230nr3$_0, ScrollArea$Companion_getInstance().VBAR_STYLE);
    wheel(this.scrollRect_230nr3$_0).add_trkh7z$(this.wheelHandler_230nr3$_0);
    this.addChild_mxweac$(this.scrollRect_230nr3$_0);
    this.addChild_mxweac$(this.hScrollBar_230nr3$_0);
    this.addChild_mxweac$(this.vScrollBar_230nr3$_0);
    this.hScrollModel.changed.add_trkh7z$(this.scrollChangedHandler_230nr3$_0);
    this.vScrollModel.changed.add_trkh7z$(this.scrollChangedHandler_230nr3$_0);
    onChanged(this.style, GlScrollArea_init$lambda(this));
  }
  Object.defineProperty(GlScrollArea.prototype, 'style', {
    get: function () {
      return this.style_230nr3$_0;
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'layoutAlgorithm', {
    get: function () {
      return this.layoutAlgorithm_230nr3$_0;
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'hScrollModel', {
    get: function () {
      return this.hScrollBar_230nr3$_0.scrollModel;
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'vScrollModel', {
    get: function () {
      return this.vScrollBar_230nr3$_0.scrollModel;
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'hScrollPolicy', {
    get: function () {
      return this.hScrollPolicy$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('hScrollPolicy'));
    },
    set: function (hScrollPolicy) {
      this.hScrollPolicy$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('hScrollPolicy'), hScrollPolicy);
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'vScrollPolicy', {
    get: function () {
      return this.vScrollPolicy$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('vScrollPolicy'));
    },
    set: function (vScrollPolicy) {
      this.vScrollPolicy$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('vScrollPolicy'), vScrollPolicy);
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'tossScrolling', {
    get: function () {
      return this._tossScrolling_230nr3$_0;
    },
    set: function (value) {
      var tmp$, tmp$_0, tmp$_1;
      if (Kotlin.equals(this._tossScrolling_230nr3$_0, value))
        return;
      this._tossScrolling_230nr3$_0 = value;
      if (value) {
        this.tossScroller_230nr3$_0 = new TossScroller(this);
        this.tossBinding_230nr3$_0 = new TossScrollModelBinding((tmp$ = this.tossScroller_230nr3$_0) != null ? tmp$ : Kotlin.throwNPE(), this.hScrollModel, this.vScrollModel);
      }
       else {
        (tmp$_0 = this.tossScroller_230nr3$_0) != null ? tmp$_0.dispose() : null;
        this.tossScroller_230nr3$_0 = null;
        (tmp$_1 = this.tossBinding_230nr3$_0) != null ? tmp$_1.dispose() : null;
        this.tossBinding_230nr3$_0 = null;
      }
    }
  });
  GlScrollArea.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.contents_230nr3$_0.addElement_3i6itm$(index, element);
  };
  GlScrollArea.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.contents_230nr3$_0.removeElement_erfg6z$(element);
  };
  GlScrollArea.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.contents_230nr3$_0.swapElements_tu2188$(elementA, elementB);
  };
  Object.defineProperty(GlScrollArea.prototype, 'contentsWidth', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      return this.scrollRect_230nr3$_0.contentsWidth;
    }
  });
  Object.defineProperty(GlScrollArea.prototype, 'contentsHeight', {
    get: function () {
      this.validate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
      return this.scrollRect_230nr3$_0.contentsHeight;
    }
  });
  GlScrollArea.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10;
    var requireHScrolling = this.hScrollPolicy === ScrollPolicy$ON_getInstance() && explicitWidth != null;
    var allowHScrolling = this.hScrollPolicy !== ScrollPolicy$OFF_getInstance() && explicitWidth != null;
    var requireVScrolling = this.vScrollPolicy === ScrollPolicy$ON_getInstance() && explicitHeight != null;
    var allowVScrolling = this.vScrollPolicy !== ScrollPolicy$OFF_getInstance() && explicitHeight != null;
    if (!(requireHScrolling || requireVScrolling)) {
      this.scrollRect_230nr3$_0.setSize_yxjqmk$(explicitWidth, explicitHeight);
    }
    var needsHScrollBar = allowHScrolling && (requireHScrolling || this.scrollRect_230nr3$_0.contentsWidth > (explicitWidth != null ? explicitWidth : Kotlin.throwNPE()));
    var needsVScrollBar = allowVScrolling && (requireVScrolling || this.scrollRect_230nr3$_0.contentsHeight > (explicitHeight != null ? explicitHeight : Kotlin.throwNPE()));
    var vScrollBarW = (tmp$ = this.vScrollBar_230nr3$_0.minWidth) != null ? tmp$ : 0.0;
    var hScrollBarH = (tmp$_0 = this.hScrollBar_230nr3$_0.minHeight) != null ? tmp$_0 : 0.0;
    if (needsHScrollBar && needsVScrollBar) {
      this.scrollRect_230nr3$_0.setSize_yxjqmk$((explicitWidth != null ? explicitWidth : Kotlin.throwNPE()) - vScrollBarW, (explicitHeight != null ? explicitHeight : Kotlin.throwNPE()) - hScrollBarH);
    }
     else if (needsHScrollBar) {
      this.scrollRect_230nr3$_0.setSize_yxjqmk$(explicitWidth, explicitHeight == null ? null : explicitHeight - hScrollBarH);
      needsVScrollBar = (allowVScrolling && (requireVScrolling || this.scrollRect_230nr3$_0.contentsHeight > ((tmp$_1 = this.scrollRect_230nr3$_0.explicitHeight) != null ? tmp$_1 : Kotlin.throwNPE())));
      if (needsVScrollBar) {
        this.scrollRect_230nr3$_0.setSize_yxjqmk$((explicitWidth != null ? explicitWidth : Kotlin.throwNPE()) - vScrollBarW, (explicitHeight != null ? explicitHeight : Kotlin.throwNPE()) - hScrollBarH);
      }
    }
     else if (needsVScrollBar) {
      this.scrollRect_230nr3$_0.setSize_yxjqmk$(explicitWidth == null ? null : explicitWidth - vScrollBarW, explicitHeight);
      needsHScrollBar = (allowHScrolling && (requireHScrolling || this.scrollRect_230nr3$_0.contentsWidth > ((tmp$_2 = this.scrollRect_230nr3$_0.explicitWidth) != null ? tmp$_2 : Kotlin.throwNPE())));
      if (needsHScrollBar) {
        this.scrollRect_230nr3$_0.setSize_yxjqmk$((explicitWidth != null ? explicitWidth : Kotlin.throwNPE()) - vScrollBarW, (explicitHeight != null ? explicitHeight : Kotlin.throwNPE()) - hScrollBarH);
      }
    }
    var maskedW = (tmp$_3 = this.scrollRect_230nr3$_0.explicitWidth) != null ? tmp$_3 : this.scrollRect_230nr3$_0.contentsWidth;
    var maskedH = (tmp$_4 = this.scrollRect_230nr3$_0.explicitHeight) != null ? tmp$_4 : this.scrollRect_230nr3$_0.contentsHeight;
    this.scrollRect_230nr3$_0.maskSize_dleff0$(maskedW, maskedH);
    var vScrollBarW2 = needsVScrollBar ? vScrollBarW : 0.0;
    var hScrollBarH2 = needsHScrollBar ? hScrollBarH : 0.0;
    out.set_dleff0$(explicitWidth != null ? explicitWidth : this.scrollRect_230nr3$_0.contentsWidth + vScrollBarW2, explicitHeight != null ? explicitHeight : this.scrollRect_230nr3$_0.contentsHeight + hScrollBarH2);
    if (needsHScrollBar) {
      this.hScrollBar_230nr3$_0.visible = true;
      this.hScrollBar_230nr3$_0.setSize_yxjqmk$((explicitWidth != null ? explicitWidth : Kotlin.throwNPE()) - vScrollBarW2, hScrollBarH);
      this.hScrollBar_230nr3$_0.moveTo_y2kzbl$(0.0, out.height - hScrollBarH);
      tmp$_6 = this.hScrollBar_230nr3$_0;
      var b = ((tmp$_5 = this.hScrollBar_230nr3$_0.explicitWidth) != null ? tmp$_5 : Kotlin.throwNPE()) / this.hScrollBar_230nr3$_0.width;
      tmp$_6.setScaling_y2kzbl$(Math.min(1.0, b), 1.0);
    }
     else {
      this.hScrollBar_230nr3$_0.visible = false;
    }
    if (needsVScrollBar) {
      this.vScrollBar_230nr3$_0.visible = true;
      this.vScrollBar_230nr3$_0.setSize_yxjqmk$(vScrollBarW, (explicitHeight != null ? explicitHeight : Kotlin.throwNPE()) - hScrollBarH2);
      this.vScrollBar_230nr3$_0.moveTo_y2kzbl$(out.width - vScrollBarW, 0.0);
      tmp$_8 = this.vScrollBar_230nr3$_0;
      var b_0 = ((tmp$_7 = this.vScrollBar_230nr3$_0.explicitHeight) != null ? tmp$_7 : Kotlin.throwNPE()) / this.vScrollBar_230nr3$_0.height;
      tmp$_8.setScaling_y2kzbl$(1.0, Math.min(1.0, b_0));
    }
     else {
      this.vScrollBar_230nr3$_0.visible = false;
    }
    var corner = (tmp$_9 = this.corner_230nr3$_0) != null ? tmp$_9 : Kotlin.throwNPE();
    if (needsHScrollBar && needsVScrollBar) {
      corner.setSize_yxjqmk$(vScrollBarW, hScrollBarH);
      corner.moveTo_y2kzbl$((explicitWidth != null ? explicitWidth : Kotlin.throwNPE()) - vScrollBarW, (explicitHeight != null ? explicitHeight : Kotlin.throwNPE()) - hScrollBarH);
      corner.visible = true;
    }
     else {
      corner.visible = false;
    }
    var tmp$_11 = this.hScrollModel;
    var b_1 = this.scrollRect_230nr3$_0.contentsWidth - maskedW;
    tmp$_11.max = Math.max(0.0, b_1);
    var tmp$_12 = this.vScrollModel;
    var b_2 = this.scrollRect_230nr3$_0.contentsHeight - maskedH;
    tmp$_12.max = Math.max(0.0, b_2);
    (tmp$_10 = this.scrollRect_230nr3$_0.getAttachment_pgxeca$(TossScroller$Companion_getInstance())) != null ? (tmp$_10.enabled = needsHScrollBar || needsVScrollBar) : null;
  };
  GlScrollArea.prototype.validateScroll = function () {
    this.scrollRect_230nr3$_0.scrollTo_dleff0$((this.hScrollModel.value | 0) * this.hScrollBar_230nr3$_0.modelToPixels, (this.vScrollModel.value | 0) * this.vScrollBar_230nr3$_0.modelToPixels);
  };
  GlScrollArea.prototype.dispose = function () {
    ElementContainerImpl.prototype.dispose.call(this);
    this.hScrollModel.changed.remove_trkh7z$(this.scrollChangedHandler_230nr3$_0);
    this.vScrollModel.changed.remove_trkh7z$(this.scrollChangedHandler_230nr3$_0);
    this.tossScrolling = false;
  };
  function GlScrollArea$wheelHandler$lambda(this$GlScrollArea) {
    return function (event) {
      this$GlScrollArea.vScrollModel.value = this$GlScrollArea.vScrollModel.value + event.deltaY;
      this$GlScrollArea.hScrollModel.value = this$GlScrollArea.hScrollModel.value + event.deltaX;
    };
  }
  function GlScrollArea$scrollChangedHandler$lambda(this$GlScrollArea) {
    return function (scrollModel) {
      this$GlScrollArea.invalidate_za3lpa$(ScrollArea$Companion_getInstance().SCROLLING);
      kotlin_0.Unit;
    };
  }
  function GlScrollArea_init$lambda(this$GlScrollArea) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1;
      this$GlScrollArea.scrollRect_230nr3$_0.borderRadius = it.borderRadius;
      this$GlScrollArea.dispose_erfg6z$(this$GlScrollArea.corner_230nr3$_0);
      this$GlScrollArea.corner_230nr3$_0 = it.corner(this$GlScrollArea);
      tmp$_0 = (tmp$ = this$GlScrollArea.corner_230nr3$_0) != null ? tmp$ : Kotlin.throwNPE();
      tmp$_1 = this$GlScrollArea.vScrollBar_230nr3$_0;
      this$GlScrollArea.addChildAfter_tu2188$(tmp$_0, tmp$_1);
    };
  }
  GlScrollArea.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlScrollArea',
    interfaces: [ScrollArea, ElementContainerImpl]
  };
  function GlStageImpl(owner) {
    ElementContainerImpl.call(this, owner);
    this.style_uwohzx$_0 = style(this, new StageStyle());
    this.gl_uwohzx$_0 = inject(this, Gl20$Companion_getInstance());
    this.glState_uwohzx$_0 = inject(this, GlState$Companion_getInstance());
    this.focus_uwohzx$_0 = inject(this, FocusManager$Companion_getInstance());
    this.focusOrder_uwohzx$_0 = 0.0;
    this.highlight_uwohzx$_0 = null;
    addTag(this, Stage$Companion_getInstance());
    this.interactivity.init_k58t2y$(this);
    this.focus_uwohzx$_0.init_63o2dx$(this);
    onChanged(this.style, GlStageImpl_init$lambda(this));
    this.windowResizedHandler_uwohzx$_0 = GlStageImpl$windowResizedHandler$lambda(this);
  }
  Object.defineProperty(GlStageImpl.prototype, 'style', {
    get: function () {
      return this.style_uwohzx$_0;
    }
  });
  Object.defineProperty(GlStageImpl.prototype, 'focusEnabled', {
    get: function () {
      return true;
    },
    set: function (value) {
      throw new Exception('The stage must be focusable');
    }
  });
  Object.defineProperty(GlStageImpl.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_uwohzx$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_uwohzx$_0 = focusOrder;
    }
  });
  Object.defineProperty(GlStageImpl.prototype, 'highlight', {
    get: function () {
      return this.highlight_uwohzx$_0;
    },
    set: function (highlight) {
      this.highlight_uwohzx$_0 = highlight;
    }
  });
  Object.defineProperty(GlStageImpl.prototype, 'windowResizedHandler', {
    get: function () {
      return this.windowResizedHandler_uwohzx$_0;
    }
  });
  GlStageImpl.prototype.onActivated = function () {
    this.window.sizeChanged.add_trkh7z$(this.windowResizedHandler);
    this.windowResizedHandler(this.window.getWidth(), this.window.getHeight(), false);
    ElementContainerImpl.prototype.onActivated.call(this);
  };
  GlStageImpl.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var w = this.window.getWidth();
    var h = this.window.getHeight();
    var tmp$;
    tmp$ = Kotlin.kotlin.collections.get_lastIndex_55thoc$(this.elements);
    for (var i = 0; i <= tmp$; i++) {
      this.elements.get_za3lpa$(i).setSize_yxjqmk$(w, h);
    }
    out.set_dleff0$(w, h);
  };
  GlStageImpl.prototype.intersectsGlobalRay_94uff6$ = function (globalRay, intersection) {
    this.validate();
    return true;
  };
  GlStageImpl.prototype.render = function () {
    this.glState_uwohzx$_0.batch.beginFrame();
    ElementContainerImpl.prototype.render.call(this);
    this.glState_uwohzx$_0.batch.endFrame();
  };
  GlStageImpl.prototype.onDeactivated = function () {
    ElementContainerImpl.prototype.onDeactivated.call(this);
    this.window.sizeChanged.remove_trkh7z$(this.windowResizedHandler);
  };
  function GlStageImpl_init$lambda(this$GlStageImpl) {
    return function (it) {
      this$GlStageImpl.window.clearColor = it.backgroundColor;
    };
  }
  function GlStageImpl$windowResizedHandler$lambda(this$GlStageImpl) {
    return function (newWidth, newHeight, isUserInteraction) {
      this$GlStageImpl.gl_uwohzx$_0.viewport_tjonv8$(0, 0, newWidth | 0, newHeight | 0);
      this$GlStageImpl.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    };
  }
  GlStageImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlStageImpl',
    interfaces: [ElementContainerImpl, Stage, FocusContainer, Focusable]
  };
  function GlTextureComponent(owner) {
    UiComponentImpl.call(this, owner);
    this.glState_m2rmc7$_0 = inject(this, GlState$Companion_getInstance());
    this.textureBinding = assetBinding(this, AssetTypes_getInstance().TEXTURE, GlTextureComponent$textureBinding$lambda(this));
    this.sprite = new Sprite();
    this.validation.addNode_sxjeop$(1 << 16, ValidationFlags_getInstance().LAYOUT | ValidationFlags_getInstance().TRANSFORM | ValidationFlags_getInstance().CONCATENATED_TRANSFORM, GlTextureComponent_init$lambda(this));
  }
  Object.defineProperty(GlTextureComponent.prototype, 'path', {
    get: function () {
      return this.textureBinding.path;
    },
    set: function (value) {
      this.textureBinding.path = value;
    }
  });
  Object.defineProperty(GlTextureComponent.prototype, 'texture', {
    get: function () {
      return this.sprite.texture;
    },
    set: function (value) {
      this.textureBinding.clear();
      this._setTexture_mz86ne$(value);
    }
  });
  GlTextureComponent.prototype._setTexture_mz86ne$ = function (value) {
    var tmp$;
    if (Kotlin.equals(this.sprite.texture, value))
      return;
    var oldTexture = this.sprite.texture;
    if (this.isActive) {
      oldTexture != null ? oldTexture.refDec() : null;
    }
    this.sprite.texture = value;
    if (this.isActive) {
      (tmp$ = this.sprite.texture) != null ? tmp$.refInc() : null;
    }
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  Object.defineProperty(GlTextureComponent.prototype, 'isRotated', {
    get: function () {
      return this.sprite.isRotated;
    },
    set: function (value) {
      if (Kotlin.equals(this.sprite.isRotated, value))
        return;
      this.sprite.isRotated = value;
      this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
    }
  });
  Object.defineProperty(GlTextureComponent.prototype, 'blendMode', {
    get: function () {
      return this.sprite.blendMode;
    },
    set: function (value) {
      if (Kotlin.equals(this.sprite.blendMode, value))
        return;
      this.sprite.blendMode = value;
      this.window.requestRender();
    }
  });
  GlTextureComponent.prototype.onActivated = function () {
    var tmp$;
    UiComponentImpl.prototype.onActivated.call(this);
    (tmp$ = this.sprite.texture) != null ? tmp$.refInc() : null;
  };
  GlTextureComponent.prototype.onDeactivated = function () {
    var tmp$;
    UiComponentImpl.prototype.onDeactivated.call(this);
    (tmp$ = this.sprite.texture) != null ? tmp$.refDec() : null;
  };
  GlTextureComponent.prototype.setUV_7b5o5w$ = function (u, v, u2, v2_0) {
    this.sprite.setUv_7b5o5w$(u, v, u2, v2_0);
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  GlTextureComponent.prototype.setRegion_7b5o5w$ = function (x, y, width, height) {
    this.sprite.setRegion_7b5o5w$(x, y, width, height);
    this.invalidate_za3lpa$(ValidationFlags_getInstance().LAYOUT);
  };
  GlTextureComponent.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    this.sprite.updateUv();
    out.width = explicitWidth != null ? explicitWidth : this.sprite.naturalWidth;
    out.height = explicitHeight != null ? explicitHeight : this.sprite.naturalHeight;
  };
  GlTextureComponent.prototype.validateVertices_m2rmc7$_0 = function () {
    this.sprite.updateWorldVertices_tvyx4l$(this.concatenatedTransform, this.width, this.height, void 0, void 0, 0.0);
  };
  GlTextureComponent.prototype.draw = function () {
    this.glState_m2rmc7$_0.camera_9ynqw0$(this.camera);
    this.sprite.draw_jqw61q$(this.glState_m2rmc7$_0, this.concatenatedColorTint);
  };
  GlTextureComponent.prototype.dispose = function () {
    UiComponentImpl.prototype.dispose.call(this);
    this.texture = null;
  };
  function GlTextureComponent$textureBinding$lambda(this$GlTextureComponent) {
    return function (texture) {
      this$GlTextureComponent._setTexture_mz86ne$(texture);
    };
  }
  function GlTextureComponent_init$lambda(this$GlTextureComponent) {
    return function () {
      this$GlTextureComponent.validateVertices_m2rmc7$_0();
    };
  }
  GlTextureComponent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlTextureComponent',
    interfaces: [TextureComponent, UiComponentImpl]
  };
  function GlTextureComponent_init(owner, path, $this) {
    $this = $this || Object.create(GlTextureComponent.prototype);
    GlTextureComponent.call($this, owner);
    $this.path = path;
    return $this;
  }
  function GlTextureComponent_init_0(owner, texture, $this) {
    $this = $this || Object.create(GlTextureComponent.prototype);
    GlTextureComponent.call($this, owner);
    $this.texture = texture;
    return $this;
  }
  function StencilUtil() {
    StencilUtil_instance = this;
    this.depth = -1;
  }
  StencilUtil.prototype.mask_jl956q$ = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.gl.component.StencilUtil.mask_jl956q$', function (batch_0, gl_0, renderMask, renderContents) {
    batch_0.flush_6taknv$(true);
    this.depth = this.depth + 1 | 0;
    if (this.depth >= 65535)
      throw new Kotlin.kotlin.IllegalStateException('There may not be more than 65535 nested masks.');
    if (this.depth === 0) {
      gl_0.enable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.STENCIL_TEST);
    }
    gl_0.colorMask_nyyhg$(false, false, false, false);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.ALWAYS, 0, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.INCR, _.com.acornui.gl.core.Gl20.Companion.INCR, _.com.acornui.gl.core.Gl20.Companion.INCR);
    renderMask();
    batch_0.flush_6taknv$(true);
    gl_0.colorMask_nyyhg$(true, true, true, true);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.EQUAL, this.depth + 1 | 0, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP);
    renderContents();
    batch_0.flush_6taknv$(true);
    gl_0.colorMask_nyyhg$(false, false, false, false);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.ALWAYS, 0, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.DECR, _.com.acornui.gl.core.Gl20.Companion.DECR, _.com.acornui.gl.core.Gl20.Companion.DECR);
    renderMask();
    batch_0.flush_6taknv$(true);
    gl_0.colorMask_nyyhg$(true, true, true, true);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.EQUAL, this.depth, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP);
    if (this.depth === 0) {
      gl_0.disable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.STENCIL_TEST);
    }
    this.depth = this.depth - 1 | 0;
  });
  StencilUtil.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'StencilUtil',
    interfaces: []
  };
  var StencilUtil_instance = null;
  function StencilUtil_getInstance() {
    if (StencilUtil_instance === null) {
      new StencilUtil();
    }
    return StencilUtil_instance;
  }
  function GlScrollRect(owner) {
    ElementContainerImpl.call(this, owner);
    this.contents_0 = this.addChild_mxweac$(container(this));
    this.maskClip_0 = this.addChild_mxweac$(rect(this));
    this.borderRadius$delegate = validationProp(this, new Corners(), ValidationFlags_getInstance().LAYOUT);
    this._maskBounds_0 = new Bounds();
    this.gl_0 = inject(this, Gl20$Companion_getInstance());
    this.glState_0 = inject(this, GlState$Companion_getInstance());
    this.maskClip_0.interactivityMode = InteractivityMode$NONE_getInstance();
    this.maskClip_0.includeInLayout = false;
    this.maskSize_dleff0$(100.0, 100.0);
    this._contentBounds_0 = new Rectangle();
  }
  Object.defineProperty(GlScrollRect.prototype, 'borderRadius', {
    get: function () {
      return this.borderRadius$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('borderRadius'));
    },
    set: function (borderRadius) {
      this.borderRadius$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('borderRadius'), borderRadius);
    }
  });
  Object.defineProperty(GlScrollRect.prototype, 'contentBounds', {
    get: function () {
      this._contentBounds_0.set_7b5o5w$(this.contents_0.x, this.contents_0.y, this.contents_0.width, this.contents_0.height);
      return this._contentBounds_0;
    }
  });
  GlScrollRect.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.contents_0.addElement_3i6itm$(index, element);
  };
  GlScrollRect.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.contents_0.removeElement_erfg6z$(element);
  };
  GlScrollRect.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.contents_0.swapElements_tu2188$(elementA, elementB);
  };
  GlScrollRect.prototype.scrollTo_dleff0$ = function (x, y) {
    this.contents_0.setPosition_y2kzbl$(-x, -y);
  };
  Object.defineProperty(GlScrollRect.prototype, 'maskBounds', {
    get: function () {
      return this._maskBounds_0;
    }
  });
  GlScrollRect.prototype.maskSize_dleff0$ = function (width, height) {
    if (this._maskBounds_0.width === width && this._maskBounds_0.height === height)
      return;
    this._maskBounds_0.set_dleff0$(width, height);
    invalidateLayout(this);
  };
  GlScrollRect.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    ElementContainerImpl.prototype.updateLayout_64u75x$.call(this, explicitWidth, explicitHeight, out);
    var borderRadius = this.borderRadius;
    if (borderRadius.isEmpty()) {
      this.maskClip_0.style.borderRadius.set_avuye$(borderRadius);
      this.maskClip_0.setSize_yxjqmk$(1.0, 1.0);
      this.maskClip_0.setScaling_y2kzbl$(this._maskBounds_0.width, this._maskBounds_0.height);
    }
     else {
      this.maskClip_0.style.borderRadius.set_avuye$(borderRadius);
      this.maskClip_0.setSize_yxjqmk$(this._maskBounds_0.width, this._maskBounds_0.height);
      this.maskClip_0.setScaling_y2kzbl$(1.0, 1.0);
    }
    out.set_i12l7q$(this._maskBounds_0);
  };
  GlScrollRect.prototype.intersectsGlobalRay_94uff6$ = function (globalRay, intersection) {
    return this.maskClip_0.intersectsGlobalRay_94uff6$(globalRay, intersection);
  };
  GlScrollRect.prototype.draw = function () {
    var $this = StencilUtil_getInstance();
    var batch_0 = this.glState_0.batch;
    var gl_0 = this.gl_0;
    batch_0.flush_6taknv$(true);
    $this.depth = $this.depth + 1 | 0;
    if ($this.depth >= 65535)
      throw new Kotlin.kotlin.IllegalStateException('There may not be more than 65535 nested masks.');
    if ($this.depth === 0) {
      gl_0.enable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.STENCIL_TEST);
    }
    gl_0.colorMask_nyyhg$(false, false, false, false);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.ALWAYS, 0, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.INCR, _.com.acornui.gl.core.Gl20.Companion.INCR, _.com.acornui.gl.core.Gl20.Companion.INCR);
    this.maskClip_0.render();
    batch_0.flush_6taknv$(true);
    gl_0.colorMask_nyyhg$(true, true, true, true);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.EQUAL, $this.depth + 1 | 0, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP);
    var tmp$;
    tmp$ = Kotlin.kotlin.collections.get_lastIndex_55thoc$(this.elements);
    for (var i = 0; i <= tmp$; i++) {
      this.elements.get_za3lpa$(i).render();
    }
    batch_0.flush_6taknv$(true);
    gl_0.colorMask_nyyhg$(false, false, false, false);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.ALWAYS, 0, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.DECR, _.com.acornui.gl.core.Gl20.Companion.DECR, _.com.acornui.gl.core.Gl20.Companion.DECR);
    this.maskClip_0.render();
    batch_0.flush_6taknv$(true);
    gl_0.colorMask_nyyhg$(true, true, true, true);
    gl_0.stencilFunc_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.EQUAL, $this.depth, ~0);
    gl_0.stencilOp_qt1dr2$(_.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP, _.com.acornui.gl.core.Gl20.Companion.KEEP);
    if ($this.depth === 0) {
      gl_0.disable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.STENCIL_TEST);
    }
    $this.depth = $this.depth - 1 | 0;
  };
  GlScrollRect.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlScrollRect',
    interfaces: [ScrollRect, ElementContainerImpl]
  };
  var scissorLocal = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.gl.component.scissorLocal_p6ohwc$', function ($receiver, inner) {
    var width = $receiver.width / $receiver.scaleX;
    var height = $receiver.height / $receiver.scaleY;
    var tmp = $module$AcornUtils.com.acornui.math.Vector3.Companion.obtain();
    $receiver.localToWindow_9wm29k$(tmp.set_y2kzbl$(0.0, 0.0, 0.0));
    var sX1 = tmp.x;
    var sY1 = tmp.y;
    $receiver.localToWindow_9wm29k$(tmp.set_y2kzbl$(width, height, 0.0));
    var sX2 = tmp.x;
    var sY2 = tmp.y;
    tmp.free();
    var gl_0 = _.com.acornui.core.di.inject_y3a68v$($receiver, _.com.acornui.gl.core.Gl20.Companion);
    var window_0 = _.com.acornui.core.di.inject_y3a68v$($receiver, _.com.acornui.core.graphics.Window.Companion);
    gl_0.enable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.SCISSOR_TEST);
    var min_sdesaw$result;
    if (Kotlin.compareTo(sX1, sX2) <= 0) {
      min_sdesaw$result = sX1;
    }
     else {
      min_sdesaw$result = sX2;
    }
    var tmp$ = min_sdesaw$result;
    var tmp$_0 = window_0.getHeight();
    var max_sdesaw$result;
    if (Kotlin.compareTo(sY1, sY2) >= 0) {
      max_sdesaw$result = sY1;
    }
     else {
      max_sdesaw$result = sY2;
    }
    var value = sX2 - sX1;
    var value_0 = sY2 - sY1;
    _.com.acornui.gl.core.scissor_5ntqyk$(gl_0, tmp$, tmp$_0 - max_sdesaw$result, value < 0.0 ? -value : value, value_0 < 0.0 ? -value_0 : value_0);
    inner();
    gl_0.disable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.SCISSOR_TEST);
  });
  var scissorLocal_0 = Kotlin.defineInlineFunction('AcornUiCore.com.acornui.gl.component.scissorLocal_ihgxuk$', function ($receiver, x, y, width, height, inner) {
    var tmp = $module$AcornUtils.com.acornui.math.Vector3.Companion.obtain();
    $receiver.localToWindow_9wm29k$(tmp.set_y2kzbl$(x, y, 0.0));
    var sX1 = tmp.x;
    var sY1 = tmp.y;
    $receiver.localToWindow_9wm29k$(tmp.set_y2kzbl$(width, height, 0.0));
    var sX2 = tmp.x;
    var sY2 = tmp.y;
    tmp.free();
    var gl_0 = _.com.acornui.core.di.inject_y3a68v$($receiver, _.com.acornui.gl.core.Gl20.Companion);
    var window_0 = _.com.acornui.core.di.inject_y3a68v$($receiver, _.com.acornui.core.graphics.Window.Companion);
    gl_0.enable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.SCISSOR_TEST);
    var min_sdesaw$result;
    if (Kotlin.compareTo(sX1, sX2) <= 0) {
      min_sdesaw$result = sX1;
    }
     else {
      min_sdesaw$result = sX2;
    }
    var tmp$ = min_sdesaw$result;
    var tmp$_0 = window_0.getHeight();
    var max_sdesaw$result;
    if (Kotlin.compareTo(sY1, sY2) >= 0) {
      max_sdesaw$result = sY1;
    }
     else {
      max_sdesaw$result = sY2;
    }
    var value = sX2 - sX1;
    var value_0 = sY2 - sY1;
    _.com.acornui.gl.core.scissor_5ntqyk$(gl_0, tmp$, tmp$_0 - max_sdesaw$result, value < 0.0 ? -value : value, value_0 < 0.0 ? -value_0 : value_0);
    inner();
    gl_0.disable_za3lpa$(_.com.acornui.gl.core.Gl20.Companion.SCISSOR_TEST);
  });
  function Sprite() {
    this.texture = null;
    this.blendMode = BlendMode$Companion_getInstance().NORMAL;
    this.isRotated = false;
    this.premultipliedAlpha = false;
    this.region_0 = [0.0, 0.0, 1.0, 1.0];
    this.isUv_0 = true;
    this.normal_0 = new Vector3();
    this.u_0 = 0.0;
    this.v_0 = 0.0;
    this.u2_0 = 0.0;
    this.v2_0 = 0.0;
    this.vertexPoints_0 = [new Vector3(), new Vector3(), new Vector3(), new Vector3()];
    this.width_0 = 0.0;
    this.height_0 = 0.0;
  }
  Sprite.prototype.setUv_7b5o5w$ = function (u, v, u2, v2_0) {
    this.region_0[0] = u;
    this.region_0[1] = v;
    this.region_0[2] = u2;
    this.region_0[3] = v2_0;
    this.isUv_0 = true;
  };
  Sprite.prototype.setRegion_o5do7t$ = function (bounds) {
    this.setRegion_7b5o5w$(bounds.x, bounds.y, bounds.width, bounds.height);
  };
  Sprite.prototype.setRegion_smhrz9$ = function (bounds) {
    this.setRegion_7b5o5w$(bounds.x, bounds.y, bounds.width, bounds.height);
  };
  Sprite.prototype.setRegion_7b5o5w$ = function (x, y, width, height) {
    this.region_0[0] = x;
    this.region_0[1] = y;
    this.region_0[2] = width + x;
    this.region_0[3] = height + y;
    this.isUv_0 = false;
  };
  Object.defineProperty(Sprite.prototype, 'naturalWidth', {
    get: function () {
      var tmp$;
      tmp$ = this.texture;
      if (tmp$ == null) {
        return 0.0;
      }
      var t = tmp$;
      if (this.isRotated) {
        var value = this.v2_0 - this.v_0;
        return t.height() * (value < 0.0 ? -value : value);
      }
       else {
        var value_0 = this.u2_0 - this.u_0;
        return t.width() * (value_0 < 0.0 ? -value_0 : value_0);
      }
    }
  });
  Object.defineProperty(Sprite.prototype, 'naturalHeight', {
    get: function () {
      var tmp$;
      tmp$ = this.texture;
      if (tmp$ == null) {
        return 0.0;
      }
      var t = tmp$;
      if (this.isRotated) {
        var value = this.u2_0 - this.u_0;
        return t.width() * (value < 0.0 ? -value : value);
      }
       else {
        var value_0 = this.v2_0 - this.v_0;
        return t.height() * (value_0 < 0.0 ? -value_0 : value_0);
      }
    }
  });
  Sprite.prototype.updateUv = function () {
    var tmp$;
    tmp$ = this.texture;
    if (tmp$ == null) {
      return;
    }
    var t = tmp$;
    if (this.isUv_0) {
      this.u_0 = this.region_0[0];
      this.v_0 = this.region_0[1];
      this.u2_0 = this.region_0[2];
      this.v2_0 = this.region_0[3];
    }
     else {
      this.u_0 = this.region_0[0] / t.width();
      this.v_0 = this.region_0[1] / t.height();
      this.u2_0 = this.region_0[2] / t.width();
      this.v2_0 = this.region_0[3] / t.height();
    }
  };
  Sprite.prototype.updateWorldVertices_tvyx4l$ = function (worldTransform, width, height, x, y, z, rotation, originX, originY) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (z === void 0)
      z = 0.0;
    if (rotation === void 0)
      rotation = 0.0;
    if (originX === void 0)
      originX = 0.0;
    if (originY === void 0)
      originY = 0.0;
    this.width_0 = width;
    this.height_0 = height;
    var aX;
    var aY;
    var bX;
    var bY;
    if (rotation === 0.0) {
      aX = x - originX;
      aY = y - originY;
      bX = x + width - originX;
      bY = y + height - originY;
    }
     else {
      var cos = math_0.MathUtils.cos_mx4ult$(rotation);
      var sin = math_0.MathUtils.sin_mx4ult$(rotation);
      aX = cos * -originX - sin * -originY + x;
      aY = sin * -originX + cos * -originY + y;
      bX = cos * (-originX + width) - sin * -originY + x;
      bY = sin * (-originX + width) + cos * (-originY + height) + y;
    }
    worldTransform.prj_9wm29k$(this.vertexPoints_0[0].set_y2kzbl$(aX, aY, z));
    worldTransform.prj_9wm29k$(this.vertexPoints_0[1].set_y2kzbl$(bX, aY, z));
    worldTransform.prj_9wm29k$(this.vertexPoints_0[2].set_y2kzbl$(bX, bY, z));
    worldTransform.prj_9wm29k$(this.vertexPoints_0[3].set_y2kzbl$(aX, bY, z));
    worldTransform.rot_9wm29k$(this.normal_0.set_1fv2cb$(Vector3.Companion.NEG_Z)).nor();
  };
  Sprite.prototype.draw_jqw61q$ = function (glState, colorTint) {
    var batch_0 = glState.batch;
    if (this.texture == null || colorTint.a <= 0.0 || this.width_0 === 0.0 || this.height_0 === 0.0)
      return;
    glState.setTexture_2kg320$(this.texture);
    glState.blendMode_rwn2t7$(this.blendMode, this.premultipliedAlpha);
    batch_0.begin_za3lpa$();
    if (this.isRotated) {
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[0], this.normal_0, colorTint, this.u2_0, this.v_0);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[1], this.normal_0, colorTint, this.u2_0, this.v2_0);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[2], this.normal_0, colorTint, this.u_0, this.v2_0);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[3], this.normal_0, colorTint, this.u_0, this.v_0);
    }
     else {
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[0], this.normal_0, colorTint, this.u_0, this.v_0);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[1], this.normal_0, colorTint, this.u2_0, this.v_0);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[2], this.normal_0, colorTint, this.u2_0, this.v2_0);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[3], this.normal_0, colorTint, this.u_0, this.v2_0);
    }
    pushQuadIndices(batch_0);
  };
  Sprite.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Sprite',
    interfaces: []
  };
  function AngelCodeParser() {
    AngelCodeParser_instance = this;
    this.CHAR_MAX_VALUE_0 = 65535;
  }
  function AngelCodeParser$parse$lambda(closure$parser, this$AngelCodeParser) {
    return function (it) {
      this$AngelCodeParser.nextLine_0(closure$parser);
      if (!closure$parser.consumeString_ivxn3r$('page'))
        throw new Exception('Missing page definition.');
      var id = this$AngelCodeParser.parseIntProp_0(closure$parser, 'id');
      var fileName = this$AngelCodeParser.parseQuotedStringProp_0(closure$parser, 'file');
      var imagePath = replace2_0(fileName, 92, 47);
      return new BitmapFontPageData(id, imagePath);
    };
  }
  AngelCodeParser.prototype.parse_61zpoe$ = function (str) {
    var tmp$;
    var parser = new StringParser(str);
    parser.white();
    parser.consumeString_ivxn3r$('info');
    var face = this.parseQuotedStringProp_0(parser, 'face');
    var value = this.parseIntProp_0(parser, 'size');
    var size = value < 0.0 ? -value : value;
    var isBold = this.parseBoolProp_0(parser, 'bold');
    var isItalic = this.parseBoolProp_0(parser, 'italic');
    this.nextLine_0(parser);
    parser.consumeString_ivxn3r$('common');
    var lineHeight = this.parseIntProp_0(parser, 'lineHeight');
    var baseLine = this.parseIntProp_0(parser, 'base');
    var pageW = this.parseIntProp_0(parser, 'scaleW');
    var pageH = this.parseIntProp_0(parser, 'scaleH');
    var totalPages = this.parseIntProp_0(parser, 'pages');
    var pages = Kotlin.newArrayF(totalPages, AngelCodeParser$parse$lambda(parser, this));
    this.nextLine_0(parser);
    if (!parser.consumeString_ivxn3r$('chars'))
      throw new Exception('Expected chars block');
    var glyphs = HashMap_init();
    while (true) {
      this.nextLine_0(parser);
      if (!parser.consumeString_ivxn3r$('char'))
        break;
      var ch = Kotlin.unboxChar(Kotlin.toChar(this.parseIntProp_0(parser, 'id')));
      if (Kotlin.unboxChar(ch) > Kotlin.unboxChar(this.CHAR_MAX_VALUE_0))
        continue;
      var regionX = this.parseIntProp_0(parser, 'x');
      var regionY = this.parseIntProp_0(parser, 'y');
      var regionW = this.parseIntProp_0(parser, 'width');
      var regionH = this.parseIntProp_0(parser, 'height');
      var offsetX = this.parseIntProp_0(parser, 'xoffset');
      var offsetY = this.parseIntProp_0(parser, 'yoffset');
      var xAdvance = this.parseIntProp_0(parser, 'xadvance');
      var page = this.parseIntProp_0(parser, 'page');
      var key = Kotlin.toBoxedChar(ch);
      var value_0 = new GlyphData(Kotlin.unboxChar(ch), new IntRectangle(regionX, regionY, regionW, regionH), offsetX, offsetY, xAdvance, page);
      glyphs.put_xwzc9p$(key, value_0);
    }
    parser.consumeString_ivxn3r$('kernings');
    while (true) {
      this.nextLine_0(parser);
      if (!parser.consumeString_ivxn3r$('kerning'))
        break;
      var first_0 = this.parseIntProp_0(parser, 'first');
      var second = this.parseIntProp_0(parser, 'second');
      if (first_0 < 0 || second < 0)
        continue;
      var amount = this.parseFloatProp_0(parser, 'amount');
      if (glyphs.containsKey_11rb$(Kotlin.toBoxedChar(Kotlin.toChar(first_0)))) {
        var glyph = (tmp$ = glyphs.get_11rb$(Kotlin.toBoxedChar(Kotlin.toChar(first_0)))) != null ? tmp$ : Kotlin.throwNPE();
        glyph.setKerning_y8frqg$(Kotlin.unboxChar(Kotlin.toChar(second)), amount);
      }
    }
    this.addMissingCommonGlyphs_0(glyphs);
    return new BitmapFontData(new FontStyle(face, size, isBold, isItalic), toList(pages), glyphs, lineHeight, baseLine, pageW, pageH);
  };
  AngelCodeParser.prototype.addMissingCommonGlyphs_0 = function ($receiver) {
    var space = $receiver.get_11rb$(Kotlin.toBoxedChar(32));
    if (space == null) {
      var copy_0 = $receiver.get_11rb$(Kotlin.toBoxedChar(110));
      if (copy_0 == null)
        copy_0 = firstOrNull_1($receiver.values);
      if (copy_0 == null)
        return;
      space = new GlyphData(32, void 0, void 0, void 0, copy_0.advanceX);
      var key = Kotlin.toBoxedChar(32);
      var value = space;
      $receiver.put_xwzc9p$(key, value);
    }
    if ($receiver.get_11rb$(Kotlin.toBoxedChar(9)) == null) {
      var key_0 = Kotlin.toBoxedChar(9);
      var value_0 = new GlyphData(9);
      $receiver.put_xwzc9p$(key_0, value_0);
    }
    if ($receiver.get_11rb$(Kotlin.toBoxedChar(10)) == null) {
      var key_1 = Kotlin.toBoxedChar(10);
      var value_1 = new GlyphData(10);
      $receiver.put_xwzc9p$(key_1, value_1);
    }
    var nbspChar = 65533;
    if ($receiver.get_11rb$(Kotlin.toBoxedChar(nbspChar)) == null) {
      var key_2 = Kotlin.toBoxedChar(nbspChar);
      var value_2 = new GlyphData(Kotlin.unboxChar(nbspChar), void 0, void 0, void 0, space.advanceX);
      $receiver.put_xwzc9p$(key_2, value_2);
    }
  };
  AngelCodeParser.prototype.nextLine_0 = function (parser) {
    var found = parser.consumeThrough_s8itvh$(10);
    if (found)
      parser.white();
    return found;
  };
  AngelCodeParser.prototype.parseFloatProp_0 = function (parser, property) {
    var tmp$;
    this.consumeProperty_0(parser, property);
    return (tmp$ = parser.getFloat()) != null ? tmp$ : Kotlin.throwNPE();
  };
  AngelCodeParser.prototype.parseBoolProp_0 = function (parser, property) {
    var tmp$;
    this.consumeProperty_0(parser, property);
    return (tmp$ = parser.getBoolean()) != null ? tmp$ : Kotlin.throwNPE();
  };
  AngelCodeParser.prototype.parseIntProp_0 = function (parser, property) {
    var tmp$;
    this.consumeProperty_0(parser, property);
    return (tmp$ = parser.getInt()) != null ? tmp$ : Kotlin.throwNPE();
  };
  AngelCodeParser.prototype.parseQuotedStringProp_0 = function (parser, property) {
    var tmp$;
    this.consumeProperty_0(parser, property);
    return (tmp$ = parser.getQuotedString()) != null ? tmp$ : Kotlin.throwNPE();
  };
  AngelCodeParser.prototype.consumeProperty_0 = function (parser, property, required) {
    if (required === void 0)
      required = true;
    parser.white();
    var found = parser.consumeString_ivxn3r$(property);
    if (!found) {
      if (required) {
        var tmp$ = 'Property not found: ' + property + ' at: ';
        var tmp$_0 = parser.data;
        var tmp$_1 = parser.position;
        var a = parser.length;
        var b = parser.position + 20 | 0;
        var endIndex = Math.min(a, b);
        throw new Exception(tmp$ + tmp$_0.substring(tmp$_1, endIndex));
      }
       else
        return false;
    }
    parser.white();
    parser.consumeChar_s8itvh$(61);
    parser.white();
    return true;
  };
  AngelCodeParser.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'AngelCodeParser',
    interfaces: []
  };
  var AngelCodeParser_instance = null;
  function AngelCodeParser_getInstance() {
    if (AngelCodeParser_instance === null) {
      new AngelCodeParser();
    }
    return AngelCodeParser_instance;
  }
  function BitmapFont(data, pages, glyphs, premultipliedAlpha) {
    this.data = data;
    this.pages = pages;
    this.glyphs = glyphs;
    this.premultipliedAlpha = premultipliedAlpha;
    BitmapFontRegistry_getInstance().register_em09y5$(this);
  }
  BitmapFont.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BitmapFont',
    interfaces: []
  };
  function FontStyle(face, size, isBold, isItalic) {
    if (isBold === void 0)
      isBold = false;
    if (isItalic === void 0)
      isItalic = false;
    this.face = face;
    this.size = size;
    this.isBold = isBold;
    this.isItalic = isItalic;
  }
  FontStyle.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'FontStyle',
    interfaces: []
  };
  FontStyle.prototype.component1 = function () {
    return this.face;
  };
  FontStyle.prototype.component2 = function () {
    return this.size;
  };
  FontStyle.prototype.component3 = function () {
    return this.isBold;
  };
  FontStyle.prototype.component4 = function () {
    return this.isItalic;
  };
  FontStyle.prototype.copy_m20oq8$ = function (face, size, isBold, isItalic) {
    return new FontStyle(face === void 0 ? this.face : face, size === void 0 ? this.size : size, isBold === void 0 ? this.isBold : isBold, isItalic === void 0 ? this.isItalic : isItalic);
  };
  FontStyle.prototype.toString = function () {
    return 'FontStyle(face=' + Kotlin.toString(this.face) + (', size=' + Kotlin.toString(this.size)) + (', bold=' + Kotlin.toString(this.isBold)) + (', italic=' + Kotlin.toString(this.isItalic)) + ')';
  };
  FontStyle.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.face) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.isBold) | 0;
    result = result * 31 + Kotlin.hashCode(this.isItalic) | 0;
    return result;
  };
  FontStyle.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.face, other.face) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.isBold, other.isBold) && Kotlin.equals(this.isItalic, other.isItalic)))));
  };
  function Glyph(data, offsetX, offsetY, width, height, advanceX, lineHeight, isRotated, u, v, u2, v2_0, texture, premultipliedAlpha) {
    this.data = data;
    this.offsetX = offsetX;
    this.offsetY = offsetY;
    this.width = width;
    this.height = height;
    this.advanceX = advanceX;
    this.lineHeight = lineHeight;
    this.isRotated = isRotated;
    this.u = u;
    this.v = v;
    this.u2 = u2;
    this.v2 = v2_0;
    this.texture = texture;
    this.premultipliedAlpha = premultipliedAlpha;
  }
  Glyph.prototype.getKerning_s8itvh$ = function (ch) {
    return this.data.getKerning_s8itvh$(Kotlin.unboxChar(ch));
  };
  Glyph.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Glyph',
    interfaces: []
  };
  function loadFontFromDir$lambda(it) {
    throw it;
  }
  function loadFontFromDir($receiver, fntPath, onSuccess_0, onFail) {
    if (onSuccess_0 === void 0)
      onSuccess_0 = null;
    if (onFail === void 0)
      onFail = loadFontFromDir$lambda;
    var files = inject($receiver, Files$Companion_getInstance());
    var fontFile = files.getFile_61zpoe$(fntPath);
    if (fontFile == null) {
      onFail(new Exception(fntPath + ' not found.'));
      return;
    }
    loadFontFromDir_0($receiver, fntPath, fontFile.parent.path, onSuccess_0, onFail);
  }
  function loadFontFromDir$lambda_0(it) {
    throw it;
  }
  function loadFontFromDir$lambda$lambda(it) {
    return null;
  }
  function loadFontFromDir$lambda$lambda_0(closure$pageTextures, closure$i, closure$remaining, closure$bitmapFontData, closure$onSuccess) {
    return function (texture) {
      var tmp$, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_0, tmp$_11, tmp$_12;
      closure$pageTextures[closure$i] = texture;
      if ((closure$remaining.v = closure$remaining.v - 1 | 0, closure$remaining.v) === 0) {
        var glyphs = HashMap_init();
        tmp$ = closure$bitmapFontData.glyphs.values.iterator();
        while (tmp$.hasNext()) {
          var glyphData = tmp$.next();
          tmp$_12 = Kotlin.unboxChar(glyphData.char);
          tmp$_1 = glyphData.offsetX;
          tmp$_2 = glyphData.offsetY;
          tmp$_3 = glyphData.region.width;
          tmp$_4 = glyphData.region.height;
          tmp$_5 = glyphData.advanceX;
          tmp$_6 = closure$bitmapFontData.lineHeight;
          tmp$_7 = glyphData.region.x / closure$bitmapFontData.pageW;
          tmp$_8 = glyphData.region.y / closure$bitmapFontData.pageH;
          tmp$_9 = glyphData.region.right / closure$bitmapFontData.pageW;
          tmp$_10 = glyphData.region.bottom / closure$bitmapFontData.pageH;
          tmp$_11 = (tmp$_0 = closure$pageTextures[glyphData.page]) != null ? tmp$_0 : Kotlin.throwNPE();
          var key = Kotlin.toBoxedChar(tmp$_12);
          var value = new Glyph(glyphData, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, false, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, false);
          glyphs.put_xwzc9p$(key, value);
        }
        var font = new BitmapFont(closure$bitmapFontData, toList(requireNoNulls(closure$pageTextures)), glyphs, false);
        closure$onSuccess != null ? closure$onSuccess(font) : null;
      }
    };
  }
  function loadFontFromDir$lambda_1(closure$dir, closure$onFail, closure$assetManager, closure$onSuccess) {
    return function (bitmapFontStr) {
      var tmp$;
      var bitmapFontData = AngelCodeParser_getInstance().parse_61zpoe$(bitmapFontStr);
      var n = bitmapFontData.pages.size;
      var pageTextures = Kotlin.newArrayF(n, loadFontFromDir$lambda$lambda);
      var remaining = {v: n};
      tmp$ = n - 1 | 0;
      for (var i = 0; i <= tmp$; i++) {
        var page = bitmapFontData.pages.get_za3lpa$(i);
        var imageFile = closure$dir.getFile_61zpoe$(page.imagePath);
        if (imageFile == null) {
          closure$onFail(new Exception('Font image file not found: ' + page.imagePath));
        }
         else {
          closure$assetManager.load_re1kiq$(imageFile.path, AssetTypes_getInstance().TEXTURE, loadFontFromDir$lambda$lambda_0(pageTextures, i, remaining, bitmapFontData, closure$onSuccess), closure$onFail);
        }
      }
    };
  }
  function loadFontFromDir_0($receiver, fntPath, imagesDir, onSuccess_0, onFail) {
    if (onSuccess_0 === void 0)
      onSuccess_0 = null;
    if (onFail === void 0)
      onFail = loadFontFromDir$lambda_0;
    var tmp$;
    var files = inject($receiver, Files$Companion_getInstance());
    var assetManager = inject($receiver, AssetManager$Companion_getInstance());
    tmp$ = files.getDir_61zpoe$(imagesDir);
    if (tmp$ == null) {
      throw new Exception('Directory not found: ' + imagesDir);
    }
    var dir = tmp$;
    assetManager.load_re1kiq$(fntPath, AssetTypes_getInstance().TEXT, loadFontFromDir$lambda_1(dir, onFail, assetManager, onSuccess_0), onFail);
  }
  function loadFontFromAtlas$lambda(it) {
    throw it;
  }
  function loadFontFromAtlas$lambda$lambda(closure$onFailed, closure$atlasDataLoader) {
    return function () {
      var tmp$;
      closure$onFailed((tmp$ = closure$atlasDataLoader.error) != null ? tmp$ : Kotlin.throwNPE());
    };
  }
  function loadFontFromAtlas$lambda$lambda$lambda(it) {
    return null;
  }
  function loadFontFromAtlas$lambda$lambda$lambda_0(closure$onFailed, closure$pageLoader) {
    return function () {
      var tmp$;
      closure$onFailed((tmp$ = closure$pageLoader.error) != null ? tmp$ : Kotlin.throwNPE());
    };
  }
  function loadFontFromAtlas$lambda$lambda$lambda_1(closure$bitmapFontData, closure$atlasPageData, closure$pageTextures, closure$remaining, closure$atlasData, closure$onSuccess) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_3, tmp$_11, tmp$_12, tmp$_13;
      var texture = it.result;
      tmp$ = get_lastIndex(closure$bitmapFontData.pages);
      for (var fontPageIndex = 0; fontPageIndex <= tmp$; fontPageIndex++) {
        var fontPageData = closure$bitmapFontData.pages.get_za3lpa$(fontPageIndex);
        if (closure$atlasPageData.containsRegion_61zpoe$(fontPageData.imagePath)) {
          closure$pageTextures[fontPageIndex] = texture;
        }
      }
      if ((closure$remaining.v = closure$remaining.v - 1 | 0, closure$remaining.v) === 0) {
        var glyphs = HashMap_init();
        tmp$_0 = closure$bitmapFontData.glyphs.values.iterator();
        while (tmp$_0.hasNext()) {
          var glyphData = tmp$_0.next();
          var fontPageData_0 = closure$bitmapFontData.pages.get_za3lpa$(glyphData.page);
          var tmp$_2 = (tmp$_1 = closure$atlasData.findRegion_61zpoe$(fontPageData_0.imagePath)) != null ? tmp$_1 : Kotlin.throwNPE()
          , page = tmp$_2.component1()
          , region = tmp$_2.component2();
          var pageW = page.width;
          var pageH = page.height;
          var leftPadding = region.padding[0];
          var topPadding = region.padding[1];
          var regionX;
          var regionY;
          var regionW;
          var regionH;
          var offsetX = 0;
          var offsetY = 0;
          var offsetR = 0;
          if (region.isRotated) {
            regionX = region.bounds.right + topPadding - glyphData.region.bottom | 0;
            regionY = glyphData.region.x - leftPadding + region.bounds.y | 0;
            regionW = glyphData.region.height;
            regionH = glyphData.region.width;
          }
           else {
            regionX = glyphData.region.x + region.bounds.x - leftPadding | 0;
            regionY = glyphData.region.y + region.bounds.y - topPadding | 0;
            regionW = glyphData.region.width;
            regionH = glyphData.region.height;
          }
          if (regionX < region.bounds.x) {
            var diff = region.bounds.x - regionX | 0;
            regionW = regionW - diff | 0;
            regionX = regionX + diff | 0;
            offsetX = offsetX + diff | 0;
          }
          if (regionY < region.bounds.y) {
            var diff_0 = region.bounds.y - regionY | 0;
            regionH = regionH - diff_0 | 0;
            regionY = regionY + diff_0 | 0;
            offsetY = offsetY + diff_0 | 0;
          }
          if ((regionX + regionW | 0) > region.bounds.right) {
            var diff_1 = regionX + regionW - region.bounds.right | 0;
            regionW = regionW - diff_1 | 0;
            offsetR = offsetR + diff_1 | 0;
          }
          if ((regionY + regionH | 0) > region.bounds.bottom) {
            var diff_2 = regionY + regionH - region.bounds.bottom | 0;
            regionH = regionH - diff_2 | 0;
          }
          tmp$_13 = Kotlin.unboxChar(glyphData.char);
          tmp$_4 = glyphData.offsetX + (region.isRotated ? offsetY : offsetX) | 0;
          tmp$_5 = glyphData.offsetY + (region.isRotated ? offsetR : offsetY) | 0;
          tmp$_6 = region.isRotated ? regionH : regionW;
          tmp$_7 = region.isRotated ? regionW : regionH;
          tmp$_8 = glyphData.advanceX;
          tmp$_9 = closure$bitmapFontData.lineHeight;
          tmp$_10 = region.isRotated;
          tmp$_11 = (tmp$_3 = closure$pageTextures[glyphData.page]) != null ? tmp$_3 : Kotlin.throwNPE();
          tmp$_12 = page.premultipliedAlpha;
          var key = Kotlin.toBoxedChar(tmp$_13);
          var value = new Glyph(glyphData, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, regionX / pageW, regionY / pageH, (regionX + regionW | 0) / pageW, (regionY + regionH | 0) / pageH, tmp$_11, tmp$_12);
          glyphs.put_xwzc9p$(key, value);
        }
        var font = new BitmapFont(closure$bitmapFontData, toList(requireNoNulls(closure$pageTextures)), glyphs, closure$atlasPageData.premultipliedAlpha);
        closure$onSuccess != null ? closure$onSuccess(font) : null;
      }
    };
  }
  function loadFontFromAtlas$lambda$lambda_0(closure$bitmapFontData, closure$atlasFile, closure$atlasPath, this$loadFontFromAtlas, closure$onFailed, closure$onSuccess) {
    return function (it) {
      var tmp$, tmp$_0;
      var atlasData = it.result;
      var remaining = {v: atlasData.pages.length};
      var pageTextures = Kotlin.newArrayF(closure$bitmapFontData.pages.size, loadFontFromAtlas$lambda$lambda$lambda);
      tmp$ = get_lastIndex_0(atlasData.pages);
      for (var atlasPageIndex = 0; atlasPageIndex <= tmp$; atlasPageIndex++) {
        var atlasPageData = atlasData.pages[atlasPageIndex];
        tmp$_0 = closure$atlasFile.siblingFile_61zpoe$(atlasPageData.texturePath);
        if (tmp$_0 == null) {
          throw new Exception('File not found: ' + atlasPageData.texturePath + ' relative to: ' + closure$atlasPath);
        }
        var textureEntry = tmp$_0;
        var pageLoader = loadDecorated_0(this$loadFontFromAtlas, textureEntry.path, AssetTypes_getInstance().TEXTURE, new AtlasPageDecorator(atlasPageData));
        onFailed(pageLoader, loadFontFromAtlas$lambda$lambda$lambda_0(closure$onFailed, pageLoader));
        onSuccess(pageLoader, loadFontFromAtlas$lambda$lambda$lambda_1(closure$bitmapFontData, atlasPageData, pageTextures, remaining, atlasData, closure$onSuccess));
      }
    };
  }
  function loadFontFromAtlas$lambda_0(closure$atlasPath, this$loadFontFromAtlas, closure$onFailed, closure$atlasFile, closure$onSuccess) {
    return function (bitmapFontStr) {
      var bitmapFontData = AngelCodeParser_getInstance().parse_61zpoe$(bitmapFontStr);
      var atlasDataLoader = loadJson_1(this$loadFontFromAtlas, closure$atlasPath, TextureAtlasDataSerializer_getInstance());
      onFailed(atlasDataLoader, loadFontFromAtlas$lambda$lambda(closure$onFailed, atlasDataLoader));
      onSuccess(atlasDataLoader, loadFontFromAtlas$lambda$lambda_0(bitmapFontData, closure$atlasFile, closure$atlasPath, this$loadFontFromAtlas, closure$onFailed, closure$onSuccess));
    };
  }
  function loadFontFromAtlas($receiver, fntPath, atlasPath, onSuccess_0, onFailed_0) {
    if (onSuccess_0 === void 0)
      onSuccess_0 = null;
    if (onFailed_0 === void 0)
      onFailed_0 = loadFontFromAtlas$lambda;
    var tmp$;
    var files = inject($receiver, Files$Companion_getInstance());
    var assetManager = inject($receiver, AssetManager$Companion_getInstance());
    tmp$ = files.getFile_61zpoe$(atlasPath);
    if (tmp$ == null) {
      throw new Exception('File not found: ' + atlasPath);
    }
    var atlasFile = tmp$;
    assetManager.load_re1kiq$(fntPath, AssetTypes_getInstance().TEXT, loadFontFromAtlas$lambda_0(atlasPath, $receiver, onFailed_0, atlasFile, onSuccess_0), onFailed_0);
  }
  function BitmapFontRegistry() {
    BitmapFontRegistry_instance = this;
    this.fontRegistered = new Signal1();
    this.registry = HashMap_init();
  }
  BitmapFontRegistry.prototype.register_em09y5$ = function (bitmapFont) {
    var tmp$;
    tmp$ = bitmapFont.pages.iterator();
    while (tmp$.hasNext()) {
      var page = tmp$.next();
      page.refInc();
    }
    var $receiver = this.registry;
    var key = bitmapFont.data.fontStyle;
    $receiver.put_xwzc9p$(key, bitmapFont);
    this.fontRegistered.dispatch_11rb$(bitmapFont);
  };
  BitmapFontRegistry.prototype.unregister_em09y5$ = function (bitmapFont) {
    var tmp$;
    var removed = this.registry.remove_11rb$(bitmapFont.data.fontStyle);
    if (removed != null) {
      tmp$ = bitmapFont.pages.iterator();
      while (tmp$.hasNext()) {
        var page = tmp$.next();
        page.refDec();
      }
    }
  };
  BitmapFontRegistry.prototype.getFont_tstw8t$ = function (fontStyle) {
    if (!this.registry.containsKey_11rb$(fontStyle))
      return null;
    return this.registry.get_11rb$(fontStyle);
  };
  BitmapFontRegistry.prototype.clear = function () {
    var tmp$, tmp$_0;
    tmp$ = this.registry.values.iterator();
    while (tmp$.hasNext()) {
      var bitmapFont = tmp$.next();
      tmp$_0 = bitmapFont.pages.iterator();
      while (tmp$_0.hasNext()) {
        var page = tmp$_0.next();
        page.refDec();
      }
    }
    this.registry.clear();
  };
  BitmapFontRegistry.prototype.dispose = function () {
    this.clear();
  };
  BitmapFontRegistry.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'BitmapFontRegistry',
    interfaces: [Disposable, Clearable]
  };
  var BitmapFontRegistry_instance = null;
  function BitmapFontRegistry_getInstance() {
    if (BitmapFontRegistry_instance === null) {
      new BitmapFontRegistry();
    }
    return BitmapFontRegistry_instance;
  }
  function BitmapFontData(fontStyle, pages, glyphs, lineHeight, baseLine, pageW, pageH) {
    this.fontStyle = fontStyle;
    this.pages = pages;
    this.glyphs = glyphs;
    this.lineHeight = lineHeight;
    this.baseLine = baseLine;
    this.pageW = pageW;
    this.pageH = pageH;
  }
  BitmapFontData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BitmapFontData',
    interfaces: []
  };
  BitmapFontData.prototype.component1 = function () {
    return this.fontStyle;
  };
  BitmapFontData.prototype.component2 = function () {
    return this.pages;
  };
  BitmapFontData.prototype.component3 = function () {
    return this.glyphs;
  };
  BitmapFontData.prototype.component4 = function () {
    return this.lineHeight;
  };
  BitmapFontData.prototype.component5 = function () {
    return this.baseLine;
  };
  BitmapFontData.prototype.component6 = function () {
    return this.pageW;
  };
  BitmapFontData.prototype.component7 = function () {
    return this.pageH;
  };
  BitmapFontData.prototype.copy_g77q3b$ = function (fontStyle, pages, glyphs, lineHeight, baseLine, pageW, pageH) {
    return new BitmapFontData(fontStyle === void 0 ? this.fontStyle : fontStyle, pages === void 0 ? this.pages : pages, glyphs === void 0 ? this.glyphs : glyphs, lineHeight === void 0 ? this.lineHeight : lineHeight, baseLine === void 0 ? this.baseLine : baseLine, pageW === void 0 ? this.pageW : pageW, pageH === void 0 ? this.pageH : pageH);
  };
  BitmapFontData.prototype.toString = function () {
    return 'BitmapFontData(fontStyle=' + Kotlin.toString(this.fontStyle) + (', pages=' + Kotlin.toString(this.pages)) + (', glyphs=' + Kotlin.toString(this.glyphs)) + (', lineHeight=' + Kotlin.toString(this.lineHeight)) + (', baseLine=' + Kotlin.toString(this.baseLine)) + (', pageW=' + Kotlin.toString(this.pageW)) + (', pageH=' + Kotlin.toString(this.pageH)) + ')';
  };
  BitmapFontData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.fontStyle) | 0;
    result = result * 31 + Kotlin.hashCode(this.pages) | 0;
    result = result * 31 + Kotlin.hashCode(this.glyphs) | 0;
    result = result * 31 + Kotlin.hashCode(this.lineHeight) | 0;
    result = result * 31 + Kotlin.hashCode(this.baseLine) | 0;
    result = result * 31 + Kotlin.hashCode(this.pageW) | 0;
    result = result * 31 + Kotlin.hashCode(this.pageH) | 0;
    return result;
  };
  BitmapFontData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.fontStyle, other.fontStyle) && Kotlin.equals(this.pages, other.pages) && Kotlin.equals(this.glyphs, other.glyphs) && Kotlin.equals(this.lineHeight, other.lineHeight) && Kotlin.equals(this.baseLine, other.baseLine) && Kotlin.equals(this.pageW, other.pageW) && Kotlin.equals(this.pageH, other.pageH)))));
  };
  function BitmapFontPageData(id, imagePath) {
    this.id = id;
    this.imagePath = imagePath;
  }
  BitmapFontPageData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BitmapFontPageData',
    interfaces: []
  };
  BitmapFontPageData.prototype.component1 = function () {
    return this.id;
  };
  BitmapFontPageData.prototype.component2 = function () {
    return this.imagePath;
  };
  BitmapFontPageData.prototype.copy_19mbxw$ = function (id, imagePath) {
    return new BitmapFontPageData(id === void 0 ? this.id : id, imagePath === void 0 ? this.imagePath : imagePath);
  };
  BitmapFontPageData.prototype.toString = function () {
    return 'BitmapFontPageData(id=' + Kotlin.toString(this.id) + (', imagePath=' + Kotlin.toString(this.imagePath)) + ')';
  };
  BitmapFontPageData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.imagePath) | 0;
    return result;
  };
  BitmapFontPageData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.imagePath, other.imagePath)))));
  };
  function GlyphData(char, region, offsetX, offsetY, advanceX, page, kerning) {
    if (region === void 0)
      region = new IntRectangle();
    if (offsetX === void 0)
      offsetX = 0;
    if (offsetY === void 0)
      offsetY = 0;
    if (advanceX === void 0)
      advanceX = 0;
    if (page === void 0)
      page = 0;
    if (kerning === void 0)
      kerning = null;
    this.char = char;
    this.region = region;
    this.offsetX = offsetX;
    this.offsetY = offsetY;
    this.advanceX = advanceX;
    this.page = page;
    this.kerning_0 = kerning;
  }
  GlyphData.prototype.getKerning_s8itvh$ = function (ch) {
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.kerning_0) != null ? tmp$.get_11rb$(Kotlin.toBoxedChar(ch)) : null) != null ? tmp$_0 : 0.0;
  };
  GlyphData.prototype.setKerning_y8frqg$ = function (ch, value) {
    var tmp$;
    if (this.kerning_0 == null)
      this.kerning_0 = HashMap_init();
    var $receiver = (tmp$ = this.kerning_0) != null ? tmp$ : Kotlin.throwNPE();
    var key = Kotlin.toBoxedChar(ch);
    $receiver.put_xwzc9p$(key, value);
  };
  GlyphData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlyphData',
    interfaces: []
  };
  GlyphData.prototype.component1 = function () {
    return this.char;
  };
  GlyphData.prototype.component2 = function () {
    return this.region;
  };
  GlyphData.prototype.component3 = function () {
    return this.offsetX;
  };
  GlyphData.prototype.component4 = function () {
    return this.offsetY;
  };
  GlyphData.prototype.component5 = function () {
    return this.advanceX;
  };
  GlyphData.prototype.component6 = function () {
    return this.page;
  };
  GlyphData.prototype.component7_0 = function () {
    return this.kerning_0;
  };
  GlyphData.prototype.copy_od6g3b$ = function (char, region, offsetX, offsetY, advanceX, page, kerning) {
    return new GlyphData(char === void 0 ? this.char : char, region === void 0 ? this.region : region, offsetX === void 0 ? this.offsetX : offsetX, offsetY === void 0 ? this.offsetY : offsetY, advanceX === void 0 ? this.advanceX : advanceX, page === void 0 ? this.page : page, kerning === void 0 ? this.kerning_0 : kerning);
  };
  GlyphData.prototype.toString = function () {
    return 'GlyphData(char=' + Kotlin.toString(this.char) + (', region=' + Kotlin.toString(this.region)) + (', offsetX=' + Kotlin.toString(this.offsetX)) + (', offsetY=' + Kotlin.toString(this.offsetY)) + (', advanceX=' + Kotlin.toString(this.advanceX)) + (', page=' + Kotlin.toString(this.page)) + (', kerning=' + Kotlin.toString(this.kerning_0)) + ')';
  };
  GlyphData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.char) | 0;
    result = result * 31 + Kotlin.hashCode(this.region) | 0;
    result = result * 31 + Kotlin.hashCode(this.offsetX) | 0;
    result = result * 31 + Kotlin.hashCode(this.offsetY) | 0;
    result = result * 31 + Kotlin.hashCode(this.advanceX) | 0;
    result = result * 31 + Kotlin.hashCode(this.page) | 0;
    result = result * 31 + Kotlin.hashCode(this.kerning_0) | 0;
    return result;
  };
  GlyphData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.char, other.char) && Kotlin.equals(this.region, other.region) && Kotlin.equals(this.offsetX, other.offsetX) && Kotlin.equals(this.offsetY, other.offsetY) && Kotlin.equals(this.advanceX, other.advanceX) && Kotlin.equals(this.page, other.page) && Kotlin.equals(this.kerning_0, other.kerning_0)))));
  };
  function GlEditableTextField(owner) {
    GlTextField.call(this, owner);
    this.hScrollModel_7fcorp$_0 = new ScrollModelImpl();
    this.vScrollModel_7fcorp$_0 = new ScrollModelImpl();
    this.hScrollPolicy_7fcorp$_0 = ScrollPolicy$OFF_getInstance();
    this.vScrollPolicy_7fcorp$_0 = ScrollPolicy$OFF_getInstance();
    this.editable_7fcorp$_0 = true;
    addTag(this, EditableTextField$Companion_getInstance());
    this.hScrollPolicy = ScrollPolicy$AUTO_getInstance();
    this.vScrollPolicy = ScrollPolicy$AUTO_getInstance();
    this.textCommander_7fcorp$_0 = new GlTextCommander(this);
  }
  Object.defineProperty(GlEditableTextField.prototype, 'hScrollModel', {
    get: function () {
      return this.hScrollModel_7fcorp$_0;
    }
  });
  Object.defineProperty(GlEditableTextField.prototype, 'vScrollModel', {
    get: function () {
      return this.vScrollModel_7fcorp$_0;
    }
  });
  Object.defineProperty(GlEditableTextField.prototype, 'hScrollPolicy', {
    get: function () {
      return this.hScrollPolicy_7fcorp$_0;
    },
    set: function (hScrollPolicy) {
      this.hScrollPolicy_7fcorp$_0 = hScrollPolicy;
    }
  });
  Object.defineProperty(GlEditableTextField.prototype, 'vScrollPolicy', {
    get: function () {
      return this.vScrollPolicy_7fcorp$_0;
    },
    set: function (vScrollPolicy) {
      this.vScrollPolicy_7fcorp$_0 = vScrollPolicy;
    }
  });
  Object.defineProperty(GlEditableTextField.prototype, 'editable', {
    get: function () {
      return this.editable_7fcorp$_0;
    },
    set: function (editable) {
      this.editable_7fcorp$_0 = editable;
    }
  });
  Object.defineProperty(GlEditableTextField.prototype, 'textCommander', {
    get: function () {
      return this.textCommander_7fcorp$_0;
    }
  });
  GlEditableTextField.prototype.dispose = function () {
    GlTextField.prototype.dispose.call(this);
    this.hScrollModel.dispose();
    this.vScrollModel.dispose();
  };
  GlEditableTextField.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlEditableTextField',
    interfaces: [EditableTextField, GlTextField]
  };
  function GlTextCommander(textField) {
    this.textField_0 = textField;
  }
  GlTextCommander.prototype.exec_puj7f4$ = function (commandName, value) {
    return false;
  };
  GlTextCommander.prototype.queryBool_61zpoe$ = function (commandId) {
    return false;
  };
  GlTextCommander.prototype.queryString_61zpoe$ = function (commandId) {
    return '';
  };
  GlTextCommander.prototype.queryColor_61zpoe$ = function (commandId) {
    return new Color();
  };
  GlTextCommander.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlTextCommander',
    interfaces: [TextCommander]
  };
  function GlTextField(owner) {
    ContainerImpl.call(this, owner);
    this.focusEnabled_eedst3$_0 = false;
    this.focusOrder_eedst3$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.charStyle_eedst3$_0 = style(this, new CharStyle());
    this.boxStyle_eedst3$_0 = style(this, new BoxStyle());
    this.flowStyle_eedst3$_0 = style(this, new FlowStyle());
    this.selection_eedst3$_0 = new TextSelection();
    this.fontStyle_eedst3$_0 = new FontStyle('[Unknown]', 12);
    this.glState_eedst3$_0 = inject(this, GlState$Companion_getInstance());
    this.background_eedst3$_0 = this.addChild_mxweac$(rect(this));
    this._textContent_eedst3$_0 = null;
    this._font_eedst3$_0 = null;
    this.fontRegisteredHandler_eedst3$_0 = GlTextField$fontRegisteredHandler$lambda(this);
    this.layoutAlgorithm_eedst3$_0 = new FlowLayout();
    this.tfParts = ArrayList_init();
    this.tfPartColors = new TfPartColors();
    addTag(this, TextField$Companion_getInstance());
    this.layoutAlgorithm_eedst3$_0.horizontalGap = 0.0;
    this.layoutAlgorithm_eedst3$_0.verticalGap = 0.0;
    BitmapFontRegistry_getInstance().fontRegistered.add_trkh7z$(this.fontRegisteredHandler_eedst3$_0);
    onChanged(this.charStyle, GlTextField_init$lambda(this));
    onChanged(this.boxStyle, GlTextField_init$lambda_0(this));
    onChanged(this.flowStyle, GlTextField_init$lambda_1(this));
    this.validation.addNode_4ptmgh$(TextValidationFlags_getInstance().TF_PARTS, 0, ValidationFlags_getInstance().LAYOUT, Kotlin.getCallableRef('updateTfParts', function ($receiver) {
      return $receiver.updateTfParts();
    }.bind(null, this)));
    this.validation.addNode_4ptmgh$(TextValidationFlags_getInstance().VERTICES, TextValidationFlags_getInstance().TF_PARTS | ValidationFlags_getInstance().LAYOUT | ValidationFlags_getInstance().CONCATENATED_TRANSFORM, 0, Kotlin.getCallableRef('updateVertices', function ($receiver) {
      return $receiver.updateVertices();
    }.bind(null, this)));
    this.validation.addNode_4ptmgh$(TextValidationFlags_getInstance().COLOR, ValidationFlags_getInstance().CONCATENATED_COLOR_TRANSFORM, 0, Kotlin.getCallableRef('updateTextColor', function ($receiver) {
      return $receiver.updateTextColor();
    }.bind(null, this)));
    this.selection.changed.add_trkh7z$(GlTextField_init$lambda_2(this));
  }
  Object.defineProperty(GlTextField.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_eedst3$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_eedst3$_0 = focusEnabled;
    }
  });
  Object.defineProperty(GlTextField.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_eedst3$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_eedst3$_0 = focusOrder;
    }
  });
  Object.defineProperty(GlTextField.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(GlTextField.prototype, 'charStyle', {
    get: function () {
      return this.charStyle_eedst3$_0;
    }
  });
  Object.defineProperty(GlTextField.prototype, 'boxStyle', {
    get: function () {
      return this.boxStyle_eedst3$_0;
    }
  });
  Object.defineProperty(GlTextField.prototype, 'flowStyle', {
    get: function () {
      return this.flowStyle_eedst3$_0;
    }
  });
  Object.defineProperty(GlTextField.prototype, 'selection', {
    get: function () {
      return this.selection_eedst3$_0;
    }
  });
  Object.defineProperty(GlTextField.prototype, 'font_eedst3$_0', {
    get: function () {
      return this._font_eedst3$_0;
    },
    set: function (value) {
      if (Kotlin.equals(this._font_eedst3$_0, value))
        return;
      this._font_eedst3$_0 = value;
      this.invalidate_za3lpa$(TextValidationFlags_getInstance().TF_PARTS);
    }
  });
  GlTextField.prototype.updateTfParts = function () {
    var tmp$, tmp$_0, tmp$_1;
    this.tfParts.clear();
    tmp$ = this._font_eedst3$_0;
    if (tmp$ == null) {
      return;
    }
    var font = tmp$;
    tmp$_0 = this._textContent_eedst3$_0;
    if (tmp$_0 == null) {
      return;
    }
    var text_2 = tmp$_0;
    if (text_2.length === 0)
      return;
    var chars = ArrayList_init();
    var lastChar = null;
    tmp$_1 = get_lastIndex_3(text_2);
    for (var i = 0; i <= tmp$_1; i++) {
      var char = Kotlin.unboxChar(text_2.charCodeAt(i));
      if (Kotlin.unboxChar(char) === 13)
        continue;
      var glyph = font.glyphs.get_11rb$(Kotlin.toBoxedChar(char));
      if (glyph == null) {
        println("couldn't find char in font: '" + String.fromCharCode(Kotlin.unboxChar(char)) + "'");
        continue;
      }
      var wasSpace = Kotlin.unboxChar(lastChar) === 32;
      var isSpace = Kotlin.unboxChar(char) === 32;
      if (isSpace && wasSpace)
        continue;
      if (isSpace)
        this.flushWord_yowhna$(font, i - chars.size | 0, chars);
      chars.add_11rb$(new TfCharacter(glyph));
      if (isBreaking(Kotlin.unboxChar(char))) {
        this.flushWord_yowhna$(font, i - chars.size | 0, chars);
      }
      lastChar = Kotlin.unboxChar(char);
    }
    this.flushWord_yowhna$(font, text_2.length - chars.size | 0, chars);
  };
  function GlTextField$flushWord$lambda($receiver) {
    $receiver.clearsLine = true;
  }
  function GlTextField$flushWord$lambda_0($receiver) {
    $receiver.clearsTabstop = true;
  }
  function GlTextField$flushWord$lambda_1($receiver) {
    $receiver.overhangs = true;
  }
  GlTextField.prototype.flushWord_yowhna$ = function (font, startIndex, chars) {
    if (!chars.isEmpty()) {
      var word = new TfWord(this, startIndex, font, Kotlin.kotlin.collections.copyToArray(chars));
      var lastChar = Kotlin.unboxChar(last(chars).glyph.data.char);
      if (Kotlin.unboxChar(lastChar) === 10) {
        this.layout_dc1xaj$(word, GlTextField$flushWord$lambda);
      }
       else if (Kotlin.unboxChar(lastChar) === 9) {
        this.layout_dc1xaj$(word, GlTextField$flushWord$lambda_0);
      }
       else if (Kotlin.unboxChar(lastChar) === 32) {
        this.layout_dc1xaj$(word, GlTextField$flushWord$lambda_1);
      }
      this.tfParts.add_11rb$(word);
      chars.clear();
    }
  };
  GlTextField.prototype.updateVertices = function () {
    var tmp$;
    tmp$ = get_lastIndex(this.tfParts);
    for (var i = 0; i <= tmp$; i++) {
      this.tfParts.get_za3lpa$(i).validateVertices();
    }
  };
  GlTextField.prototype.updateTextColor = function () {
    this.tfPartColors.selectedTextColorTint.set_1qghwi$(this.concatenatedColorTint).mul_1qghwi$(this.charStyle.selectedColorTint);
    this.tfPartColors.selectedBackgroundColor.set_1qghwi$(this.concatenatedColorTint).mul_1qghwi$(this.charStyle.selectedBackgroundColor);
    this.tfPartColors.textColorTint.set_1qghwi$(this.concatenatedColorTint).mul_1qghwi$(this.charStyle.colorTint);
    this.tfPartColors.backgroundColor.set_1qghwi$(this.concatenatedColorTint).mul_1qghwi$(this.charStyle.backgroundColor);
  };
  Object.defineProperty(GlTextField.prototype, 'text', {
    get: function () {
      return this._textContent_eedst3$_0;
    },
    set: function (value) {
      if (Kotlin.equals(this._textContent_eedst3$_0, value))
        return;
      this._textContent_eedst3$_0 = value;
      this.invalidate_za3lpa$(TextValidationFlags_getInstance().TF_PARTS);
    }
  });
  Object.defineProperty(GlTextField.prototype, 'htmlText', {
    get: function () {
      return '';
    },
    set: function (value) {
    }
  });
  GlTextField.prototype.updateSizeConstraints_mby7og$ = function (out) {
    var tmp$;
    var minW = 0.0;
    tmp$ = get_lastIndex(this.tfParts);
    for (var i = 0; i <= tmp$; i++) {
      var tfPart = this.tfParts.get_za3lpa$(i);
      tfPart.setSize_yxjqmk$(null, null);
      var a = minW;
      var b = tfPart.width;
      minW = Math.max(a, b);
    }
    out.width.min = this.layoutAlgorithm_eedst3$_0.padding.expandWidth2_mx4ult$(minW);
  };
  GlTextField.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    this.layoutAlgorithm_eedst3$_0.basicLayout_tva9ox$(explicitWidth, explicitHeight, this.tfParts, out);
    this.background_eedst3$_0.setSize_i12l7q$(out);
    (tmp$ = this.highlight) != null ? tmp$.setSize_yxjqmk$(out.width, out.height) : null;
  };
  GlTextField.prototype.draw = function () {
    var tmp$;
    this.glState_eedst3$_0.camera_9ynqw0$(this.camera);
    tmp$ = get_lastIndex(this.tfParts);
    for (var i = 0; i <= tmp$; i++) {
      this.tfParts.get_za3lpa$(i).render_ybqesm$(this.tfPartColors);
    }
  };
  GlTextField.prototype.layout_dc1xaj$ = function ($receiver, init) {
    var layoutData = new FlowLayoutData();
    init(layoutData);
    $receiver.layoutData = layoutData;
    return $receiver;
  };
  GlTextField.prototype.dispose = function () {
    ContainerImpl.prototype.dispose.call(this);
    BitmapFontRegistry_getInstance().fontRegistered.remove_trkh7z$(this.fontRegisteredHandler_eedst3$_0);
  };
  function GlTextField$fontRegisteredHandler$lambda(this$GlTextField) {
    return function (registeredFont) {
      var tmp$;
      if ((tmp$ = this$GlTextField.fontStyle_eedst3$_0) != null ? tmp$.equals(registeredFont.data.fontStyle) : null) {
        this$GlTextField.font_eedst3$_0 = registeredFont;
      }
    };
  }
  function GlTextField_init$lambda(this$GlTextField) {
    return function (it) {
      this$GlTextField.fontStyle_eedst3$_0.face = it.face;
      this$GlTextField.fontStyle_eedst3$_0.size = it.size;
      this$GlTextField.fontStyle_eedst3$_0.isBold = it.isBold;
      this$GlTextField.fontStyle_eedst3$_0.isItalic = it.isItalic;
      this$GlTextField.font_eedst3$_0 = BitmapFontRegistry_getInstance().getFont_tstw8t$(this$GlTextField.fontStyle_eedst3$_0);
      this$GlTextField.invalidate_za3lpa$(TextValidationFlags_getInstance().COLOR);
    };
  }
  function GlTextField_init$lambda_0(this$GlTextField) {
    return function (it) {
      this$GlTextField.layoutAlgorithm_eedst3$_0.padding = it.padding;
      set_0(this$GlTextField.background_eedst3$_0.style, it);
    };
  }
  function GlTextField_init$lambda_1(this$GlTextField) {
    return function (it) {
      this$GlTextField.layoutAlgorithm_eedst3$_0.horizontalAlign = it.horizontalAlign;
      this$GlTextField.layoutAlgorithm_eedst3$_0.verticalAlign = it.verticalAlign;
    };
  }
  function GlTextField_init$lambda_2(this$GlTextField) {
    return function () {
      this$GlTextField.invalidate_za3lpa$(TextValidationFlags_getInstance().COLOR);
    };
  }
  GlTextField.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlTextField',
    interfaces: [Focusable, TextField, ContainerImpl]
  };
  function TextValidationFlags() {
    TextValidationFlags_instance = this;
    this.TF_PARTS = 1 << 16;
    this.VERTICES = 1 << 17;
    this.COLOR = 1 << 18;
  }
  TextValidationFlags.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'TextValidationFlags',
    interfaces: []
  };
  var TextValidationFlags_instance = null;
  function TextValidationFlags_getInstance() {
    if (TextValidationFlags_instance === null) {
      new TextValidationFlags();
    }
    return TextValidationFlags_instance;
  }
  function TfPartColors(selectedTextColorTint, selectedBackgroundColor, textColorTint, backgroundColor) {
    if (selectedTextColorTint === void 0)
      selectedTextColorTint = new Color();
    if (selectedBackgroundColor === void 0)
      selectedBackgroundColor = new Color();
    if (textColorTint === void 0)
      textColorTint = new Color();
    if (backgroundColor === void 0)
      backgroundColor = new Color();
    this.selectedTextColorTint = selectedTextColorTint;
    this.selectedBackgroundColor = selectedBackgroundColor;
    this.textColorTint = textColorTint;
    this.backgroundColor = backgroundColor;
  }
  TfPartColors.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TfPartColors',
    interfaces: []
  };
  TfPartColors.prototype.component1 = function () {
    return this.selectedTextColorTint;
  };
  TfPartColors.prototype.component2 = function () {
    return this.selectedBackgroundColor;
  };
  TfPartColors.prototype.component3 = function () {
    return this.textColorTint;
  };
  TfPartColors.prototype.component4 = function () {
    return this.backgroundColor;
  };
  TfPartColors.prototype.copy_67bdn8$ = function (selectedTextColorTint, selectedBackgroundColor, textColorTint, backgroundColor) {
    return new TfPartColors(selectedTextColorTint === void 0 ? this.selectedTextColorTint : selectedTextColorTint, selectedBackgroundColor === void 0 ? this.selectedBackgroundColor : selectedBackgroundColor, textColorTint === void 0 ? this.textColorTint : textColorTint, backgroundColor === void 0 ? this.backgroundColor : backgroundColor);
  };
  TfPartColors.prototype.toString = function () {
    return 'SpanStyle(selectedTextColorTint=' + Kotlin.toString(this.selectedTextColorTint) + (', selectedBackgroundColor=' + Kotlin.toString(this.selectedBackgroundColor)) + (', textColorTint=' + Kotlin.toString(this.textColorTint)) + (', backgroundColor=' + Kotlin.toString(this.backgroundColor)) + ')';
  };
  TfPartColors.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.selectedTextColorTint) | 0;
    result = result * 31 + Kotlin.hashCode(this.selectedBackgroundColor) | 0;
    result = result * 31 + Kotlin.hashCode(this.textColorTint) | 0;
    result = result * 31 + Kotlin.hashCode(this.backgroundColor) | 0;
    return result;
  };
  TfPartColors.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.selectedTextColorTint, other.selectedTextColorTint) && Kotlin.equals(this.selectedBackgroundColor, other.selectedBackgroundColor) && Kotlin.equals(this.textColorTint, other.textColorTint) && Kotlin.equals(this.backgroundColor, other.backgroundColor)))));
  };
  function TfPart() {
  }
  TfPart.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'TfPart',
    interfaces: [BasicLayoutElement]
  };
  function TfWord(owner, startIndex, font, chars) {
    BasicLayoutElementImpl.call(this);
    this.owner_0 = owner;
    this.startIndex_0 = startIndex;
    this.font_0 = font;
    this.chars_0 = chars;
    this.glState_0 = inject(this.owner_0, GlState$Companion_getInstance());
  }
  TfWord.prototype.validateVertices = function () {
    var tmp$;
    var t = this.owner_0.concatenatedTransform;
    tmp$ = get_lastIndex_0(this.chars_0);
    for (var i = 0; i <= tmp$; i++) {
      this.chars_0[i].validateVertices_y4xzzf$(t, this.x, this.y);
    }
  };
  TfWord.prototype.updateLayout_64u75x$ = function (width, height, out) {
    var tmp$;
    var x = 0.0;
    tmp$ = get_lastIndex_0(this.chars_0);
    for (var i = 0; i <= tmp$; i++) {
      var char = this.chars_0[i];
      char.position.x = x;
      x += char.glyph.advanceX;
      if (i < get_lastIndex_0(this.chars_0)) {
        x += char.glyph.data.getKerning_s8itvh$(Kotlin.unboxChar(this.chars_0[i + 1 | 0].glyph.data.char));
      }
    }
    out.width = x;
    out.height = this.font_0.data.lineHeight;
  };
  TfWord.prototype.render_ybqesm$ = function (colors) {
    var tmp$;
    var batch_0 = this.glState_0.batch;
    tmp$ = get_lastIndex_0(this.chars_0);
    for (var i = 0; i <= tmp$; i++) {
      var char = this.chars_0[i];
      if (this.owner_0.selection.inRange_za3lpa$(this.startIndex_0 + i | 0)) {
        char.render_fhoer7$(this.glState_0, batch_0, colors.selectedTextColorTint, colors.selectedBackgroundColor);
      }
       else {
        char.render_fhoer7$(this.glState_0, batch_0, colors.textColorTint, colors.backgroundColor);
      }
    }
  };
  TfWord.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TfWord',
    interfaces: [TfPart, BasicLayoutElementImpl]
  };
  function TfCharacter(glyph) {
    this.glyph = glyph;
    this.position = new Vector2();
    this.vertexPoints_0 = [new Vector3(), new Vector3(), new Vector3(), new Vector3()];
    this.normal_0 = new Vector3();
    this.backgroundVertices_0 = [new Vector3(), new Vector3(), new Vector3(), new Vector3()];
  }
  TfCharacter.prototype.validateVertices_y4xzzf$ = function (globalTextFieldTransform, offsetX, offsetY) {
    var x = this.position.x + this.glyph.offsetX + offsetX;
    var y = this.position.y + this.glyph.offsetY + offsetY;
    var w = this.glyph.width;
    var h = this.glyph.height;
    globalTextFieldTransform.prj_9wm29k$(this.vertexPoints_0[0].set_y2kzbl$(x, y, 0.0));
    globalTextFieldTransform.prj_9wm29k$(this.vertexPoints_0[1].set_y2kzbl$(x + w, y, 0.0));
    globalTextFieldTransform.prj_9wm29k$(this.vertexPoints_0[2].set_y2kzbl$(x + w, y + h, 0.0));
    globalTextFieldTransform.prj_9wm29k$(this.vertexPoints_0[3].set_y2kzbl$(x, y + h, 0.0));
    globalTextFieldTransform.rot_9wm29k$(this.normal_0.set_1fv2cb$(Vector3.Companion.NEG_Z)).nor();
    this.validateBackgroundVertices_0(globalTextFieldTransform, offsetX, offsetY);
  };
  TfCharacter.prototype.validateBackgroundVertices_0 = function (globalTextFieldTransform, offsetX, offsetY) {
    var x = this.position.x + offsetX;
    var y = this.position.y + offsetY;
    var w = this.glyph.advanceX;
    var h = this.glyph.lineHeight;
    globalTextFieldTransform.prj_9wm29k$(this.backgroundVertices_0[0].set_y2kzbl$(x, y, 0.0));
    globalTextFieldTransform.prj_9wm29k$(this.backgroundVertices_0[1].set_y2kzbl$(x + w, y, 0.0));
    globalTextFieldTransform.prj_9wm29k$(this.backgroundVertices_0[2].set_y2kzbl$(x + w, y + h, 0.0));
    globalTextFieldTransform.prj_9wm29k$(this.backgroundVertices_0[3].set_y2kzbl$(x, y + h, 0.0));
  };
  TfCharacter.prototype.render_fhoer7$ = function (glState, batch_0, fontColor, backgroundColor) {
    if (backgroundColor.a > 0.0) {
      batch_0.begin_za3lpa$();
      glState.setTexture_2kg320$(glState.whitePixel);
      glState.blendMode_rwn2t7$(BlendMode$Companion_getInstance().NORMAL, false);
      batch_0.putVertex_qr5cn2$(this.backgroundVertices_0[0], this.normal_0, backgroundColor, 0.0, 0.0);
      batch_0.putVertex_qr5cn2$(this.backgroundVertices_0[1], this.normal_0, backgroundColor, 0.0, 0.0);
      batch_0.putVertex_qr5cn2$(this.backgroundVertices_0[2], this.normal_0, backgroundColor, 0.0, 0.0);
      batch_0.putVertex_qr5cn2$(this.backgroundVertices_0[3], this.normal_0, backgroundColor, 0.0, 0.0);
      pushQuadIndices(batch_0);
    }
    if (this.glyph.width <= 0.0 || this.glyph.height <= 0.0)
      return;
    batch_0.begin_za3lpa$();
    glState.setTexture_2kg320$(this.glyph.texture);
    glState.blendMode_rwn2t7$(BlendMode$Companion_getInstance().NORMAL, this.glyph.premultipliedAlpha);
    if (this.glyph.isRotated) {
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[0], this.normal_0, fontColor, this.glyph.u2, this.glyph.v);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[1], this.normal_0, fontColor, this.glyph.u2, this.glyph.v2);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[2], this.normal_0, fontColor, this.glyph.u, this.glyph.v2);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[3], this.normal_0, fontColor, this.glyph.u, this.glyph.v);
    }
     else {
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[0], this.normal_0, fontColor, this.glyph.u, this.glyph.v);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[1], this.normal_0, fontColor, this.glyph.u2, this.glyph.v);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[2], this.normal_0, fontColor, this.glyph.u2, this.glyph.v2);
      batch_0.putVertex_qr5cn2$(this.vertexPoints_0[3], this.normal_0, fontColor, this.glyph.u, this.glyph.v2);
    }
    pushQuadIndices(batch_0);
  };
  TfCharacter.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TfCharacter',
    interfaces: []
  };
  function GlTextInput(owner) {
    ContainerImpl.call(this, owner);
    this.input_fwguvb$_0 = new Signal0();
    this.changed_fwguvb$_0 = new Signal0();
    this.editable_fwguvb$_0 = false;
    this.focusEnabled_fwguvb$_0 = false;
    this.focusOrder_fwguvb$_0 = 0.0;
    this.highlight$delegate = this.createSlot_6s3w0i$();
    this.maxLength_fwguvb$_0 = null;
    this.tF = this.addChild_mxweac$(new GlTextField(owner));
    this.placeholder_fwguvb$_0 = '';
    this.charStyle_fwguvb$_0 = this.tF.charStyle;
    this.boxStyle_fwguvb$_0 = this.tF.boxStyle;
    this.flowStyle_fwguvb$_0 = this.tF.flowStyle;
    this.selection_fwguvb$_0 = new TextSelection();
    addTag(this, TextInput$Companion_getInstance());
  }
  Object.defineProperty(GlTextInput.prototype, 'input', {
    get: function () {
      return this.input_fwguvb$_0;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'changed', {
    get: function () {
      return this.changed_fwguvb$_0;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'editable', {
    get: function () {
      return this.editable_fwguvb$_0;
    },
    set: function (editable) {
      this.editable_fwguvb$_0 = editable;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'focusEnabled', {
    get: function () {
      return this.focusEnabled_fwguvb$_0;
    },
    set: function (focusEnabled) {
      this.focusEnabled_fwguvb$_0 = focusEnabled;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'focusOrder', {
    get: function () {
      return this.focusOrder_fwguvb$_0;
    },
    set: function (focusOrder) {
      this.focusOrder_fwguvb$_0 = focusOrder;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'highlight', {
    get: function () {
      return this.highlight$delegate.getValue_lrcp0p$(this, new Kotlin.PropertyMetadata('highlight'));
    },
    set: function (highlight) {
      this.highlight$delegate.setValue_9rddgb$(this, new Kotlin.PropertyMetadata('highlight'), highlight);
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'maxLength', {
    get: function () {
      return this.maxLength_fwguvb$_0;
    },
    set: function (maxLength) {
      this.maxLength_fwguvb$_0 = maxLength;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'text', {
    get: function () {
      var tmp$;
      return (tmp$ = this.tF.text) != null ? tmp$ : '';
    },
    set: function (value) {
      this.tF.text = value;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'placeholder', {
    get: function () {
      return this.placeholder_fwguvb$_0;
    },
    set: function (placeholder) {
      this.placeholder_fwguvb$_0 = placeholder;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'charStyle', {
    get: function () {
      return this.charStyle_fwguvb$_0;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'boxStyle', {
    get: function () {
      return this.boxStyle_fwguvb$_0;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'flowStyle', {
    get: function () {
      return this.flowStyle_fwguvb$_0;
    }
  });
  Object.defineProperty(GlTextInput.prototype, 'selection', {
    get: function () {
      return this.selection_fwguvb$_0;
    }
  });
  GlTextInput.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    this.tF.setSize_yxjqmk$(explicitWidth, explicitHeight);
    out.set_i12l7q$(this.tF.bounds);
    (tmp$ = this.highlight) != null ? tmp$.setSize_i12l7q$(out) : null;
  };
  GlTextInput.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlTextInput',
    interfaces: [TextInput, ContainerImpl]
  };
  function GlTextArea(owner) {
    GlTextInput.call(this, owner);
    addTag(this, TextArea$Companion_getInstance());
  }
  GlTextArea.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlTextArea',
    interfaces: [TextArea, GlTextInput]
  };
  function BufferUsage(name, ordinal, value) {
    Enum.call(this);
    this.value = value;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function BufferUsage_initFields() {
    BufferUsage_initFields = function () {
    };
    BufferUsage$STREAM_instance = new BufferUsage('STREAM', 0, Gl20$Companion_getInstance().STREAM_DRAW);
    BufferUsage$STATIC_instance = new BufferUsage('STATIC', 1, Gl20$Companion_getInstance().STATIC_DRAW);
    BufferUsage$DYNAMIC_instance = new BufferUsage('DYNAMIC', 2, Gl20$Companion_getInstance().DYNAMIC_DRAW);
  }
  var BufferUsage$STREAM_instance;
  function BufferUsage$STREAM_getInstance() {
    BufferUsage_initFields();
    return BufferUsage$STREAM_instance;
  }
  var BufferUsage$STATIC_instance;
  function BufferUsage$STATIC_getInstance() {
    BufferUsage_initFields();
    return BufferUsage$STATIC_instance;
  }
  var BufferUsage$DYNAMIC_instance;
  function BufferUsage$DYNAMIC_getInstance() {
    BufferUsage_initFields();
    return BufferUsage$DYNAMIC_instance;
  }
  BufferUsage.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BufferUsage',
    interfaces: [Enum]
  };
  function BufferUsage$values() {
    return [BufferUsage$STREAM_getInstance(), BufferUsage$STATIC_getInstance(), BufferUsage$DYNAMIC_getInstance()];
  }
  BufferUsage.values = BufferUsage$values;
  function BufferUsage$valueOf(name) {
    switch (name) {
      case 'STREAM':
        return BufferUsage$STREAM_getInstance();
      case 'STATIC':
        return BufferUsage$STATIC_getInstance();
      case 'DYNAMIC':
        return BufferUsage$DYNAMIC_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.BufferUsage.' + name);
    }
  }
  BufferUsage.valueOf_61zpoe$ = BufferUsage$valueOf;
  function DrawComponent(injector) {
    this.framebuffer_s66env$_0 = new Framebuffer(injector);
    this._bottomLeft_s66env$_0 = new Vector3();
    this._topRight_s66env$_0 = new Vector3();
  }
  DrawComponent.prototype.drawComponent_k1lb46$ = function (target) {
    target.validate();
    this._bottomLeft_s66env$_0.clear();
    target.localToGlobal_9wm29k$(this._bottomLeft_s66env$_0);
    this._topRight_s66env$_0.set_1fv2cb$(this._bottomLeft_s66env$_0);
    this._topRight_s66env$_0.add_y2kzbl$(target.width, target.height, 0.0);
    target.localToGlobal_9wm29k$(this._topRight_s66env$_0);
    var v = target.width;
    var w = Math.ceil(v);
    var v_0 = target.height;
    var h = Math.ceil(v_0);
    this.framebuffer_s66env$_0.begin();
    target.render();
    this.framebuffer_s66env$_0.end();
  };
  DrawComponent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DrawComponent',
    interfaces: []
  };
  function Framebuffer(injector, width, height, hasDepth, hasStencil, texture) {
    Framebuffer$Companion_getInstance();
    if (width === void 0)
      width = 0;
    if (height === void 0)
      height = 0;
    if (hasDepth === void 0)
      hasDepth = false;
    if (hasStencil === void 0)
      hasStencil = false;
    if (texture === void 0)
      texture = new BufferTexture(injector.inject_li8edk$(Gl20$Companion_getInstance()), injector.inject_li8edk$(GlState$Companion_getInstance()), width, height);
    this.width = width;
    this.height = height;
    this.hasDepth = hasDepth;
    this.hasStencil = hasStencil;
    this.texture = texture;
    this.gl_vlawwf$_0 = injector.inject_li8edk$(Gl20$Companion_getInstance());
    this.glState_vlawwf$_0 = injector.inject_li8edk$(GlState$Companion_getInstance());
    this.window_vlawwf$_0 = injector.inject_li8edk$(Window$Companion_getInstance());
    this.framebufferHandle = null;
    this.depthbufferHandle_vlawwf$_0 = null;
    this.stencilbufferHandle_vlawwf$_0 = null;
    var tmp$;
    this.texture.refInc();
    this.framebufferHandle = this.gl_vlawwf$_0.createFramebuffer();
    this.gl_vlawwf$_0.bindFramebuffer_6chnl2$(Gl20$Companion_getInstance().FRAMEBUFFER, this.framebufferHandle);
    this.gl_vlawwf$_0.framebufferTexture2D_sivm59$(Gl20$Companion_getInstance().FRAMEBUFFER, Gl20$Companion_getInstance().COLOR_ATTACHMENT0, Gl20$Companion_getInstance().TEXTURE_2D, (tmp$ = this.texture.textureHandle) != null ? tmp$ : Kotlin.throwNPE(), 0);
    if (this.hasDepth) {
      this.depthbufferHandle_vlawwf$_0 = this.gl_vlawwf$_0.createRenderbuffer();
      this.gl_vlawwf$_0.bindRenderbuffer_abwfzf$(Gl20$Companion_getInstance().RENDERBUFFER, this.depthbufferHandle_vlawwf$_0);
      this.gl_vlawwf$_0.renderbufferStorage_tjonv8$(Gl20$Companion_getInstance().RENDERBUFFER, Gl20$Companion_getInstance().DEPTH_COMPONENT16, this.width, this.height);
      this.gl_vlawwf$_0.framebufferRenderbuffer_4jii3u$(Gl20$Companion_getInstance().FRAMEBUFFER, Gl20$Companion_getInstance().DEPTH_ATTACHMENT, Gl20$Companion_getInstance().RENDERBUFFER, this.depthbufferHandle_vlawwf$_0);
    }
     else {
      this.depthbufferHandle_vlawwf$_0 = null;
    }
    if (this.hasStencil) {
      this.stencilbufferHandle_vlawwf$_0 = this.gl_vlawwf$_0.createRenderbuffer();
      this.gl_vlawwf$_0.bindRenderbuffer_abwfzf$(Gl20$Companion_getInstance().RENDERBUFFER, this.stencilbufferHandle_vlawwf$_0);
      this.gl_vlawwf$_0.renderbufferStorage_tjonv8$(Gl20$Companion_getInstance().RENDERBUFFER, Gl20$Companion_getInstance().STENCIL_INDEX8, this.width, this.height);
      this.gl_vlawwf$_0.framebufferRenderbuffer_4jii3u$(Gl20$Companion_getInstance().FRAMEBUFFER, Gl20$Companion_getInstance().STENCIL_ATTACHMENT, Gl20$Companion_getInstance().RENDERBUFFER, this.stencilbufferHandle_vlawwf$_0);
    }
     else {
      this.stencilbufferHandle_vlawwf$_0 = null;
    }
    var result = this.gl_vlawwf$_0.checkFramebufferStatus_za3lpa$(Gl20$Companion_getInstance().FRAMEBUFFER);
    this.gl_vlawwf$_0.bindFramebuffer_6chnl2$(Gl20$Companion_getInstance().FRAMEBUFFER, null);
    this.gl_vlawwf$_0.bindRenderbuffer_abwfzf$(Gl20$Companion_getInstance().RENDERBUFFER, null);
    if (result !== Gl20$Companion_getInstance().FRAMEBUFFER_COMPLETE) {
      this.delete_vlawwf$_0();
      if (result === Gl20$Companion_getInstance().FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
        throw new IllegalStateException("framebuffer couldn't be constructed: incomplete attachment");
      else if (result === Gl20$Companion_getInstance().FRAMEBUFFER_INCOMPLETE_DIMENSIONS)
        throw new IllegalStateException("framebuffer couldn't be constructed: incomplete dimensions");
      else if (result === Gl20$Companion_getInstance().FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
        throw new IllegalStateException("framebuffer couldn't be constructed: missing attachment");
      else if (result === Gl20$Companion_getInstance().FRAMEBUFFER_UNSUPPORTED)
        throw new IllegalStateException("framebuffer couldn't be constructed: unsupported combination of formats");
      else
        throw new IllegalStateException("framebuffer couldn't be constructed: unknown error " + Kotlin.toString(result));
    }
    this.previousFrameBuffer_vlawwf$_0 = null;
  }
  Framebuffer.prototype.begin = function () {
    this.glState_vlawwf$_0.batch.flush_6taknv$(true);
    this.previousFrameBuffer_vlawwf$_0 = Framebuffer$Companion_getInstance().currentFrameBuffer;
    Framebuffer$Companion_getInstance().currentFrameBuffer = this;
    this.gl_vlawwf$_0.bindFramebuffer_6chnl2$(Gl20$Companion_getInstance().FRAMEBUFFER, this.framebufferHandle);
    this.gl_vlawwf$_0.viewport_tjonv8$(0, 0, this.width, this.height);
  };
  Framebuffer.prototype.end = function () {
    var tmp$, tmp$_0, tmp$_1;
    this.glState_vlawwf$_0.batch.flush_6taknv$(true);
    var gl_0 = this.gl_vlawwf$_0;
    if (this.previousFrameBuffer_vlawwf$_0 == null) {
      gl_0.bindFramebuffer_6chnl2$(Gl20$Companion_getInstance().FRAMEBUFFER, null);
      gl_0.viewport_tjonv8$(0, 0, this.window_vlawwf$_0.getWidth() | 0, this.window_vlawwf$_0.getHeight() | 0);
    }
     else {
      gl_0.bindFramebuffer_6chnl2$(Gl20$Companion_getInstance().FRAMEBUFFER, ((tmp$ = this.previousFrameBuffer_vlawwf$_0) != null ? tmp$ : Kotlin.throwNPE()).framebufferHandle);
      gl_0.viewport_tjonv8$(0, 0, ((tmp$_0 = this.previousFrameBuffer_vlawwf$_0) != null ? tmp$_0 : Kotlin.throwNPE()).width, ((tmp$_1 = this.previousFrameBuffer_vlawwf$_0) != null ? tmp$_1 : Kotlin.throwNPE()).height);
    }
    Framebuffer$Companion_getInstance().currentFrameBuffer = this.previousFrameBuffer_vlawwf$_0;
    this.previousFrameBuffer_vlawwf$_0 = null;
  };
  Framebuffer.prototype.delete_vlawwf$_0 = function () {
    if (this.depthbufferHandle_vlawwf$_0 != null) {
      this.gl_vlawwf$_0.deleteRenderbuffer_x108uk$(this.depthbufferHandle_vlawwf$_0);
    }
    if (this.stencilbufferHandle_vlawwf$_0 != null) {
      this.gl_vlawwf$_0.deleteRenderbuffer_x108uk$(this.stencilbufferHandle_vlawwf$_0);
    }
    this.gl_vlawwf$_0.deleteFramebuffer_ljn901$(this.framebufferHandle);
  };
  Framebuffer.prototype.dispose = function () {
    this.delete_vlawwf$_0();
    this.texture.refDec();
  };
  function Framebuffer$Companion() {
    Framebuffer$Companion_instance = this;
    this.currentFrameBuffer = null;
  }
  Framebuffer$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Framebuffer$Companion_instance = null;
  function Framebuffer$Companion_getInstance() {
    if (Framebuffer$Companion_instance === null) {
      new Framebuffer$Companion();
    }
    return Framebuffer$Companion_instance;
  }
  Framebuffer.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Framebuffer',
    interfaces: [Disposable]
  };
  function BufferTexture(gl_0, glState, width, height) {
    if (width === void 0)
      width = 0;
    if (height === void 0)
      height = 0;
    GlTextureBase.call(this, gl_0, glState);
    this.gl_0 = gl_0;
    this.width_0 = width;
    this.height_0 = height;
  }
  BufferTexture.prototype.width = function () {
    return this.width_0;
  };
  BufferTexture.prototype.height = function () {
    return this.height_0;
  };
  BufferTexture.prototype.uploadTexture = function () {
    this.gl_0.texImage2Db_x66c85$(this.target.value, 0, this.pixelFormat.value, this.width_0, this.height_0, 0, this.pixelFormat.value, this.pixelType.value, null);
  };
  BufferTexture.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BufferTexture',
    interfaces: [GlTextureBase]
  };
  function Gl20() {
    Gl20$Companion_getInstance();
  }
  function Gl20$Companion() {
    Gl20$Companion_instance = this;
    this.DEPTH_BUFFER_BIT = 256;
    this.STENCIL_BUFFER_BIT = 1024;
    this.COLOR_BUFFER_BIT = 16384;
    this.POINTS = 0;
    this.LINES = 1;
    this.LINE_LOOP = 2;
    this.LINE_STRIP = 3;
    this.TRIANGLES = 4;
    this.TRIANGLE_STRIP = 5;
    this.TRIANGLE_FAN = 6;
    this.ZERO = 0;
    this.ONE = 1;
    this.SRC_COLOR = 768;
    this.ONE_MINUS_SRC_COLOR = 769;
    this.SRC_ALPHA = 770;
    this.ONE_MINUS_SRC_ALPHA = 771;
    this.DST_ALPHA = 772;
    this.ONE_MINUS_DST_ALPHA = 773;
    this.DST_COLOR = 774;
    this.ONE_MINUS_DST_COLOR = 775;
    this.SRC_ALPHA_SATURATE = 776;
    this.FUNC_ADD = 32774;
    this.BLEND_EQUATION = 32777;
    this.BLEND_EQUATION_RGB = 32777;
    this.BLEND_EQUATION_ALPHA = 34877;
    this.FUNC_SUBTRACT = 32778;
    this.FUNC_REVERSE_SUBTRACT = 32779;
    this.BLEND_DST_RGB = 32968;
    this.BLEND_SRC_RGB = 32969;
    this.BLEND_DST_ALPHA = 32970;
    this.BLEND_SRC_ALPHA = 32971;
    this.CONSTANT_COLOR = 32769;
    this.ONE_MINUS_CONSTANT_COLOR = 32770;
    this.CONSTANT_ALPHA = 32771;
    this.ONE_MINUS_CONSTANT_ALPHA = 32772;
    this.BLEND_COLOR = 32773;
    this.ARRAY_BUFFER = 34962;
    this.ELEMENT_ARRAY_BUFFER = 34963;
    this.ARRAY_BUFFER_BINDING = 34964;
    this.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
    this.STREAM_DRAW = 35040;
    this.STATIC_DRAW = 35044;
    this.DYNAMIC_DRAW = 35048;
    this.BUFFER_SIZE = 34660;
    this.BUFFER_USAGE = 34661;
    this.CURRENT_VERTEX_ATTRIB = 34342;
    this.FRONT = 1028;
    this.BACK = 1029;
    this.FRONT_AND_BACK = 1032;
    this.TEXTURE_2D = 3553;
    this.CULL_FACE = 2884;
    this.BLEND = 3042;
    this.DITHER = 3024;
    this.STENCIL_TEST = 2960;
    this.DEPTH_TEST = 2929;
    this.SCISSOR_TEST = 3089;
    this.POLYGON_OFFSET_FILL = 32823;
    this.SAMPLE_ALPHA_TO_COVERAGE = 32926;
    this.SAMPLE_COVERAGE = 32928;
    this.NO_ERROR = 0;
    this.INVALID_ENUM = 1280;
    this.INVALID_VALUE = 1281;
    this.INVALID_OPERATION = 1282;
    this.OUT_OF_MEMORY = 1285;
    this.CW = 2304;
    this.CCW = 2305;
    this.LINE_WIDTH = 2849;
    this.ALIASED_POINT_SIZE_RANGE = 33901;
    this.ALIASED_LINE_WIDTH_RANGE = 33902;
    this.CULL_FACE_MODE = 2885;
    this.FRONT_FACE = 2886;
    this.DEPTH_RANGE = 2928;
    this.DEPTH_WRITEMASK = 2930;
    this.DEPTH_CLEAR_VALUE = 2931;
    this.DEPTH_FUNC = 2932;
    this.STENCIL_CLEAR_VALUE = 2961;
    this.STENCIL_FUNC = 2962;
    this.STENCIL_FAIL = 2964;
    this.STENCIL_PASS_DEPTH_FAIL = 2965;
    this.STENCIL_PASS_DEPTH_PASS = 2966;
    this.STENCIL_REF = 2967;
    this.STENCIL_VALUE_MASK = 2963;
    this.STENCIL_WRITEMASK = 2968;
    this.STENCIL_BACK_FUNC = 34816;
    this.STENCIL_BACK_FAIL = 34817;
    this.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
    this.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
    this.STENCIL_BACK_REF = 36003;
    this.STENCIL_BACK_VALUE_MASK = 36004;
    this.STENCIL_BACK_WRITEMASK = 36005;
    this.VIEWPORT = 2978;
    this.SCISSOR_BOX = 3088;
    this.COLOR_CLEAR_VALUE = 3106;
    this.COLOR_WRITEMASK = 3107;
    this.UNPACK_ALIGNMENT = 3317;
    this.PACK_ALIGNMENT = 3333;
    this.MAX_TEXTURE_SIZE = 3379;
    this.MAX_VIEWPORT_DIMS = 3386;
    this.SUBPIXEL_BITS = 3408;
    this.RED_BITS = 3410;
    this.GREEN_BITS = 3411;
    this.BLUE_BITS = 3412;
    this.ALPHA_BITS = 3413;
    this.DEPTH_BITS = 3414;
    this.STENCIL_BITS = 3415;
    this.POLYGON_OFFSET_UNITS = 10752;
    this.POLYGON_OFFSET_FACTOR = 32824;
    this.TEXTURE_BINDING_2D = 32873;
    this.SAMPLE_BUFFERS = 32936;
    this.SAMPLES = 32937;
    this.SAMPLE_COVERAGE_VALUE = 32938;
    this.SAMPLE_COVERAGE_INVERT = 32939;
    this.NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
    this.COMPRESSED_TEXTURE_FORMATS = 34467;
    this.DONT_CARE = 4352;
    this.FASTEST = 4353;
    this.NICEST = 4354;
    this.GENERATE_MIPMAP_HINT = 33170;
    this.BYTE = 5120;
    this.UNSIGNED_BYTE = 5121;
    this.SHORT = 5122;
    this.UNSIGNED_SHORT = 5123;
    this.INT = 5124;
    this.UNSIGNED_INT = 5125;
    this.FLOAT = 5126;
    this.DEPTH_COMPONENT = 6402;
    this.ALPHA = 6406;
    this.RGB = 6407;
    this.RGBA = 6408;
    this.LUMINANCE = 6409;
    this.LUMINANCE_ALPHA = 6410;
    this.UNSIGNED_SHORT_4_4_4_4 = 32819;
    this.UNSIGNED_SHORT_5_5_5_1 = 32820;
    this.UNSIGNED_SHORT_5_6_5 = 33635;
    this.FRAGMENT_SHADER = 35632;
    this.VERTEX_SHADER = 35633;
    this.MAX_VERTEX_ATTRIBS = 34921;
    this.MAX_VERTEX_UNIFORM_VECTORS = 36347;
    this.MAX_VARYING_VECTORS = 36348;
    this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
    this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
    this.MAX_TEXTURE_IMAGE_UNITS = 34930;
    this.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
    this.SHADER_TYPE = 35663;
    this.DELETE_STATUS = 35712;
    this.LINK_STATUS = 35714;
    this.VALIDATE_STATUS = 35715;
    this.ATTACHED_SHADERS = 35717;
    this.ACTIVE_UNIFORMS = 35718;
    this.ACTIVE_UNIFORM_MAX_LENGTH = 35719;
    this.ACTIVE_ATTRIBUTES = 35721;
    this.ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
    this.SHADING_LANGUAGE_VERSION = 35724;
    this.CURRENT_PROGRAM = 35725;
    this.NEVER = 512;
    this.LESS = 513;
    this.EQUAL = 514;
    this.LEQUAL = 515;
    this.GREATER = 516;
    this.NOTEQUAL = 517;
    this.GEQUAL = 518;
    this.ALWAYS = 519;
    this.KEEP = 7680;
    this.REPLACE = 7681;
    this.INCR = 7682;
    this.DECR = 7683;
    this.INVERT = 5386;
    this.INCR_WRAP = 34055;
    this.DECR_WRAP = 34056;
    this.VENDOR = 7936;
    this.RENDERER = 7937;
    this.VERSION = 7938;
    this.NEAREST = 9728;
    this.LINEAR = 9729;
    this.NEAREST_MIPMAP_NEAREST = 9984;
    this.LINEAR_MIPMAP_NEAREST = 9985;
    this.NEAREST_MIPMAP_LINEAR = 9986;
    this.LINEAR_MIPMAP_LINEAR = 9987;
    this.TEXTURE_MAG_FILTER = 10240;
    this.TEXTURE_MIN_FILTER = 10241;
    this.TEXTURE_WRAP_S = 10242;
    this.TEXTURE_WRAP_T = 10243;
    this.TEXTURE = 5890;
    this.TEXTURE_CUBE_MAP = 34067;
    this.TEXTURE_BINDING_CUBE_MAP = 34068;
    this.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
    this.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
    this.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
    this.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
    this.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
    this.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
    this.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
    this.TEXTURE0 = 33984;
    this.TEXTURE1 = 33985;
    this.TEXTURE2 = 33986;
    this.TEXTURE3 = 33987;
    this.TEXTURE4 = 33988;
    this.TEXTURE5 = 33989;
    this.TEXTURE6 = 33990;
    this.TEXTURE7 = 33991;
    this.TEXTURE8 = 33992;
    this.TEXTURE9 = 33993;
    this.TEXTURE10 = 33994;
    this.TEXTURE11 = 33995;
    this.TEXTURE12 = 33996;
    this.TEXTURE13 = 33997;
    this.TEXTURE14 = 33998;
    this.TEXTURE15 = 33999;
    this.TEXTURE16 = 34000;
    this.TEXTURE17 = 34001;
    this.TEXTURE18 = 34002;
    this.TEXTURE19 = 34003;
    this.TEXTURE20 = 34004;
    this.TEXTURE21 = 34005;
    this.TEXTURE22 = 34006;
    this.TEXTURE23 = 34007;
    this.TEXTURE24 = 34008;
    this.TEXTURE25 = 34009;
    this.TEXTURE26 = 34010;
    this.TEXTURE27 = 34011;
    this.TEXTURE28 = 34012;
    this.TEXTURE29 = 34013;
    this.TEXTURE30 = 34014;
    this.TEXTURE31 = 34015;
    this.ACTIVE_TEXTURE = 34016;
    this.REPEAT = 10497;
    this.CLAMP_TO_EDGE = 33071;
    this.MIRRORED_REPEAT = 33648;
    this.FLOAT_VEC2 = 35664;
    this.FLOAT_VEC3 = 35665;
    this.FLOAT_VEC4 = 35666;
    this.INT_VEC2 = 35667;
    this.INT_VEC3 = 35668;
    this.INT_VEC4 = 35669;
    this.BOOL = 35670;
    this.BOOL_VEC2 = 35671;
    this.BOOL_VEC3 = 35672;
    this.BOOL_VEC4 = 35673;
    this.FLOAT_MAT2 = 35674;
    this.FLOAT_MAT3 = 35675;
    this.FLOAT_MAT4 = 35676;
    this.SAMPLER_2D = 35678;
    this.SAMPLER_CUBE = 35680;
    this.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
    this.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
    this.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
    this.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
    this.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
    this.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
    this.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
    this.IMPLEMENTATION_COLOR_READ_TYPE = 35738;
    this.IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
    this.COMPILE_STATUS = 35713;
    this.INFO_LOG_LENGTH = 35716;
    this.SHADER_SOURCE_LENGTH = 35720;
    this.LOW_FLOAT = 36336;
    this.MEDIUM_FLOAT = 36337;
    this.HIGH_FLOAT = 36338;
    this.LOW_INT = 36339;
    this.MEDIUM_INT = 36340;
    this.HIGH_INT = 36341;
    this.FRAMEBUFFER = 36160;
    this.RENDERBUFFER = 36161;
    this.RGBA4 = 32854;
    this.RGB5_A1 = 32855;
    this.RGB565 = 36194;
    this.DEPTH_COMPONENT16 = 33189;
    this.STENCIL_INDEX = 6401;
    this.STENCIL_INDEX8 = 36168;
    this.DEPTH_STENCIL = 34041;
    this.RENDERBUFFER_WIDTH = 36162;
    this.RENDERBUFFER_HEIGHT = 36163;
    this.RENDERBUFFER_INTERNAL_FORMAT = 36164;
    this.RENDERBUFFER_RED_SIZE = 36176;
    this.RENDERBUFFER_GREEN_SIZE = 36177;
    this.RENDERBUFFER_BLUE_SIZE = 36178;
    this.RENDERBUFFER_ALPHA_SIZE = 36179;
    this.RENDERBUFFER_DEPTH_SIZE = 36180;
    this.RENDERBUFFER_STENCIL_SIZE = 36181;
    this.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
    this.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
    this.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
    this.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
    this.COLOR_ATTACHMENT0 = 36064;
    this.DEPTH_ATTACHMENT = 36096;
    this.STENCIL_ATTACHMENT = 36128;
    this.DEPTH_STENCIL_ATTACHMENT = 33306;
    this.NONE = 0;
    this.FRAMEBUFFER_COMPLETE = 36053;
    this.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
    this.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
    this.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
    this.FRAMEBUFFER_UNSUPPORTED = 36061;
    this.FRAMEBUFFER_BINDING = 36006;
    this.RENDERBUFFER_BINDING = 36007;
    this.MAX_RENDERBUFFER_SIZE = 34024;
    this.INVALID_FRAMEBUFFER_OPERATION = 1286;
    this.matrixValuesBuffer$delegate = lazy_0(Gl20$Companion$matrixValuesBuffer$lambda);
  }
  Object.defineProperty(Gl20$Companion.prototype, 'matrixValuesBuffer_0', {
    get: function () {
      var $receiver = this.matrixValuesBuffer$delegate;
      new Kotlin.PropertyMetadata('matrixValuesBuffer');
      return $receiver.value;
    }
  });
  function Gl20$Companion$matrixValuesBuffer$lambda() {
    return BufferFactory$Companion_getInstance().instance.floatBuffer_za3lpa$(16);
  }
  Gl20$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Gl20$Companion_instance = null;
  function Gl20$Companion_getInstance() {
    if (Gl20$Companion_instance === null) {
      new Gl20$Companion();
    }
    return Gl20$Companion_instance;
  }
  Gl20.prototype.clearColor_1qghwi$ = function (color_3) {
    this.clearColor_7b5o5w$(color_3.r, color_3.g, color_3.b, color_3.a);
  };
  Gl20.prototype.uniform2f_1b4vwg$ = function (location, v) {
    this.uniform2f_419b65$(location, v.x, v.y);
  };
  Gl20.prototype.uniform3f_1b4vwf$ = function (location, v) {
    this.uniform3f_oyxfc8$(location, v.x, v.y, v.z);
  };
  Gl20.prototype.uniform3f_k001p3$ = function (location, c) {
    this.uniform3f_oyxfc8$(location, c.r, c.g, c.b);
  };
  Gl20.prototype.uniform4f_k001p3$ = function (location, color_3) {
    this.uniform4f_b6e565$(location, color_3.r, color_3.g, color_3.b, color_3.a);
  };
  Gl20.prototype.uniformMatrix4fv_7gr31f$ = function (location, transpose, value) {
    this.uniformMatrix4fv_yp0fny$(location, transpose, value.values);
  };
  Gl20.prototype.uniformMatrix4fv_yp0fny$ = function (location, transpose, value) {
    var tmp$;
    var buffer = Gl20$Companion_getInstance().matrixValuesBuffer_0;
    buffer.clear();
    tmp$ = get_lastIndex_4(value);
    for (var i = 0; i <= tmp$; i++) {
      buffer.put_11rb$(value[i]);
    }
    buffer.flip();
    this.uniformMatrix4fv_gfpvvo$(location, false, buffer);
  };
  Gl20.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'Gl20',
    interfaces: []
  };
  function GlProgramRef() {
  }
  GlProgramRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlProgramRef',
    interfaces: []
  };
  function GlShaderRef() {
  }
  GlShaderRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlShaderRef',
    interfaces: []
  };
  function GlBufferRef() {
  }
  GlBufferRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlBufferRef',
    interfaces: []
  };
  function GlFramebufferRef() {
  }
  GlFramebufferRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlFramebufferRef',
    interfaces: []
  };
  function GlRenderbufferRef() {
  }
  GlRenderbufferRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlRenderbufferRef',
    interfaces: []
  };
  function GlTextureRef() {
  }
  GlTextureRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlTextureRef',
    interfaces: []
  };
  function GlActiveInfoRef() {
  }
  GlActiveInfoRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlActiveInfoRef',
    interfaces: []
  };
  function GlUniformLocationRef() {
  }
  GlUniformLocationRef.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'GlUniformLocationRef',
    interfaces: []
  };
  function scissor($receiver, x, y, width, height) {
    $receiver.scissor_tjonv8$(round(x) | 0, round(y) | 0, round(width) | 0, round(height) | 0);
  }
  function GlState(gl_0) {
    GlState$Companion_getInstance();
    this.gl_0 = gl_0;
    this.defaultShader = new DefaultShaderProgram(this.gl_0);
    this.viewProjectionCache_0 = new MatrixCache(this.gl_0, ShaderProgram$Companion_getInstance().U_PROJ_TRANS);
    this.modelCache_0 = new MatrixCache(this.gl_0, ShaderProgram$Companion_getInstance().U_MODEL_TRANS);
    this._activeTexture_0 = -1;
    this._boundTextures_0 = Kotlin.newArrayF(30, GlState$_boundTextures$lambda);
    this.batch = new ShaderBatchImpl(this.gl_0, this);
    this.defaultWhitePixel$delegate = lazy_0(GlState$defaultWhitePixel$lambda(this));
    this._whitePixel_0 = null;
    this._shader_0 = null;
    this._blendMode_0 = BlendMode$Companion_getInstance().NONE;
    this._premultipliedAlpha_0 = false;
    this._blendingEnabled_0 = true;
    this._mvp_0 = new Matrix4();
    this.shader = this.defaultShader;
    this.blendMode_rwn2t7$(BlendMode$Companion_getInstance().NORMAL, false);
  }
  Object.defineProperty(GlState.prototype, 'defaultWhitePixel_0', {
    get: function () {
      var $receiver = this.defaultWhitePixel$delegate;
      new Kotlin.PropertyMetadata('defaultWhitePixel');
      return $receiver.value;
    }
  });
  Object.defineProperty(GlState.prototype, 'whitePixel', {
    get: function () {
      var tmp$;
      return (tmp$ = this._whitePixel_0) != null ? tmp$ : this.defaultWhitePixel_0;
    }
  });
  GlState.prototype.activeTexture_za3lpa$ = function (value) {
    if (value < 0 || value > 30)
      throw new IllegalArgumentException('Texture index must be between 0 and 30');
    if (this._activeTexture_0 === value)
      return;
    this._activeTexture_0 = value;
    this.gl_0.activeTexture_za3lpa$(Gl20$Companion_getInstance().TEXTURE0 + value | 0);
  };
  GlState.prototype.getTexture_za3lpa$ = function (unit) {
    return this._boundTextures_0[unit];
  };
  GlState.prototype.setTexture_2kg320$ = function (texture, unit) {
    if (texture === void 0)
      texture = null;
    if (unit === void 0)
      unit = 0;
    var tmp$;
    var previous = this._boundTextures_0[unit];
    if (Kotlin.equals(previous, texture) && this._activeTexture_0 === unit)
      return;
    this._whitePixel_0 = unit === 0 && Kotlin.equals(texture != null ? texture.hasWhitePixel : null, true) ? texture : null;
    this.batch.flush_6taknv$(true);
    this.activeTexture_za3lpa$(unit);
    this._boundTextures_0[unit] = texture;
    if (texture == null) {
      if (previous != null) {
        this.gl_0.bindTexture_2s7dt8$(previous.target.value, null);
      }
    }
     else {
      if (texture.textureHandle == null)
        throw new Exception('Texture is not initialized. Use texture.refInc() before binding.');
      this.gl_0.bindTexture_2s7dt8$(texture.target.value, (tmp$ = texture.textureHandle) != null ? tmp$ : Kotlin.throwNPE());
    }
  };
  GlState.prototype.unsetTexture_t1ni15$ = function (texture) {
    var tmp$;
    tmp$ = get_lastIndex_0(this._boundTextures_0);
    for (var i = 0; i <= tmp$; i++) {
      if (Kotlin.equals(this._boundTextures_0[i], texture)) {
        this.setTexture_2kg320$(null, i);
      }
    }
  };
  Object.defineProperty(GlState.prototype, 'shader', {
    get: function () {
      return this._shader_0;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      if (Kotlin.equals(this._shader_0, value))
        return;
      this.batch.flush_6taknv$(true);
      (tmp$ = this._shader_0) != null ? tmp$.unbind() : null;
      this._shader_0 = value;
      (tmp$_0 = this._shader_0) != null ? tmp$_0.bind() : null;
    }
  });
  Object.defineProperty(GlState.prototype, 'blendingEnabled', {
    get: function () {
      return this._blendingEnabled_0;
    },
    set: function (value) {
      if (Kotlin.equals(this._blendingEnabled_0, value))
        return;
      this._blendingEnabled_0 = value;
      this.refreshBlendMode_0();
    }
  });
  Object.defineProperty(GlState.prototype, 'blendMode', {
    get: function () {
      return this._blendMode_0;
    }
  });
  Object.defineProperty(GlState.prototype, 'premultipliedAlpha', {
    get: function () {
      return this._premultipliedAlpha_0;
    }
  });
  GlState.prototype.blendMode_rwn2t7$ = function (blendMode, premultipliedAlpha) {
    if (Kotlin.equals(this._blendMode_0, blendMode) && Kotlin.equals(this._premultipliedAlpha_0, premultipliedAlpha))
      return;
    this._blendMode_0 = blendMode;
    this._premultipliedAlpha_0 = premultipliedAlpha;
    if (!this._blendingEnabled_0)
      return;
    this.refreshBlendMode_0();
  };
  GlState.prototype.refreshBlendMode_0 = function () {
    this.batch.flush_6taknv$(true);
    if (!this._blendingEnabled_0 || Kotlin.equals(this._blendMode_0, BlendMode$Companion_getInstance().NONE)) {
      this.gl_0.disable_za3lpa$(Gl20$Companion_getInstance().BLEND);
    }
     else {
      this.gl_0.enable_za3lpa$(Gl20$Companion_getInstance().BLEND);
      this._blendMode_0.applyBlending_f5llkw$(this.gl_0, this._premultipliedAlpha_0);
    }
  };
  GlState.prototype.camera_9ynqw0$ = function (camera, model) {
    if (model === void 0)
      model = Matrix4.Companion.IDENTITY;
    var tmp$;
    var hasModel = ((tmp$ = this._shader_0) != null ? tmp$ : Kotlin.throwNPE()).getUniformLocation_61zpoe$(ShaderProgram$Companion_getInstance().U_MODEL_TRANS) != null;
    if (hasModel) {
      this.viewProjection_q3cr5i$(camera.combined.values);
      this.model_q3cr5i$(model.values);
    }
     else {
      this._mvp_0.set_1ktw39$(camera.combined);
      if (model !== Matrix4.Companion.IDENTITY)
        this._mvp_0.mul_1ktw39$(model);
      this.viewProjection_q3cr5i$(this._mvp_0.values);
    }
  };
  GlState.prototype.projTrans_1ktw39$ = function (value) {
    this.viewProjection_q3cr5i$(value.values);
  };
  GlState.prototype.viewProjection_q3cr5i$ = function (value) {
    var tmp$;
    this.viewProjectionCache_0.set_2153oe$(value, (tmp$ = this._shader_0) != null ? tmp$ : Kotlin.throwNPE(), this.batch);
  };
  GlState.prototype.model_q3cr5i$ = function (value) {
    var tmp$;
    this.modelCache_0.set_2153oe$(value, (tmp$ = this._shader_0) != null ? tmp$ : Kotlin.throwNPE(), this.batch);
  };
  GlState.prototype.dispose = function () {
    this.defaultWhitePixel_0.refDec();
    this._whitePixel_0 = null;
    this.shader = null;
  };
  function GlState$Companion() {
    GlState$Companion_instance = this;
  }
  GlState$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var GlState$Companion_instance = null;
  function GlState$Companion_getInstance() {
    if (GlState$Companion_instance === null) {
      new GlState$Companion();
    }
    return GlState$Companion_instance;
  }
  function GlState$_boundTextures$lambda(it) {
    return null;
  }
  function GlState$defaultWhitePixel$lambda$lambda($receiver) {
    $receiver.setPixel_k1xbfi$(0, 0, Color.Companion.WHITE);
  }
  function GlState$defaultWhitePixel$lambda$lambda_0($receiver) {
    $receiver.filterMin = TextureMinFilter$NEAREST_getInstance();
    $receiver.filterMag = TextureMagFilter$NEAREST_getInstance();
    $receiver.refInc();
  }
  function GlState$defaultWhitePixel$lambda(this$GlState) {
    return function () {
      return rgbTexture(this$GlState.gl_0, this$GlState, rgbData(1, 1, true, GlState$defaultWhitePixel$lambda$lambda), GlState$defaultWhitePixel$lambda$lambda_0);
    };
  }
  GlState.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlState',
    interfaces: [Disposable]
  };
  function MatrixCache(gl_0, name) {
    this.gl_0 = gl_0;
    this.name_0 = name;
    this.values_0 = Kotlin.newArray(16, 0);
    this._shader_0 = null;
  }
  MatrixCache.prototype.set_2153oe$ = function (value, shader, batch_0) {
    var tmp$;
    tmp$ = shader.getUniformLocation_61zpoe$(this.name_0);
    if (tmp$ == null) {
      return;
    }
    var uniform = tmp$;
    if (!Kotlin.equals(this._shader_0, shader) || !equalsArray_0(value, this.values_0)) {
      this._shader_0 = shader;
      batch_0.flush_6taknv$(true);
      arrayCopy(value, 0, this.values_0);
      this.gl_0.uniformMatrix4fv_yp0fny$(uniform, false, value);
    }
  };
  MatrixCache.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'MatrixCache',
    interfaces: []
  };
  function ColorCache(gl_0, name) {
    this.gl_0 = gl_0;
    this.name_0 = name;
    this._value_0 = new Color();
    this._shader_0 = null;
  }
  ColorCache.prototype.set_tverta$ = function (value, shader, batch_0) {
    var tmp$;
    tmp$ = shader.getUniformLocation_61zpoe$(this.name_0);
    if (tmp$ == null) {
      return;
    }
    var uniform = tmp$;
    if (!Kotlin.equals(this._shader_0, shader) || !(value != null ? value.equals(this._value_0) : null)) {
      this._shader_0 = shader;
      batch_0.flush_6taknv$(true);
      this._value_0.set_1qghwi$(value);
      this.gl_0.uniform4f_k001p3$(uniform, value);
    }
  };
  ColorCache.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ColorCache',
    interfaces: []
  };
  function GlTextureBase(gl_0, glState) {
    this.gl_abssw9$_0 = gl_0;
    this.glState_abssw9$_0 = glState;
    this.refCount = 0;
    this.target_abssw9$_0 = TextureTarget$TEXTURE_2D_getInstance();
    this.filterMag_abssw9$_0 = TextureMagFilter$NEAREST_getInstance();
    this.filterMin_abssw9$_0 = TextureMinFilter$NEAREST_getInstance();
    this.wrapS_abssw9$_0 = TextureWrapMode$CLAMP_TO_EDGE_getInstance();
    this.wrapT_abssw9$_0 = TextureWrapMode$CLAMP_TO_EDGE_getInstance();
    this.pixelFormat_abssw9$_0 = TexturePixelFormat$RGBA_getInstance();
    this.pixelType_abssw9$_0 = TexturePixelType$UNSIGNED_BYTE_getInstance();
    this.textureHandle_abssw9$_0 = null;
    this.hasWhitePixel_abssw9$_0 = false;
    this._supportsNpot_abssw9$_0 = null;
  }
  Object.defineProperty(GlTextureBase.prototype, 'target', {
    get: function () {
      return this.target_abssw9$_0;
    },
    set: function (target) {
      this.target_abssw9$_0 = target;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'filterMag', {
    get: function () {
      return this.filterMag_abssw9$_0;
    },
    set: function (filterMag) {
      this.filterMag_abssw9$_0 = filterMag;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'filterMin', {
    get: function () {
      return this.filterMin_abssw9$_0;
    },
    set: function (filterMin) {
      this.filterMin_abssw9$_0 = filterMin;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'wrapS', {
    get: function () {
      return this.wrapS_abssw9$_0;
    },
    set: function (wrapS) {
      this.wrapS_abssw9$_0 = wrapS;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'wrapT', {
    get: function () {
      return this.wrapT_abssw9$_0;
    },
    set: function (wrapT) {
      this.wrapT_abssw9$_0 = wrapT;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'pixelFormat', {
    get: function () {
      return this.pixelFormat_abssw9$_0;
    },
    set: function (pixelFormat) {
      this.pixelFormat_abssw9$_0 = pixelFormat;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'pixelType', {
    get: function () {
      return this.pixelType_abssw9$_0;
    },
    set: function (pixelType) {
      this.pixelType_abssw9$_0 = pixelType;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'textureHandle', {
    get: function () {
      return this.textureHandle_abssw9$_0;
    },
    set: function (textureHandle) {
      this.textureHandle_abssw9$_0 = textureHandle;
    }
  });
  Object.defineProperty(GlTextureBase.prototype, 'hasWhitePixel', {
    get: function () {
      return this.hasWhitePixel_abssw9$_0;
    },
    set: function (hasWhitePixel) {
      this.hasWhitePixel_abssw9$_0 = hasWhitePixel;
    }
  });
  GlTextureBase.prototype.refInc = function () {
    var tmp$;
    if ((tmp$ = this.refCount, this.refCount = tmp$ + 1 | 0, tmp$) === 0) {
      this.create_za3lpa$();
    }
  };
  GlTextureBase.prototype.create_za3lpa$$default = function (unit) {
    if (this.textureHandle != null)
      return;
    this.textureHandle = this.gl_abssw9$_0.createTexture();
    this.glState_abssw9$_0.setTexture_2kg320$(this, unit);
    this.uploadTexture();
    this.gl_abssw9$_0.texParameteri_qt1dr2$(this.target.value, Gl20$Companion_getInstance().TEXTURE_MAG_FILTER, this.filterMag.value);
    this.gl_abssw9$_0.texParameteri_qt1dr2$(this.target.value, Gl20$Companion_getInstance().TEXTURE_MIN_FILTER, this.filterMin.value);
    this.gl_abssw9$_0.texParameteri_qt1dr2$(this.target.value, Gl20$Companion_getInstance().TEXTURE_WRAP_S, this.wrapS.value);
    this.gl_abssw9$_0.texParameteri_qt1dr2$(this.target.value, Gl20$Companion_getInstance().TEXTURE_WRAP_T, this.wrapT.value);
    if (this.filterMin.useMipMap) {
      if (!this.supportsNpot() && (!math_0.MathUtils.isPowerOfTwo_za3lpa$(this.width()) || !math_0.MathUtils.isPowerOfTwo_za3lpa$(this.height()))) {
        logging_0.Log.warn_s8jyv4$('MipMaps cannot be generated for non power of two textures (' + this.width() + 'x' + this.height() + ')');
        this.gl_abssw9$_0.texParameteri_qt1dr2$(this.target.value, Gl20$Companion_getInstance().TEXTURE_MIN_FILTER, TextureMinFilter$LINEAR_getInstance().value);
      }
       else {
        this.gl_abssw9$_0.generateMipmap_za3lpa$(this.target.value);
      }
    }
  };
  GlTextureBase.prototype.create_za3lpa$ = function (unit, callback$default) {
    if (unit === void 0)
      unit = 0;
    callback$default ? callback$default(unit) : this.create_za3lpa$$default(unit);
  };
  GlTextureBase.prototype.supportsNpot = function () {
    var tmp$;
    if (this._supportsNpot_abssw9$_0 == null) {
      var extensions = this.gl_abssw9$_0.getSupportedExtensions();
      this._supportsNpot_abssw9$_0 = extensions.contains_11rb$('GL_ARB_texture_non_power_of_two');
    }
    return (tmp$ = this._supportsNpot_abssw9$_0) != null ? tmp$ : Kotlin.throwNPE();
  };
  GlTextureBase.prototype.uploadTexture = function () {
    this.gl_abssw9$_0.texImage2D_stvjjz$(this.target.value, 0, this.pixelFormat.value, this.pixelFormat.value, this.pixelType.value, this);
  };
  GlTextureBase.prototype.rgbData = function () {
    throw new UnsupportedOperationException('This Texture implementation not support rgbData');
  };
  GlTextureBase.prototype.refDec = function () {
    if ((this.refCount = this.refCount - 1 | 0, this.refCount) === 0) {
      this.delete();
    }
  };
  GlTextureBase.prototype.delete = function () {
    var tmp$;
    if (this.textureHandle == null)
      return;
    this.glState_abssw9$_0.unsetTexture_t1ni15$(this);
    this.gl_abssw9$_0.deleteTexture_yq8m69$((tmp$ = this.textureHandle) != null ? tmp$ : Kotlin.throwNPE());
    this.textureHandle = null;
  };
  GlTextureBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'GlTextureBase',
    interfaces: [Texture]
  };
  function TextureTarget(name, ordinal, value) {
    TextureTarget$Companion_getInstance();
    Enum.call(this);
    this.value = value;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureTarget_initFields() {
    TextureTarget_initFields = function () {
    };
    TextureTarget$TEXTURE_2D_instance = new TextureTarget('TEXTURE_2D', 0, Gl20$Companion_getInstance().TEXTURE_2D);
    TextureTarget$TEXTURE_CUBE_MAP_instance = new TextureTarget('TEXTURE_CUBE_MAP', 1, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP);
    TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_instance = new TextureTarget('TEXTURE_CUBE_MAP_POSITIVE_X', 2, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP_POSITIVE_X);
    TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_instance = new TextureTarget('TEXTURE_CUBE_MAP_NEGATIVE_X', 3, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP_NEGATIVE_X);
    TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_instance = new TextureTarget('TEXTURE_CUBE_MAP_POSITIVE_Y', 4, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP_POSITIVE_Y);
    TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_instance = new TextureTarget('TEXTURE_CUBE_MAP_NEGATIVE_Y', 5, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP_NEGATIVE_Y);
    TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_instance = new TextureTarget('TEXTURE_CUBE_MAP_POSITIVE_Z', 6, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP_POSITIVE_Z);
    TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_instance = new TextureTarget('TEXTURE_CUBE_MAP_NEGATIVE_Z', 7, Gl20$Companion_getInstance().TEXTURE_CUBE_MAP_NEGATIVE_Z);
  }
  var TextureTarget$TEXTURE_2D_instance;
  function TextureTarget$TEXTURE_2D_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_2D_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_instance;
  }
  var TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_instance;
  function TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_getInstance() {
    TextureTarget_initFields();
    return TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_instance;
  }
  function TextureTarget$Companion() {
    TextureTarget$Companion_instance = this;
    this.VALUES$delegate = lazy_0(TextureTarget$Companion$VALUES$lambda);
  }
  Object.defineProperty(TextureTarget$Companion.prototype, 'VALUES', {
    get: function () {
      var $receiver = this.VALUES$delegate;
      new Kotlin.PropertyMetadata('VALUES');
      return $receiver.value;
    }
  });
  function TextureTarget$Companion$VALUES$lambda() {
    return TextureTarget$values();
  }
  TextureTarget$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TextureTarget$Companion_instance = null;
  function TextureTarget$Companion_getInstance() {
    if (TextureTarget$Companion_instance === null) {
      new TextureTarget$Companion();
    }
    return TextureTarget$Companion_instance;
  }
  TextureTarget.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextureTarget',
    interfaces: [Enum]
  };
  function TextureTarget$values() {
    return [TextureTarget$TEXTURE_2D_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_getInstance(), TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_getInstance()];
  }
  TextureTarget.values = TextureTarget$values;
  function TextureTarget$valueOf(name) {
    switch (name) {
      case 'TEXTURE_2D':
        return TextureTarget$TEXTURE_2D_getInstance();
      case 'TEXTURE_CUBE_MAP':
        return TextureTarget$TEXTURE_CUBE_MAP_getInstance();
      case 'TEXTURE_CUBE_MAP_POSITIVE_X':
        return TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_getInstance();
      case 'TEXTURE_CUBE_MAP_NEGATIVE_X':
        return TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_getInstance();
      case 'TEXTURE_CUBE_MAP_POSITIVE_Y':
        return TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_getInstance();
      case 'TEXTURE_CUBE_MAP_NEGATIVE_Y':
        return TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_getInstance();
      case 'TEXTURE_CUBE_MAP_POSITIVE_Z':
        return TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_getInstance();
      case 'TEXTURE_CUBE_MAP_NEGATIVE_Z':
        return TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.TextureTarget.' + name);
    }
  }
  TextureTarget.valueOf_61zpoe$ = TextureTarget$valueOf;
  function TextureMagFilter(name, ordinal, value) {
    Enum.call(this);
    this.value = value;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureMagFilter_initFields() {
    TextureMagFilter_initFields = function () {
    };
    TextureMagFilter$NEAREST_instance = new TextureMagFilter('NEAREST', 0, Gl20$Companion_getInstance().NEAREST);
    TextureMagFilter$LINEAR_instance = new TextureMagFilter('LINEAR', 1, Gl20$Companion_getInstance().LINEAR);
  }
  var TextureMagFilter$NEAREST_instance;
  function TextureMagFilter$NEAREST_getInstance() {
    TextureMagFilter_initFields();
    return TextureMagFilter$NEAREST_instance;
  }
  var TextureMagFilter$LINEAR_instance;
  function TextureMagFilter$LINEAR_getInstance() {
    TextureMagFilter_initFields();
    return TextureMagFilter$LINEAR_instance;
  }
  TextureMagFilter.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextureMagFilter',
    interfaces: [Enum]
  };
  function TextureMagFilter$values() {
    return [TextureMagFilter$NEAREST_getInstance(), TextureMagFilter$LINEAR_getInstance()];
  }
  TextureMagFilter.values = TextureMagFilter$values;
  function TextureMagFilter$valueOf(name) {
    switch (name) {
      case 'NEAREST':
        return TextureMagFilter$NEAREST_getInstance();
      case 'LINEAR':
        return TextureMagFilter$LINEAR_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.TextureMagFilter.' + name);
    }
  }
  TextureMagFilter.valueOf_61zpoe$ = TextureMagFilter$valueOf;
  function TextureMinFilter(name, ordinal, value, useMipMap) {
    if (useMipMap === void 0)
      useMipMap = true;
    Enum.call(this);
    this.value = value;
    this.useMipMap = useMipMap;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureMinFilter_initFields() {
    TextureMinFilter_initFields = function () {
    };
    TextureMinFilter$NEAREST_instance = new TextureMinFilter('NEAREST', 0, Gl20$Companion_getInstance().NEAREST, false);
    TextureMinFilter$LINEAR_instance = new TextureMinFilter('LINEAR', 1, Gl20$Companion_getInstance().LINEAR, false);
    TextureMinFilter$NEAREST_MIPMAP_NEAREST_instance = new TextureMinFilter('NEAREST_MIPMAP_NEAREST', 2, Gl20$Companion_getInstance().NEAREST_MIPMAP_NEAREST);
    TextureMinFilter$LINEAR_MIPMAP_NEAREST_instance = new TextureMinFilter('LINEAR_MIPMAP_NEAREST', 3, Gl20$Companion_getInstance().LINEAR_MIPMAP_NEAREST);
    TextureMinFilter$NEAREST_MIPMAP_LINEAR_instance = new TextureMinFilter('NEAREST_MIPMAP_LINEAR', 4, Gl20$Companion_getInstance().NEAREST_MIPMAP_LINEAR);
    TextureMinFilter$LINEAR_MIPMAP_LINEAR_instance = new TextureMinFilter('LINEAR_MIPMAP_LINEAR', 5, Gl20$Companion_getInstance().LINEAR_MIPMAP_LINEAR);
  }
  var TextureMinFilter$NEAREST_instance;
  function TextureMinFilter$NEAREST_getInstance() {
    TextureMinFilter_initFields();
    return TextureMinFilter$NEAREST_instance;
  }
  var TextureMinFilter$LINEAR_instance;
  function TextureMinFilter$LINEAR_getInstance() {
    TextureMinFilter_initFields();
    return TextureMinFilter$LINEAR_instance;
  }
  var TextureMinFilter$NEAREST_MIPMAP_NEAREST_instance;
  function TextureMinFilter$NEAREST_MIPMAP_NEAREST_getInstance() {
    TextureMinFilter_initFields();
    return TextureMinFilter$NEAREST_MIPMAP_NEAREST_instance;
  }
  var TextureMinFilter$LINEAR_MIPMAP_NEAREST_instance;
  function TextureMinFilter$LINEAR_MIPMAP_NEAREST_getInstance() {
    TextureMinFilter_initFields();
    return TextureMinFilter$LINEAR_MIPMAP_NEAREST_instance;
  }
  var TextureMinFilter$NEAREST_MIPMAP_LINEAR_instance;
  function TextureMinFilter$NEAREST_MIPMAP_LINEAR_getInstance() {
    TextureMinFilter_initFields();
    return TextureMinFilter$NEAREST_MIPMAP_LINEAR_instance;
  }
  var TextureMinFilter$LINEAR_MIPMAP_LINEAR_instance;
  function TextureMinFilter$LINEAR_MIPMAP_LINEAR_getInstance() {
    TextureMinFilter_initFields();
    return TextureMinFilter$LINEAR_MIPMAP_LINEAR_instance;
  }
  TextureMinFilter.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextureMinFilter',
    interfaces: [Enum]
  };
  function TextureMinFilter$values() {
    return [TextureMinFilter$NEAREST_getInstance(), TextureMinFilter$LINEAR_getInstance(), TextureMinFilter$NEAREST_MIPMAP_NEAREST_getInstance(), TextureMinFilter$LINEAR_MIPMAP_NEAREST_getInstance(), TextureMinFilter$NEAREST_MIPMAP_LINEAR_getInstance(), TextureMinFilter$LINEAR_MIPMAP_LINEAR_getInstance()];
  }
  TextureMinFilter.values = TextureMinFilter$values;
  function TextureMinFilter$valueOf(name) {
    switch (name) {
      case 'NEAREST':
        return TextureMinFilter$NEAREST_getInstance();
      case 'LINEAR':
        return TextureMinFilter$LINEAR_getInstance();
      case 'NEAREST_MIPMAP_NEAREST':
        return TextureMinFilter$NEAREST_MIPMAP_NEAREST_getInstance();
      case 'LINEAR_MIPMAP_NEAREST':
        return TextureMinFilter$LINEAR_MIPMAP_NEAREST_getInstance();
      case 'NEAREST_MIPMAP_LINEAR':
        return TextureMinFilter$NEAREST_MIPMAP_LINEAR_getInstance();
      case 'LINEAR_MIPMAP_LINEAR':
        return TextureMinFilter$LINEAR_MIPMAP_LINEAR_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.TextureMinFilter.' + name);
    }
  }
  TextureMinFilter.valueOf_61zpoe$ = TextureMinFilter$valueOf;
  function TextureWrapMode(name, ordinal, value) {
    Enum.call(this);
    this.value = value;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureWrapMode_initFields() {
    TextureWrapMode_initFields = function () {
    };
    TextureWrapMode$REPEAT_instance = new TextureWrapMode('REPEAT', 0, Gl20$Companion_getInstance().REPEAT);
    TextureWrapMode$CLAMP_TO_EDGE_instance = new TextureWrapMode('CLAMP_TO_EDGE', 1, Gl20$Companion_getInstance().CLAMP_TO_EDGE);
    TextureWrapMode$MIRRORED_REPEAT_instance = new TextureWrapMode('MIRRORED_REPEAT', 2, Gl20$Companion_getInstance().MIRRORED_REPEAT);
  }
  var TextureWrapMode$REPEAT_instance;
  function TextureWrapMode$REPEAT_getInstance() {
    TextureWrapMode_initFields();
    return TextureWrapMode$REPEAT_instance;
  }
  var TextureWrapMode$CLAMP_TO_EDGE_instance;
  function TextureWrapMode$CLAMP_TO_EDGE_getInstance() {
    TextureWrapMode_initFields();
    return TextureWrapMode$CLAMP_TO_EDGE_instance;
  }
  var TextureWrapMode$MIRRORED_REPEAT_instance;
  function TextureWrapMode$MIRRORED_REPEAT_getInstance() {
    TextureWrapMode_initFields();
    return TextureWrapMode$MIRRORED_REPEAT_instance;
  }
  TextureWrapMode.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TextureWrapMode',
    interfaces: [Enum]
  };
  function TextureWrapMode$values() {
    return [TextureWrapMode$REPEAT_getInstance(), TextureWrapMode$CLAMP_TO_EDGE_getInstance(), TextureWrapMode$MIRRORED_REPEAT_getInstance()];
  }
  TextureWrapMode.values = TextureWrapMode$values;
  function TextureWrapMode$valueOf(name) {
    switch (name) {
      case 'REPEAT':
        return TextureWrapMode$REPEAT_getInstance();
      case 'CLAMP_TO_EDGE':
        return TextureWrapMode$CLAMP_TO_EDGE_getInstance();
      case 'MIRRORED_REPEAT':
        return TextureWrapMode$MIRRORED_REPEAT_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.TextureWrapMode.' + name);
    }
  }
  TextureWrapMode.valueOf_61zpoe$ = TextureWrapMode$valueOf;
  function TexturePixelFormat(name, ordinal, value, bytesPerPixel) {
    Enum.call(this);
    this.value = value;
    this.bytesPerPixel = bytesPerPixel;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TexturePixelFormat_initFields() {
    TexturePixelFormat_initFields = function () {
    };
    TexturePixelFormat$DEPTH_COMPONENT_instance = new TexturePixelFormat('DEPTH_COMPONENT', 0, Gl20$Companion_getInstance().DEPTH_COMPONENT, 1);
    TexturePixelFormat$ALPHA_instance = new TexturePixelFormat('ALPHA', 1, Gl20$Companion_getInstance().ALPHA, 1);
    TexturePixelFormat$RGB_instance = new TexturePixelFormat('RGB', 2, Gl20$Companion_getInstance().RGB, 3);
    TexturePixelFormat$RGBA_instance = new TexturePixelFormat('RGBA', 3, Gl20$Companion_getInstance().RGBA, 4);
    TexturePixelFormat$LUMINANCE_instance = new TexturePixelFormat('LUMINANCE', 4, Gl20$Companion_getInstance().LUMINANCE, 1);
    TexturePixelFormat$LUMINANCE_ALPHA_instance = new TexturePixelFormat('LUMINANCE_ALPHA', 5, Gl20$Companion_getInstance().LUMINANCE_ALPHA, 2);
  }
  var TexturePixelFormat$DEPTH_COMPONENT_instance;
  function TexturePixelFormat$DEPTH_COMPONENT_getInstance() {
    TexturePixelFormat_initFields();
    return TexturePixelFormat$DEPTH_COMPONENT_instance;
  }
  var TexturePixelFormat$ALPHA_instance;
  function TexturePixelFormat$ALPHA_getInstance() {
    TexturePixelFormat_initFields();
    return TexturePixelFormat$ALPHA_instance;
  }
  var TexturePixelFormat$RGB_instance;
  function TexturePixelFormat$RGB_getInstance() {
    TexturePixelFormat_initFields();
    return TexturePixelFormat$RGB_instance;
  }
  var TexturePixelFormat$RGBA_instance;
  function TexturePixelFormat$RGBA_getInstance() {
    TexturePixelFormat_initFields();
    return TexturePixelFormat$RGBA_instance;
  }
  var TexturePixelFormat$LUMINANCE_instance;
  function TexturePixelFormat$LUMINANCE_getInstance() {
    TexturePixelFormat_initFields();
    return TexturePixelFormat$LUMINANCE_instance;
  }
  var TexturePixelFormat$LUMINANCE_ALPHA_instance;
  function TexturePixelFormat$LUMINANCE_ALPHA_getInstance() {
    TexturePixelFormat_initFields();
    return TexturePixelFormat$LUMINANCE_ALPHA_instance;
  }
  TexturePixelFormat.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TexturePixelFormat',
    interfaces: [Enum]
  };
  function TexturePixelFormat$values() {
    return [TexturePixelFormat$DEPTH_COMPONENT_getInstance(), TexturePixelFormat$ALPHA_getInstance(), TexturePixelFormat$RGB_getInstance(), TexturePixelFormat$RGBA_getInstance(), TexturePixelFormat$LUMINANCE_getInstance(), TexturePixelFormat$LUMINANCE_ALPHA_getInstance()];
  }
  TexturePixelFormat.values = TexturePixelFormat$values;
  function TexturePixelFormat$valueOf(name) {
    switch (name) {
      case 'DEPTH_COMPONENT':
        return TexturePixelFormat$DEPTH_COMPONENT_getInstance();
      case 'ALPHA':
        return TexturePixelFormat$ALPHA_getInstance();
      case 'RGB':
        return TexturePixelFormat$RGB_getInstance();
      case 'RGBA':
        return TexturePixelFormat$RGBA_getInstance();
      case 'LUMINANCE':
        return TexturePixelFormat$LUMINANCE_getInstance();
      case 'LUMINANCE_ALPHA':
        return TexturePixelFormat$LUMINANCE_ALPHA_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.TexturePixelFormat.' + name);
    }
  }
  TexturePixelFormat.valueOf_61zpoe$ = TexturePixelFormat$valueOf;
  function TexturePixelType(name, ordinal, value) {
    Enum.call(this);
    this.value = value;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TexturePixelType_initFields() {
    TexturePixelType_initFields = function () {
    };
    TexturePixelType$UNSIGNED_BYTE_instance = new TexturePixelType('UNSIGNED_BYTE', 0, Gl20$Companion_getInstance().UNSIGNED_BYTE);
    TexturePixelType$UNSIGNED_SHORT_5_6_5_instance = new TexturePixelType('UNSIGNED_SHORT_5_6_5', 1, Gl20$Companion_getInstance().UNSIGNED_SHORT_5_6_5);
    TexturePixelType$UNSIGNED_SHORT_5_5_5_1_instance = new TexturePixelType('UNSIGNED_SHORT_5_5_5_1', 2, Gl20$Companion_getInstance().UNSIGNED_SHORT_5_5_5_1);
    TexturePixelType$UNSIGNED_SHORT_4_4_4_4_instance = new TexturePixelType('UNSIGNED_SHORT_4_4_4_4', 3, Gl20$Companion_getInstance().UNSIGNED_SHORT_4_4_4_4);
  }
  var TexturePixelType$UNSIGNED_BYTE_instance;
  function TexturePixelType$UNSIGNED_BYTE_getInstance() {
    TexturePixelType_initFields();
    return TexturePixelType$UNSIGNED_BYTE_instance;
  }
  var TexturePixelType$UNSIGNED_SHORT_5_6_5_instance;
  function TexturePixelType$UNSIGNED_SHORT_5_6_5_getInstance() {
    TexturePixelType_initFields();
    return TexturePixelType$UNSIGNED_SHORT_5_6_5_instance;
  }
  var TexturePixelType$UNSIGNED_SHORT_5_5_5_1_instance;
  function TexturePixelType$UNSIGNED_SHORT_5_5_5_1_getInstance() {
    TexturePixelType_initFields();
    return TexturePixelType$UNSIGNED_SHORT_5_5_5_1_instance;
  }
  var TexturePixelType$UNSIGNED_SHORT_4_4_4_4_instance;
  function TexturePixelType$UNSIGNED_SHORT_4_4_4_4_getInstance() {
    TexturePixelType_initFields();
    return TexturePixelType$UNSIGNED_SHORT_4_4_4_4_instance;
  }
  TexturePixelType.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'TexturePixelType',
    interfaces: [Enum]
  };
  function TexturePixelType$values() {
    return [TexturePixelType$UNSIGNED_BYTE_getInstance(), TexturePixelType$UNSIGNED_SHORT_5_6_5_getInstance(), TexturePixelType$UNSIGNED_SHORT_5_5_5_1_getInstance(), TexturePixelType$UNSIGNED_SHORT_4_4_4_4_getInstance()];
  }
  TexturePixelType.values = TexturePixelType$values;
  function TexturePixelType$valueOf(name) {
    switch (name) {
      case 'UNSIGNED_BYTE':
        return TexturePixelType$UNSIGNED_BYTE_getInstance();
      case 'UNSIGNED_SHORT_5_6_5':
        return TexturePixelType$UNSIGNED_SHORT_5_6_5_getInstance();
      case 'UNSIGNED_SHORT_5_5_5_1':
        return TexturePixelType$UNSIGNED_SHORT_5_5_5_1_getInstance();
      case 'UNSIGNED_SHORT_4_4_4_4':
        return TexturePixelType$UNSIGNED_SHORT_4_4_4_4_getInstance();
      default:Kotlin.throwISE('No enum constant com.acornui.gl.core.TexturePixelType.' + name);
    }
  }
  TexturePixelType.valueOf_61zpoe$ = TexturePixelType$valueOf;
  function RgbTexture(gl_0, glState, rgbData_0) {
    GlTextureBase.call(this, gl_0, glState);
    this.gl_0 = gl_0;
    this.glState_0 = glState;
    this.rgbData_0 = rgbData_0;
  }
  RgbTexture.prototype.width = function () {
    return this.rgbData_0.width;
  };
  RgbTexture.prototype.height = function () {
    return this.rgbData_0.height;
  };
  RgbTexture.prototype.rgbData = function () {
    return this.rgbData_0;
  };
  RgbTexture.prototype.uploadTexture = function () {
    var tmp$;
    var buffer = BufferFactory$Companion_getInstance().instance.byteBuffer_za3lpa$(this.rgbData_0.bytes.length);
    tmp$ = get_lastIndex_1(this.rgbData_0.bytes);
    for (var i = 0; i <= tmp$; i++) {
      buffer.put_11rb$(this.rgbData_0.bytes[i]);
    }
    buffer.flip();
    this.gl_0.texImage2Db_x66c85$(this.target.value, 0, this.pixelFormat.value, this.rgbData_0.width, this.rgbData_0.height, 0, this.pixelFormat.value, this.pixelType.value, buffer);
  };
  RgbTexture.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'RgbTexture',
    interfaces: [GlTextureBase]
  };
  function rgbTexture(gl_0, glState, rgbData_0, init) {
    var r = new RgbTexture(gl_0, glState, rgbData_0);
    init(r);
    return r;
  }
  function ShaderBatch() {
  }
  ShaderBatch.prototype.begin_za3lpa$ = function (drawMode, callback$default) {
    if (drawMode === void 0)
      drawMode = Gl20$Companion_getInstance().TRIANGLES;
    callback$default ? callback$default(drawMode) : this.begin_za3lpa$$default(drawMode);
  };
  ShaderBatch.prototype.flush_6taknv$ = function (force, callback$default) {
    if (force === void 0)
      force = false;
    callback$default ? callback$default(force) : this.flush_6taknv$$default(force);
  };
  ShaderBatch.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ShaderBatch',
    interfaces: [IndexFeed, VertexFeed, Disposable]
  };
  function ShaderBatchImpl(gl_0, glState, maxIndices, maxVertexComponents) {
    if (maxIndices === void 0)
      maxIndices = 32767;
    if (maxVertexComponents === void 0)
      maxVertexComponents = 32767 * 16 | 0;
    this.gl_0 = gl_0;
    this.glState_0 = glState;
    this.maxIndices = maxIndices;
    this.maxVertexComponents = maxVertexComponents;
    this.vertexAttributes = standardVertexAttributes;
    this._renderCount_0 = 0;
    this.vertexComponentsBuffer_0 = this.gl_0.createBuffer();
    this.indicesBuffer_0 = this.gl_0.createBuffer();
    this._drawMode_0 = Gl20$Companion_getInstance().TRIANGLES;
    this.indices_0 = BufferFactory$Companion_getInstance().instance.shortBuffer_za3lpa$(this.maxIndices);
    this.vertexComponents_0 = BufferFactory$Companion_getInstance().instance.floatBuffer_za3lpa$(this.maxVertexComponents);
    this._highestIndex_0 = -1;
  }
  Object.defineProperty(ShaderBatchImpl.prototype, 'currentDrawMode', {
    get: function () {
      return this._drawMode_0;
    }
  });
  ShaderBatchImpl.prototype.beginFrame = function () {
    this._renderCount_0 = 0;
  };
  ShaderBatchImpl.prototype.endFrame = function () {
    this.flush_6taknv$(true);
  };
  Object.defineProperty(ShaderBatchImpl.prototype, 'renderCount', {
    get: function () {
      return this._renderCount_0;
    }
  });
  ShaderBatchImpl.prototype.putIndex_mq22fl$ = function (index) {
    this.indices_0.put_11rb$(index);
    if (index > this._highestIndex_0)
      this._highestIndex_0 = index;
  };
  ShaderBatchImpl.prototype.bind_0 = function () {
    var tmp$;
    this.gl_0.bindBuffer_gtr22n$(Gl20$Companion_getInstance().ARRAY_BUFFER, this.vertexComponentsBuffer_0);
    this.vertexAttributes.bind_ppmkoa$(this.gl_0, (tmp$ = this.glState_0.shader) != null ? tmp$ : Kotlin.throwNPE());
    this.gl_0.bindBuffer_gtr22n$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, this.indicesBuffer_0);
  };
  ShaderBatchImpl.prototype.allocate_0 = function () {
    this.gl_0.bufferData_qt1dr2$(Gl20$Companion_getInstance().ARRAY_BUFFER, this.vertexComponents_0.capacity << 2, Gl20$Companion_getInstance().DYNAMIC_DRAW);
    this.gl_0.bufferData_qt1dr2$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, this.indices_0.capacity << 1, Gl20$Companion_getInstance().DYNAMIC_DRAW);
  };
  ShaderBatchImpl.prototype.unbind_0 = function () {
    var tmp$;
    this.vertexAttributes.unbind_ppmkoa$(this.gl_0, (tmp$ = this.glState_0.shader) != null ? tmp$ : Kotlin.throwNPE());
    this.gl_0.bindBuffer_gtr22n$(Gl20$Companion_getInstance().ARRAY_BUFFER, null);
    this.gl_0.bindBuffer_gtr22n$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, null);
  };
  ShaderBatchImpl.prototype.begin_za3lpa$$default = function (drawMode) {
    if (this._drawMode_0 === drawMode) {
      this.flush_6taknv$(false);
    }
     else {
      this.flush_6taknv$(true);
      this._drawMode_0 = drawMode;
    }
  };
  ShaderBatchImpl.prototype.flush_6taknv$$default = function (force) {
    var vertexComponentsL = this.vertexComponents_0.position;
    var indicesL = this.indices_0.position;
    if (vertexComponentsL === 0) {
      _assert(indicesL === 0, 'Indices pushed, but no vertices');
      return;
    }
    if (!force && indicesL < this.maxIndices * 0.75 && vertexComponentsL < this.maxVertexComponents * 0.75)
      return;
    if (assertionsEnabled) {
      var vertexSize = this.vertexAttributes.vertexSize;
      _assert(vertexComponentsL % vertexSize === 0, 'vertexData size ' + vertexComponentsL + ' not evenly divisible by vertexSize value ' + vertexSize);
      if (this._drawMode_0 === Gl20$Companion_getInstance().LINES) {
        _assert(indicesL % 2 === 0, 'indices size ' + indicesL + ' not evenly divisible by 2');
      }
       else if (this._drawMode_0 === Gl20$Companion_getInstance().TRIANGLES) {
        _assert(indicesL % 3 === 0, 'indices size ' + indicesL + ' not evenly divisible by 3');
      }
    }
    this.bind_0();
    this.allocate_0();
    this._renderCount_0 = this._renderCount_0 + 1 | 0;
    this.vertexComponents_0.flip();
    this.gl_0.bufferSubDatafv_fov81g$(Gl20$Companion_getInstance().ARRAY_BUFFER, 0, this.vertexComponents_0);
    this.vertexComponents_0.clear();
    if (indicesL > 0) {
      this.indices_0.flip();
      this.gl_0.bufferSubDatasv_ls9hec$(Gl20$Companion_getInstance().ELEMENT_ARRAY_BUFFER, 0, this.indices_0);
      this.gl_0.drawElements_tjonv8$(this._drawMode_0, indicesL, Gl20$Companion_getInstance().UNSIGNED_SHORT, 0);
      this.indices_0.clear();
      this._highestIndex_0 = -1;
    }
     else {
      this.gl_0.drawArrays_qt1dr2$(this._drawMode_0, 0, vertexComponentsL / this.vertexAttributes.vertexSize | 0);
    }
    this.unbind_0();
  };
  Object.defineProperty(ShaderBatchImpl.prototype, 'highestIndex', {
    get: function () {
      return this._highestIndex_0;
    }
  });
  ShaderBatchImpl.prototype.putVertex_qr5cn2$ = function (position, normal, colorTint, u, v) {
    this.vertexAttributes.putVertex_4wyewx$(this.vertexComponents_0, position, normal, colorTint, u, v);
  };
  ShaderBatchImpl.prototype.dispose = function () {
    this.gl_0.deleteBuffer_qv4l9y$(this.vertexComponentsBuffer_0);
    this.gl_0.deleteBuffer_qv4l9y$(this.indicesBuffer_0);
  };
  ShaderBatchImpl.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ShaderBatchImpl',
    interfaces: [ShaderBatch, Disposable]
  };
  function ShaderProgram() {
    ShaderProgram$Companion_getInstance();
  }
  ShaderProgram.prototype.getRequiredUniformLocation_61zpoe$ = function (name) {
    var tmp$;
    tmp$ = this.getUniformLocation_61zpoe$(name);
    if (tmp$ == null) {
      throw new Exception('Uniform not found ' + name);
    }
    return tmp$;
  };
  function ShaderProgram$Companion() {
    ShaderProgram$Companion_instance = this;
    this.A_POSITION = 'a_position';
    this.A_NORMAL = 'a_normal';
    this.A_COLOR_TINT = 'a_colorTint';
    this.A_TEXTURE_COORD = 'a_texCoord';
    this.U_PROJ_TRANS = 'u_projTrans';
    this.U_MODEL_TRANS = 'u_modelTrans';
    this.U_COLOR_TRANS = 'u_colorTrans';
    this.U_COLOR_OFFSET = 'u_colorOffset';
    this.U_TEXTURE = 'u_texture';
  }
  ShaderProgram$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ShaderProgram$Companion_instance = null;
  function ShaderProgram$Companion_getInstance() {
    if (ShaderProgram$Companion_instance === null) {
      new ShaderProgram$Companion();
    }
    return ShaderProgram$Companion_instance;
  }
  ShaderProgram.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'ShaderProgram',
    interfaces: [Disposable]
  };
  function ShaderProgramBase(gl_0, vertexShaderSrc, fragmentShaderSrc, vertexAttributes) {
    if (vertexAttributes === void 0)
      vertexAttributes = hashMapOf_0([new Pair(VertexAttributeUsage_getInstance().POSITION, ShaderProgram$Companion_getInstance().A_POSITION), new Pair(VertexAttributeUsage_getInstance().NORMAL, ShaderProgram$Companion_getInstance().A_NORMAL), new Pair(VertexAttributeUsage_getInstance().COLOR_TINT, ShaderProgram$Companion_getInstance().A_COLOR_TINT), new Pair(VertexAttributeUsage_getInstance().TEXTURE_COORD, ShaderProgram$Companion_getInstance().A_TEXTURE_COORD + '0')]);
    this.gl = gl_0;
    this.vertexAttributes_3sj4dq$_0 = vertexAttributes;
    this._program = this.gl.createProgram();
    this.vertexShader_3sj4dq$_0 = null;
    this.fragmentShader_3sj4dq$_0 = null;
    this.uniformLocationCache_3sj4dq$_0 = HashMap_init();
    this.attributeLocationCache_3sj4dq$_0 = HashMap_init();
    this.vertexShader_3sj4dq$_0 = this.compileShader_nxn1mm$_0(vertexShaderSrc, Gl20$Companion_getInstance().VERTEX_SHADER);
    this.fragmentShader_3sj4dq$_0 = this.compileShader_nxn1mm$_0(fragmentShaderSrc, Gl20$Companion_getInstance().FRAGMENT_SHADER);
    this.gl.linkProgram_bf3f0o$(this._program);
  }
  Object.defineProperty(ShaderProgramBase.prototype, 'program', {
    get: function () {
      return this._program;
    }
  });
  ShaderProgramBase.prototype.bind = function () {
    this.gl.useProgram_15mccn$(this._program);
  };
  ShaderProgramBase.prototype.unbind = function () {
    this.gl.useProgram_15mccn$(null);
  };
  ShaderProgramBase.prototype.getAttributeLocationByUsage_za3lpa$ = function (usage) {
    var tmp$;
    tmp$ = this.vertexAttributes_3sj4dq$_0.get_11rb$(usage);
    if (tmp$ == null) {
      return -1;
    }
    var name = tmp$;
    return this.getAttributeLocation_61zpoe$(name);
  };
  ShaderProgramBase.prototype.getAttributeLocation_61zpoe$ = function (name) {
    var tmp$;
    if (!this.attributeLocationCache_3sj4dq$_0.containsKey_11rb$(name)) {
      var $receiver = this.attributeLocationCache_3sj4dq$_0;
      var value = this.gl.getAttribLocation_stzeiy$(this._program, name);
      $receiver.put_xwzc9p$(name, value);
    }
    return (tmp$ = this.attributeLocationCache_3sj4dq$_0.get_11rb$(name)) != null ? tmp$ : Kotlin.throwNPE();
  };
  ShaderProgramBase.prototype.getUniformLocation_61zpoe$ = function (name) {
    if (!this.uniformLocationCache_3sj4dq$_0.containsKey_11rb$(name)) {
      var $receiver = this.uniformLocationCache_3sj4dq$_0;
      var value = this.gl.getUniformLocation_stzeiy$(this._program, name);
      $receiver.put_xwzc9p$(name, value);
    }
    return this.uniformLocationCache_3sj4dq$_0.get_11rb$(name);
  };
  ShaderProgramBase.prototype.compileShader_nxn1mm$_0 = function (shaderSrc, shaderType) {
    var gl_0 = this.gl;
    var shader = gl_0.createShader_za3lpa$(shaderType);
    gl_0.shaderSource_cwqujt$(shader, shaderSrc);
    gl_0.compileShader_adcz9h$(shader);
    if (!gl_0.getShaderParameterb_v5gftj$(shader, Gl20$Companion_getInstance().COMPILE_STATUS)) {
      var log = gl_0.getShaderInfoLog_adcz9h$(shader);
      throw new ShaderCompileException(log != null ? log : '[Unknown]');
    }
    gl_0.attachShader_62dx5d$(this._program, shader);
    return shader;
  };
  ShaderProgramBase.prototype.dispose = function () {
    var gl_0 = this.gl;
    gl_0.deleteShader_adcz9h$(this.vertexShader_3sj4dq$_0);
    gl_0.deleteShader_adcz9h$(this.fragmentShader_3sj4dq$_0);
    gl_0.deleteProgram_bf3f0o$(this._program);
  };
  ShaderProgramBase.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ShaderProgramBase',
    interfaces: [ShaderProgram]
  };
  function ShaderCompileException(message) {
    Exception.call(this, message);
    this.name = 'ShaderCompileException';
  }
  ShaderCompileException.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'ShaderCompileException',
    interfaces: [Exception]
  };
  function DefaultShaderProgram(gl_0) {
    ShaderProgramBase.call(this, gl_0, '\n#version 100\n\nattribute vec4 a_position;\nattribute vec4 a_colorTint;\nattribute vec2 a_texCoord0;\n\nuniform mat4 u_projTrans;\n\nvarying vec4 v_colorTint;\nvarying vec2 v_texCoord;\n\nvoid main() {\n\tv_colorTint = a_colorTint;\n\tv_texCoord = a_texCoord0;\n\tgl_Position =  u_projTrans * a_position;\n}', '\n#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP\n#endif\n\nvarying LOWP vec4 v_colorTint;\nvarying vec2 v_texCoord;\n\nuniform sampler2D u_texture;\n\nvoid main() {\n\tgl_FragColor = v_colorTint * texture2D(u_texture, v_texCoord);\n}');
  }
  DefaultShaderProgram.prototype.bind = function () {
    var tmp$;
    ShaderProgramBase.prototype.bind.call(this);
    this.gl.uniform1i_y004uz$((tmp$ = this.getUniformLocation_61zpoe$(ShaderProgram$Companion_getInstance().U_TEXTURE)) != null ? tmp$ : Kotlin.throwNPE(), 0);
  };
  DefaultShaderProgram.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'DefaultShaderProgram',
    interfaces: [ShaderProgramBase]
  };
  function standardVertexAttributes$ObjectLiteral(attributes) {
    VertexAttributes.call(this, attributes);
  }
  standardVertexAttributes$ObjectLiteral.prototype.getVertex_63flxo$ = function (vertexData, vertex) {
    vertex.position.x = vertexData.get();
    vertex.position.y = vertexData.get();
    vertex.position.z = vertexData.get();
    vertex.normal.x = vertexData.get();
    vertex.normal.y = vertexData.get();
    vertex.normal.z = vertexData.get();
    vertex.colorTint.r = vertexData.get();
    vertex.colorTint.g = vertexData.get();
    vertex.colorTint.b = vertexData.get();
    vertex.colorTint.a = vertexData.get();
    vertex.u = vertexData.get();
    vertex.v = vertexData.get();
  };
  standardVertexAttributes$ObjectLiteral.prototype.putVertex_4wyewx$ = function (vertexData, position, normal, colorTint, u, v) {
    vertexData.put_11rb$(position.x);
    vertexData.put_11rb$(position.y);
    vertexData.put_11rb$(position.z);
    vertexData.put_11rb$(normal.x);
    vertexData.put_11rb$(normal.y);
    vertexData.put_11rb$(normal.z);
    vertexData.put_11rb$(colorTint.r);
    vertexData.put_11rb$(colorTint.g);
    vertexData.put_11rb$(colorTint.b);
    vertexData.put_11rb$(colorTint.a);
    vertexData.put_11rb$(u);
    vertexData.put_11rb$(v);
  };
  standardVertexAttributes$ObjectLiteral.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    interfaces: [VertexAttributes]
  };
  var standardVertexAttributes;
  function Vertex(position, normal, colorTint, u, v) {
    Vertex$Companion_getInstance();
    if (position === void 0)
      position = new Vector3();
    if (normal === void 0)
      normal = new Vector3();
    if (colorTint === void 0)
      colorTint = Color.Companion.WHITE.copy_7b5o5w$();
    if (u === void 0)
      u = 0.0;
    if (v === void 0)
      v = 0.0;
    this.position = position;
    this.normal = normal;
    this.colorTint = colorTint;
    this.u = u;
    this.v = v;
  }
  Vertex.prototype.clear = function () {
    this.position.clear();
    this.normal.clear();
    this.colorTint.set_1qghwi$(Color.Companion.WHITE);
    this.u = 0.0;
    this.v = 0.0;
  };
  Vertex.prototype.free = function () {
    Vertex$Companion_getInstance().pool_0.free_11rb$(this);
  };
  Vertex.prototype.set_t7yqw$ = function (other) {
    this.position.set_1fv2cb$(other.position);
    this.normal.set_1fv2cb$(other.normal);
    this.colorTint.set_1qghwi$(other.colorTint);
    this.u = other.u;
    this.v = other.v;
    return this;
  };
  function Vertex$Companion() {
    Vertex$Companion_instance = this;
    this.pool_0 = new ClearableObjectPool(void 0, Vertex$Companion$pool$lambda);
  }
  Vertex$Companion.prototype.obtain = function () {
    return this.pool_0.obtain();
  };
  Vertex$Companion.prototype.obtain_t7yqw$ = function (copy_0) {
    var vertex = this.pool_0.obtain();
    vertex.set_t7yqw$(copy_0);
    return vertex;
  };
  Vertex$Companion.prototype.obtain_ormrjx$ = function (position, normal, colorTint, u, v) {
    var vertex = this.pool_0.obtain();
    vertex.position.set_hj2y21$(position);
    vertex.normal.set_1fv2cb$(normal);
    vertex.colorTint.set_1qghwi$(colorTint);
    vertex.u = u;
    vertex.v = v;
    return vertex;
  };
  Vertex$Companion.prototype.obtain_qr5cn2$ = function (position, normal, colorTint, u, v) {
    var vertex = this.pool_0.obtain();
    vertex.position.set_1fv2cb$(position);
    vertex.normal.set_1fv2cb$(normal);
    vertex.colorTint.set_1qghwi$(colorTint);
    vertex.u = u;
    vertex.v = v;
    return vertex;
  };
  function Vertex$Companion$pool$lambda() {
    return new Vertex();
  }
  Vertex$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Vertex$Companion_instance = null;
  function Vertex$Companion_getInstance() {
    if (Vertex$Companion_instance === null) {
      new Vertex$Companion();
    }
    return Vertex$Companion_instance;
  }
  Vertex.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Vertex',
    interfaces: [Clearable]
  };
  Vertex.prototype.component1 = function () {
    return this.position;
  };
  Vertex.prototype.component2 = function () {
    return this.normal;
  };
  Vertex.prototype.component3 = function () {
    return this.colorTint;
  };
  Vertex.prototype.component4 = function () {
    return this.u;
  };
  Vertex.prototype.component5 = function () {
    return this.v;
  };
  Vertex.prototype.copy_qr5cn2$ = function (position, normal, colorTint, u, v) {
    return new Vertex(position === void 0 ? this.position : position, normal === void 0 ? this.normal : normal, colorTint === void 0 ? this.colorTint : colorTint, u === void 0 ? this.u : u, v === void 0 ? this.v : v);
  };
  Vertex.prototype.toString = function () {
    return 'Vertex(position=' + Kotlin.toString(this.position) + (', normal=' + Kotlin.toString(this.normal)) + (', colorTint=' + Kotlin.toString(this.colorTint)) + (', u=' + Kotlin.toString(this.u)) + (', v=' + Kotlin.toString(this.v)) + ')';
  };
  Vertex.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.position) | 0;
    result = result * 31 + Kotlin.hashCode(this.normal) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorTint) | 0;
    result = result * 31 + Kotlin.hashCode(this.u) | 0;
    result = result * 31 + Kotlin.hashCode(this.v) | 0;
    return result;
  };
  Vertex.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.position, other.position) && Kotlin.equals(this.normal, other.normal) && Kotlin.equals(this.colorTint, other.colorTint) && Kotlin.equals(this.u, other.u) && Kotlin.equals(this.v, other.v)))));
  };
  function VertexFeed() {
  }
  VertexFeed.prototype.putVertex_t7yqw$ = function (vertex) {
    this.putVertex_qr5cn2$(vertex.position, vertex.normal, vertex.colorTint, vertex.u, vertex.v);
  };
  VertexFeed.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'VertexFeed',
    interfaces: []
  };
  function IndexFeed() {
  }
  IndexFeed.prototype.putIndex_za3lpa$ = function (index) {
    this.putIndex_mq22fl$(Kotlin.toShort(index));
  };
  IndexFeed.$metadata$ = {
    kind: Kotlin.Kind.INTERFACE,
    simpleName: 'IndexFeed',
    interfaces: []
  };
  function pushQuadIndices($receiver) {
    var n = $receiver.highestIndex + 1;
    $receiver.putIndex_za3lpa$(n + 0 | 0);
    $receiver.putIndex_za3lpa$(n + 1 | 0);
    $receiver.putIndex_za3lpa$(n + 2 | 0);
    $receiver.putIndex_za3lpa$(n + 2 | 0);
    $receiver.putIndex_za3lpa$(n + 3 | 0);
    $receiver.putIndex_za3lpa$(n + 0 | 0);
  }
  function VertexAttributes(attributes) {
    this.attributes = attributes;
    this.stride = 0;
    this.vertexSize = 0;
    var tmp$;
    _assert(this.attributes.size <= 16, 'A shader program may not contain more than 16 vertex attribute objects.');
    var offset = 0;
    tmp$ = get_lastIndex(this.attributes);
    for (var i = 0; i <= tmp$; i++) {
      offset = offset + this.attributes.get_za3lpa$(i).size | 0;
    }
    this.stride = offset;
    this.vertexSize = offset >> 2;
  }
  VertexAttributes.prototype.bind_ppmkoa$ = function (gl_0, shaderProgram) {
    var tmp$;
    var offset = 0;
    tmp$ = get_lastIndex(this.attributes);
    for (var i = 0; i <= tmp$; i++) {
      var attribute = this.attributes.get_za3lpa$(i);
      var attributeLocation = shaderProgram.getAttributeLocationByUsage_za3lpa$(attribute.usage);
      if (attributeLocation !== -1) {
        gl_0.enableVertexAttribArray_za3lpa$(attributeLocation);
        gl_0.vertexAttribPointer_owihk5$(attributeLocation, attribute.numComponents, attribute.type, attribute.normalized, this.stride, offset);
      }
      offset = offset + attribute.size | 0;
    }
  };
  VertexAttributes.prototype.unbind_ppmkoa$ = function (gl_0, shaderProgram) {
    var tmp$;
    tmp$ = get_lastIndex(this.attributes);
    for (var i = 0; i <= tmp$; i++) {
      var attribute = this.attributes.get_za3lpa$(i);
      var attributeLocation = shaderProgram.getAttributeLocationByUsage_za3lpa$(attribute.usage);
      if (attributeLocation === -1)
        continue;
      gl_0.disableVertexAttribArray_za3lpa$(attributeLocation);
    }
  };
  VertexAttributes.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VertexAttributes',
    interfaces: []
  };
  function VertexAttribute(numComponents, normalized, type, usage) {
    this.numComponents = numComponents;
    this.normalized = normalized;
    this.type = type;
    this.usage = usage;
    this.componentSize = 0;
    this.size = 0;
    var tmp$;
    if (this.numComponents < 1 || this.numComponents > 4)
      throw new IllegalArgumentException('numComponents must be between 1 and 4');
    tmp$ = this.type;
    if (tmp$ === Gl20$Companion_getInstance().FLOAT || tmp$ === Gl20$Companion_getInstance().INT || tmp$ === Gl20$Companion_getInstance().UNSIGNED_INT)
      this.componentSize = 4;
    else if (tmp$ === Gl20$Companion_getInstance().SHORT || tmp$ === Gl20$Companion_getInstance().UNSIGNED_SHORT)
      this.componentSize = 2;
    else if (tmp$ === Gl20$Companion_getInstance().BYTE || tmp$ === Gl20$Companion_getInstance().UNSIGNED_BYTE)
      this.componentSize = 1;
    else
      throw new Exception('Unknown attribute type.');
    this.size = Kotlin.imul(this.componentSize, this.numComponents);
  }
  VertexAttribute.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'VertexAttribute',
    interfaces: []
  };
  VertexAttribute.prototype.component1 = function () {
    return this.numComponents;
  };
  VertexAttribute.prototype.component2 = function () {
    return this.normalized;
  };
  VertexAttribute.prototype.component3 = function () {
    return this.type;
  };
  VertexAttribute.prototype.component4 = function () {
    return this.usage;
  };
  VertexAttribute.prototype.copy_l08jiz$ = function (numComponents, normalized, type, usage) {
    return new VertexAttribute(numComponents === void 0 ? this.numComponents : numComponents, normalized === void 0 ? this.normalized : normalized, type === void 0 ? this.type : type, usage === void 0 ? this.usage : usage);
  };
  VertexAttribute.prototype.toString = function () {
    return 'VertexAttribute(numComponents=' + Kotlin.toString(this.numComponents) + (', normalized=' + Kotlin.toString(this.normalized)) + (', type=' + Kotlin.toString(this.type)) + (', usage=' + Kotlin.toString(this.usage)) + ')';
  };
  VertexAttribute.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.numComponents) | 0;
    result = result * 31 + Kotlin.hashCode(this.normalized) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.usage) | 0;
    return result;
  };
  VertexAttribute.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.numComponents, other.numComponents) && Kotlin.equals(this.normalized, other.normalized) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.usage, other.usage)))));
  };
  function VertexAttributeUsage() {
    VertexAttributeUsage_instance = this;
    this.POSITION = 0;
    this.NORMAL = 1;
    this.COLOR_TINT = 2;
    this.TEXTURE_COORD = 3;
  }
  VertexAttributeUsage.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'VertexAttributeUsage',
    interfaces: []
  };
  var VertexAttributeUsage_instance = null;
  function VertexAttributeUsage_getInstance() {
    if (VertexAttributeUsage_instance === null) {
      new VertexAttributeUsage();
    }
    return VertexAttributeUsage_instance;
  }
  function WrappedGl20(wrapped, before, after) {
    this.wrapped = wrapped;
    this.before_gj9uq2$_0 = before;
    this.after_gj9uq2$_0 = after;
  }
  WrappedGl20.prototype.activeTexture_za3lpa$ = function (texture) {
    this.before_gj9uq2$_0();
    this.wrapped.activeTexture_za3lpa$(texture);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.attachShader_62dx5d$ = function (program, shader) {
    this.before_gj9uq2$_0();
    this.wrapped.attachShader_62dx5d$(program, shader);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bindAttribLocation_9ij5eg$ = function (program, index, name) {
    this.before_gj9uq2$_0();
    this.wrapped.bindAttribLocation_9ij5eg$(program, index, name);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bindBuffer_gtr22n$ = function (target, buffer) {
    this.before_gj9uq2$_0();
    this.wrapped.bindBuffer_gtr22n$(target, buffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bindFramebuffer_6chnl2$ = function (target, framebuffer) {
    this.before_gj9uq2$_0();
    this.wrapped.bindFramebuffer_6chnl2$(target, framebuffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bindRenderbuffer_abwfzf$ = function (target, renderbuffer) {
    this.before_gj9uq2$_0();
    this.wrapped.bindRenderbuffer_abwfzf$(target, renderbuffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bindTexture_2s7dt8$ = function (target, texture) {
    this.before_gj9uq2$_0();
    this.wrapped.bindTexture_2s7dt8$(target, texture);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.blendColor_7b5o5w$ = function (red, green, blue, alpha) {
    this.before_gj9uq2$_0();
    this.wrapped.blendColor_7b5o5w$(red, green, blue, alpha);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.blendEquation_za3lpa$ = function (mode) {
    this.before_gj9uq2$_0();
    this.wrapped.blendEquation_za3lpa$(mode);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.blendEquationSeparate_vux9f0$ = function (modeRGB, modeAlpha) {
    this.before_gj9uq2$_0();
    this.wrapped.blendEquationSeparate_vux9f0$(modeRGB, modeAlpha);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.blendFunc_vux9f0$ = function (sfactor, dfactor) {
    this.before_gj9uq2$_0();
    this.wrapped.blendFunc_vux9f0$(sfactor, dfactor);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.blendFuncSeparate_tjonv8$ = function (srcRGB, dstRGB, srcAlpha, dstAlpha) {
    this.before_gj9uq2$_0();
    this.wrapped.blendFuncSeparate_tjonv8$(srcRGB, dstRGB, srcAlpha, dstAlpha);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bufferData_qt1dr2$ = function (target, size, usage) {
    this.before_gj9uq2$_0();
    this.wrapped.bufferData_qt1dr2$(target, size, usage);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bufferDatabv_x99ops$ = function (target, data, usage) {
    this.before_gj9uq2$_0();
    this.wrapped.bufferDatabv_x99ops$(target, data, usage);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bufferDatafv_ox35k4$ = function (target, data, usage) {
    this.before_gj9uq2$_0();
    this.wrapped.bufferDatafv_ox35k4$(target, data, usage);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bufferDatasv_5kx7uk$ = function (target, data, usage) {
    this.before_gj9uq2$_0();
    this.wrapped.bufferDatasv_5kx7uk$(target, data, usage);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bufferSubDatafv_fov81g$ = function (target, offset, data) {
    this.before_gj9uq2$_0();
    this.wrapped.bufferSubDatafv_fov81g$(target, offset, data);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.bufferSubDatasv_ls9hec$ = function (target, offset, data) {
    this.before_gj9uq2$_0();
    this.wrapped.bufferSubDatasv_ls9hec$(target, offset, data);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.checkFramebufferStatus_za3lpa$ = function (target) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.checkFramebufferStatus_za3lpa$(target);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.clear_za3lpa$ = function (mask) {
    this.before_gj9uq2$_0();
    this.wrapped.clear_za3lpa$(mask);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.clearColor_7b5o5w$ = function (red, green, blue, alpha) {
    this.before_gj9uq2$_0();
    this.wrapped.clearColor_7b5o5w$(red, green, blue, alpha);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.clearDepth_mx4ult$ = function (depth) {
    this.before_gj9uq2$_0();
    this.wrapped.clearDepth_mx4ult$(depth);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.clearStencil_za3lpa$ = function (s) {
    this.before_gj9uq2$_0();
    this.wrapped.clearStencil_za3lpa$(s);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.color_1qghwi$ = function (value) {
    this.before_gj9uq2$_0();
    this.wrapped.color_1qghwi$(value);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.colorMask_nyyhg$ = function (red, green, blue, alpha) {
    this.before_gj9uq2$_0();
    this.wrapped.colorMask_nyyhg$(red, green, blue, alpha);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.compileShader_adcz9h$ = function (shader) {
    this.before_gj9uq2$_0();
    this.wrapped.compileShader_adcz9h$(shader);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.copyTexImage2D_wrdw30$ = function (target, level, internalFormat, x, y, width, height, border) {
    this.before_gj9uq2$_0();
    this.wrapped.copyTexImage2D_wrdw30$(target, level, internalFormat, x, y, width, height, border);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.copyTexSubImage2D_wrdw30$ = function (target, level, xOffset, yOffset, x, y, width, height) {
    this.before_gj9uq2$_0();
    this.wrapped.copyTexSubImage2D_wrdw30$(target, level, xOffset, yOffset, x, y, width, height);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.createBuffer = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.createBuffer();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.createFramebuffer = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.createFramebuffer();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.createProgram = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.createProgram();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.createRenderbuffer = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.createRenderbuffer();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.createShader_za3lpa$ = function (type) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.createShader_za3lpa$(type);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.createTexture = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.createTexture();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.cullFace_za3lpa$ = function (mode) {
    this.before_gj9uq2$_0();
    this.wrapped.cullFace_za3lpa$(mode);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.deleteBuffer_qv4l9y$ = function (buffer) {
    this.before_gj9uq2$_0();
    this.wrapped.deleteBuffer_qv4l9y$(buffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.deleteFramebuffer_ljn901$ = function (framebuffer) {
    this.before_gj9uq2$_0();
    this.wrapped.deleteFramebuffer_ljn901$(framebuffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.deleteProgram_bf3f0o$ = function (program) {
    this.before_gj9uq2$_0();
    this.wrapped.deleteProgram_bf3f0o$(program);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.deleteRenderbuffer_x108uk$ = function (renderbuffer) {
    this.before_gj9uq2$_0();
    this.wrapped.deleteRenderbuffer_x108uk$(renderbuffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.deleteShader_adcz9h$ = function (shader) {
    this.before_gj9uq2$_0();
    this.wrapped.deleteShader_adcz9h$(shader);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.deleteTexture_yq8m69$ = function (texture) {
    this.before_gj9uq2$_0();
    this.wrapped.deleteTexture_yq8m69$(texture);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.depthFunc_za3lpa$ = function (func) {
    this.before_gj9uq2$_0();
    this.wrapped.depthFunc_za3lpa$(func);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.depthMask_6taknv$ = function (flag) {
    this.before_gj9uq2$_0();
    this.wrapped.depthMask_6taknv$(flag);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.depthRange_dleff0$ = function (zNear, zFar) {
    this.before_gj9uq2$_0();
    this.wrapped.depthRange_dleff0$(zNear, zFar);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.detachShader_62dx5d$ = function (program, shader) {
    this.before_gj9uq2$_0();
    this.wrapped.detachShader_62dx5d$(program, shader);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.disable_za3lpa$ = function (cap) {
    this.before_gj9uq2$_0();
    this.wrapped.disable_za3lpa$(cap);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.disableVertexAttribArray_za3lpa$ = function (index) {
    this.before_gj9uq2$_0();
    this.wrapped.disableVertexAttribArray_za3lpa$(index);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.drawArrays_qt1dr2$ = function (mode, first_0, count) {
    this.before_gj9uq2$_0();
    this.wrapped.drawArrays_qt1dr2$(mode, first_0, count);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.drawElements_tjonv8$ = function (mode, count, type, offset) {
    this.before_gj9uq2$_0();
    this.wrapped.drawElements_tjonv8$(mode, count, type, offset);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.enable_za3lpa$ = function (cap) {
    this.before_gj9uq2$_0();
    this.wrapped.enable_za3lpa$(cap);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.enableVertexAttribArray_za3lpa$ = function (index) {
    this.before_gj9uq2$_0();
    this.wrapped.enableVertexAttribArray_za3lpa$(index);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.finish = function () {
    this.before_gj9uq2$_0();
    this.wrapped.finish();
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.flush = function () {
    this.before_gj9uq2$_0();
    this.wrapped.flush();
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.framebufferRenderbuffer_4jii3u$ = function (target, attachment, renderbufferTarget, renderbuffer) {
    this.before_gj9uq2$_0();
    this.wrapped.framebufferRenderbuffer_4jii3u$(target, attachment, renderbufferTarget, renderbuffer);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.framebufferTexture2D_sivm59$ = function (target, attachment, textureTarget, texture, level) {
    this.before_gj9uq2$_0();
    this.wrapped.framebufferTexture2D_sivm59$(target, attachment, textureTarget, texture, level);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.frontFace_za3lpa$ = function (mode) {
    this.before_gj9uq2$_0();
    this.wrapped.frontFace_za3lpa$(mode);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.generateMipmap_za3lpa$ = function (target) {
    this.before_gj9uq2$_0();
    this.wrapped.generateMipmap_za3lpa$(target);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.getActiveAttrib_q5fai$ = function (program, index) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getActiveAttrib_q5fai$(program, index);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getActiveUniform_q5fai$ = function (program, index) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getActiveUniform_q5fai$(program, index);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getAttachedShaders_bf3f0o$ = function (program) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getAttachedShaders_bf3f0o$(program);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getAttribLocation_stzeiy$ = function (program, name) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getAttribLocation_stzeiy$(program, name);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getError = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getError();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getProgramInfoLog_bf3f0o$ = function (program) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getProgramInfoLog_bf3f0o$(program);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getShaderInfoLog_adcz9h$ = function (shader) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getShaderInfoLog_adcz9h$(shader);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getUniformLocation_stzeiy$ = function (program, name) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getUniformLocation_stzeiy$(program, name);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.hint_vux9f0$ = function (target, mode) {
    this.before_gj9uq2$_0();
    this.wrapped.hint_vux9f0$(target, mode);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.isBuffer_qv4l9y$ = function (buffer) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isBuffer_qv4l9y$(buffer);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.isEnabled_za3lpa$ = function (cap) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isEnabled_za3lpa$(cap);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.isFramebuffer_ljn901$ = function (framebuffer) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isFramebuffer_ljn901$(framebuffer);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.isProgram_bf3f0o$ = function (program) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isProgram_bf3f0o$(program);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.isRenderbuffer_x108uk$ = function (renderbuffer) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isRenderbuffer_x108uk$(renderbuffer);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.isShader_adcz9h$ = function (shader) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isShader_adcz9h$(shader);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.isTexture_yq8m69$ = function (texture) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.isTexture_yq8m69$(texture);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.lineWidth_mx4ult$ = function (width) {
    this.before_gj9uq2$_0();
    this.wrapped.lineWidth_mx4ult$(width);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.linkProgram_bf3f0o$ = function (program) {
    this.before_gj9uq2$_0();
    this.wrapped.linkProgram_bf3f0o$(program);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.pixelStorei_vux9f0$ = function (pName, param) {
    this.before_gj9uq2$_0();
    this.wrapped.pixelStorei_vux9f0$(pName, param);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.polygonOffset_dleff0$ = function (factor, units) {
    this.before_gj9uq2$_0();
    this.wrapped.polygonOffset_dleff0$(factor, units);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.readPixels_hwtw84$ = function (x, y, width, height, format, type, pixels) {
    this.before_gj9uq2$_0();
    this.wrapped.readPixels_hwtw84$(x, y, width, height, format, type, pixels);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.renderbufferStorage_tjonv8$ = function (target, internalFormat, width, height) {
    this.before_gj9uq2$_0();
    this.wrapped.renderbufferStorage_tjonv8$(target, internalFormat, width, height);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.sampleCoverage_8ca0d4$ = function (value, invert) {
    this.before_gj9uq2$_0();
    this.wrapped.sampleCoverage_8ca0d4$(value, invert);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.scissor_tjonv8$ = function (x, y, width, height) {
    this.before_gj9uq2$_0();
    this.wrapped.scissor_tjonv8$(x, y, width, height);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.shaderSource_cwqujt$ = function (shader, source) {
    this.before_gj9uq2$_0();
    this.wrapped.shaderSource_cwqujt$(shader, source);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.stencilFunc_qt1dr2$ = function (func, ref, mask) {
    this.before_gj9uq2$_0();
    this.wrapped.stencilFunc_qt1dr2$(func, ref, mask);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.stencilFuncSeparate_tjonv8$ = function (face, func, ref, mask) {
    this.before_gj9uq2$_0();
    this.wrapped.stencilFuncSeparate_tjonv8$(face, func, ref, mask);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.stencilMask_za3lpa$ = function (mask) {
    this.before_gj9uq2$_0();
    this.wrapped.stencilMask_za3lpa$(mask);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.stencilMaskSeparate_vux9f0$ = function (face, mask) {
    this.before_gj9uq2$_0();
    this.wrapped.stencilMaskSeparate_vux9f0$(face, mask);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.stencilOp_qt1dr2$ = function (fail, zfail, zpass) {
    this.before_gj9uq2$_0();
    this.wrapped.stencilOp_qt1dr2$(fail, zfail, zpass);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.stencilOpSeparate_tjonv8$ = function (face, fail, zfail, zpass) {
    this.before_gj9uq2$_0();
    this.wrapped.stencilOpSeparate_tjonv8$(face, fail, zfail, zpass);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.texImage2Db_x66c85$ = function (target, level, internalFormat, width, height, border, format, type, pixels) {
    this.before_gj9uq2$_0();
    this.wrapped.texImage2Db_x66c85$(target, level, internalFormat, width, height, border, format, type, pixels);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.texImage2Df_ilbvkb$ = function (target, level, internalFormat, width, height, border, format, type, pixels) {
    this.before_gj9uq2$_0();
    this.wrapped.texImage2Df_ilbvkb$(target, level, internalFormat, width, height, border, format, type, pixels);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.texImage2D_stvjjz$ = function (target, level, internalFormat, format, type, texture) {
    this.before_gj9uq2$_0();
    this.wrapped.texImage2D_stvjjz$(target, level, internalFormat, format, type, texture);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.texParameterf_n0b4r3$ = function (target, pName, param) {
    this.before_gj9uq2$_0();
    this.wrapped.texParameterf_n0b4r3$(target, pName, param);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.texParameteri_qt1dr2$ = function (target, pName, param) {
    this.before_gj9uq2$_0();
    this.wrapped.texParameteri_qt1dr2$(target, pName, param);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.texSubImage2D_m6kxxl$ = function (target, level, xOffset, yOffset, format, type, texture) {
    this.before_gj9uq2$_0();
    this.wrapped.texSubImage2D_m6kxxl$(target, level, xOffset, yOffset, format, type, texture);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform1f_5w6wo$ = function (location, x) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform1f_5w6wo$(location, x);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform1fv_ffh4uz$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform1fv_ffh4uz$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform1i_y004uz$ = function (location, x) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform1i_y004uz$(location, x);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform1iv_fwq19k$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform1iv_fwq19k$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform2f_419b65$ = function (location, x, y) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform2f_419b65$(location, x, y);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform2fv_ffh4uz$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform2fv_ffh4uz$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform2i_2fdgq5$ = function (location, x, y) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform2i_2fdgq5$(location, x, y);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform2iv_fwq19k$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform2iv_fwq19k$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform3f_oyxfc8$ = function (location, x, y, z) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform3f_oyxfc8$(location, x, y, z);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform3fv_ffh4uz$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform3fv_ffh4uz$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform3i_8egqxx$ = function (location, x, y, z) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform3i_8egqxx$(location, x, y, z);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform3iv_fwq19k$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform3iv_fwq19k$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform4f_b6e565$ = function (location, x, y, z, w) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform4f_b6e565$(location, x, y, z, w);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform4fv_ffh4uz$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform4fv_ffh4uz$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform4i_faf5yl$ = function (location, x, y, z, w) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform4i_faf5yl$(location, x, y, z, w);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniform4iv_fwq19k$ = function (location, v) {
    this.before_gj9uq2$_0();
    this.wrapped.uniform4iv_fwq19k$(location, v);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniformMatrix2fv_gfpvvo$ = function (location, transpose, value) {
    this.before_gj9uq2$_0();
    this.wrapped.uniformMatrix2fv_gfpvvo$(location, transpose, value);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniformMatrix3fv_gfpvvo$ = function (location, transpose, value) {
    this.before_gj9uq2$_0();
    this.wrapped.uniformMatrix3fv_gfpvvo$(location, transpose, value);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.uniformMatrix4fv_gfpvvo$ = function (location, transpose, value) {
    this.before_gj9uq2$_0();
    this.wrapped.uniformMatrix4fv_gfpvvo$(location, transpose, value);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.useProgram_15mccn$ = function (program) {
    this.before_gj9uq2$_0();
    this.wrapped.useProgram_15mccn$(program);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.validateProgram_bf3f0o$ = function (program) {
    this.before_gj9uq2$_0();
    this.wrapped.validateProgram_bf3f0o$(program);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib1f_24o109$ = function (index, x) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib1f_24o109$(index, x);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib1fv_hyht3q$ = function (index, values) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib1fv_hyht3q$(index, values);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib2f_nhq4am$ = function (index, x, y) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib2f_nhq4am$(index, x, y);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib2fv_hyht3q$ = function (index, values) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib2fv_hyht3q$(index, values);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib3f_eyukp3$ = function (index, x, y, z) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib3f_eyukp3$(index, x, y, z);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib3fv_hyht3q$ = function (index, values) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib3fv_hyht3q$(index, values);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib4f_xpxj32$ = function (index, x, y, z, w) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib4f_xpxj32$(index, x, y, z, w);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttrib4fv_hyht3q$ = function (index, values) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttrib4fv_hyht3q$(index, values);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.vertexAttribPointer_owihk5$ = function (index, size, type, normalized, stride, offset) {
    this.before_gj9uq2$_0();
    this.wrapped.vertexAttribPointer_owihk5$(index, size, type, normalized, stride, offset);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.viewport_tjonv8$ = function (x, y, width, height) {
    this.before_gj9uq2$_0();
    this.wrapped.viewport_tjonv8$(x, y, width, height);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.getUniformb_x4nmrd$ = function (program, location) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getUniformb_x4nmrd$(program, location);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getUniformi_x4nmrd$ = function (program, location) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getUniformi_x4nmrd$(program, location);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getUniformf_x4nmrd$ = function (program, location) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getUniformf_x4nmrd$(program, location);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getVertexAttribi_vux9f0$ = function (index, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getVertexAttribi_vux9f0$(index, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getVertexAttribb_vux9f0$ = function (index, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getVertexAttribb_vux9f0$(index, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getTexParameter_vux9f0$ = function (target, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getTexParameter_vux9f0$(target, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getShaderParameterb_v5gftj$ = function (shader, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getShaderParameterb_v5gftj$(shader, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getShaderParameteri_v5gftj$ = function (shader, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getShaderParameteri_v5gftj$(shader, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getRenderbufferParameter_vux9f0$ = function (target, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getRenderbufferParameter_vux9f0$(target, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getParameterb_za3lpa$ = function (pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getParameterb_za3lpa$(pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getParameteri_za3lpa$ = function (pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getParameteri_za3lpa$(pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getProgramParameterb_q5fai$ = function (program, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getProgramParameterb_q5fai$(program, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getProgramParameteri_q5fai$ = function (program, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getProgramParameteri_q5fai$(program, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getBufferParameter_vux9f0$ = function (target, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getBufferParameter_vux9f0$(target, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.getFramebufferAttachmentParameteri_qt1dr2$ = function (target, attachment, pName) {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getFramebufferAttachmentParameteri_qt1dr2$(target, attachment, pName);
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.prototype.clearColor_1qghwi$ = function (color_3) {
    this.before_gj9uq2$_0();
    this.wrapped.clearColor_1qghwi$(color_3);
    this.after_gj9uq2$_0();
  };
  WrappedGl20.prototype.getSupportedExtensions = function () {
    this.before_gj9uq2$_0();
    var ret = this.wrapped.getSupportedExtensions();
    this.after_gj9uq2$_0();
    return ret;
  };
  WrappedGl20.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'WrappedGl20',
    interfaces: [Gl20]
  };
  function BasicUiSkin() {
  }
  BasicUiSkin.prototype.initTheme_3jc8bx$ = function (theme) {
  };
  function BasicUiSkin$init$lambda$lambda(closure$theme) {
    return function (it) {
      return labelButtonSkin(closure$theme, it);
    };
  }
  function BasicUiSkin$init$lambda$lambda_0(closure$theme) {
    return function (it) {
      return checkboxSkin(closure$theme, it);
    };
  }
  function BasicUiSkin$init$lambda$lambda_1(closure$theme) {
    return function (it) {
      return radioButtonSkin(closure$theme, it);
    };
  }
  function BasicUiSkin$init$lambda$lambda_2(closure$theme) {
    return function (it) {
      return checkboxNoLabelSkin(closure$theme, it);
    };
  }
  function BasicUiSkin$init$lambda$lambda_3(closure$theme) {
    return function (it) {
      return iconButtonSkin(closure$theme, it);
    };
  }
  BasicUiSkin.prototype.init_k58t2y$ = function (root_0) {
    var theme = inject(root_0, Theme$Companion_getInstance());
    this.initTheme_3jc8bx$(theme);
    populateButtonStyle(root_0, Button$Companion_getInstance(), BasicUiSkin$init$lambda$lambda(theme));
    populateButtonStyle(root_0, Checkbox$Companion_getInstance(), BasicUiSkin$init$lambda$lambda_0(theme));
    populateButtonStyle(root_0, RadioButton$Companion_getInstance(), BasicUiSkin$init$lambda$lambda_1(theme));
    populateButtonStyle(root_0, StyleSelectors_getInstance().cbNoLabelStyle, BasicUiSkin$init$lambda$lambda_2(theme));
    populateButtonStyle(root_0, IconButton$Companion_getInstance(), BasicUiSkin$init$lambda$lambda_3(theme));
    this.stageStyle_za9ry$(root_0, theme);
    this.popUpStyle_za9ry$(root_0, theme);
    this.focusStyle_za9ry$(root_0, theme);
    this.textStyle_za9ry$(root_0, theme);
    this.panelStyle_za9ry$(root_0, theme);
    this.windowPanelStyle_w7z2l$_0(root_0, theme);
    this.headingGroupStyle_za9ry$(root_0, theme);
    this.themeRectStyle_za9ry$(root_0, theme);
    this.tabNavigatorStyle_za9ry$(root_0, theme);
    this.dividerStyle_za9ry$(root_0, theme);
    this.numericStepperStyle_za9ry$(root_0, theme);
    this.scrollAreaStyle_za9ry$(root_0, theme);
    this.scrollBarStyle_za9ry$(root_0, theme);
    this.sliderStyle_za9ry$(root_0, theme);
    this.colorPickerStyle_za9ry$(root_0, theme);
    this.itemRendererStyle_w7z2l$_0(root_0, theme);
    this.dataScrollerStyle_w7z2l$_0(root_0, theme);
    this.optionsListStyle_w7z2l$_0(root_0, theme);
    this.dataGridStyle_za9ry$(root_0, theme);
  };
  BasicUiSkin.prototype.stageStyle_za9ry$ = function ($receiver, theme) {
    var stageStyle = new StageStyle();
    stageStyle.backgroundColor = theme.bgColor;
    setStyle($receiver, stageStyle, [Stage$Companion_getInstance()]);
  };
  BasicUiSkin.prototype.popUpStyle_za9ry$ = function ($receiver, theme) {
    var modalStyle = new BoxStyle();
    modalStyle.backgroundColor = new Color(0.0, 0.0, 0.0, 0.7);
    setStyle($receiver, modalStyle, [PopUpManager$Companion_getInstance().MODAL_STYLE]);
  };
  BasicUiSkin.prototype.focusStyle_za9ry$ = function ($receiver, theme) {
    var tmp$;
    var focusManager = inject($receiver, FocusManager$Companion_getInstance());
    focusManager.highlight = null;
    (tmp$ = focusManager.highlight) != null ? tmp$.dispose() : null;
    var focusHighlight = new SimpleHighlight($receiver, theme.atlasPath, 'FocusRect');
    focusHighlight.colorTint = theme.strokeSelected;
    focusManager.highlight = focusHighlight;
  };
  function BasicUiSkin$textStyle$lambda($receiver) {
    $receiver.backgroundColor = new Color(0.97, 0.97, 0.97, 1.0);
    $receiver.borderColor = BorderColors_init(new Color(0.3, 0.3, 0.3, 1.0));
    $receiver.borderThickness = Pad_init_0(1.0);
    $receiver.padding = Pad_init_0(2.0);
  }
  BasicUiSkin.prototype.textStyle_za9ry$ = function ($receiver, theme) {
    setStyle($receiver, theme.textStyle, []);
    setStyle($receiver, theme.headingStyle, [StyleSelectors_getInstance().headingStyle]);
    setStyle($receiver, theme.formLabelStyle, [formLabelStyle]);
    if (UserInfo_getInstance().isOpenGl) {
      this.loadBitmapFonts_za9ry$($receiver, theme);
    }
    var divStyle = new BoxStyle();
    batch(divStyle, BasicUiSkin$textStyle$lambda);
    setStyle($receiver, divStyle, [TextInput$Companion_getInstance()]);
    setStyle($receiver, divStyle, [TextArea$Companion_getInstance()]);
  };
  BasicUiSkin.prototype.loadBitmapFonts_za9ry$ = function ($receiver, theme) {
    loadFontFromAtlas($receiver, 'assets/uiskin/verdana_14.fnt', theme.atlasPath);
    loadFontFromAtlas($receiver, 'assets/uiskin/verdana_14_bold.fnt', theme.atlasPath);
  };
  function BasicUiSkin$panelStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      var $receiver_0 = $receiver.style;
      var closure$theme_0 = closure$theme;
      $receiver_0.backgroundColor = closure$theme_0.panelBgColor;
      $receiver_0.borderThickness = Pad_init_0(closure$theme_0.strokeThickness);
      $receiver_0.borderRadius = Corners_init(closure$theme_0.borderRadius);
      $receiver_0.borderColor = BorderColors_init(closure$theme_0.stroke);
      $receiver_0.borderThickness.top = 0.0;
    };
  }
  function BasicUiSkin$panelStyle$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$panelStyle$lambda$lambda(closure$theme));
    };
  }
  BasicUiSkin.prototype.panelStyle_za9ry$ = function ($receiver, theme) {
    var panelStyle = new PanelStyle();
    panelStyle.background = BasicUiSkin$panelStyle$lambda(theme);
    setStyle($receiver, panelStyle, [Panel$Companion_getInstance()]);
  };
  function BasicUiSkin$windowPanelStyle$lambda$lambda$lambda$lambda(closure$theme) {
    return function ($receiver) {
      $receiver.backgroundColor = closure$theme.panelBgColor;
      $receiver.borderRadius = Corners_init(closure$theme.borderRadius);
      $receiver.borderRadius.topLeft.clear();
      $receiver.borderRadius.topRight.clear();
      $receiver.borderThickness = Pad_init_0(closure$theme.strokeThickness);
      $receiver.borderThickness.top = 0.0;
      $receiver.borderColor = BorderColors_init(closure$theme.stroke);
    };
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda$lambda(closure$theme) {
    return function ($receiver) {
      batch($receiver.style, BasicUiSkin$windowPanelStyle$lambda$lambda$lambda$lambda(closure$theme));
    };
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$windowPanelStyle$lambda$lambda$lambda(closure$theme));
    };
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      $receiver.backgroundColor = closure$theme.controlBarBgColor;
      $receiver.borderRadius = Corners_init(closure$theme.borderRadius);
      $receiver.borderRadius.bottomLeft.clear();
      $receiver.borderRadius.bottomRight.clear();
      $receiver.borderThickness = Pad_init_0(closure$theme.strokeThickness);
      $receiver.borderColor = BorderColors_init(closure$theme.stroke);
    };
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      batch($receiver.style, BasicUiSkin$windowPanelStyle$lambda$lambda$lambda$lambda_0(closure$theme));
    };
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$windowPanelStyle$lambda$lambda$lambda_0(closure$theme));
    };
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda$lambda_1($receiver) {
    $receiver.label = 'x';
  }
  function BasicUiSkin$windowPanelStyle$lambda$lambda_1($receiver) {
    return button($receiver, BasicUiSkin$windowPanelStyle$lambda$lambda$lambda_1);
  }
  BasicUiSkin.prototype.windowPanelStyle_w7z2l$_0 = function ($receiver, theme) {
    var windowPanelStyle = new WindowPanelStyle();
    windowPanelStyle.background = BasicUiSkin$windowPanelStyle$lambda$lambda(theme);
    windowPanelStyle.titleBarBackground = BasicUiSkin$windowPanelStyle$lambda$lambda_0(theme);
    windowPanelStyle.closeButton = BasicUiSkin$windowPanelStyle$lambda$lambda_1;
    setStyle($receiver, windowPanelStyle, []);
  };
  function BasicUiSkin$headingGroupStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      $receiver.style.backgroundColor = closure$theme.panelBgColor;
      $receiver.style.borderThickness = Pad_init_0(closure$theme.strokeThickness);
      $receiver.style.borderColor = BorderColors_init(closure$theme.stroke);
      $receiver.style.borderRadius = Corners_init(closure$theme.borderRadius);
    };
  }
  function BasicUiSkin$headingGroupStyle$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$headingGroupStyle$lambda$lambda(closure$theme));
    };
  }
  function BasicUiSkin$headingGroupStyle$lambda$lambda_0($receiver) {
    addTag($receiver, StyleSelectors_getInstance().headingStyle);
  }
  function BasicUiSkin$headingGroupStyle$lambda_0($receiver) {
    return text_0($receiver, BasicUiSkin$headingGroupStyle$lambda$lambda_0);
  }
  BasicUiSkin.prototype.headingGroupStyle_za9ry$ = function ($receiver, theme) {
    var headingGroupStyle = new HeadingGroupStyle();
    headingGroupStyle.background = BasicUiSkin$headingGroupStyle$lambda(theme);
    headingGroupStyle.headingPadding.bottom = 0.0;
    headingGroupStyle.heading = BasicUiSkin$headingGroupStyle$lambda_0;
    setStyle($receiver, headingGroupStyle, [HeadingGroup$Companion_getInstance()]);
  };
  BasicUiSkin.prototype.themeRectStyle_za9ry$ = function ($receiver, theme) {
    var themeRect = new BoxStyle();
    themeRect.backgroundColor = theme.fill;
    themeRect.borderColor = BorderColors_init(theme.stroke);
    themeRect.borderThickness = Pad_init_0(1.0);
    setStyle($receiver, themeRect, [StyleSelectors_getInstance().themeRect]);
  };
  function BasicUiSkin$tabNavigatorStyle$lambda$lambda($receiver) {
    addTag($receiver, StyleSelectors_getInstance().themeRect);
  }
  function BasicUiSkin$tabNavigatorStyle$lambda($receiver) {
    return rect($receiver, BasicUiSkin$tabNavigatorStyle$lambda$lambda);
  }
  function BasicUiSkin$tabNavigatorStyle$lambda_0(closure$theme) {
    return function (it) {
      return tabButtonSkin(closure$theme, it);
    };
  }
  function BasicUiSkin$tabNavigatorStyle$lambda_1(closure$theme) {
    return function (it) {
      return tabButtonSkin(closure$theme, it);
    };
  }
  function BasicUiSkin$tabNavigatorStyle$lambda_2(closure$theme) {
    return function (it) {
      return tabButtonSkin(closure$theme, it);
    };
  }
  BasicUiSkin.prototype.tabNavigatorStyle_za9ry$ = function ($receiver, theme) {
    var tabNavStyle = new TabNavigatorStyle();
    tabNavStyle.background = BasicUiSkin$tabNavigatorStyle$lambda;
    setStyle($receiver, tabNavStyle, [TabNavigator$Companion_getInstance()]);
    populateButtonStyle($receiver, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE, BasicUiSkin$tabNavigatorStyle$lambda_0(theme));
    populateButtonStyle($receiver, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_FIRST, BasicUiSkin$tabNavigatorStyle$lambda_1(theme));
    populateButtonStyle($receiver, TabNavigator$Companion_getInstance().DEFAULT_TAB_STYLE_LAST, BasicUiSkin$tabNavigatorStyle$lambda_2(theme));
  };
  function BasicUiSkin$dividerStyle$lambda(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'HDividerHandle');
    };
  }
  function BasicUiSkin$dividerStyle$lambda_0(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'HDividerBar');
    };
  }
  function BasicUiSkin$dividerStyle$lambda_1(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'VDividerHandle');
    };
  }
  function BasicUiSkin$dividerStyle$lambda_2(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'VDividerBar');
    };
  }
  BasicUiSkin.prototype.dividerStyle_za9ry$ = function ($receiver, theme) {
    var hDividerStyle = new DividerStyle();
    hDividerStyle.handle = BasicUiSkin$dividerStyle$lambda(theme);
    hDividerStyle.divideBar = BasicUiSkin$dividerStyle$lambda_0(theme);
    setStyle($receiver, hDividerStyle, [HDivider$Companion_getInstance()]);
    var vDividerStyle = new DividerStyle();
    vDividerStyle.handle = BasicUiSkin$dividerStyle$lambda_1(theme);
    vDividerStyle.divideBar = BasicUiSkin$dividerStyle$lambda_2(theme);
    setStyle($receiver, vDividerStyle, [VDivider$Companion_getInstance()]);
    var ruleStyle = new RuleStyle();
    ruleStyle.thickness = 2.0;
    ruleStyle.borderColor = BorderColors_init(new Color(1.0, 1.0, 1.0, 0.7));
    ruleStyle.backgroundColor = theme.stroke;
    setStyle($receiver, ruleStyle, []);
    var vRuleStyle = new RuleStyle();
    vRuleStyle.borderThickness = Pad_init().set_7b5o5w$(void 0, void 0, 1.0);
    setStyle($receiver, vRuleStyle, [Rule$Companion_getInstance().VERTICAL_STYLE]);
    var hRuleStyle = new RuleStyle();
    hRuleStyle.borderThickness = Pad_init().set_7b5o5w$(void 0, void 0, void 0, 1.0);
    setStyle($receiver, hRuleStyle, [Rule$Companion_getInstance().HORIZONTAL_STYLE]);
  };
  function BasicUiSkin$numericStepperStyle$lambda(closure$theme, closure$stepperPad) {
    return function (it) {
      return iconButtonSkin_0(it, 'UpArrowStepper', Corners_init_0(0.0, closure$theme.borderRadius, 0.0, 0.0), Pad_init_0(closure$theme.strokeThickness), closure$stepperPad);
    };
  }
  function BasicUiSkin$numericStepperStyle$lambda_0(closure$theme, closure$stepperPad) {
    return function (it) {
      return iconButtonSkin_0(it, 'DownArrowStepper', Corners_init_0(0.0, 0.0, closure$theme.borderRadius, 0.0), Pad_init_0(closure$theme.strokeThickness), closure$stepperPad);
    };
  }
  BasicUiSkin.prototype.numericStepperStyle_za9ry$ = function ($receiver, theme) {
    var stepperPad = new Pad(3.0, 4.0, 3.0, 4.0);
    populateButtonStyle($receiver, NumericStepper$Companion_getInstance().STEP_UP_STYLE, BasicUiSkin$numericStepperStyle$lambda(theme, stepperPad));
    populateButtonStyle($receiver, NumericStepper$Companion_getInstance().STEP_DOWN_STYLE, BasicUiSkin$numericStepperStyle$lambda_0(theme, stepperPad));
  };
  function BasicUiSkin$scrollAreaStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      $receiver.style.backgroundColor = closure$theme.strokeDisabled;
    };
  }
  function BasicUiSkin$scrollAreaStyle$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$scrollAreaStyle$lambda$lambda(closure$theme));
    };
  }
  BasicUiSkin.prototype.scrollAreaStyle_za9ry$ = function ($receiver, theme) {
    var scrollAreaStyle = new ScrollAreaStyle();
    scrollAreaStyle.corner = BasicUiSkin$scrollAreaStyle$lambda(theme);
    setStyle($receiver, scrollAreaStyle, [ScrollArea$Companion_getInstance()]);
  };
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda(closure$theme) {
    return function (it) {
      return iconButtonSkin_0(it, 'UpArrow', Corners_init_0(closure$theme.borderRadius, closure$theme.borderRadius, 0.0, 0.0), Pad_init_0(closure$theme.strokeThickness));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      enableDownRepeat($receiver);
      setStyle($receiver, populateButtonStyle_0(new ButtonStyle(), BasicUiSkin$scrollBarStyle$lambda$lambda$lambda(closure$theme)), []);
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda(closure$theme) {
    return function ($receiver) {
      return button($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_0(closure$theme) {
    return function (it) {
      var tmp$;
      tmp$ = closure$theme.borderRadius;
      return iconButtonSkin_0(it, 'DownArrow', Corners_init_0(0.0, 0.0, closure$theme.borderRadius, tmp$), Pad_init_0(closure$theme.strokeThickness));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      enableDownRepeat($receiver);
      setStyle($receiver, populateButtonStyle_0(new ButtonStyle(), BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_0(closure$theme)), []);
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda_0(closure$theme) {
    return function ($receiver) {
      return button($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_0(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda$lambda(closure$it, closure$theme) {
    return function ($receiver) {
      return buttonTexture($receiver, closure$it, Corners_init(0.0), Pad_init_0(closure$theme.strokeThickness));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_1(closure$theme) {
    return function (it) {
      return BasicUiSkin$scrollBarStyle$lambda$lambda$lambda$lambda(it, closure$theme);
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_1(closure$theme) {
    return function ($receiver) {
      $receiver.focusEnabled = false;
      populateButtonStyle_0($receiver.style, BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_1(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda_1(closure$theme) {
    return function ($receiver) {
      return button($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_1(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_2($receiver) {
    addTag($receiver, StyleSelectors_getInstance().themeRect);
    enableDownRepeat($receiver);
  }
  function BasicUiSkin$scrollBarStyle$lambda_2($receiver) {
    return rect($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_2);
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_2(closure$theme) {
    return function (it) {
      return iconButtonSkin_0(it, 'LeftArrow', Corners_init_0(closure$theme.borderRadius, 0.0, 0.0, closure$theme.borderRadius), Pad_init_0(closure$theme.strokeThickness));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_3(closure$theme) {
    return function ($receiver) {
      enableDownRepeat($receiver);
      setStyle($receiver, populateButtonStyle_0(new ButtonStyle(), BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_2(closure$theme)), []);
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda_3(closure$theme) {
    return function ($receiver) {
      return button($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_3(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_3(closure$theme) {
    return function (it) {
      return iconButtonSkin_0(it, 'RightArrow', Corners_init_0(0.0, closure$theme.borderRadius, closure$theme.borderRadius, 0.0), Pad_init_0(closure$theme.strokeThickness));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_4(closure$theme) {
    return function ($receiver) {
      enableDownRepeat($receiver);
      setStyle($receiver, populateButtonStyle_0(new ButtonStyle(), BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_3(closure$theme)), []);
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda_4(closure$theme) {
    return function ($receiver) {
      return button($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_4(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda$lambda_0(closure$it, closure$theme) {
    return function ($receiver) {
      return buttonTexture($receiver, closure$it, Corners_init(0.0), Pad_init_0(closure$theme.strokeThickness));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_4(closure$theme) {
    return function (it) {
      return BasicUiSkin$scrollBarStyle$lambda$lambda$lambda$lambda_0(it, closure$theme);
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_5(closure$theme) {
    return function ($receiver) {
      $receiver.focusEnabled = false;
      populateButtonStyle_0($receiver.style, BasicUiSkin$scrollBarStyle$lambda$lambda$lambda_4(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda_5(closure$theme) {
    return function ($receiver) {
      return button($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_5(closure$theme));
    };
  }
  function BasicUiSkin$scrollBarStyle$lambda$lambda_6($receiver) {
    addTag($receiver, StyleSelectors_getInstance().themeRect);
    enableDownRepeat($receiver);
  }
  function BasicUiSkin$scrollBarStyle$lambda_6($receiver) {
    return rect($receiver, BasicUiSkin$scrollBarStyle$lambda$lambda_6);
  }
  BasicUiSkin.prototype.scrollBarStyle_za9ry$ = function ($receiver, theme) {
    var vScrollBarStyle = new ScrollBarStyle();
    vScrollBarStyle.stepUpButton = BasicUiSkin$scrollBarStyle$lambda(theme);
    vScrollBarStyle.stepDownButton = BasicUiSkin$scrollBarStyle$lambda_0(theme);
    vScrollBarStyle.thumb = BasicUiSkin$scrollBarStyle$lambda_1(theme);
    vScrollBarStyle.track = BasicUiSkin$scrollBarStyle$lambda_2;
    setStyle($receiver, vScrollBarStyle, [VScrollBar$Companion_getInstance()]);
    var hScrollBarStyle = new ScrollBarStyle();
    hScrollBarStyle.stepUpButton = BasicUiSkin$scrollBarStyle$lambda_3(theme);
    hScrollBarStyle.stepDownButton = BasicUiSkin$scrollBarStyle$lambda_4(theme);
    hScrollBarStyle.thumb = BasicUiSkin$scrollBarStyle$lambda_5(theme);
    hScrollBarStyle.track = BasicUiSkin$scrollBarStyle$lambda_6;
    setStyle($receiver, hScrollBarStyle, [HScrollBar$Companion_getInstance()]);
  };
  function BasicUiSkin$sliderStyle$lambda($receiver) {
    return spacer($receiver);
  }
  function BasicUiSkin$sliderStyle$lambda_0($receiver) {
    return spacer($receiver);
  }
  function BasicUiSkin$sliderStyle$lambda$lambda$lambda($receiver) {
  }
  function BasicUiSkin$sliderStyle$lambda$lambda($receiver) {
    $receiver.layoutData = basicLayoutData(BasicUiSkin$sliderStyle$lambda$lambda$lambda);
  }
  function BasicUiSkin$sliderStyle$lambda_1(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'SliderArrowRightLarge', BasicUiSkin$sliderStyle$lambda$lambda);
    };
  }
  function BasicUiSkin$sliderStyle$lambda$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      $receiver.backgroundColor = closure$theme.fillShine;
      $receiver.borderThickness = new Pad(0.0, 0.0, 0.0, 4.0);
      $receiver.borderColor = BorderColors_init(new Color(0.0, 0.0, 0.0, 0.4));
    };
  }
  function BasicUiSkin$sliderStyle$lambda$lambda$lambda_1($receiver) {
    $receiver.width = 13.0;
    $receiver.heightPercent = 1.0;
  }
  function BasicUiSkin$sliderStyle$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      batch($receiver.style, BasicUiSkin$sliderStyle$lambda$lambda$lambda_0(closure$theme));
      enableDownRepeat($receiver);
      $receiver.layoutData = basicLayoutData(BasicUiSkin$sliderStyle$lambda$lambda$lambda_1);
    };
  }
  function BasicUiSkin$sliderStyle$lambda_2(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$sliderStyle$lambda$lambda_0(closure$theme));
    };
  }
  function BasicUiSkin$sliderStyle$lambda_3($receiver) {
    return spacer($receiver);
  }
  function BasicUiSkin$sliderStyle$lambda_4($receiver) {
    return spacer($receiver);
  }
  function BasicUiSkin$sliderStyle$lambda$lambda$lambda_2($receiver) {
  }
  function BasicUiSkin$sliderStyle$lambda$lambda_1($receiver) {
    $receiver.layoutData = basicLayoutData(BasicUiSkin$sliderStyle$lambda$lambda$lambda_2);
  }
  function BasicUiSkin$sliderStyle$lambda_5(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'SliderArrowDownLarge', BasicUiSkin$sliderStyle$lambda$lambda_1);
    };
  }
  function BasicUiSkin$sliderStyle$lambda$lambda$lambda_3($receiver) {
    $receiver.height = 13.0;
    $receiver.widthPercent = 1.0;
  }
  function BasicUiSkin$sliderStyle$lambda$lambda_2(closure$theme) {
    return function ($receiver) {
      var $receiver_0 = $receiver.style;
      $receiver_0.backgroundColor = closure$theme.fillShine;
      $receiver_0.borderThickness = new Pad(0.0, 0.0, 4.0, 0.0);
      $receiver_0.borderColor = BorderColors_init(new Color(0.0, 0.0, 0.0, 0.4));
      enableDownRepeat($receiver);
      $receiver.layoutData = basicLayoutData(BasicUiSkin$sliderStyle$lambda$lambda$lambda_3);
    };
  }
  function BasicUiSkin$sliderStyle$lambda_6(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$sliderStyle$lambda$lambda_2(closure$theme));
    };
  }
  BasicUiSkin.prototype.sliderStyle_za9ry$ = function ($receiver, theme) {
    var vSliderStyle = new ScrollBarStyle();
    vSliderStyle.defaultSize = 200.0;
    vSliderStyle.stepUpButton = BasicUiSkin$sliderStyle$lambda;
    vSliderStyle.stepDownButton = BasicUiSkin$sliderStyle$lambda_0;
    vSliderStyle.thumb = BasicUiSkin$sliderStyle$lambda_1(theme);
    vSliderStyle.track = BasicUiSkin$sliderStyle$lambda_2(theme);
    vSliderStyle.pageMode = false;
    setStyle($receiver, vSliderStyle, [VSlider$Companion_getInstance()]);
    var hSliderStyle = new ScrollBarStyle();
    hSliderStyle.defaultSize = 200.0;
    hSliderStyle.stepUpButton = BasicUiSkin$sliderStyle$lambda_3;
    hSliderStyle.stepDownButton = BasicUiSkin$sliderStyle$lambda_4;
    hSliderStyle.thumb = BasicUiSkin$sliderStyle$lambda_5(theme);
    hSliderStyle.track = BasicUiSkin$sliderStyle$lambda_6(theme);
    hSliderStyle.pageMode = false;
    setStyle($receiver, hSliderStyle, [HSlider$Companion_getInstance()]);
  };
  function BasicUiSkin$colorPickerStyle$lambda$lambda$lambda(closure$theme) {
    return function ($receiver) {
      addTag($receiver, StyleSelectors_getInstance().themeRect);
      $receiver.style.borderRadius = Corners_init(closure$theme.borderRadius);
    };
  }
  function BasicUiSkin$colorPickerStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$colorPickerStyle$lambda$lambda$lambda(closure$theme));
    };
  }
  function BasicUiSkin$colorPickerStyle$lambda$lambda_0(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'Picker');
    };
  }
  function BasicUiSkin$colorPickerStyle$lambda$lambda_1(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'SliderArrowRight');
    };
  }
  function BasicUiSkin$colorPickerStyle$lambda$lambda$lambda_0($receiver) {
    $receiver.focusEnabled = false;
  }
  function BasicUiSkin$colorPickerStyle$lambda$lambda_2($receiver) {
    return button($receiver, BasicUiSkin$colorPickerStyle$lambda$lambda$lambda_0);
  }
  BasicUiSkin.prototype.colorPickerStyle_za9ry$ = function ($receiver, theme) {
    var colorPaletteStyle = new ColorPaletteStyle();
    colorPaletteStyle.background = BasicUiSkin$colorPickerStyle$lambda$lambda(theme);
    colorPaletteStyle.hueSaturationIndicator = BasicUiSkin$colorPickerStyle$lambda$lambda_0(theme);
    colorPaletteStyle.valueIndicator = BasicUiSkin$colorPickerStyle$lambda$lambda_1(theme);
    setStyle($receiver, colorPaletteStyle, [ColorPalette$Companion_getInstance()]);
    var colorPickerStyle = new ColorPickerStyle();
    colorPickerStyle.background = BasicUiSkin$colorPickerStyle$lambda$lambda_2;
    setStyle($receiver, colorPickerStyle, [ColorPicker$Companion_getInstance()]);
    var colorSwatchStyle = new BoxStyle();
    colorSwatchStyle.borderRadius = Corners_init(theme.borderRadius);
    setStyle($receiver, colorSwatchStyle, [ColorPicker$Companion_getInstance().COLOR_SWATCH_STYLE]);
  };
  function BasicUiSkin$itemRendererStyle$lambda(closure$theme) {
    return function (it) {
      return labelButtonSkin(closure$theme, it);
    };
  }
  BasicUiSkin.prototype.itemRendererStyle_w7z2l$_0 = function ($receiver, theme) {
    populateButtonStyle($receiver, SimpleItemRenderer$Companion_getInstance(), BasicUiSkin$itemRendererStyle$lambda(theme));
  };
  function BasicUiSkin$dataScrollerStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      var $receiver_0 = $receiver.style;
      var closure$theme_0 = closure$theme;
      $receiver_0.backgroundColor = closure$theme_0.panelBgColor;
      $receiver_0.borderThickness = Pad_init_0(closure$theme_0.strokeThickness);
      $receiver_0.borderRadius = Corners_init(closure$theme_0.borderRadius);
      $receiver_0.borderColor = BorderColors_init(closure$theme_0.stroke);
    };
  }
  function BasicUiSkin$dataScrollerStyle$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$dataScrollerStyle$lambda$lambda(closure$theme));
    };
  }
  BasicUiSkin.prototype.dataScrollerStyle_w7z2l$_0 = function ($receiver, theme) {
    var dataScrollerStyle = new DataScrollerStyle();
    dataScrollerStyle.background = BasicUiSkin$dataScrollerStyle$lambda(theme);
    setStyle($receiver, dataScrollerStyle, [DataScroller$Companion_getInstance()]);
  };
  function BasicUiSkin$optionsListStyle$lambda(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'OptionsListArrow');
    };
  }
  function BasicUiSkin$optionsListStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      var $receiver_0 = $receiver.style;
      var closure$theme_0 = closure$theme;
      $receiver_0.backgroundColor = closure$theme_0.panelBgColor;
      $receiver_0.borderThickness = Pad_init_0(closure$theme_0.strokeThickness);
      $receiver_0.borderRadius = Corners_init_0(0.0, 0.0, closure$theme_0.borderRadius, closure$theme_0.borderRadius);
      $receiver_0.borderColor = BorderColors_init(closure$theme_0.stroke);
    };
  }
  function BasicUiSkin$optionsListStyle$lambda_0(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$optionsListStyle$lambda$lambda(closure$theme));
    };
  }
  BasicUiSkin.prototype.optionsListStyle_w7z2l$_0 = function ($receiver, theme) {
    var optionsListStyle = new OptionsListStyle();
    optionsListStyle.downArrow = BasicUiSkin$optionsListStyle$lambda(theme);
    setStyle($receiver, optionsListStyle, [OptionsList$Companion_getInstance()]);
    var dataScrollerStyle = new DataScrollerStyle();
    dataScrollerStyle.background = BasicUiSkin$optionsListStyle$lambda_0(theme);
    setStyle($receiver, dataScrollerStyle, [DataScroller$Companion_getInstance(), OptionsList$Companion_getInstance()]);
  };
  function BasicUiSkin$dataGridStyle$lambda$lambda(closure$theme) {
    return function ($receiver) {
      var $receiver_0 = $receiver.style;
      var closure$theme_0 = closure$theme;
      $receiver_0.backgroundColor = closure$theme_0.fill;
      $receiver_0.borderThickness = Pad_init_0(closure$theme_0.strokeThickness);
      $receiver_0.borderColor = BorderColors_init(closure$theme_0.stroke);
      $receiver_0.borderRadius = Corners_init(closure$theme_0.borderRadius);
    };
  }
  function BasicUiSkin$dataGridStyle$lambda(closure$theme) {
    return function ($receiver) {
      return rect($receiver, BasicUiSkin$dataGridStyle$lambda$lambda(closure$theme));
    };
  }
  function BasicUiSkin$dataGridStyle$lambda_0(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'DownArrow');
    };
  }
  function BasicUiSkin$dataGridStyle$lambda_1(closure$theme) {
    return function ($receiver) {
      return atlas($receiver, closure$theme.atlasPath, 'UpArrow');
    };
  }
  function BasicUiSkin$dataGridStyle$lambda_2($receiver) {
    return button($receiver);
  }
  function BasicUiSkin$dataGridStyle$lambda$lambda_0(closure$buttonState) {
    return function ($receiver) {
      return buttonTexture($receiver, closure$buttonState, Corners_init(0.0), Pad_init_0(0.0));
    };
  }
  function BasicUiSkin$dataGridStyle$lambda_3(buttonState) {
    return BasicUiSkin$dataGridStyle$lambda$lambda_0(buttonState);
  }
  BasicUiSkin.prototype.dataGridStyle_za9ry$ = function ($receiver, theme) {
    var dataGridStyle = new DataGridStyle();
    dataGridStyle.background = BasicUiSkin$dataGridStyle$lambda(theme);
    dataGridStyle.sortDownArrow = BasicUiSkin$dataGridStyle$lambda_0(theme);
    dataGridStyle.sortUpArrow = BasicUiSkin$dataGridStyle$lambda_1(theme);
    dataGridStyle.borderRadius = Corners_init(theme.borderRadius);
    dataGridStyle.borderThickness = Pad_init_0(theme.strokeThickness);
    dataGridStyle.headerBackground = BasicUiSkin$dataGridStyle$lambda_2;
    populateButtonStyle($receiver, DataGrid$Companion_getInstance().HEADER_BACKGROUND, BasicUiSkin$dataGridStyle$lambda_3);
    setStyle($receiver, dataGridStyle, [DataGrid$Companion_getInstance()]);
  };
  BasicUiSkin.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'BasicUiSkin',
    interfaces: []
  };
  function populateButtonStyle($receiver, tag, skinPartFactory) {
    var buttonStyle = new ButtonStyle();
    populateButtonStyle_0(buttonStyle, skinPartFactory);
    setStyle($receiver, buttonStyle, [tag]);
  }
  function populateButtonStyle_1($receiver, tags, skinPartFactory) {
    var buttonStyle = new ButtonStyle();
    populateButtonStyle_0(buttonStyle, skinPartFactory);
    setStyle($receiver, buttonStyle, tags.slice());
  }
  function populateButtonStyle_0(buttonStyle, skinPartFactory) {
    buttonStyle.upState = skinPartFactory(ButtonState$UP_getInstance());
    buttonStyle.overState = skinPartFactory(ButtonState$OVER_getInstance());
    buttonStyle.downState = skinPartFactory(ButtonState$DOWN_getInstance());
    buttonStyle.selectedUpState = skinPartFactory(ButtonState$SELECTED_UP_getInstance());
    buttonStyle.selectedOverState = skinPartFactory(ButtonState$SELECTED_OVER_getInstance());
    buttonStyle.selectedDownState = skinPartFactory(ButtonState$SELECTED_DOWN_getInstance());
    buttonStyle.disabledState = skinPartFactory(ButtonState$DISABLED_getInstance());
    return buttonStyle;
  }
  function iconButtonSkin$lambda(closure$buttonState, closure$borderRadius, closure$borderThickness, closure$padding, closure$icon) {
    return function ($receiver) {
      var texture = buttonTexture($receiver, closure$buttonState, closure$borderRadius, closure$borderThickness);
      var skinPart = new IconButtonSkinPart($receiver, texture);
      skinPart.padding.set_ujzovp$(closure$padding);
      var theme = inject($receiver, Theme$Companion_getInstance());
      contentsAtlas(skinPart, theme.atlasPath, closure$icon);
      return skinPart;
    };
  }
  function iconButtonSkin_0(buttonState, icon, borderRadius, borderThickness, padding) {
    if (padding === void 0)
      padding = Pad_init_0(5.0);
    return iconButtonSkin$lambda(buttonState, borderRadius, borderThickness, padding, icon);
  }
  function labelButtonSkin$lambda(closure$buttonState, closure$theme) {
    return function ($receiver) {
      var texture = buttonTexture($receiver, closure$buttonState, Corners_init(closure$theme.borderRadius), Pad_init_0(closure$theme.strokeThickness));
      return new LabelButtonSkinPart($receiver, texture);
    };
  }
  function labelButtonSkin(theme, buttonState) {
    return labelButtonSkin$lambda(buttonState, theme);
  }
  function tabButtonSkin$lambda(closure$buttonState, closure$theme) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      tmp$ = Corners_init_0(closure$theme.borderRadius, closure$theme.borderRadius, 0.0, 0.0);
      tmp$_0 = Pad_init_0(closure$theme.strokeThickness);
      var texture = buttonTexture($receiver, closure$buttonState, tmp$, tmp$_0, true);
      return new LabelButtonSkinPart($receiver, texture);
    };
  }
  function tabButtonSkin(theme, buttonState) {
    return tabButtonSkin$lambda(buttonState, theme);
  }
  function iconButtonSkin$lambda_0(closure$buttonState, closure$theme) {
    return function ($receiver) {
      var texture = buttonTexture($receiver, closure$buttonState, Corners_init(closure$theme.borderRadius), Pad_init_0(closure$theme.strokeThickness));
      return new IconButtonSkinPart($receiver, texture);
    };
  }
  function iconButtonSkin(theme, buttonState) {
    return iconButtonSkin$lambda_0(buttonState, theme);
  }
  function checkboxNoLabelSkin$lambda(closure$theme, closure$buttonState) {
    return function ($receiver) {
      var s = checkboxSkin(closure$theme, closure$buttonState)($receiver);
      var lD = s.createLayoutData();
      lD.widthPercent = 1.0;
      lD.heightPercent = 1.0;
      s.box.layoutData = lD;
      return s;
    };
  }
  function checkboxNoLabelSkin(theme, buttonState) {
    return checkboxNoLabelSkin$lambda(theme, buttonState);
  }
  function checkboxSkin$lambda$lambda$lambda($receiver) {
    $receiver.horizontalAlign = HAlign$CENTER_getInstance();
    $receiver.verticalAlign = VAlign$MIDDLE_getInstance();
  }
  function checkboxSkin$lambda$lambda(closure$theme, closure$box) {
    return function ($receiver) {
      $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(atlas($receiver, closure$theme.atlasPath, 'CheckMark')), checkboxSkin$lambda$lambda$lambda);
      var $receiver_0 = closure$box.createLayoutData();
      $receiver_0.widthPercent = 1.0;
      $receiver_0.heightPercent = 1.0;
      $receiver.layoutData = $receiver_0;
    };
  }
  function checkboxSkin$lambda$lambda$lambda_0($receiver) {
    $receiver.width = 18.0;
    $receiver.height = 18.0;
  }
  function checkboxSkin$lambda(closure$buttonState, closure$theme) {
    return function ($receiver) {
      var box_0 = buttonTexture($receiver, closure$buttonState, new Corners(), Pad_init_0(closure$theme.strokeThickness));
      if (closure$buttonState.isSelected) {
        var checkMark = scaleBox($receiver, checkboxSkin$lambda$lambda(closure$theme, box_0));
        box_0.addElement_mxweac$(checkMark);
      }
      var $receiver_0 = new CheckboxSkinPart($receiver, box_0);
      $receiver_0.layout_ge8abi$(box_0, checkboxSkin$lambda$lambda$lambda_0);
      return $receiver_0;
    };
  }
  function checkboxSkin(theme, buttonState) {
    return checkboxSkin$lambda(buttonState, theme);
  }
  function radioButtonSkin$lambda$lambda(closure$radio) {
    return function ($receiver) {
      $receiver.style.margin = Pad_init_0(4.0);
      $receiver.style.borderRadius = Corners_init(1000.0);
      $receiver.style.backgroundColor = Color.Companion.DARK_GRAY.copy_7b5o5w$();
      var $receiver_0 = closure$radio.createLayoutData();
      $receiver_0.widthPercent = 1.0;
      $receiver_0.heightPercent = 1.0;
      $receiver.layoutData = $receiver_0;
    };
  }
  function radioButtonSkin$lambda$lambda$lambda($receiver) {
    $receiver.width = 18.0;
    $receiver.height = 18.0;
  }
  function radioButtonSkin$lambda(closure$buttonState, closure$theme) {
    return function ($receiver) {
      var radio = buttonTexture($receiver, closure$buttonState, Corners_init(1000.0), Pad_init_0(closure$theme.strokeThickness));
      if (closure$buttonState.isSelected) {
        var filledCircle = rect($receiver, radioButtonSkin$lambda$lambda(radio));
        radio.addElement_mxweac$(filledCircle);
      }
      var $receiver_0 = new CheckboxSkinPart($receiver, radio);
      $receiver_0.layout_ge8abi$(radio, radioButtonSkin$lambda$lambda$lambda);
      return $receiver_0;
    };
  }
  function radioButtonSkin(theme, buttonState) {
    return radioButtonSkin$lambda(buttonState, theme);
  }
  function buttonTexture$lambda$lambda(closure$buttonState, closure$borderThickness, closure$isTab, closure$borderRadius) {
    return function ($receiver) {
      var $receiver_0 = $receiver.style;
      var closure$buttonState_0 = closure$buttonState;
      var closure$borderThickness_0 = closure$borderThickness;
      var closure$isTab_0 = closure$isTab;
      var closure$borderRadius_0 = closure$borderRadius;
      $receiver_0.backgroundColor = getButtonFillColor($receiver, closure$buttonState_0);
      $receiver_0.borderColor = BorderColors_init(getButtonStrokeColor($receiver, closure$buttonState_0));
      $receiver_0.borderThickness = closure$borderThickness_0.copy_789ags$();
      if (closure$isTab_0 && closure$buttonState_0.isSelected) {
        $receiver_0.borderThickness.bottom = 0.0;
      }
      $receiver_0.borderRadius = closure$borderRadius_0;
    };
  }
  function buttonTexture$lambda$lambda_0($receiver) {
    $receiver.widthPercent = 1.0;
    $receiver.heightPercent = 1.0;
  }
  function buttonTexture$lambda$lambda$lambda(closure$borderThickness, closure$theme, closure$borderRadius) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1;
      $receiver.margin = new Pad(closure$borderThickness.top, closure$borderThickness.right, 0.0, closure$borderThickness.left);
      $receiver.backgroundColor = closure$theme.fillShine;
      tmp$ = new Vector2(closure$borderRadius.topLeft.x - closure$borderThickness.left, closure$borderRadius.topLeft.y - closure$borderThickness.top);
      tmp$_0 = new Vector2(closure$borderRadius.topRight.x - closure$borderThickness.right, closure$borderRadius.topRight.y - closure$borderThickness.top);
      tmp$_1 = new Vector2();
      $receiver.borderRadius = Corners_init_1(tmp$, tmp$_0, new Vector2(), tmp$_1);
    };
  }
  function buttonTexture$lambda$lambda_1(closure$borderThickness, closure$theme, closure$borderRadius) {
    return function ($receiver) {
      batch($receiver.style, buttonTexture$lambda$lambda$lambda(closure$borderThickness, closure$theme, closure$borderRadius));
    };
  }
  function buttonTexture$lambda$lambda_2($receiver) {
    $receiver.widthPercent = 1.0;
    $receiver.heightPercent = 0.5;
  }
  function buttonTexture$lambda$lambda$lambda_0(closure$borderThickness, closure$theme, closure$borderRadius) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1;
      $receiver.margin = new Pad(0.0, closure$borderThickness.right, closure$borderThickness.bottom, closure$borderThickness.left);
      $receiver.backgroundColor = closure$theme.fillShine;
      tmp$ = new Vector2();
      tmp$_0 = new Vector2();
      tmp$_1 = new Vector2(closure$borderRadius.bottomLeft.x - closure$borderThickness.left, closure$borderRadius.bottomLeft.y - closure$borderThickness.bottom);
      $receiver.borderRadius = Corners_init_1(tmp$, tmp$_0, new Vector2(closure$borderRadius.bottomRight.x - closure$borderThickness.right, closure$borderRadius.bottomRight.y - closure$borderThickness.bottom), tmp$_1);
    };
  }
  function buttonTexture$lambda$lambda_3(closure$borderThickness, closure$theme, closure$borderRadius) {
    return function ($receiver) {
      batch($receiver.style, buttonTexture$lambda$lambda$lambda_0(closure$borderThickness, closure$theme, closure$borderRadius));
    };
  }
  function buttonTexture$lambda$lambda_4($receiver) {
    $receiver.widthPercent = 1.0;
    $receiver.verticalCenter = 0.0;
    $receiver.bottom = 0.0;
  }
  function buttonTexture$lambda(closure$buttonState, closure$borderThickness, closure$isTab, closure$borderRadius) {
    return function ($receiver) {
      var tmp$;
      var theme = inject($receiver, Theme$Companion_getInstance());
      $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(rect($receiver, buttonTexture$lambda$lambda(closure$buttonState, closure$borderThickness, closure$isTab, closure$borderRadius))), buttonTexture$lambda$lambda_0);
      tmp$ = closure$buttonState;
      if (Kotlin.equals(tmp$, ButtonState$UP_getInstance()) || Kotlin.equals(tmp$, ButtonState$OVER_getInstance()) || Kotlin.equals(tmp$, ButtonState$SELECTED_UP_getInstance()) || Kotlin.equals(tmp$, ButtonState$SELECTED_OVER_getInstance()))
        $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(rect($receiver, buttonTexture$lambda$lambda_1(closure$borderThickness, theme, closure$borderRadius))), buttonTexture$lambda$lambda_2);
      else if (!Kotlin.equals(tmp$, ButtonState$DISABLED_getInstance())) {
        $receiver.layout_ge8abi$($receiver.unaryPlus_8db8yx$(rect($receiver, buttonTexture$lambda$lambda_3(closure$borderThickness, theme, closure$borderRadius))), buttonTexture$lambda$lambda_4);
      }
    };
  }
  function buttonTexture($receiver, buttonState, borderRadius, borderThickness, isTab) {
    if (isTab === void 0)
      isTab = false;
    return canvas($receiver, buttonTexture$lambda(buttonState, borderThickness, isTab, borderRadius));
  }
  function CheckboxSkinPart(owner, box_0) {
    HorizontalLayoutContainer.call(this, owner);
    this.box = box_0;
    this.textField = text_1(this, '', CheckboxSkinPart$textField$lambda);
    this.layoutAlgorithm.verticalAlign = VAlign$MIDDLE_getInstance();
    this.unaryPlus_8db8yx$(this.box);
    this.layout_ge8abi$(this.unaryPlus_8db8yx$(this.textField), CheckboxSkinPart_init$lambda);
  }
  Object.defineProperty(CheckboxSkinPart.prototype, 'label', {
    get: function () {
      return this.textField.label;
    },
    set: function (value) {
      this.textField.includeInLayout = value.length > 0;
      this.textField.text = value;
    }
  });
  function CheckboxSkinPart$textField$lambda($receiver) {
    set_selectable($receiver, false);
    $receiver.includeInLayout = false;
  }
  function CheckboxSkinPart_init$lambda($receiver) {
    $receiver.widthPercent = 1.0;
  }
  CheckboxSkinPart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'CheckboxSkinPart',
    interfaces: [Labelable, HorizontalLayoutContainer]
  };
  function LabelButtonSkinPart(owner, texture, textField, padding) {
    if (textField === void 0)
      textField = text_0(owner);
    if (padding === void 0)
      padding = new Pad(5.0, 5.0, 5.0, 5.0);
    ElementContainerImpl.call(this, owner);
    this.texture = texture;
    this.textField = textField;
    this.padding = padding;
    set_selectable(this.textField, false);
    this.unaryPlus_8db8yx$(this.texture);
    this.unaryPlus_8db8yx$(this.textField);
    this.textField.flowStyle.horizontalAlign = FlowHAlign$CENTER_getInstance();
  }
  Object.defineProperty(LabelButtonSkinPart.prototype, 'label', {
    get: function () {
      return this.textField.label;
    },
    set: function (value) {
      this.textField.label = value;
    }
  });
  LabelButtonSkinPart.prototype.updateSizeConstraints_mby7og$ = function (out) {
    this.texture.setSize_yxjqmk$();
    out.width.min = this.texture.width;
    out.height.min = this.texture.height;
  };
  LabelButtonSkinPart.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$, tmp$_0;
    var tmp$_1, tmp$_2;
    var textWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    this.textField.setSize_yxjqmk$(textWidth, null);
    this.textField.moveTo_y2kzbl$(this.padding.left, this.padding.top);
    if (explicitWidth == null) {
      math_0.MathUtils;
      tmp$_0 = (tmp$ = this.minWidth) != null ? tmp$ : 0.0;
      var y = this.textField.width + this.padding.left + this.padding.right;
      var max_sdesaw$result;
      if (Kotlin.compareTo(tmp$_0, y) >= 0) {
        max_sdesaw$result = tmp$_0;
      }
       else {
        max_sdesaw$result = y;
      }
      explicitWidth = max_sdesaw$result;
    }
    var w = explicitWidth;
    math_0.MathUtils;
    tmp$_2 = (tmp$_1 = this.minHeight) != null ? tmp$_1 : 0.0;
    var y_0 = this.textField.height + this.padding.top + this.padding.bottom;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(tmp$_2, y_0) >= 0) {
      max_sdesaw$result_0 = tmp$_2;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    var h = max_sdesaw$result_0;
    if (explicitHeight != null && explicitHeight > h)
      h = explicitHeight;
    this.texture.setSize_yxjqmk$(w, h);
    out.set_i12l7q$(this.texture.bounds);
  };
  LabelButtonSkinPart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'LabelButtonSkinPart',
    interfaces: [Labelable, ElementContainerImpl]
  };
  function IconButtonSkinPart(owner, texture, padding, hGap, vAlign) {
    if (padding === void 0)
      padding = new Pad(5.0, 5.0, 5.0, 5.0);
    if (hGap === void 0)
      hGap = 5.0;
    if (vAlign === void 0)
      vAlign = VAlign$MIDDLE_getInstance();
    ElementContainerImpl.call(this, owner);
    this.texture = texture;
    this.padding = padding;
    this.hGap = hGap;
    this.vAlign = vAlign;
    this.icon_pe59t5$_0 = null;
    this.textField_pe59t5$_0 = null;
    this.addChild_mxweac$(this.texture);
    this.icon_pe59t5$_0 = this.addChild_mxweac$(image(this));
    this.textField_pe59t5$_0 = this.addChild_mxweac$(text_0(this));
  }
  Object.defineProperty(IconButtonSkinPart.prototype, 'label', {
    get: function () {
      var tmp$;
      return (tmp$ = this.textField_pe59t5$_0.text) != null ? tmp$ : '';
    },
    set: function (value) {
      this.textField_pe59t5$_0.text = value;
    }
  });
  IconButtonSkinPart.prototype.onElementAdded_68b5gw$ = function (index, element) {
    this.icon_pe59t5$_0.addElement_3i6itm$(index, element);
  };
  IconButtonSkinPart.prototype.onElementRemoved_68b5gw$ = function (index, element) {
    this.icon_pe59t5$_0.removeElement_erfg6z$(element);
  };
  IconButtonSkinPart.prototype.onElementsSwapped_7tm638$ = function (elementA, indexA, elementB, indexB) {
    this.icon_pe59t5$_0.swapElements_tu2188$(elementA, elementB);
  };
  IconButtonSkinPart.prototype.updateSizeConstraints_mby7og$ = function (out) {
    out.width.min = this.icon_pe59t5$_0.width + this.padding.left + this.padding.right;
    out.height.min = this.icon_pe59t5$_0.height + this.padding.top + this.padding.bottom;
  };
  IconButtonSkinPart.prototype.updateLayout_64u75x$ = function (explicitWidth, explicitHeight, out) {
    var tmp$;
    var childAvailableWidth = this.padding.reduceWidth_81sz4$(explicitWidth);
    var childAvailableHeight = this.padding.reduceHeight_81sz4$(explicitHeight);
    var textWidth = childAvailableWidth == null ? null : childAvailableWidth - this.icon_pe59t5$_0.width - this.hGap;
    this.textField_pe59t5$_0.setSize_yxjqmk$(textWidth, childAvailableHeight);
    var contentWidth = Kotlin.equals(this.label, '') ? this.icon_pe59t5$_0.width : this.icon_pe59t5$_0.width + this.hGap + this.textField_pe59t5$_0.width;
    var tmp$_0;
    if (Kotlin.equals(this.label, ''))
      tmp$_0 = this.icon_pe59t5$_0.height;
    else {
      var x = this.textField_pe59t5$_0.height;
      var y = this.icon_pe59t5$_0.height;
      var max_sdesaw$result;
      if (Kotlin.compareTo(x, y) >= 0) {
        max_sdesaw$result = x;
      }
       else {
        max_sdesaw$result = y;
      }
      tmp$_0 = max_sdesaw$result;
    }
    var contentHeight = tmp$_0;
    var x_0 = contentWidth + this.padding.left + this.padding.right;
    var y_0 = explicitWidth != null ? explicitWidth : 4.0;
    var max_sdesaw$result_0;
    if (Kotlin.compareTo(x_0, y_0) >= 0) {
      max_sdesaw$result_0 = x_0;
    }
     else {
      max_sdesaw$result_0 = y_0;
    }
    var w = max_sdesaw$result_0;
    var x_1 = contentHeight + this.padding.top + this.padding.bottom;
    var y_1 = explicitHeight != null ? explicitHeight : 4.0;
    var max_sdesaw$result_1;
    if (Kotlin.compareTo(x_1, y_1) >= 0) {
      max_sdesaw$result_1 = x_1;
    }
     else {
      max_sdesaw$result_1 = y_1;
    }
    var h = max_sdesaw$result_1;
    this.texture.setSize_yxjqmk$(w, h);
    out.set_dleff0$(w, h);
    if (childAvailableWidth != null) {
      this.icon_pe59t5$_0.x = (childAvailableWidth - contentWidth) * 0.5 + this.padding.left;
    }
     else {
      this.icon_pe59t5$_0.x = this.padding.left;
    }
    this.textField_pe59t5$_0.x = this.icon_pe59t5$_0.x + this.icon_pe59t5$_0.width + this.hGap;
    var yOffset = childAvailableHeight == null ? this.padding.top : (childAvailableHeight - contentHeight) * 0.5 + this.padding.top;
    tmp$ = this.vAlign;
    if (Kotlin.equals(tmp$, VAlign$TOP_getInstance())) {
      this.icon_pe59t5$_0.y = yOffset;
      this.textField_pe59t5$_0.y = yOffset;
    }
     else if (Kotlin.equals(tmp$, VAlign$MIDDLE_getInstance())) {
      this.icon_pe59t5$_0.y = yOffset + (contentHeight - this.icon_pe59t5$_0.height) * 0.5;
      this.textField_pe59t5$_0.y = yOffset + (contentHeight - this.textField_pe59t5$_0.height) * 0.5;
    }
     else if (Kotlin.equals(tmp$, VAlign$BOTTOM_getInstance())) {
      this.icon_pe59t5$_0.y = yOffset + (contentHeight - this.icon_pe59t5$_0.height);
      this.textField_pe59t5$_0.y = yOffset + (contentHeight - this.textField_pe59t5$_0.height);
    }
  };
  IconButtonSkinPart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'IconButtonSkinPart',
    interfaces: [Labelable, ElementContainerImpl]
  };
  function getButtonFillColor($receiver, buttonState) {
    var tmp$;
    var theme = inject($receiver, Theme$Companion_getInstance());
    if (Kotlin.equals(buttonState, ButtonState$UP_getInstance()) || Kotlin.equals(buttonState, ButtonState$DOWN_getInstance()) || Kotlin.equals(buttonState, ButtonState$SELECTED_UP_getInstance()) || Kotlin.equals(buttonState, ButtonState$SELECTED_DOWN_getInstance()))
      tmp$ = theme.fill;
    else if (Kotlin.equals(buttonState, ButtonState$OVER_getInstance()) || Kotlin.equals(buttonState, ButtonState$SELECTED_OVER_getInstance()))
      tmp$ = theme.fillHighlight;
    else if (Kotlin.equals(buttonState, ButtonState$DISABLED_getInstance()))
      tmp$ = theme.fillDisabled;
    else
      tmp$ = Kotlin.noWhenBranchMatched();
    return tmp$;
  }
  function getButtonStrokeColor($receiver, buttonState) {
    var tmp$;
    var theme = inject($receiver, Theme$Companion_getInstance());
    if (Kotlin.equals(buttonState, ButtonState$UP_getInstance()) || Kotlin.equals(buttonState, ButtonState$DOWN_getInstance()))
      tmp$ = theme.stroke;
    else if (Kotlin.equals(buttonState, ButtonState$OVER_getInstance()))
      tmp$ = theme.strokeHighlight;
    else if (Kotlin.equals(buttonState, ButtonState$SELECTED_UP_getInstance()) || Kotlin.equals(buttonState, ButtonState$SELECTED_DOWN_getInstance()))
      tmp$ = theme.strokeSelected;
    else if (Kotlin.equals(buttonState, ButtonState$SELECTED_OVER_getInstance()))
      tmp$ = theme.strokeSelectedHighlight;
    else if (Kotlin.equals(buttonState, ButtonState$DISABLED_getInstance()))
      tmp$ = theme.strokeDisabled;
    else
      tmp$ = Kotlin.noWhenBranchMatched();
    return tmp$;
  }
  function Theme() {
    Theme$Companion_getInstance();
    this.bgColor = Color_0(new Kotlin.Long(-235736065, 0));
    this.panelBgColor = Color_0(new Kotlin.Long(-1044200449, 0));
    this.brighten_0 = Color_0(Kotlin.Long.fromInt(353703168));
    this.fill = Color_0(new Kotlin.Long(-471209217, 0));
    this.fillHighlight = this.fill.plus_1qghwi$(this.brighten_0);
    this.fillDisabled = Color_0(new Kotlin.Long(-858993409, 0));
    this.fillShine = new Color(1.0, 1.0, 1.0, 0.9);
    this.stroke = Color_0(new Kotlin.Long(-2004317953, 0));
    this.strokeThickness = 1.0;
    this.strokeHighlight = this.stroke.plus_1qghwi$(this.brighten_0);
    this.strokeDisabled = Color_0(new Kotlin.Long(-1717986817, 0));
    this.strokeSelected = Color_0(Kotlin.Long.fromInt(37072127));
    this.strokeSelectedHighlight = this.strokeSelected.plus_1qghwi$(this.brighten_0);
    this.borderRadius = 8.0;
    this.textStyle = charStyle(Theme$textStyle$lambda);
    this.headingStyle = charStyle(Theme$headingStyle$lambda);
    this.formLabelStyle = charStyle(Theme$formLabelStyle$lambda);
    this.controlBarBgColor = Color_0(new Kotlin.Long(-1496921857, 0));
    this.atlasPath = 'assets/uiskin/uiskin.json';
  }
  function Theme$Companion() {
    Theme$Companion_instance = this;
  }
  Theme$Companion.prototype.factory_r456d0$ = function (injector) {
    return new Theme();
  };
  Theme$Companion.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'Companion',
    interfaces: [DKey]
  };
  var Theme$Companion_instance = null;
  function Theme$Companion_getInstance() {
    if (Theme$Companion_instance === null) {
      new Theme$Companion();
    }
    return Theme$Companion_instance;
  }
  function Theme$textStyle$lambda($receiver) {
    $receiver.face = 'Verdana';
    $receiver.size = 14;
    $receiver.colorTint = Color_0(Kotlin.Long.fromInt(858993663));
  }
  function Theme$headingStyle$lambda($receiver) {
    $receiver.face = 'Verdana';
    $receiver.size = 14;
    $receiver.isBold = true;
    $receiver.colorTint = Color_0(Kotlin.Long.fromInt(858993663));
  }
  function Theme$formLabelStyle$lambda($receiver) {
    $receiver.colorTint = Color_0(Kotlin.Long.fromInt(1431655935));
    $receiver.isBold = true;
  }
  Theme.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: 'Theme',
    interfaces: []
  };
  function StyleSelectors() {
    StyleSelectors_instance = this;
    this.cbNoLabelStyle = styleTag();
    this.headingStyle = styleTag();
    this.themeRect = styleTag();
  }
  StyleSelectors.$metadata$ = {
    kind: Kotlin.Kind.OBJECT,
    simpleName: 'StyleSelectors',
    interfaces: []
  };
  var StyleSelectors_instance = null;
  function StyleSelectors_getInstance() {
    if (StyleSelectors_instance === null) {
      new StyleSelectors();
    }
    return StyleSelectors_instance;
  }
  Object.defineProperty(BoxStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  StyleBase.prototype.applyCalculated_xvl5vm$ = MutableStyle.prototype.applyCalculated_xvl5vm$;
  BoxStyleSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  LinearGradientSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  ColorStopSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  BorderColorsSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  BasicLayoutElement.prototype.moveTo_y2kzbl$$default = Positionable.prototype.moveTo_y2kzbl$;
  BasicLayoutElement.prototype.setSize_yxjqmk$ = Sizable.prototype.setSize_yxjqmk$;
  BasicLayoutElement.prototype.setSize_i12l7q$ = Sizable.prototype.setSize_i12l7q$;
  Object.defineProperty(BasicLayoutElement.prototype, 'width', Object.getOwnPropertyDescriptor(Sizable.prototype, 'width'));
  Object.defineProperty(BasicLayoutElement.prototype, 'height', Object.getOwnPropertyDescriptor(Sizable.prototype, 'height'));
  BasicLayoutElement.prototype.moveTo_1fv2cb$ = Positionable.prototype.moveTo_1fv2cb$;
  BasicLayoutElement.prototype.moveTo_y2kzbl$ = Positionable.prototype.moveTo_y2kzbl$;
  BasicLayoutElement.prototype.moveTo_y2kzbl$$default = Positionable.prototype.moveTo_y2kzbl$$default;
  BasicLayoutElement.prototype.setPosition_y2kzbl$ = Positionable.prototype.setPosition_y2kzbl$;
  Transformable.prototype.moveTo_y2kzbl$$default = Positionable.prototype.moveTo_y2kzbl$;
  Transformable.prototype.moveTo_1fv2cb$ = Positionable.prototype.moveTo_1fv2cb$;
  Transformable.prototype.moveTo_y2kzbl$ = Positionable.prototype.moveTo_y2kzbl$;
  Transformable.prototype.moveTo_y2kzbl$$default = Positionable.prototype.moveTo_y2kzbl$$default;
  Transformable.prototype.setPosition_y2kzbl$ = Positionable.prototype.setPosition_y2kzbl$;
  LayoutElement.prototype.setSize_yxjqmk$ = BasicLayoutElement.prototype.setSize_yxjqmk$;
  LayoutElement.prototype.setSize_i12l7q$ = BasicLayoutElement.prototype.setSize_i12l7q$;
  LayoutElement.prototype.moveTo_1fv2cb$ = BasicLayoutElement.prototype.moveTo_1fv2cb$;
  LayoutElement.prototype.moveTo_y2kzbl$ = BasicLayoutElement.prototype.moveTo_y2kzbl$;
  LayoutElement.prototype.moveTo_y2kzbl$$default = BasicLayoutElement.prototype.moveTo_y2kzbl$$default;
  LayoutElement.prototype.setPosition_y2kzbl$ = BasicLayoutElement.prototype.setPosition_y2kzbl$;
  Object.defineProperty(LayoutElement.prototype, 'right', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'right'));
  Object.defineProperty(LayoutElement.prototype, 'bottom', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'bottom'));
  Object.defineProperty(LayoutElement.prototype, 'width', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'width'));
  Object.defineProperty(LayoutElement.prototype, 'height', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'height'));
  LayoutElement.prototype.setRotation_y2kzbl$ = Transformable.prototype.setRotation_y2kzbl$;
  LayoutElement.prototype.setScaling_y2kzbl$ = Transformable.prototype.setScaling_y2kzbl$;
  LayoutElement.prototype.setOrigin_y2kzbl$ = Transformable.prototype.setOrigin_y2kzbl$;
  LayoutElement.prototype.localToGlobal_9wm29k$ = Transformable.prototype.localToGlobal_9wm29k$;
  LayoutElement.prototype.localToGlobal_ujzndq$ = Transformable.prototype.localToGlobal_ujzndq$;
  LayoutElement.prototype.globalToLocal_9wm29k$ = Transformable.prototype.globalToLocal_9wm29k$;
  LayoutElement.prototype.globalToLocal_ujzndq$ = Transformable.prototype.globalToLocal_ujzndq$;
  LayoutElement.prototype.rayToPlane_94uff5$ = Transformable.prototype.rayToPlane_94uff5$;
  LayoutElement.prototype.convertCoord_jsa5cl$ = Transformable.prototype.convertCoord_jsa5cl$;
  CameraElement.prototype.setRotation_y2kzbl$ = Transformable.prototype.setRotation_y2kzbl$;
  CameraElement.prototype.setScaling_y2kzbl$ = Transformable.prototype.setScaling_y2kzbl$;
  CameraElement.prototype.setOrigin_y2kzbl$ = Transformable.prototype.setOrigin_y2kzbl$;
  CameraElement.prototype.localToGlobal_9wm29k$ = Transformable.prototype.localToGlobal_9wm29k$;
  CameraElement.prototype.localToGlobal_ujzndq$ = Transformable.prototype.localToGlobal_ujzndq$;
  CameraElement.prototype.globalToLocal_9wm29k$ = Transformable.prototype.globalToLocal_9wm29k$;
  CameraElement.prototype.globalToLocal_ujzndq$ = Transformable.prototype.globalToLocal_ujzndq$;
  CameraElement.prototype.rayToPlane_94uff5$ = Transformable.prototype.rayToPlane_94uff5$;
  CameraElement.prototype.convertCoord_jsa5cl$ = Transformable.prototype.convertCoord_jsa5cl$;
  CameraElement.prototype.moveTo_1fv2cb$ = Transformable.prototype.moveTo_1fv2cb$;
  CameraElement.prototype.moveTo_y2kzbl$ = Transformable.prototype.moveTo_y2kzbl$;
  CameraElement.prototype.moveTo_y2kzbl$$default = Transformable.prototype.moveTo_y2kzbl$$default;
  CameraElement.prototype.setPosition_y2kzbl$ = Transformable.prototype.setPosition_y2kzbl$;
  InteractiveElement.prototype.intersectsGlobalRay_ujzndq$ = LayoutElement.prototype.intersectsGlobalRay_ujzndq$;
  InteractiveElement.prototype.intersectsGlobalRay_94uff6$ = LayoutElement.prototype.intersectsGlobalRay_94uff6$;
  InteractiveElement.prototype.setSize_yxjqmk$ = LayoutElement.prototype.setSize_yxjqmk$;
  InteractiveElement.prototype.setSize_i12l7q$ = LayoutElement.prototype.setSize_i12l7q$;
  InteractiveElement.prototype.moveTo_1fv2cb$ = LayoutElement.prototype.moveTo_1fv2cb$;
  InteractiveElement.prototype.moveTo_y2kzbl$ = LayoutElement.prototype.moveTo_y2kzbl$;
  InteractiveElement.prototype.moveTo_y2kzbl$$default = LayoutElement.prototype.moveTo_y2kzbl$$default;
  InteractiveElement.prototype.setPosition_y2kzbl$ = LayoutElement.prototype.setPosition_y2kzbl$;
  InteractiveElement.prototype.setRotation_y2kzbl$ = LayoutElement.prototype.setRotation_y2kzbl$;
  InteractiveElement.prototype.setScaling_y2kzbl$ = LayoutElement.prototype.setScaling_y2kzbl$;
  InteractiveElement.prototype.setOrigin_y2kzbl$ = LayoutElement.prototype.setOrigin_y2kzbl$;
  InteractiveElement.prototype.localToGlobal_9wm29k$ = LayoutElement.prototype.localToGlobal_9wm29k$;
  InteractiveElement.prototype.localToGlobal_ujzndq$ = LayoutElement.prototype.localToGlobal_ujzndq$;
  InteractiveElement.prototype.globalToLocal_9wm29k$ = LayoutElement.prototype.globalToLocal_9wm29k$;
  InteractiveElement.prototype.globalToLocal_ujzndq$ = LayoutElement.prototype.globalToLocal_ujzndq$;
  InteractiveElement.prototype.rayToPlane_94uff5$ = LayoutElement.prototype.rayToPlane_94uff5$;
  InteractiveElement.prototype.convertCoord_jsa5cl$ = LayoutElement.prototype.convertCoord_jsa5cl$;
  Object.defineProperty(InteractiveElement.prototype, 'right', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'right'));
  Object.defineProperty(InteractiveElement.prototype, 'bottom', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'bottom'));
  Object.defineProperty(InteractiveElement.prototype, 'width', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'width'));
  Object.defineProperty(InteractiveElement.prototype, 'height', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'height'));
  InteractiveElement.prototype.windowToLocal_9wm29l$ = CameraElement.prototype.windowToLocal_9wm29l$;
  InteractiveElement.prototype.localToWindow_9wm29k$ = CameraElement.prototype.localToWindow_9wm29k$;
  InteractiveElement.prototype.previousSibling = Child.prototype.previousSibling;
  InteractiveElement.prototype.nextSibling = Child.prototype.nextSibling;
  UiComponent.prototype.hasInteraction_j3fyc4$$default = InteractiveElement.prototype.hasInteraction_j3fyc4$;
  Object.defineProperty(UiComponent.prototype, 'alpha', Object.getOwnPropertyDescriptor(ColorTransformable.prototype, 'alpha'));
  UiComponent.prototype.handlesInteraction_1811yh$ = InteractiveElement.prototype.handlesInteraction_1811yh$;
  UiComponent.prototype.handlesInteraction_j3fyc4$ = InteractiveElement.prototype.handlesInteraction_j3fyc4$;
  UiComponent.prototype.hasInteraction_j3fyc4$ = InteractiveElement.prototype.hasInteraction_j3fyc4$;
  UiComponent.prototype.hasInteraction_j3fyc4$$default = InteractiveElement.prototype.hasInteraction_j3fyc4$$default;
  UiComponent.prototype.getInteractionSignal_j3fyc4$ = InteractiveElement.prototype.getInteractionSignal_j3fyc4$;
  UiComponent.prototype.addInteractionSignal_pqftit$ = InteractiveElement.prototype.addInteractionSignal_pqftit$;
  UiComponent.prototype.intersectsGlobalRay_ujzndq$ = InteractiveElement.prototype.intersectsGlobalRay_ujzndq$;
  UiComponent.prototype.intersectsGlobalRay_94uff6$ = InteractiveElement.prototype.intersectsGlobalRay_94uff6$;
  UiComponent.prototype.setSize_yxjqmk$ = InteractiveElement.prototype.setSize_yxjqmk$;
  UiComponent.prototype.setSize_i12l7q$ = InteractiveElement.prototype.setSize_i12l7q$;
  UiComponent.prototype.moveTo_1fv2cb$ = InteractiveElement.prototype.moveTo_1fv2cb$;
  UiComponent.prototype.moveTo_y2kzbl$ = InteractiveElement.prototype.moveTo_y2kzbl$;
  UiComponent.prototype.moveTo_y2kzbl$$default = InteractiveElement.prototype.moveTo_y2kzbl$$default;
  UiComponent.prototype.setPosition_y2kzbl$ = InteractiveElement.prototype.setPosition_y2kzbl$;
  UiComponent.prototype.setRotation_y2kzbl$ = InteractiveElement.prototype.setRotation_y2kzbl$;
  UiComponent.prototype.setScaling_y2kzbl$ = InteractiveElement.prototype.setScaling_y2kzbl$;
  UiComponent.prototype.setOrigin_y2kzbl$ = InteractiveElement.prototype.setOrigin_y2kzbl$;
  UiComponent.prototype.localToGlobal_9wm29k$ = InteractiveElement.prototype.localToGlobal_9wm29k$;
  UiComponent.prototype.localToGlobal_ujzndq$ = InteractiveElement.prototype.localToGlobal_ujzndq$;
  UiComponent.prototype.globalToLocal_9wm29k$ = InteractiveElement.prototype.globalToLocal_9wm29k$;
  UiComponent.prototype.globalToLocal_ujzndq$ = InteractiveElement.prototype.globalToLocal_ujzndq$;
  UiComponent.prototype.rayToPlane_94uff5$ = InteractiveElement.prototype.rayToPlane_94uff5$;
  UiComponent.prototype.convertCoord_jsa5cl$ = InteractiveElement.prototype.convertCoord_jsa5cl$;
  UiComponent.prototype.windowToLocal_9wm29l$ = InteractiveElement.prototype.windowToLocal_9wm29l$;
  UiComponent.prototype.localToWindow_9wm29k$ = InteractiveElement.prototype.localToWindow_9wm29k$;
  UiComponent.prototype.previousSibling = InteractiveElement.prototype.previousSibling;
  UiComponent.prototype.nextSibling = InteractiveElement.prototype.nextSibling;
  Object.defineProperty(UiComponent.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(InteractiveElement.prototype, 'interactivityEnabled'));
  Object.defineProperty(UiComponent.prototype, 'right', Object.getOwnPropertyDescriptor(InteractiveElement.prototype, 'right'));
  Object.defineProperty(UiComponent.prototype, 'bottom', Object.getOwnPropertyDescriptor(InteractiveElement.prototype, 'bottom'));
  Object.defineProperty(UiComponent.prototype, 'width', Object.getOwnPropertyDescriptor(InteractiveElement.prototype, 'width'));
  Object.defineProperty(UiComponent.prototype, 'height', Object.getOwnPropertyDescriptor(InteractiveElement.prototype, 'height'));
  UiComponent.prototype.validate = Validatable.prototype.validate;
  UiComponent.prototype.validate_za3lpa$ = Validatable.prototype.validate_za3lpa$;
  UiComponentImpl.prototype.isRendered = UiComponent.prototype.isRendered;
  UiComponentImpl.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  UiComponentImpl.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  UiComponentImpl.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  UiComponentImpl.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  UiComponentImpl.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  UiComponentImpl.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  UiComponentImpl.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  UiComponentImpl.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  UiComponentImpl.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  UiComponentImpl.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  UiComponentImpl.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  UiComponentImpl.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  UiComponentImpl.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  UiComponentImpl.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  UiComponentImpl.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  UiComponentImpl.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  UiComponentImpl.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  UiComponentImpl.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  UiComponentImpl.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  UiComponentImpl.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  UiComponentImpl.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  UiComponentImpl.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  UiComponentImpl.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  UiComponentImpl.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  UiComponentImpl.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  UiComponentImpl.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  UiComponentImpl.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  UiComponentImpl.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  UiComponentImpl.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  UiComponentImpl.prototype.previousSibling = UiComponent.prototype.previousSibling;
  UiComponentImpl.prototype.nextSibling = UiComponent.prototype.nextSibling;
  UiComponentImpl.prototype.validate = UiComponent.prototype.validate;
  UiComponentImpl.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(UiComponentImpl.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(UiComponentImpl.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(UiComponentImpl.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(UiComponentImpl.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(UiComponentImpl.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(UiComponentImpl.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  Parent.prototype.previousSibling = Child.prototype.previousSibling;
  Parent.prototype.nextSibling = Child.prototype.nextSibling;
  Container.prototype.isRendered = UiComponent.prototype.isRendered;
  Container.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  Container.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  Container.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  Container.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  Container.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  Container.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  Container.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  Container.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  Container.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  Container.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  Container.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  Container.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  Container.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  Container.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  Container.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  Container.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  Container.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  Container.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  Container.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  Container.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  Container.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  Container.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  Container.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  Container.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  Container.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  Container.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  Container.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  Container.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  Container.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  Container.prototype.previousSibling = UiComponent.prototype.previousSibling;
  Container.prototype.nextSibling = UiComponent.prototype.nextSibling;
  Container.prototype.validate = UiComponent.prototype.validate;
  Container.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(Container.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(Container.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(Container.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(Container.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(Container.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(Container.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  Container.prototype.containsChild_npz94r$ = Parent.prototype.containsChild_npz94r$;
  Container.prototype.getChildAt_za3lpa$ = Parent.prototype.getChildAt_za3lpa$;
  Container.prototype.iterateChildren_9z398f$ = Parent.prototype.iterateChildren_9z398f$;
  Container.prototype.iterateChildren_bwf5pq$ = Parent.prototype.iterateChildren_bwf5pq$;
  Container.prototype.iterateChildrenReversed_bwf5pq$ = Parent.prototype.iterateChildrenReversed_bwf5pq$;
  Object.defineProperty(Container.prototype, 'numChildren', Object.getOwnPropertyDescriptor(Parent.prototype, 'numChildren'));
  ContainerImpl.prototype.isRendered = Container.prototype.isRendered;
  ContainerImpl.prototype.getChildUnderPoint_g1oyt7$ = Container.prototype.getChildUnderPoint_g1oyt7$;
  ContainerImpl.prototype.getChildUnderRay_p0mkez$ = Container.prototype.getChildUnderRay_p0mkez$;
  ContainerImpl.prototype.getChildrenUnderPoint_adthd4$ = Container.prototype.getChildrenUnderPoint_adthd4$;
  ContainerImpl.prototype.getChildrenUnderRay_w6o14y$ = Container.prototype.getChildrenUnderRay_w6o14y$;
  ContainerImpl.prototype.handlesInteraction_1811yh$ = Container.prototype.handlesInteraction_1811yh$;
  ContainerImpl.prototype.handlesInteraction_j3fyc4$ = Container.prototype.handlesInteraction_j3fyc4$;
  ContainerImpl.prototype.hasInteraction_j3fyc4$ = Container.prototype.hasInteraction_j3fyc4$;
  ContainerImpl.prototype.hasInteraction_j3fyc4$$default = Container.prototype.hasInteraction_j3fyc4$$default;
  ContainerImpl.prototype.getInteractionSignal_j3fyc4$ = Container.prototype.getInteractionSignal_j3fyc4$;
  ContainerImpl.prototype.addInteractionSignal_pqftit$ = Container.prototype.addInteractionSignal_pqftit$;
  ContainerImpl.prototype.intersectsGlobalRay_ujzndq$ = Container.prototype.intersectsGlobalRay_ujzndq$;
  ContainerImpl.prototype.intersectsGlobalRay_94uff6$ = Container.prototype.intersectsGlobalRay_94uff6$;
  ContainerImpl.prototype.setSize_yxjqmk$ = Container.prototype.setSize_yxjqmk$;
  ContainerImpl.prototype.setSize_i12l7q$ = Container.prototype.setSize_i12l7q$;
  ContainerImpl.prototype.moveTo_1fv2cb$ = Container.prototype.moveTo_1fv2cb$;
  ContainerImpl.prototype.moveTo_y2kzbl$ = Container.prototype.moveTo_y2kzbl$;
  ContainerImpl.prototype.moveTo_y2kzbl$$default = Container.prototype.moveTo_y2kzbl$$default;
  ContainerImpl.prototype.setPosition_y2kzbl$ = Container.prototype.setPosition_y2kzbl$;
  ContainerImpl.prototype.setRotation_y2kzbl$ = Container.prototype.setRotation_y2kzbl$;
  ContainerImpl.prototype.setScaling_y2kzbl$ = Container.prototype.setScaling_y2kzbl$;
  ContainerImpl.prototype.setOrigin_y2kzbl$ = Container.prototype.setOrigin_y2kzbl$;
  ContainerImpl.prototype.localToGlobal_9wm29k$ = Container.prototype.localToGlobal_9wm29k$;
  ContainerImpl.prototype.localToGlobal_ujzndq$ = Container.prototype.localToGlobal_ujzndq$;
  ContainerImpl.prototype.globalToLocal_9wm29k$ = Container.prototype.globalToLocal_9wm29k$;
  ContainerImpl.prototype.globalToLocal_ujzndq$ = Container.prototype.globalToLocal_ujzndq$;
  ContainerImpl.prototype.rayToPlane_94uff5$ = Container.prototype.rayToPlane_94uff5$;
  ContainerImpl.prototype.convertCoord_jsa5cl$ = Container.prototype.convertCoord_jsa5cl$;
  ContainerImpl.prototype.windowToLocal_9wm29l$ = Container.prototype.windowToLocal_9wm29l$;
  ContainerImpl.prototype.localToWindow_9wm29k$ = Container.prototype.localToWindow_9wm29k$;
  ContainerImpl.prototype.previousSibling = Container.prototype.previousSibling;
  ContainerImpl.prototype.nextSibling = Container.prototype.nextSibling;
  ContainerImpl.prototype.validate = Container.prototype.validate;
  ContainerImpl.prototype.validate_za3lpa$ = Container.prototype.validate_za3lpa$;
  ContainerImpl.prototype.containsChild_npz94r$ = Container.prototype.containsChild_npz94r$;
  ContainerImpl.prototype.getChildAt_za3lpa$ = Container.prototype.getChildAt_za3lpa$;
  ContainerImpl.prototype.iterateChildren_9z398f$ = Container.prototype.iterateChildren_9z398f$;
  ContainerImpl.prototype.iterateChildren_bwf5pq$ = Container.prototype.iterateChildren_bwf5pq$;
  ContainerImpl.prototype.iterateChildrenReversed_bwf5pq$ = Container.prototype.iterateChildrenReversed_bwf5pq$;
  Object.defineProperty(ContainerImpl.prototype, 'alpha', Object.getOwnPropertyDescriptor(Container.prototype, 'alpha'));
  Object.defineProperty(ContainerImpl.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Container.prototype, 'interactivityEnabled'));
  Object.defineProperty(ContainerImpl.prototype, 'right', Object.getOwnPropertyDescriptor(Container.prototype, 'right'));
  Object.defineProperty(ContainerImpl.prototype, 'bottom', Object.getOwnPropertyDescriptor(Container.prototype, 'bottom'));
  Object.defineProperty(ContainerImpl.prototype, 'width', Object.getOwnPropertyDescriptor(Container.prototype, 'width'));
  Object.defineProperty(ContainerImpl.prototype, 'height', Object.getOwnPropertyDescriptor(Container.prototype, 'height'));
  Object.defineProperty(ContainerImpl.prototype, 'numChildren', Object.getOwnPropertyDescriptor(Container.prototype, 'numChildren'));
  ElementContainer.prototype.isRendered = Container.prototype.isRendered;
  ElementContainer.prototype.getChildUnderPoint_g1oyt7$ = Container.prototype.getChildUnderPoint_g1oyt7$;
  ElementContainer.prototype.getChildUnderRay_p0mkez$ = Container.prototype.getChildUnderRay_p0mkez$;
  ElementContainer.prototype.getChildrenUnderPoint_adthd4$ = Container.prototype.getChildrenUnderPoint_adthd4$;
  ElementContainer.prototype.getChildrenUnderRay_w6o14y$ = Container.prototype.getChildrenUnderRay_w6o14y$;
  ElementContainer.prototype.handlesInteraction_1811yh$ = Container.prototype.handlesInteraction_1811yh$;
  ElementContainer.prototype.handlesInteraction_j3fyc4$ = Container.prototype.handlesInteraction_j3fyc4$;
  ElementContainer.prototype.hasInteraction_j3fyc4$ = Container.prototype.hasInteraction_j3fyc4$;
  ElementContainer.prototype.hasInteraction_j3fyc4$$default = Container.prototype.hasInteraction_j3fyc4$$default;
  ElementContainer.prototype.getInteractionSignal_j3fyc4$ = Container.prototype.getInteractionSignal_j3fyc4$;
  ElementContainer.prototype.addInteractionSignal_pqftit$ = Container.prototype.addInteractionSignal_pqftit$;
  ElementContainer.prototype.intersectsGlobalRay_ujzndq$ = Container.prototype.intersectsGlobalRay_ujzndq$;
  ElementContainer.prototype.intersectsGlobalRay_94uff6$ = Container.prototype.intersectsGlobalRay_94uff6$;
  ElementContainer.prototype.setSize_yxjqmk$ = Container.prototype.setSize_yxjqmk$;
  ElementContainer.prototype.setSize_i12l7q$ = Container.prototype.setSize_i12l7q$;
  ElementContainer.prototype.moveTo_1fv2cb$ = Container.prototype.moveTo_1fv2cb$;
  ElementContainer.prototype.moveTo_y2kzbl$ = Container.prototype.moveTo_y2kzbl$;
  ElementContainer.prototype.moveTo_y2kzbl$$default = Container.prototype.moveTo_y2kzbl$$default;
  ElementContainer.prototype.setPosition_y2kzbl$ = Container.prototype.setPosition_y2kzbl$;
  ElementContainer.prototype.setRotation_y2kzbl$ = Container.prototype.setRotation_y2kzbl$;
  ElementContainer.prototype.setScaling_y2kzbl$ = Container.prototype.setScaling_y2kzbl$;
  ElementContainer.prototype.setOrigin_y2kzbl$ = Container.prototype.setOrigin_y2kzbl$;
  ElementContainer.prototype.localToGlobal_9wm29k$ = Container.prototype.localToGlobal_9wm29k$;
  ElementContainer.prototype.localToGlobal_ujzndq$ = Container.prototype.localToGlobal_ujzndq$;
  ElementContainer.prototype.globalToLocal_9wm29k$ = Container.prototype.globalToLocal_9wm29k$;
  ElementContainer.prototype.globalToLocal_ujzndq$ = Container.prototype.globalToLocal_ujzndq$;
  ElementContainer.prototype.rayToPlane_94uff5$ = Container.prototype.rayToPlane_94uff5$;
  ElementContainer.prototype.convertCoord_jsa5cl$ = Container.prototype.convertCoord_jsa5cl$;
  ElementContainer.prototype.windowToLocal_9wm29l$ = Container.prototype.windowToLocal_9wm29l$;
  ElementContainer.prototype.localToWindow_9wm29k$ = Container.prototype.localToWindow_9wm29k$;
  ElementContainer.prototype.previousSibling = Container.prototype.previousSibling;
  ElementContainer.prototype.nextSibling = Container.prototype.nextSibling;
  ElementContainer.prototype.validate = Container.prototype.validate;
  ElementContainer.prototype.validate_za3lpa$ = Container.prototype.validate_za3lpa$;
  ElementContainer.prototype.containsChild_npz94r$ = Container.prototype.containsChild_npz94r$;
  ElementContainer.prototype.getChildAt_za3lpa$ = Container.prototype.getChildAt_za3lpa$;
  ElementContainer.prototype.iterateChildren_9z398f$ = Container.prototype.iterateChildren_9z398f$;
  ElementContainer.prototype.iterateChildren_bwf5pq$ = Container.prototype.iterateChildren_bwf5pq$;
  ElementContainer.prototype.iterateChildrenReversed_bwf5pq$ = Container.prototype.iterateChildrenReversed_bwf5pq$;
  Object.defineProperty(ElementContainer.prototype, 'alpha', Object.getOwnPropertyDescriptor(Container.prototype, 'alpha'));
  Object.defineProperty(ElementContainer.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Container.prototype, 'interactivityEnabled'));
  Object.defineProperty(ElementContainer.prototype, 'right', Object.getOwnPropertyDescriptor(Container.prototype, 'right'));
  Object.defineProperty(ElementContainer.prototype, 'bottom', Object.getOwnPropertyDescriptor(Container.prototype, 'bottom'));
  Object.defineProperty(ElementContainer.prototype, 'width', Object.getOwnPropertyDescriptor(Container.prototype, 'width'));
  Object.defineProperty(ElementContainer.prototype, 'height', Object.getOwnPropertyDescriptor(Container.prototype, 'height'));
  Object.defineProperty(ElementContainer.prototype, 'numChildren', Object.getOwnPropertyDescriptor(Container.prototype, 'numChildren'));
  ElementContainer.prototype.unaryPlus_8db8yx$ = ElementParent.prototype.unaryPlus_8db8yx$;
  ElementContainer.prototype.unaryMinus_8db8yx$ = ElementParent.prototype.unaryMinus_8db8yx$;
  ElementContainer.prototype.clearElements_6taknv$ = ElementParent.prototype.clearElements_6taknv$;
  ElementContainer.prototype.addElementAfter_tu2188$ = ElementParent.prototype.addElementAfter_tu2188$;
  ElementContainer.prototype.addElementBefore_tu2188$ = ElementParent.prototype.addElementBefore_tu2188$;
  ElementContainerImpl.prototype.isRendered = ElementContainer.prototype.isRendered;
  ElementContainerImpl.prototype.getChildUnderPoint_g1oyt7$ = ElementContainer.prototype.getChildUnderPoint_g1oyt7$;
  ElementContainerImpl.prototype.getChildUnderRay_p0mkez$ = ElementContainer.prototype.getChildUnderRay_p0mkez$;
  ElementContainerImpl.prototype.getChildrenUnderPoint_adthd4$ = ElementContainer.prototype.getChildrenUnderPoint_adthd4$;
  ElementContainerImpl.prototype.getChildrenUnderRay_w6o14y$ = ElementContainer.prototype.getChildrenUnderRay_w6o14y$;
  ElementContainerImpl.prototype.handlesInteraction_1811yh$ = ElementContainer.prototype.handlesInteraction_1811yh$;
  ElementContainerImpl.prototype.handlesInteraction_j3fyc4$ = ElementContainer.prototype.handlesInteraction_j3fyc4$;
  ElementContainerImpl.prototype.hasInteraction_j3fyc4$ = ElementContainer.prototype.hasInteraction_j3fyc4$;
  ElementContainerImpl.prototype.hasInteraction_j3fyc4$$default = ElementContainer.prototype.hasInteraction_j3fyc4$$default;
  ElementContainerImpl.prototype.getInteractionSignal_j3fyc4$ = ElementContainer.prototype.getInteractionSignal_j3fyc4$;
  ElementContainerImpl.prototype.addInteractionSignal_pqftit$ = ElementContainer.prototype.addInteractionSignal_pqftit$;
  ElementContainerImpl.prototype.intersectsGlobalRay_ujzndq$ = ElementContainer.prototype.intersectsGlobalRay_ujzndq$;
  ElementContainerImpl.prototype.intersectsGlobalRay_94uff6$ = ElementContainer.prototype.intersectsGlobalRay_94uff6$;
  ElementContainerImpl.prototype.setSize_yxjqmk$ = ElementContainer.prototype.setSize_yxjqmk$;
  ElementContainerImpl.prototype.setSize_i12l7q$ = ElementContainer.prototype.setSize_i12l7q$;
  ElementContainerImpl.prototype.moveTo_1fv2cb$ = ElementContainer.prototype.moveTo_1fv2cb$;
  ElementContainerImpl.prototype.moveTo_y2kzbl$ = ElementContainer.prototype.moveTo_y2kzbl$;
  ElementContainerImpl.prototype.moveTo_y2kzbl$$default = ElementContainer.prototype.moveTo_y2kzbl$$default;
  ElementContainerImpl.prototype.setPosition_y2kzbl$ = ElementContainer.prototype.setPosition_y2kzbl$;
  ElementContainerImpl.prototype.setRotation_y2kzbl$ = ElementContainer.prototype.setRotation_y2kzbl$;
  ElementContainerImpl.prototype.setScaling_y2kzbl$ = ElementContainer.prototype.setScaling_y2kzbl$;
  ElementContainerImpl.prototype.setOrigin_y2kzbl$ = ElementContainer.prototype.setOrigin_y2kzbl$;
  ElementContainerImpl.prototype.localToGlobal_9wm29k$ = ElementContainer.prototype.localToGlobal_9wm29k$;
  ElementContainerImpl.prototype.localToGlobal_ujzndq$ = ElementContainer.prototype.localToGlobal_ujzndq$;
  ElementContainerImpl.prototype.globalToLocal_9wm29k$ = ElementContainer.prototype.globalToLocal_9wm29k$;
  ElementContainerImpl.prototype.globalToLocal_ujzndq$ = ElementContainer.prototype.globalToLocal_ujzndq$;
  ElementContainerImpl.prototype.rayToPlane_94uff5$ = ElementContainer.prototype.rayToPlane_94uff5$;
  ElementContainerImpl.prototype.convertCoord_jsa5cl$ = ElementContainer.prototype.convertCoord_jsa5cl$;
  ElementContainerImpl.prototype.windowToLocal_9wm29l$ = ElementContainer.prototype.windowToLocal_9wm29l$;
  ElementContainerImpl.prototype.localToWindow_9wm29k$ = ElementContainer.prototype.localToWindow_9wm29k$;
  ElementContainerImpl.prototype.previousSibling = ElementContainer.prototype.previousSibling;
  ElementContainerImpl.prototype.nextSibling = ElementContainer.prototype.nextSibling;
  ElementContainerImpl.prototype.validate = ElementContainer.prototype.validate;
  ElementContainerImpl.prototype.validate_za3lpa$ = ElementContainer.prototype.validate_za3lpa$;
  ElementContainerImpl.prototype.containsChild_npz94r$ = ElementContainer.prototype.containsChild_npz94r$;
  ElementContainerImpl.prototype.getChildAt_za3lpa$ = ElementContainer.prototype.getChildAt_za3lpa$;
  ElementContainerImpl.prototype.iterateChildren_9z398f$ = ElementContainer.prototype.iterateChildren_9z398f$;
  ElementContainerImpl.prototype.iterateChildren_bwf5pq$ = ElementContainer.prototype.iterateChildren_bwf5pq$;
  ElementContainerImpl.prototype.iterateChildrenReversed_bwf5pq$ = ElementContainer.prototype.iterateChildrenReversed_bwf5pq$;
  ElementContainerImpl.prototype.unaryPlus_8db8yx$ = ElementContainer.prototype.unaryPlus_8db8yx$;
  ElementContainerImpl.prototype.unaryMinus_8db8yx$ = ElementContainer.prototype.unaryMinus_8db8yx$;
  ElementContainerImpl.prototype.clearElements_6taknv$ = ElementContainer.prototype.clearElements_6taknv$;
  ElementContainerImpl.prototype.addElementAfter_tu2188$ = ElementContainer.prototype.addElementAfter_tu2188$;
  ElementContainerImpl.prototype.addElementBefore_tu2188$ = ElementContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(ElementContainerImpl.prototype, 'alpha', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'alpha'));
  Object.defineProperty(ElementContainerImpl.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(ElementContainerImpl.prototype, 'right', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'right'));
  Object.defineProperty(ElementContainerImpl.prototype, 'bottom', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'bottom'));
  Object.defineProperty(ElementContainerImpl.prototype, 'width', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'width'));
  Object.defineProperty(ElementContainerImpl.prototype, 'height', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'height'));
  Object.defineProperty(ElementContainerImpl.prototype, 'numChildren', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'numChildren'));
  Labelable.prototype.isRendered = UiComponent.prototype.isRendered;
  Labelable.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  Labelable.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  Labelable.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  Labelable.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  Labelable.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  Labelable.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  Labelable.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  Labelable.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  Labelable.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  Labelable.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  Labelable.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  Labelable.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  Labelable.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  Labelable.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  Labelable.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  Labelable.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  Labelable.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  Labelable.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  Labelable.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  Labelable.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  Labelable.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  Labelable.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  Labelable.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  Labelable.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  Labelable.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  Labelable.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  Labelable.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  Labelable.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  Labelable.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  Labelable.prototype.previousSibling = UiComponent.prototype.previousSibling;
  Labelable.prototype.nextSibling = UiComponent.prototype.nextSibling;
  Labelable.prototype.validate = UiComponent.prototype.validate;
  Labelable.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(Labelable.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(Labelable.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(Labelable.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(Labelable.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(Labelable.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(Labelable.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  Selectable.prototype.isRendered = UiComponent.prototype.isRendered;
  Selectable.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  Selectable.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  Selectable.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  Selectable.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  Selectable.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  Selectable.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  Selectable.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  Selectable.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  Selectable.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  Selectable.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  Selectable.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  Selectable.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  Selectable.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  Selectable.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  Selectable.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  Selectable.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  Selectable.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  Selectable.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  Selectable.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  Selectable.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  Selectable.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  Selectable.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  Selectable.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  Selectable.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  Selectable.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  Selectable.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  Selectable.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  Selectable.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  Selectable.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  Selectable.prototype.previousSibling = UiComponent.prototype.previousSibling;
  Selectable.prototype.nextSibling = UiComponent.prototype.nextSibling;
  Selectable.prototype.validate = UiComponent.prototype.validate;
  Selectable.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(Selectable.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(Selectable.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(Selectable.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(Selectable.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(Selectable.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(Selectable.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  Focusable.prototype.isRendered = UiComponent.prototype.isRendered;
  Focusable.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  Focusable.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  Focusable.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  Focusable.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  Focusable.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  Focusable.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  Focusable.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  Focusable.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  Focusable.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  Focusable.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  Focusable.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  Focusable.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  Focusable.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  Focusable.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  Focusable.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  Focusable.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  Focusable.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  Focusable.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  Focusable.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  Focusable.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  Focusable.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  Focusable.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  Focusable.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  Focusable.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  Focusable.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  Focusable.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  Focusable.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  Focusable.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  Focusable.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  Focusable.prototype.previousSibling = UiComponent.prototype.previousSibling;
  Focusable.prototype.nextSibling = UiComponent.prototype.nextSibling;
  Focusable.prototype.validate = UiComponent.prototype.validate;
  Focusable.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(Focusable.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(Focusable.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(Focusable.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(Focusable.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(Focusable.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(Focusable.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  Button.prototype.isRendered = Labelable.prototype.isRendered;
  Button.prototype.getChildUnderPoint_g1oyt7$ = Labelable.prototype.getChildUnderPoint_g1oyt7$;
  Button.prototype.getChildUnderRay_p0mkez$ = Labelable.prototype.getChildUnderRay_p0mkez$;
  Button.prototype.getChildrenUnderPoint_adthd4$ = Labelable.prototype.getChildrenUnderPoint_adthd4$;
  Button.prototype.getChildrenUnderRay_w6o14y$ = Labelable.prototype.getChildrenUnderRay_w6o14y$;
  Button.prototype.handlesInteraction_1811yh$ = Labelable.prototype.handlesInteraction_1811yh$;
  Button.prototype.handlesInteraction_j3fyc4$ = Labelable.prototype.handlesInteraction_j3fyc4$;
  Button.prototype.hasInteraction_j3fyc4$ = Labelable.prototype.hasInteraction_j3fyc4$;
  Button.prototype.hasInteraction_j3fyc4$$default = Labelable.prototype.hasInteraction_j3fyc4$$default;
  Button.prototype.getInteractionSignal_j3fyc4$ = Labelable.prototype.getInteractionSignal_j3fyc4$;
  Button.prototype.addInteractionSignal_pqftit$ = Labelable.prototype.addInteractionSignal_pqftit$;
  Button.prototype.intersectsGlobalRay_ujzndq$ = Labelable.prototype.intersectsGlobalRay_ujzndq$;
  Button.prototype.intersectsGlobalRay_94uff6$ = Labelable.prototype.intersectsGlobalRay_94uff6$;
  Button.prototype.setSize_yxjqmk$ = Labelable.prototype.setSize_yxjqmk$;
  Button.prototype.setSize_i12l7q$ = Labelable.prototype.setSize_i12l7q$;
  Button.prototype.moveTo_1fv2cb$ = Labelable.prototype.moveTo_1fv2cb$;
  Button.prototype.moveTo_y2kzbl$ = Labelable.prototype.moveTo_y2kzbl$;
  Button.prototype.moveTo_y2kzbl$$default = Labelable.prototype.moveTo_y2kzbl$$default;
  Button.prototype.setPosition_y2kzbl$ = Labelable.prototype.setPosition_y2kzbl$;
  Button.prototype.setRotation_y2kzbl$ = Labelable.prototype.setRotation_y2kzbl$;
  Button.prototype.setScaling_y2kzbl$ = Labelable.prototype.setScaling_y2kzbl$;
  Button.prototype.setOrigin_y2kzbl$ = Labelable.prototype.setOrigin_y2kzbl$;
  Button.prototype.localToGlobal_9wm29k$ = Labelable.prototype.localToGlobal_9wm29k$;
  Button.prototype.localToGlobal_ujzndq$ = Labelable.prototype.localToGlobal_ujzndq$;
  Button.prototype.globalToLocal_9wm29k$ = Labelable.prototype.globalToLocal_9wm29k$;
  Button.prototype.globalToLocal_ujzndq$ = Labelable.prototype.globalToLocal_ujzndq$;
  Button.prototype.rayToPlane_94uff5$ = Labelable.prototype.rayToPlane_94uff5$;
  Button.prototype.convertCoord_jsa5cl$ = Labelable.prototype.convertCoord_jsa5cl$;
  Button.prototype.windowToLocal_9wm29l$ = Labelable.prototype.windowToLocal_9wm29l$;
  Button.prototype.localToWindow_9wm29k$ = Labelable.prototype.localToWindow_9wm29k$;
  Button.prototype.previousSibling = Labelable.prototype.previousSibling;
  Button.prototype.nextSibling = Labelable.prototype.nextSibling;
  Button.prototype.validate = Labelable.prototype.validate;
  Button.prototype.validate_za3lpa$ = Labelable.prototype.validate_za3lpa$;
  Object.defineProperty(Button.prototype, 'alpha', Object.getOwnPropertyDescriptor(Labelable.prototype, 'alpha'));
  Object.defineProperty(Button.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Labelable.prototype, 'interactivityEnabled'));
  Object.defineProperty(Button.prototype, 'right', Object.getOwnPropertyDescriptor(Labelable.prototype, 'right'));
  Object.defineProperty(Button.prototype, 'bottom', Object.getOwnPropertyDescriptor(Labelable.prototype, 'bottom'));
  Object.defineProperty(Button.prototype, 'width', Object.getOwnPropertyDescriptor(Labelable.prototype, 'width'));
  Object.defineProperty(Button.prototype, 'height', Object.getOwnPropertyDescriptor(Labelable.prototype, 'height'));
  Button.prototype.focus = Focusable.prototype.focus;
  Button.prototype.blur = Focusable.prototype.blur;
  Button.prototype.onFocused = Focusable.prototype.onFocused;
  Button.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(Button.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(Button.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(ButtonStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  ColorPicker.prototype.focus = Focusable.prototype.focus;
  ColorPicker.prototype.blur = Focusable.prototype.blur;
  ColorPicker.prototype.onFocused = Focusable.prototype.onFocused;
  ColorPicker.prototype.onBlurred = Focusable.prototype.onBlurred;
  ColorPicker.prototype.isRendered = Focusable.prototype.isRendered;
  ColorPicker.prototype.getChildUnderPoint_g1oyt7$ = Focusable.prototype.getChildUnderPoint_g1oyt7$;
  ColorPicker.prototype.getChildUnderRay_p0mkez$ = Focusable.prototype.getChildUnderRay_p0mkez$;
  ColorPicker.prototype.getChildrenUnderPoint_adthd4$ = Focusable.prototype.getChildrenUnderPoint_adthd4$;
  ColorPicker.prototype.getChildrenUnderRay_w6o14y$ = Focusable.prototype.getChildrenUnderRay_w6o14y$;
  ColorPicker.prototype.handlesInteraction_1811yh$ = Focusable.prototype.handlesInteraction_1811yh$;
  ColorPicker.prototype.handlesInteraction_j3fyc4$ = Focusable.prototype.handlesInteraction_j3fyc4$;
  ColorPicker.prototype.hasInteraction_j3fyc4$ = Focusable.prototype.hasInteraction_j3fyc4$;
  ColorPicker.prototype.hasInteraction_j3fyc4$$default = Focusable.prototype.hasInteraction_j3fyc4$$default;
  ColorPicker.prototype.getInteractionSignal_j3fyc4$ = Focusable.prototype.getInteractionSignal_j3fyc4$;
  ColorPicker.prototype.addInteractionSignal_pqftit$ = Focusable.prototype.addInteractionSignal_pqftit$;
  ColorPicker.prototype.intersectsGlobalRay_ujzndq$ = Focusable.prototype.intersectsGlobalRay_ujzndq$;
  ColorPicker.prototype.intersectsGlobalRay_94uff6$ = Focusable.prototype.intersectsGlobalRay_94uff6$;
  ColorPicker.prototype.setSize_yxjqmk$ = Focusable.prototype.setSize_yxjqmk$;
  ColorPicker.prototype.setSize_i12l7q$ = Focusable.prototype.setSize_i12l7q$;
  ColorPicker.prototype.moveTo_1fv2cb$ = Focusable.prototype.moveTo_1fv2cb$;
  ColorPicker.prototype.moveTo_y2kzbl$ = Focusable.prototype.moveTo_y2kzbl$;
  ColorPicker.prototype.moveTo_y2kzbl$$default = Focusable.prototype.moveTo_y2kzbl$$default;
  ColorPicker.prototype.setPosition_y2kzbl$ = Focusable.prototype.setPosition_y2kzbl$;
  ColorPicker.prototype.setRotation_y2kzbl$ = Focusable.prototype.setRotation_y2kzbl$;
  ColorPicker.prototype.setScaling_y2kzbl$ = Focusable.prototype.setScaling_y2kzbl$;
  ColorPicker.prototype.setOrigin_y2kzbl$ = Focusable.prototype.setOrigin_y2kzbl$;
  ColorPicker.prototype.localToGlobal_9wm29k$ = Focusable.prototype.localToGlobal_9wm29k$;
  ColorPicker.prototype.localToGlobal_ujzndq$ = Focusable.prototype.localToGlobal_ujzndq$;
  ColorPicker.prototype.globalToLocal_9wm29k$ = Focusable.prototype.globalToLocal_9wm29k$;
  ColorPicker.prototype.globalToLocal_ujzndq$ = Focusable.prototype.globalToLocal_ujzndq$;
  ColorPicker.prototype.rayToPlane_94uff5$ = Focusable.prototype.rayToPlane_94uff5$;
  ColorPicker.prototype.convertCoord_jsa5cl$ = Focusable.prototype.convertCoord_jsa5cl$;
  ColorPicker.prototype.windowToLocal_9wm29l$ = Focusable.prototype.windowToLocal_9wm29l$;
  ColorPicker.prototype.localToWindow_9wm29k$ = Focusable.prototype.localToWindow_9wm29k$;
  ColorPicker.prototype.previousSibling = Focusable.prototype.previousSibling;
  ColorPicker.prototype.nextSibling = Focusable.prototype.nextSibling;
  ColorPicker.prototype.validate = Focusable.prototype.validate;
  ColorPicker.prototype.validate_za3lpa$ = Focusable.prototype.validate_za3lpa$;
  Object.defineProperty(ColorPicker.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(ColorPicker.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(ColorPicker.prototype, 'alpha', Object.getOwnPropertyDescriptor(Focusable.prototype, 'alpha'));
  Object.defineProperty(ColorPicker.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Focusable.prototype, 'interactivityEnabled'));
  Object.defineProperty(ColorPicker.prototype, 'right', Object.getOwnPropertyDescriptor(Focusable.prototype, 'right'));
  Object.defineProperty(ColorPicker.prototype, 'bottom', Object.getOwnPropertyDescriptor(Focusable.prototype, 'bottom'));
  Object.defineProperty(ColorPicker.prototype, 'width', Object.getOwnPropertyDescriptor(Focusable.prototype, 'width'));
  Object.defineProperty(ColorPicker.prototype, 'height', Object.getOwnPropertyDescriptor(Focusable.prototype, 'height'));
  Object.defineProperty(ColorPickerStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  Object.defineProperty(ColorPaletteStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  LayoutContainer.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  LayoutContainer.prototype.isRendered = ElementContainer.prototype.isRendered;
  LayoutContainer.prototype.getChildUnderPoint_g1oyt7$ = ElementContainer.prototype.getChildUnderPoint_g1oyt7$;
  LayoutContainer.prototype.getChildUnderRay_p0mkez$ = ElementContainer.prototype.getChildUnderRay_p0mkez$;
  LayoutContainer.prototype.getChildrenUnderPoint_adthd4$ = ElementContainer.prototype.getChildrenUnderPoint_adthd4$;
  LayoutContainer.prototype.getChildrenUnderRay_w6o14y$ = ElementContainer.prototype.getChildrenUnderRay_w6o14y$;
  LayoutContainer.prototype.handlesInteraction_1811yh$ = ElementContainer.prototype.handlesInteraction_1811yh$;
  LayoutContainer.prototype.handlesInteraction_j3fyc4$ = ElementContainer.prototype.handlesInteraction_j3fyc4$;
  LayoutContainer.prototype.hasInteraction_j3fyc4$ = ElementContainer.prototype.hasInteraction_j3fyc4$;
  LayoutContainer.prototype.hasInteraction_j3fyc4$$default = ElementContainer.prototype.hasInteraction_j3fyc4$$default;
  LayoutContainer.prototype.getInteractionSignal_j3fyc4$ = ElementContainer.prototype.getInteractionSignal_j3fyc4$;
  LayoutContainer.prototype.addInteractionSignal_pqftit$ = ElementContainer.prototype.addInteractionSignal_pqftit$;
  LayoutContainer.prototype.intersectsGlobalRay_ujzndq$ = ElementContainer.prototype.intersectsGlobalRay_ujzndq$;
  LayoutContainer.prototype.intersectsGlobalRay_94uff6$ = ElementContainer.prototype.intersectsGlobalRay_94uff6$;
  LayoutContainer.prototype.setSize_yxjqmk$ = ElementContainer.prototype.setSize_yxjqmk$;
  LayoutContainer.prototype.setSize_i12l7q$ = ElementContainer.prototype.setSize_i12l7q$;
  LayoutContainer.prototype.moveTo_1fv2cb$ = ElementContainer.prototype.moveTo_1fv2cb$;
  LayoutContainer.prototype.moveTo_y2kzbl$ = ElementContainer.prototype.moveTo_y2kzbl$;
  LayoutContainer.prototype.moveTo_y2kzbl$$default = ElementContainer.prototype.moveTo_y2kzbl$$default;
  LayoutContainer.prototype.setPosition_y2kzbl$ = ElementContainer.prototype.setPosition_y2kzbl$;
  LayoutContainer.prototype.setRotation_y2kzbl$ = ElementContainer.prototype.setRotation_y2kzbl$;
  LayoutContainer.prototype.setScaling_y2kzbl$ = ElementContainer.prototype.setScaling_y2kzbl$;
  LayoutContainer.prototype.setOrigin_y2kzbl$ = ElementContainer.prototype.setOrigin_y2kzbl$;
  LayoutContainer.prototype.localToGlobal_9wm29k$ = ElementContainer.prototype.localToGlobal_9wm29k$;
  LayoutContainer.prototype.localToGlobal_ujzndq$ = ElementContainer.prototype.localToGlobal_ujzndq$;
  LayoutContainer.prototype.globalToLocal_9wm29k$ = ElementContainer.prototype.globalToLocal_9wm29k$;
  LayoutContainer.prototype.globalToLocal_ujzndq$ = ElementContainer.prototype.globalToLocal_ujzndq$;
  LayoutContainer.prototype.rayToPlane_94uff5$ = ElementContainer.prototype.rayToPlane_94uff5$;
  LayoutContainer.prototype.convertCoord_jsa5cl$ = ElementContainer.prototype.convertCoord_jsa5cl$;
  LayoutContainer.prototype.windowToLocal_9wm29l$ = ElementContainer.prototype.windowToLocal_9wm29l$;
  LayoutContainer.prototype.localToWindow_9wm29k$ = ElementContainer.prototype.localToWindow_9wm29k$;
  LayoutContainer.prototype.previousSibling = ElementContainer.prototype.previousSibling;
  LayoutContainer.prototype.nextSibling = ElementContainer.prototype.nextSibling;
  LayoutContainer.prototype.validate = ElementContainer.prototype.validate;
  LayoutContainer.prototype.validate_za3lpa$ = ElementContainer.prototype.validate_za3lpa$;
  LayoutContainer.prototype.containsChild_npz94r$ = ElementContainer.prototype.containsChild_npz94r$;
  LayoutContainer.prototype.getChildAt_za3lpa$ = ElementContainer.prototype.getChildAt_za3lpa$;
  LayoutContainer.prototype.iterateChildren_9z398f$ = ElementContainer.prototype.iterateChildren_9z398f$;
  LayoutContainer.prototype.iterateChildren_bwf5pq$ = ElementContainer.prototype.iterateChildren_bwf5pq$;
  LayoutContainer.prototype.iterateChildrenReversed_bwf5pq$ = ElementContainer.prototype.iterateChildrenReversed_bwf5pq$;
  LayoutContainer.prototype.unaryPlus_8db8yx$ = ElementContainer.prototype.unaryPlus_8db8yx$;
  LayoutContainer.prototype.unaryMinus_8db8yx$ = ElementContainer.prototype.unaryMinus_8db8yx$;
  LayoutContainer.prototype.clearElements_6taknv$ = ElementContainer.prototype.clearElements_6taknv$;
  LayoutContainer.prototype.addElementAfter_tu2188$ = ElementContainer.prototype.addElementAfter_tu2188$;
  LayoutContainer.prototype.addElementBefore_tu2188$ = ElementContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(LayoutContainer.prototype, 'alpha', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'alpha'));
  Object.defineProperty(LayoutContainer.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(LayoutContainer.prototype, 'right', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'right'));
  Object.defineProperty(LayoutContainer.prototype, 'bottom', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'bottom'));
  Object.defineProperty(LayoutContainer.prototype, 'width', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'width'));
  Object.defineProperty(LayoutContainer.prototype, 'height', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'height'));
  Object.defineProperty(LayoutContainer.prototype, 'numChildren', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'numChildren'));
  LayoutContainerImpl.prototype.createLayoutData = LayoutContainer.prototype.createLayoutData;
  LayoutContainerImpl.prototype.layout_ge8abi$ = LayoutContainer.prototype.layout_ge8abi$;
  LayoutContainerImpl.prototype.isRendered = LayoutContainer.prototype.isRendered;
  LayoutContainerImpl.prototype.getChildUnderPoint_g1oyt7$ = LayoutContainer.prototype.getChildUnderPoint_g1oyt7$;
  LayoutContainerImpl.prototype.getChildUnderRay_p0mkez$ = LayoutContainer.prototype.getChildUnderRay_p0mkez$;
  LayoutContainerImpl.prototype.getChildrenUnderPoint_adthd4$ = LayoutContainer.prototype.getChildrenUnderPoint_adthd4$;
  LayoutContainerImpl.prototype.getChildrenUnderRay_w6o14y$ = LayoutContainer.prototype.getChildrenUnderRay_w6o14y$;
  LayoutContainerImpl.prototype.handlesInteraction_1811yh$ = LayoutContainer.prototype.handlesInteraction_1811yh$;
  LayoutContainerImpl.prototype.handlesInteraction_j3fyc4$ = LayoutContainer.prototype.handlesInteraction_j3fyc4$;
  LayoutContainerImpl.prototype.hasInteraction_j3fyc4$ = LayoutContainer.prototype.hasInteraction_j3fyc4$;
  LayoutContainerImpl.prototype.hasInteraction_j3fyc4$$default = LayoutContainer.prototype.hasInteraction_j3fyc4$$default;
  LayoutContainerImpl.prototype.getInteractionSignal_j3fyc4$ = LayoutContainer.prototype.getInteractionSignal_j3fyc4$;
  LayoutContainerImpl.prototype.addInteractionSignal_pqftit$ = LayoutContainer.prototype.addInteractionSignal_pqftit$;
  LayoutContainerImpl.prototype.intersectsGlobalRay_ujzndq$ = LayoutContainer.prototype.intersectsGlobalRay_ujzndq$;
  LayoutContainerImpl.prototype.intersectsGlobalRay_94uff6$ = LayoutContainer.prototype.intersectsGlobalRay_94uff6$;
  LayoutContainerImpl.prototype.setSize_yxjqmk$ = LayoutContainer.prototype.setSize_yxjqmk$;
  LayoutContainerImpl.prototype.setSize_i12l7q$ = LayoutContainer.prototype.setSize_i12l7q$;
  LayoutContainerImpl.prototype.moveTo_1fv2cb$ = LayoutContainer.prototype.moveTo_1fv2cb$;
  LayoutContainerImpl.prototype.moveTo_y2kzbl$ = LayoutContainer.prototype.moveTo_y2kzbl$;
  LayoutContainerImpl.prototype.moveTo_y2kzbl$$default = LayoutContainer.prototype.moveTo_y2kzbl$$default;
  LayoutContainerImpl.prototype.setPosition_y2kzbl$ = LayoutContainer.prototype.setPosition_y2kzbl$;
  LayoutContainerImpl.prototype.setRotation_y2kzbl$ = LayoutContainer.prototype.setRotation_y2kzbl$;
  LayoutContainerImpl.prototype.setScaling_y2kzbl$ = LayoutContainer.prototype.setScaling_y2kzbl$;
  LayoutContainerImpl.prototype.setOrigin_y2kzbl$ = LayoutContainer.prototype.setOrigin_y2kzbl$;
  LayoutContainerImpl.prototype.localToGlobal_9wm29k$ = LayoutContainer.prototype.localToGlobal_9wm29k$;
  LayoutContainerImpl.prototype.localToGlobal_ujzndq$ = LayoutContainer.prototype.localToGlobal_ujzndq$;
  LayoutContainerImpl.prototype.globalToLocal_9wm29k$ = LayoutContainer.prototype.globalToLocal_9wm29k$;
  LayoutContainerImpl.prototype.globalToLocal_ujzndq$ = LayoutContainer.prototype.globalToLocal_ujzndq$;
  LayoutContainerImpl.prototype.rayToPlane_94uff5$ = LayoutContainer.prototype.rayToPlane_94uff5$;
  LayoutContainerImpl.prototype.convertCoord_jsa5cl$ = LayoutContainer.prototype.convertCoord_jsa5cl$;
  LayoutContainerImpl.prototype.windowToLocal_9wm29l$ = LayoutContainer.prototype.windowToLocal_9wm29l$;
  LayoutContainerImpl.prototype.localToWindow_9wm29k$ = LayoutContainer.prototype.localToWindow_9wm29k$;
  LayoutContainerImpl.prototype.previousSibling = LayoutContainer.prototype.previousSibling;
  LayoutContainerImpl.prototype.nextSibling = LayoutContainer.prototype.nextSibling;
  LayoutContainerImpl.prototype.validate = LayoutContainer.prototype.validate;
  LayoutContainerImpl.prototype.validate_za3lpa$ = LayoutContainer.prototype.validate_za3lpa$;
  LayoutContainerImpl.prototype.containsChild_npz94r$ = LayoutContainer.prototype.containsChild_npz94r$;
  LayoutContainerImpl.prototype.getChildAt_za3lpa$ = LayoutContainer.prototype.getChildAt_za3lpa$;
  LayoutContainerImpl.prototype.iterateChildren_9z398f$ = LayoutContainer.prototype.iterateChildren_9z398f$;
  LayoutContainerImpl.prototype.iterateChildren_bwf5pq$ = LayoutContainer.prototype.iterateChildren_bwf5pq$;
  LayoutContainerImpl.prototype.iterateChildrenReversed_bwf5pq$ = LayoutContainer.prototype.iterateChildrenReversed_bwf5pq$;
  LayoutContainerImpl.prototype.unaryPlus_8db8yx$ = LayoutContainer.prototype.unaryPlus_8db8yx$;
  LayoutContainerImpl.prototype.unaryMinus_8db8yx$ = LayoutContainer.prototype.unaryMinus_8db8yx$;
  LayoutContainerImpl.prototype.clearElements_6taknv$ = LayoutContainer.prototype.clearElements_6taknv$;
  LayoutContainerImpl.prototype.addElementAfter_tu2188$ = LayoutContainer.prototype.addElementAfter_tu2188$;
  LayoutContainerImpl.prototype.addElementBefore_tu2188$ = LayoutContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(LayoutContainerImpl.prototype, 'alpha', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'alpha'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'right', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'right'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'bottom', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'bottom'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'width', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'width'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'height', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'height'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'numChildren', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'numChildren'));
  LayoutContainerImpl.prototype.focus = Focusable.prototype.focus;
  LayoutContainerImpl.prototype.blur = Focusable.prototype.blur;
  LayoutContainerImpl.prototype.onFocused = Focusable.prototype.onFocused;
  LayoutContainerImpl.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(LayoutContainerImpl.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(LayoutContainerImpl.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  DataGridCell.prototype.isRendered = UiComponent.prototype.isRendered;
  DataGridCell.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  DataGridCell.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  DataGridCell.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  DataGridCell.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  DataGridCell.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  DataGridCell.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  DataGridCell.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  DataGridCell.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  DataGridCell.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  DataGridCell.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  DataGridCell.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  DataGridCell.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  DataGridCell.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  DataGridCell.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  DataGridCell.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  DataGridCell.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  DataGridCell.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  DataGridCell.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  DataGridCell.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  DataGridCell.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  DataGridCell.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  DataGridCell.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  DataGridCell.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  DataGridCell.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  DataGridCell.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  DataGridCell.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  DataGridCell.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  DataGridCell.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  DataGridCell.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  DataGridCell.prototype.previousSibling = UiComponent.prototype.previousSibling;
  DataGridCell.prototype.nextSibling = UiComponent.prototype.nextSibling;
  DataGridCell.prototype.validate = UiComponent.prototype.validate;
  DataGridCell.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(DataGridCell.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(DataGridCell.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(DataGridCell.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(DataGridCell.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(DataGridCell.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(DataGridCell.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  IntCell.prototype.isRendered = DataGridCell.prototype.isRendered;
  IntCell.prototype.getChildUnderPoint_g1oyt7$ = DataGridCell.prototype.getChildUnderPoint_g1oyt7$;
  IntCell.prototype.getChildUnderRay_p0mkez$ = DataGridCell.prototype.getChildUnderRay_p0mkez$;
  IntCell.prototype.getChildrenUnderPoint_adthd4$ = DataGridCell.prototype.getChildrenUnderPoint_adthd4$;
  IntCell.prototype.getChildrenUnderRay_w6o14y$ = DataGridCell.prototype.getChildrenUnderRay_w6o14y$;
  IntCell.prototype.handlesInteraction_1811yh$ = DataGridCell.prototype.handlesInteraction_1811yh$;
  IntCell.prototype.handlesInteraction_j3fyc4$ = DataGridCell.prototype.handlesInteraction_j3fyc4$;
  IntCell.prototype.hasInteraction_j3fyc4$ = DataGridCell.prototype.hasInteraction_j3fyc4$;
  IntCell.prototype.hasInteraction_j3fyc4$$default = DataGridCell.prototype.hasInteraction_j3fyc4$$default;
  IntCell.prototype.getInteractionSignal_j3fyc4$ = DataGridCell.prototype.getInteractionSignal_j3fyc4$;
  IntCell.prototype.addInteractionSignal_pqftit$ = DataGridCell.prototype.addInteractionSignal_pqftit$;
  IntCell.prototype.intersectsGlobalRay_ujzndq$ = DataGridCell.prototype.intersectsGlobalRay_ujzndq$;
  IntCell.prototype.intersectsGlobalRay_94uff6$ = DataGridCell.prototype.intersectsGlobalRay_94uff6$;
  IntCell.prototype.setSize_yxjqmk$ = DataGridCell.prototype.setSize_yxjqmk$;
  IntCell.prototype.setSize_i12l7q$ = DataGridCell.prototype.setSize_i12l7q$;
  IntCell.prototype.moveTo_1fv2cb$ = DataGridCell.prototype.moveTo_1fv2cb$;
  IntCell.prototype.moveTo_y2kzbl$ = DataGridCell.prototype.moveTo_y2kzbl$;
  IntCell.prototype.moveTo_y2kzbl$$default = DataGridCell.prototype.moveTo_y2kzbl$$default;
  IntCell.prototype.setPosition_y2kzbl$ = DataGridCell.prototype.setPosition_y2kzbl$;
  IntCell.prototype.setRotation_y2kzbl$ = DataGridCell.prototype.setRotation_y2kzbl$;
  IntCell.prototype.setScaling_y2kzbl$ = DataGridCell.prototype.setScaling_y2kzbl$;
  IntCell.prototype.setOrigin_y2kzbl$ = DataGridCell.prototype.setOrigin_y2kzbl$;
  IntCell.prototype.localToGlobal_9wm29k$ = DataGridCell.prototype.localToGlobal_9wm29k$;
  IntCell.prototype.localToGlobal_ujzndq$ = DataGridCell.prototype.localToGlobal_ujzndq$;
  IntCell.prototype.globalToLocal_9wm29k$ = DataGridCell.prototype.globalToLocal_9wm29k$;
  IntCell.prototype.globalToLocal_ujzndq$ = DataGridCell.prototype.globalToLocal_ujzndq$;
  IntCell.prototype.rayToPlane_94uff5$ = DataGridCell.prototype.rayToPlane_94uff5$;
  IntCell.prototype.convertCoord_jsa5cl$ = DataGridCell.prototype.convertCoord_jsa5cl$;
  IntCell.prototype.windowToLocal_9wm29l$ = DataGridCell.prototype.windowToLocal_9wm29l$;
  IntCell.prototype.localToWindow_9wm29k$ = DataGridCell.prototype.localToWindow_9wm29k$;
  IntCell.prototype.previousSibling = DataGridCell.prototype.previousSibling;
  IntCell.prototype.nextSibling = DataGridCell.prototype.nextSibling;
  IntCell.prototype.validate = DataGridCell.prototype.validate;
  IntCell.prototype.validate_za3lpa$ = DataGridCell.prototype.validate_za3lpa$;
  Object.defineProperty(IntCell.prototype, 'alpha', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'alpha'));
  Object.defineProperty(IntCell.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'interactivityEnabled'));
  Object.defineProperty(IntCell.prototype, 'right', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'right'));
  Object.defineProperty(IntCell.prototype, 'bottom', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'bottom'));
  Object.defineProperty(IntCell.prototype, 'width', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'width'));
  Object.defineProperty(IntCell.prototype, 'height', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'height'));
  DataGridEditorCell.prototype.isRendered = DataGridCell.prototype.isRendered;
  DataGridEditorCell.prototype.getChildUnderPoint_g1oyt7$ = DataGridCell.prototype.getChildUnderPoint_g1oyt7$;
  DataGridEditorCell.prototype.getChildUnderRay_p0mkez$ = DataGridCell.prototype.getChildUnderRay_p0mkez$;
  DataGridEditorCell.prototype.getChildrenUnderPoint_adthd4$ = DataGridCell.prototype.getChildrenUnderPoint_adthd4$;
  DataGridEditorCell.prototype.getChildrenUnderRay_w6o14y$ = DataGridCell.prototype.getChildrenUnderRay_w6o14y$;
  DataGridEditorCell.prototype.handlesInteraction_1811yh$ = DataGridCell.prototype.handlesInteraction_1811yh$;
  DataGridEditorCell.prototype.handlesInteraction_j3fyc4$ = DataGridCell.prototype.handlesInteraction_j3fyc4$;
  DataGridEditorCell.prototype.hasInteraction_j3fyc4$ = DataGridCell.prototype.hasInteraction_j3fyc4$;
  DataGridEditorCell.prototype.hasInteraction_j3fyc4$$default = DataGridCell.prototype.hasInteraction_j3fyc4$$default;
  DataGridEditorCell.prototype.getInteractionSignal_j3fyc4$ = DataGridCell.prototype.getInteractionSignal_j3fyc4$;
  DataGridEditorCell.prototype.addInteractionSignal_pqftit$ = DataGridCell.prototype.addInteractionSignal_pqftit$;
  DataGridEditorCell.prototype.intersectsGlobalRay_ujzndq$ = DataGridCell.prototype.intersectsGlobalRay_ujzndq$;
  DataGridEditorCell.prototype.intersectsGlobalRay_94uff6$ = DataGridCell.prototype.intersectsGlobalRay_94uff6$;
  DataGridEditorCell.prototype.setSize_yxjqmk$ = DataGridCell.prototype.setSize_yxjqmk$;
  DataGridEditorCell.prototype.setSize_i12l7q$ = DataGridCell.prototype.setSize_i12l7q$;
  DataGridEditorCell.prototype.moveTo_1fv2cb$ = DataGridCell.prototype.moveTo_1fv2cb$;
  DataGridEditorCell.prototype.moveTo_y2kzbl$ = DataGridCell.prototype.moveTo_y2kzbl$;
  DataGridEditorCell.prototype.moveTo_y2kzbl$$default = DataGridCell.prototype.moveTo_y2kzbl$$default;
  DataGridEditorCell.prototype.setPosition_y2kzbl$ = DataGridCell.prototype.setPosition_y2kzbl$;
  DataGridEditorCell.prototype.setRotation_y2kzbl$ = DataGridCell.prototype.setRotation_y2kzbl$;
  DataGridEditorCell.prototype.setScaling_y2kzbl$ = DataGridCell.prototype.setScaling_y2kzbl$;
  DataGridEditorCell.prototype.setOrigin_y2kzbl$ = DataGridCell.prototype.setOrigin_y2kzbl$;
  DataGridEditorCell.prototype.localToGlobal_9wm29k$ = DataGridCell.prototype.localToGlobal_9wm29k$;
  DataGridEditorCell.prototype.localToGlobal_ujzndq$ = DataGridCell.prototype.localToGlobal_ujzndq$;
  DataGridEditorCell.prototype.globalToLocal_9wm29k$ = DataGridCell.prototype.globalToLocal_9wm29k$;
  DataGridEditorCell.prototype.globalToLocal_ujzndq$ = DataGridCell.prototype.globalToLocal_ujzndq$;
  DataGridEditorCell.prototype.rayToPlane_94uff5$ = DataGridCell.prototype.rayToPlane_94uff5$;
  DataGridEditorCell.prototype.convertCoord_jsa5cl$ = DataGridCell.prototype.convertCoord_jsa5cl$;
  DataGridEditorCell.prototype.windowToLocal_9wm29l$ = DataGridCell.prototype.windowToLocal_9wm29l$;
  DataGridEditorCell.prototype.localToWindow_9wm29k$ = DataGridCell.prototype.localToWindow_9wm29k$;
  DataGridEditorCell.prototype.previousSibling = DataGridCell.prototype.previousSibling;
  DataGridEditorCell.prototype.nextSibling = DataGridCell.prototype.nextSibling;
  DataGridEditorCell.prototype.validate = DataGridCell.prototype.validate;
  DataGridEditorCell.prototype.validate_za3lpa$ = DataGridCell.prototype.validate_za3lpa$;
  Object.defineProperty(DataGridEditorCell.prototype, 'alpha', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'alpha'));
  Object.defineProperty(DataGridEditorCell.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'interactivityEnabled'));
  Object.defineProperty(DataGridEditorCell.prototype, 'right', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'right'));
  Object.defineProperty(DataGridEditorCell.prototype, 'bottom', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'bottom'));
  Object.defineProperty(DataGridEditorCell.prototype, 'width', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'width'));
  Object.defineProperty(DataGridEditorCell.prototype, 'height', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'height'));
  IntEditorCell.prototype.isRendered = DataGridEditorCell.prototype.isRendered;
  IntEditorCell.prototype.getChildUnderPoint_g1oyt7$ = DataGridEditorCell.prototype.getChildUnderPoint_g1oyt7$;
  IntEditorCell.prototype.getChildUnderRay_p0mkez$ = DataGridEditorCell.prototype.getChildUnderRay_p0mkez$;
  IntEditorCell.prototype.getChildrenUnderPoint_adthd4$ = DataGridEditorCell.prototype.getChildrenUnderPoint_adthd4$;
  IntEditorCell.prototype.getChildrenUnderRay_w6o14y$ = DataGridEditorCell.prototype.getChildrenUnderRay_w6o14y$;
  IntEditorCell.prototype.handlesInteraction_1811yh$ = DataGridEditorCell.prototype.handlesInteraction_1811yh$;
  IntEditorCell.prototype.handlesInteraction_j3fyc4$ = DataGridEditorCell.prototype.handlesInteraction_j3fyc4$;
  IntEditorCell.prototype.hasInteraction_j3fyc4$ = DataGridEditorCell.prototype.hasInteraction_j3fyc4$;
  IntEditorCell.prototype.hasInteraction_j3fyc4$$default = DataGridEditorCell.prototype.hasInteraction_j3fyc4$$default;
  IntEditorCell.prototype.getInteractionSignal_j3fyc4$ = DataGridEditorCell.prototype.getInteractionSignal_j3fyc4$;
  IntEditorCell.prototype.addInteractionSignal_pqftit$ = DataGridEditorCell.prototype.addInteractionSignal_pqftit$;
  IntEditorCell.prototype.intersectsGlobalRay_ujzndq$ = DataGridEditorCell.prototype.intersectsGlobalRay_ujzndq$;
  IntEditorCell.prototype.intersectsGlobalRay_94uff6$ = DataGridEditorCell.prototype.intersectsGlobalRay_94uff6$;
  IntEditorCell.prototype.setSize_yxjqmk$ = DataGridEditorCell.prototype.setSize_yxjqmk$;
  IntEditorCell.prototype.setSize_i12l7q$ = DataGridEditorCell.prototype.setSize_i12l7q$;
  IntEditorCell.prototype.moveTo_1fv2cb$ = DataGridEditorCell.prototype.moveTo_1fv2cb$;
  IntEditorCell.prototype.moveTo_y2kzbl$ = DataGridEditorCell.prototype.moveTo_y2kzbl$;
  IntEditorCell.prototype.moveTo_y2kzbl$$default = DataGridEditorCell.prototype.moveTo_y2kzbl$$default;
  IntEditorCell.prototype.setPosition_y2kzbl$ = DataGridEditorCell.prototype.setPosition_y2kzbl$;
  IntEditorCell.prototype.setRotation_y2kzbl$ = DataGridEditorCell.prototype.setRotation_y2kzbl$;
  IntEditorCell.prototype.setScaling_y2kzbl$ = DataGridEditorCell.prototype.setScaling_y2kzbl$;
  IntEditorCell.prototype.setOrigin_y2kzbl$ = DataGridEditorCell.prototype.setOrigin_y2kzbl$;
  IntEditorCell.prototype.localToGlobal_9wm29k$ = DataGridEditorCell.prototype.localToGlobal_9wm29k$;
  IntEditorCell.prototype.localToGlobal_ujzndq$ = DataGridEditorCell.prototype.localToGlobal_ujzndq$;
  IntEditorCell.prototype.globalToLocal_9wm29k$ = DataGridEditorCell.prototype.globalToLocal_9wm29k$;
  IntEditorCell.prototype.globalToLocal_ujzndq$ = DataGridEditorCell.prototype.globalToLocal_ujzndq$;
  IntEditorCell.prototype.rayToPlane_94uff5$ = DataGridEditorCell.prototype.rayToPlane_94uff5$;
  IntEditorCell.prototype.convertCoord_jsa5cl$ = DataGridEditorCell.prototype.convertCoord_jsa5cl$;
  IntEditorCell.prototype.windowToLocal_9wm29l$ = DataGridEditorCell.prototype.windowToLocal_9wm29l$;
  IntEditorCell.prototype.localToWindow_9wm29k$ = DataGridEditorCell.prototype.localToWindow_9wm29k$;
  IntEditorCell.prototype.previousSibling = DataGridEditorCell.prototype.previousSibling;
  IntEditorCell.prototype.nextSibling = DataGridEditorCell.prototype.nextSibling;
  IntEditorCell.prototype.validate = DataGridEditorCell.prototype.validate;
  IntEditorCell.prototype.validate_za3lpa$ = DataGridEditorCell.prototype.validate_za3lpa$;
  Object.defineProperty(IntEditorCell.prototype, 'alpha', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'alpha'));
  Object.defineProperty(IntEditorCell.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'interactivityEnabled'));
  Object.defineProperty(IntEditorCell.prototype, 'right', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'right'));
  Object.defineProperty(IntEditorCell.prototype, 'bottom', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'bottom'));
  Object.defineProperty(IntEditorCell.prototype, 'width', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'width'));
  Object.defineProperty(IntEditorCell.prototype, 'height', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'height'));
  StringCell.prototype.isRendered = DataGridCell.prototype.isRendered;
  StringCell.prototype.getChildUnderPoint_g1oyt7$ = DataGridCell.prototype.getChildUnderPoint_g1oyt7$;
  StringCell.prototype.getChildUnderRay_p0mkez$ = DataGridCell.prototype.getChildUnderRay_p0mkez$;
  StringCell.prototype.getChildrenUnderPoint_adthd4$ = DataGridCell.prototype.getChildrenUnderPoint_adthd4$;
  StringCell.prototype.getChildrenUnderRay_w6o14y$ = DataGridCell.prototype.getChildrenUnderRay_w6o14y$;
  StringCell.prototype.handlesInteraction_1811yh$ = DataGridCell.prototype.handlesInteraction_1811yh$;
  StringCell.prototype.handlesInteraction_j3fyc4$ = DataGridCell.prototype.handlesInteraction_j3fyc4$;
  StringCell.prototype.hasInteraction_j3fyc4$ = DataGridCell.prototype.hasInteraction_j3fyc4$;
  StringCell.prototype.hasInteraction_j3fyc4$$default = DataGridCell.prototype.hasInteraction_j3fyc4$$default;
  StringCell.prototype.getInteractionSignal_j3fyc4$ = DataGridCell.prototype.getInteractionSignal_j3fyc4$;
  StringCell.prototype.addInteractionSignal_pqftit$ = DataGridCell.prototype.addInteractionSignal_pqftit$;
  StringCell.prototype.intersectsGlobalRay_ujzndq$ = DataGridCell.prototype.intersectsGlobalRay_ujzndq$;
  StringCell.prototype.intersectsGlobalRay_94uff6$ = DataGridCell.prototype.intersectsGlobalRay_94uff6$;
  StringCell.prototype.setSize_yxjqmk$ = DataGridCell.prototype.setSize_yxjqmk$;
  StringCell.prototype.setSize_i12l7q$ = DataGridCell.prototype.setSize_i12l7q$;
  StringCell.prototype.moveTo_1fv2cb$ = DataGridCell.prototype.moveTo_1fv2cb$;
  StringCell.prototype.moveTo_y2kzbl$ = DataGridCell.prototype.moveTo_y2kzbl$;
  StringCell.prototype.moveTo_y2kzbl$$default = DataGridCell.prototype.moveTo_y2kzbl$$default;
  StringCell.prototype.setPosition_y2kzbl$ = DataGridCell.prototype.setPosition_y2kzbl$;
  StringCell.prototype.setRotation_y2kzbl$ = DataGridCell.prototype.setRotation_y2kzbl$;
  StringCell.prototype.setScaling_y2kzbl$ = DataGridCell.prototype.setScaling_y2kzbl$;
  StringCell.prototype.setOrigin_y2kzbl$ = DataGridCell.prototype.setOrigin_y2kzbl$;
  StringCell.prototype.localToGlobal_9wm29k$ = DataGridCell.prototype.localToGlobal_9wm29k$;
  StringCell.prototype.localToGlobal_ujzndq$ = DataGridCell.prototype.localToGlobal_ujzndq$;
  StringCell.prototype.globalToLocal_9wm29k$ = DataGridCell.prototype.globalToLocal_9wm29k$;
  StringCell.prototype.globalToLocal_ujzndq$ = DataGridCell.prototype.globalToLocal_ujzndq$;
  StringCell.prototype.rayToPlane_94uff5$ = DataGridCell.prototype.rayToPlane_94uff5$;
  StringCell.prototype.convertCoord_jsa5cl$ = DataGridCell.prototype.convertCoord_jsa5cl$;
  StringCell.prototype.windowToLocal_9wm29l$ = DataGridCell.prototype.windowToLocal_9wm29l$;
  StringCell.prototype.localToWindow_9wm29k$ = DataGridCell.prototype.localToWindow_9wm29k$;
  StringCell.prototype.previousSibling = DataGridCell.prototype.previousSibling;
  StringCell.prototype.nextSibling = DataGridCell.prototype.nextSibling;
  StringCell.prototype.validate = DataGridCell.prototype.validate;
  StringCell.prototype.validate_za3lpa$ = DataGridCell.prototype.validate_za3lpa$;
  Object.defineProperty(StringCell.prototype, 'alpha', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'alpha'));
  Object.defineProperty(StringCell.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'interactivityEnabled'));
  Object.defineProperty(StringCell.prototype, 'right', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'right'));
  Object.defineProperty(StringCell.prototype, 'bottom', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'bottom'));
  Object.defineProperty(StringCell.prototype, 'width', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'width'));
  Object.defineProperty(StringCell.prototype, 'height', Object.getOwnPropertyDescriptor(DataGridCell.prototype, 'height'));
  StringEditorCell.prototype.isRendered = DataGridEditorCell.prototype.isRendered;
  StringEditorCell.prototype.getChildUnderPoint_g1oyt7$ = DataGridEditorCell.prototype.getChildUnderPoint_g1oyt7$;
  StringEditorCell.prototype.getChildUnderRay_p0mkez$ = DataGridEditorCell.prototype.getChildUnderRay_p0mkez$;
  StringEditorCell.prototype.getChildrenUnderPoint_adthd4$ = DataGridEditorCell.prototype.getChildrenUnderPoint_adthd4$;
  StringEditorCell.prototype.getChildrenUnderRay_w6o14y$ = DataGridEditorCell.prototype.getChildrenUnderRay_w6o14y$;
  StringEditorCell.prototype.handlesInteraction_1811yh$ = DataGridEditorCell.prototype.handlesInteraction_1811yh$;
  StringEditorCell.prototype.handlesInteraction_j3fyc4$ = DataGridEditorCell.prototype.handlesInteraction_j3fyc4$;
  StringEditorCell.prototype.hasInteraction_j3fyc4$ = DataGridEditorCell.prototype.hasInteraction_j3fyc4$;
  StringEditorCell.prototype.hasInteraction_j3fyc4$$default = DataGridEditorCell.prototype.hasInteraction_j3fyc4$$default;
  StringEditorCell.prototype.getInteractionSignal_j3fyc4$ = DataGridEditorCell.prototype.getInteractionSignal_j3fyc4$;
  StringEditorCell.prototype.addInteractionSignal_pqftit$ = DataGridEditorCell.prototype.addInteractionSignal_pqftit$;
  StringEditorCell.prototype.intersectsGlobalRay_ujzndq$ = DataGridEditorCell.prototype.intersectsGlobalRay_ujzndq$;
  StringEditorCell.prototype.intersectsGlobalRay_94uff6$ = DataGridEditorCell.prototype.intersectsGlobalRay_94uff6$;
  StringEditorCell.prototype.setSize_yxjqmk$ = DataGridEditorCell.prototype.setSize_yxjqmk$;
  StringEditorCell.prototype.setSize_i12l7q$ = DataGridEditorCell.prototype.setSize_i12l7q$;
  StringEditorCell.prototype.moveTo_1fv2cb$ = DataGridEditorCell.prototype.moveTo_1fv2cb$;
  StringEditorCell.prototype.moveTo_y2kzbl$ = DataGridEditorCell.prototype.moveTo_y2kzbl$;
  StringEditorCell.prototype.moveTo_y2kzbl$$default = DataGridEditorCell.prototype.moveTo_y2kzbl$$default;
  StringEditorCell.prototype.setPosition_y2kzbl$ = DataGridEditorCell.prototype.setPosition_y2kzbl$;
  StringEditorCell.prototype.setRotation_y2kzbl$ = DataGridEditorCell.prototype.setRotation_y2kzbl$;
  StringEditorCell.prototype.setScaling_y2kzbl$ = DataGridEditorCell.prototype.setScaling_y2kzbl$;
  StringEditorCell.prototype.setOrigin_y2kzbl$ = DataGridEditorCell.prototype.setOrigin_y2kzbl$;
  StringEditorCell.prototype.localToGlobal_9wm29k$ = DataGridEditorCell.prototype.localToGlobal_9wm29k$;
  StringEditorCell.prototype.localToGlobal_ujzndq$ = DataGridEditorCell.prototype.localToGlobal_ujzndq$;
  StringEditorCell.prototype.globalToLocal_9wm29k$ = DataGridEditorCell.prototype.globalToLocal_9wm29k$;
  StringEditorCell.prototype.globalToLocal_ujzndq$ = DataGridEditorCell.prototype.globalToLocal_ujzndq$;
  StringEditorCell.prototype.rayToPlane_94uff5$ = DataGridEditorCell.prototype.rayToPlane_94uff5$;
  StringEditorCell.prototype.convertCoord_jsa5cl$ = DataGridEditorCell.prototype.convertCoord_jsa5cl$;
  StringEditorCell.prototype.windowToLocal_9wm29l$ = DataGridEditorCell.prototype.windowToLocal_9wm29l$;
  StringEditorCell.prototype.localToWindow_9wm29k$ = DataGridEditorCell.prototype.localToWindow_9wm29k$;
  StringEditorCell.prototype.previousSibling = DataGridEditorCell.prototype.previousSibling;
  StringEditorCell.prototype.nextSibling = DataGridEditorCell.prototype.nextSibling;
  StringEditorCell.prototype.validate = DataGridEditorCell.prototype.validate;
  StringEditorCell.prototype.validate_za3lpa$ = DataGridEditorCell.prototype.validate_za3lpa$;
  Object.defineProperty(StringEditorCell.prototype, 'alpha', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'alpha'));
  Object.defineProperty(StringEditorCell.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'interactivityEnabled'));
  Object.defineProperty(StringEditorCell.prototype, 'right', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'right'));
  Object.defineProperty(StringEditorCell.prototype, 'bottom', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'bottom'));
  Object.defineProperty(StringEditorCell.prototype, 'width', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'width'));
  Object.defineProperty(StringEditorCell.prototype, 'height', Object.getOwnPropertyDescriptor(DataGridEditorCell.prototype, 'height'));
  DataGrid.prototype.focus = Focusable.prototype.focus;
  DataGrid.prototype.blur = Focusable.prototype.blur;
  DataGrid.prototype.onFocused = Focusable.prototype.onFocused;
  DataGrid.prototype.onBlurred = Focusable.prototype.onBlurred;
  DataGrid.prototype.isRendered = Focusable.prototype.isRendered;
  DataGrid.prototype.getChildUnderPoint_g1oyt7$ = Focusable.prototype.getChildUnderPoint_g1oyt7$;
  DataGrid.prototype.getChildUnderRay_p0mkez$ = Focusable.prototype.getChildUnderRay_p0mkez$;
  DataGrid.prototype.getChildrenUnderPoint_adthd4$ = Focusable.prototype.getChildrenUnderPoint_adthd4$;
  DataGrid.prototype.getChildrenUnderRay_w6o14y$ = Focusable.prototype.getChildrenUnderRay_w6o14y$;
  DataGrid.prototype.handlesInteraction_1811yh$ = Focusable.prototype.handlesInteraction_1811yh$;
  DataGrid.prototype.handlesInteraction_j3fyc4$ = Focusable.prototype.handlesInteraction_j3fyc4$;
  DataGrid.prototype.hasInteraction_j3fyc4$ = Focusable.prototype.hasInteraction_j3fyc4$;
  DataGrid.prototype.hasInteraction_j3fyc4$$default = Focusable.prototype.hasInteraction_j3fyc4$$default;
  DataGrid.prototype.getInteractionSignal_j3fyc4$ = Focusable.prototype.getInteractionSignal_j3fyc4$;
  DataGrid.prototype.addInteractionSignal_pqftit$ = Focusable.prototype.addInteractionSignal_pqftit$;
  DataGrid.prototype.intersectsGlobalRay_ujzndq$ = Focusable.prototype.intersectsGlobalRay_ujzndq$;
  DataGrid.prototype.intersectsGlobalRay_94uff6$ = Focusable.prototype.intersectsGlobalRay_94uff6$;
  DataGrid.prototype.setSize_yxjqmk$ = Focusable.prototype.setSize_yxjqmk$;
  DataGrid.prototype.setSize_i12l7q$ = Focusable.prototype.setSize_i12l7q$;
  DataGrid.prototype.moveTo_1fv2cb$ = Focusable.prototype.moveTo_1fv2cb$;
  DataGrid.prototype.moveTo_y2kzbl$ = Focusable.prototype.moveTo_y2kzbl$;
  DataGrid.prototype.moveTo_y2kzbl$$default = Focusable.prototype.moveTo_y2kzbl$$default;
  DataGrid.prototype.setPosition_y2kzbl$ = Focusable.prototype.setPosition_y2kzbl$;
  DataGrid.prototype.setRotation_y2kzbl$ = Focusable.prototype.setRotation_y2kzbl$;
  DataGrid.prototype.setScaling_y2kzbl$ = Focusable.prototype.setScaling_y2kzbl$;
  DataGrid.prototype.setOrigin_y2kzbl$ = Focusable.prototype.setOrigin_y2kzbl$;
  DataGrid.prototype.localToGlobal_9wm29k$ = Focusable.prototype.localToGlobal_9wm29k$;
  DataGrid.prototype.localToGlobal_ujzndq$ = Focusable.prototype.localToGlobal_ujzndq$;
  DataGrid.prototype.globalToLocal_9wm29k$ = Focusable.prototype.globalToLocal_9wm29k$;
  DataGrid.prototype.globalToLocal_ujzndq$ = Focusable.prototype.globalToLocal_ujzndq$;
  DataGrid.prototype.rayToPlane_94uff5$ = Focusable.prototype.rayToPlane_94uff5$;
  DataGrid.prototype.convertCoord_jsa5cl$ = Focusable.prototype.convertCoord_jsa5cl$;
  DataGrid.prototype.windowToLocal_9wm29l$ = Focusable.prototype.windowToLocal_9wm29l$;
  DataGrid.prototype.localToWindow_9wm29k$ = Focusable.prototype.localToWindow_9wm29k$;
  DataGrid.prototype.previousSibling = Focusable.prototype.previousSibling;
  DataGrid.prototype.nextSibling = Focusable.prototype.nextSibling;
  DataGrid.prototype.validate = Focusable.prototype.validate;
  DataGrid.prototype.validate_za3lpa$ = Focusable.prototype.validate_za3lpa$;
  Object.defineProperty(DataGrid.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(DataGrid.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(DataGrid.prototype, 'alpha', Object.getOwnPropertyDescriptor(Focusable.prototype, 'alpha'));
  Object.defineProperty(DataGrid.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Focusable.prototype, 'interactivityEnabled'));
  Object.defineProperty(DataGrid.prototype, 'right', Object.getOwnPropertyDescriptor(Focusable.prototype, 'right'));
  Object.defineProperty(DataGrid.prototype, 'bottom', Object.getOwnPropertyDescriptor(Focusable.prototype, 'bottom'));
  Object.defineProperty(DataGrid.prototype, 'width', Object.getOwnPropertyDescriptor(Focusable.prototype, 'width'));
  Object.defineProperty(DataGrid.prototype, 'height', Object.getOwnPropertyDescriptor(Focusable.prototype, 'height'));
  Object.defineProperty(DataGridStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  HeadingGroup.prototype.isRendered = Labelable.prototype.isRendered;
  HeadingGroup.prototype.getChildUnderPoint_g1oyt7$ = Labelable.prototype.getChildUnderPoint_g1oyt7$;
  HeadingGroup.prototype.getChildUnderRay_p0mkez$ = Labelable.prototype.getChildUnderRay_p0mkez$;
  HeadingGroup.prototype.getChildrenUnderPoint_adthd4$ = Labelable.prototype.getChildrenUnderPoint_adthd4$;
  HeadingGroup.prototype.getChildrenUnderRay_w6o14y$ = Labelable.prototype.getChildrenUnderRay_w6o14y$;
  HeadingGroup.prototype.handlesInteraction_1811yh$ = Labelable.prototype.handlesInteraction_1811yh$;
  HeadingGroup.prototype.handlesInteraction_j3fyc4$ = Labelable.prototype.handlesInteraction_j3fyc4$;
  HeadingGroup.prototype.hasInteraction_j3fyc4$ = Labelable.prototype.hasInteraction_j3fyc4$;
  HeadingGroup.prototype.hasInteraction_j3fyc4$$default = Labelable.prototype.hasInteraction_j3fyc4$$default;
  HeadingGroup.prototype.getInteractionSignal_j3fyc4$ = Labelable.prototype.getInteractionSignal_j3fyc4$;
  HeadingGroup.prototype.addInteractionSignal_pqftit$ = Labelable.prototype.addInteractionSignal_pqftit$;
  HeadingGroup.prototype.intersectsGlobalRay_ujzndq$ = Labelable.prototype.intersectsGlobalRay_ujzndq$;
  HeadingGroup.prototype.intersectsGlobalRay_94uff6$ = Labelable.prototype.intersectsGlobalRay_94uff6$;
  HeadingGroup.prototype.setSize_yxjqmk$ = Labelable.prototype.setSize_yxjqmk$;
  HeadingGroup.prototype.setSize_i12l7q$ = Labelable.prototype.setSize_i12l7q$;
  HeadingGroup.prototype.moveTo_1fv2cb$ = Labelable.prototype.moveTo_1fv2cb$;
  HeadingGroup.prototype.moveTo_y2kzbl$ = Labelable.prototype.moveTo_y2kzbl$;
  HeadingGroup.prototype.moveTo_y2kzbl$$default = Labelable.prototype.moveTo_y2kzbl$$default;
  HeadingGroup.prototype.setPosition_y2kzbl$ = Labelable.prototype.setPosition_y2kzbl$;
  HeadingGroup.prototype.setRotation_y2kzbl$ = Labelable.prototype.setRotation_y2kzbl$;
  HeadingGroup.prototype.setScaling_y2kzbl$ = Labelable.prototype.setScaling_y2kzbl$;
  HeadingGroup.prototype.setOrigin_y2kzbl$ = Labelable.prototype.setOrigin_y2kzbl$;
  HeadingGroup.prototype.localToGlobal_9wm29k$ = Labelable.prototype.localToGlobal_9wm29k$;
  HeadingGroup.prototype.localToGlobal_ujzndq$ = Labelable.prototype.localToGlobal_ujzndq$;
  HeadingGroup.prototype.globalToLocal_9wm29k$ = Labelable.prototype.globalToLocal_9wm29k$;
  HeadingGroup.prototype.globalToLocal_ujzndq$ = Labelable.prototype.globalToLocal_ujzndq$;
  HeadingGroup.prototype.rayToPlane_94uff5$ = Labelable.prototype.rayToPlane_94uff5$;
  HeadingGroup.prototype.convertCoord_jsa5cl$ = Labelable.prototype.convertCoord_jsa5cl$;
  HeadingGroup.prototype.windowToLocal_9wm29l$ = Labelable.prototype.windowToLocal_9wm29l$;
  HeadingGroup.prototype.localToWindow_9wm29k$ = Labelable.prototype.localToWindow_9wm29k$;
  HeadingGroup.prototype.previousSibling = Labelable.prototype.previousSibling;
  HeadingGroup.prototype.nextSibling = Labelable.prototype.nextSibling;
  HeadingGroup.prototype.validate = Labelable.prototype.validate;
  HeadingGroup.prototype.validate_za3lpa$ = Labelable.prototype.validate_za3lpa$;
  Object.defineProperty(HeadingGroup.prototype, 'alpha', Object.getOwnPropertyDescriptor(Labelable.prototype, 'alpha'));
  Object.defineProperty(HeadingGroup.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Labelable.prototype, 'interactivityEnabled'));
  Object.defineProperty(HeadingGroup.prototype, 'right', Object.getOwnPropertyDescriptor(Labelable.prototype, 'right'));
  Object.defineProperty(HeadingGroup.prototype, 'bottom', Object.getOwnPropertyDescriptor(Labelable.prototype, 'bottom'));
  Object.defineProperty(HeadingGroup.prototype, 'width', Object.getOwnPropertyDescriptor(Labelable.prototype, 'width'));
  Object.defineProperty(HeadingGroup.prototype, 'height', Object.getOwnPropertyDescriptor(Labelable.prototype, 'height'));
  HeadingGroup.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  Object.defineProperty(HeadingGroupStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  ItemRenderer.prototype.isRendered = Selectable.prototype.isRendered;
  ItemRenderer.prototype.getChildUnderPoint_g1oyt7$ = Selectable.prototype.getChildUnderPoint_g1oyt7$;
  ItemRenderer.prototype.getChildUnderRay_p0mkez$ = Selectable.prototype.getChildUnderRay_p0mkez$;
  ItemRenderer.prototype.getChildrenUnderPoint_adthd4$ = Selectable.prototype.getChildrenUnderPoint_adthd4$;
  ItemRenderer.prototype.getChildrenUnderRay_w6o14y$ = Selectable.prototype.getChildrenUnderRay_w6o14y$;
  ItemRenderer.prototype.handlesInteraction_1811yh$ = Selectable.prototype.handlesInteraction_1811yh$;
  ItemRenderer.prototype.handlesInteraction_j3fyc4$ = Selectable.prototype.handlesInteraction_j3fyc4$;
  ItemRenderer.prototype.hasInteraction_j3fyc4$ = Selectable.prototype.hasInteraction_j3fyc4$;
  ItemRenderer.prototype.hasInteraction_j3fyc4$$default = Selectable.prototype.hasInteraction_j3fyc4$$default;
  ItemRenderer.prototype.getInteractionSignal_j3fyc4$ = Selectable.prototype.getInteractionSignal_j3fyc4$;
  ItemRenderer.prototype.addInteractionSignal_pqftit$ = Selectable.prototype.addInteractionSignal_pqftit$;
  ItemRenderer.prototype.intersectsGlobalRay_ujzndq$ = Selectable.prototype.intersectsGlobalRay_ujzndq$;
  ItemRenderer.prototype.intersectsGlobalRay_94uff6$ = Selectable.prototype.intersectsGlobalRay_94uff6$;
  ItemRenderer.prototype.setSize_yxjqmk$ = Selectable.prototype.setSize_yxjqmk$;
  ItemRenderer.prototype.setSize_i12l7q$ = Selectable.prototype.setSize_i12l7q$;
  ItemRenderer.prototype.moveTo_1fv2cb$ = Selectable.prototype.moveTo_1fv2cb$;
  ItemRenderer.prototype.moveTo_y2kzbl$ = Selectable.prototype.moveTo_y2kzbl$;
  ItemRenderer.prototype.moveTo_y2kzbl$$default = Selectable.prototype.moveTo_y2kzbl$$default;
  ItemRenderer.prototype.setPosition_y2kzbl$ = Selectable.prototype.setPosition_y2kzbl$;
  ItemRenderer.prototype.setRotation_y2kzbl$ = Selectable.prototype.setRotation_y2kzbl$;
  ItemRenderer.prototype.setScaling_y2kzbl$ = Selectable.prototype.setScaling_y2kzbl$;
  ItemRenderer.prototype.setOrigin_y2kzbl$ = Selectable.prototype.setOrigin_y2kzbl$;
  ItemRenderer.prototype.localToGlobal_9wm29k$ = Selectable.prototype.localToGlobal_9wm29k$;
  ItemRenderer.prototype.localToGlobal_ujzndq$ = Selectable.prototype.localToGlobal_ujzndq$;
  ItemRenderer.prototype.globalToLocal_9wm29k$ = Selectable.prototype.globalToLocal_9wm29k$;
  ItemRenderer.prototype.globalToLocal_ujzndq$ = Selectable.prototype.globalToLocal_ujzndq$;
  ItemRenderer.prototype.rayToPlane_94uff5$ = Selectable.prototype.rayToPlane_94uff5$;
  ItemRenderer.prototype.convertCoord_jsa5cl$ = Selectable.prototype.convertCoord_jsa5cl$;
  ItemRenderer.prototype.windowToLocal_9wm29l$ = Selectable.prototype.windowToLocal_9wm29l$;
  ItemRenderer.prototype.localToWindow_9wm29k$ = Selectable.prototype.localToWindow_9wm29k$;
  ItemRenderer.prototype.previousSibling = Selectable.prototype.previousSibling;
  ItemRenderer.prototype.nextSibling = Selectable.prototype.nextSibling;
  ItemRenderer.prototype.validate = Selectable.prototype.validate;
  ItemRenderer.prototype.validate_za3lpa$ = Selectable.prototype.validate_za3lpa$;
  Object.defineProperty(ItemRenderer.prototype, 'alpha', Object.getOwnPropertyDescriptor(Selectable.prototype, 'alpha'));
  Object.defineProperty(ItemRenderer.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Selectable.prototype, 'interactivityEnabled'));
  Object.defineProperty(ItemRenderer.prototype, 'right', Object.getOwnPropertyDescriptor(Selectable.prototype, 'right'));
  Object.defineProperty(ItemRenderer.prototype, 'bottom', Object.getOwnPropertyDescriptor(Selectable.prototype, 'bottom'));
  Object.defineProperty(ItemRenderer.prototype, 'width', Object.getOwnPropertyDescriptor(Selectable.prototype, 'width'));
  Object.defineProperty(ItemRenderer.prototype, 'height', Object.getOwnPropertyDescriptor(Selectable.prototype, 'height'));
  LayoutAlgorithm.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  BasicLayoutAlgorithm.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  CanvasLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  FlowLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  GridLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  HorizontalLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  ScaleLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  VerticalLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  VirtualLayoutAlgorithm.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  VirtualHorizontalLayout.prototype.layout_ge8abi$ = VirtualLayoutAlgorithm.prototype.layout_ge8abi$;
  VirtualizedVerticalLayout.prototype.layout_ge8abi$ = VirtualLayoutAlgorithm.prototype.layout_ge8abi$;
  ItemRendererOwner.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  VirtualLayoutContainer.prototype.isRendered = Container.prototype.isRendered;
  VirtualLayoutContainer.prototype.getChildUnderPoint_g1oyt7$ = Container.prototype.getChildUnderPoint_g1oyt7$;
  VirtualLayoutContainer.prototype.getChildUnderRay_p0mkez$ = Container.prototype.getChildUnderRay_p0mkez$;
  VirtualLayoutContainer.prototype.getChildrenUnderPoint_adthd4$ = Container.prototype.getChildrenUnderPoint_adthd4$;
  VirtualLayoutContainer.prototype.getChildrenUnderRay_w6o14y$ = Container.prototype.getChildrenUnderRay_w6o14y$;
  VirtualLayoutContainer.prototype.handlesInteraction_1811yh$ = Container.prototype.handlesInteraction_1811yh$;
  VirtualLayoutContainer.prototype.handlesInteraction_j3fyc4$ = Container.prototype.handlesInteraction_j3fyc4$;
  VirtualLayoutContainer.prototype.hasInteraction_j3fyc4$ = Container.prototype.hasInteraction_j3fyc4$;
  VirtualLayoutContainer.prototype.hasInteraction_j3fyc4$$default = Container.prototype.hasInteraction_j3fyc4$$default;
  VirtualLayoutContainer.prototype.getInteractionSignal_j3fyc4$ = Container.prototype.getInteractionSignal_j3fyc4$;
  VirtualLayoutContainer.prototype.addInteractionSignal_pqftit$ = Container.prototype.addInteractionSignal_pqftit$;
  VirtualLayoutContainer.prototype.intersectsGlobalRay_ujzndq$ = Container.prototype.intersectsGlobalRay_ujzndq$;
  VirtualLayoutContainer.prototype.intersectsGlobalRay_94uff6$ = Container.prototype.intersectsGlobalRay_94uff6$;
  VirtualLayoutContainer.prototype.setSize_yxjqmk$ = Container.prototype.setSize_yxjqmk$;
  VirtualLayoutContainer.prototype.setSize_i12l7q$ = Container.prototype.setSize_i12l7q$;
  VirtualLayoutContainer.prototype.moveTo_1fv2cb$ = Container.prototype.moveTo_1fv2cb$;
  VirtualLayoutContainer.prototype.moveTo_y2kzbl$ = Container.prototype.moveTo_y2kzbl$;
  VirtualLayoutContainer.prototype.moveTo_y2kzbl$$default = Container.prototype.moveTo_y2kzbl$$default;
  VirtualLayoutContainer.prototype.setPosition_y2kzbl$ = Container.prototype.setPosition_y2kzbl$;
  VirtualLayoutContainer.prototype.setRotation_y2kzbl$ = Container.prototype.setRotation_y2kzbl$;
  VirtualLayoutContainer.prototype.setScaling_y2kzbl$ = Container.prototype.setScaling_y2kzbl$;
  VirtualLayoutContainer.prototype.setOrigin_y2kzbl$ = Container.prototype.setOrigin_y2kzbl$;
  VirtualLayoutContainer.prototype.localToGlobal_9wm29k$ = Container.prototype.localToGlobal_9wm29k$;
  VirtualLayoutContainer.prototype.localToGlobal_ujzndq$ = Container.prototype.localToGlobal_ujzndq$;
  VirtualLayoutContainer.prototype.globalToLocal_9wm29k$ = Container.prototype.globalToLocal_9wm29k$;
  VirtualLayoutContainer.prototype.globalToLocal_ujzndq$ = Container.prototype.globalToLocal_ujzndq$;
  VirtualLayoutContainer.prototype.rayToPlane_94uff5$ = Container.prototype.rayToPlane_94uff5$;
  VirtualLayoutContainer.prototype.convertCoord_jsa5cl$ = Container.prototype.convertCoord_jsa5cl$;
  VirtualLayoutContainer.prototype.windowToLocal_9wm29l$ = Container.prototype.windowToLocal_9wm29l$;
  VirtualLayoutContainer.prototype.localToWindow_9wm29k$ = Container.prototype.localToWindow_9wm29k$;
  VirtualLayoutContainer.prototype.previousSibling = Container.prototype.previousSibling;
  VirtualLayoutContainer.prototype.nextSibling = Container.prototype.nextSibling;
  VirtualLayoutContainer.prototype.validate = Container.prototype.validate;
  VirtualLayoutContainer.prototype.validate_za3lpa$ = Container.prototype.validate_za3lpa$;
  VirtualLayoutContainer.prototype.containsChild_npz94r$ = Container.prototype.containsChild_npz94r$;
  VirtualLayoutContainer.prototype.getChildAt_za3lpa$ = Container.prototype.getChildAt_za3lpa$;
  VirtualLayoutContainer.prototype.iterateChildren_9z398f$ = Container.prototype.iterateChildren_9z398f$;
  VirtualLayoutContainer.prototype.iterateChildren_bwf5pq$ = Container.prototype.iterateChildren_bwf5pq$;
  VirtualLayoutContainer.prototype.iterateChildrenReversed_bwf5pq$ = Container.prototype.iterateChildrenReversed_bwf5pq$;
  Object.defineProperty(VirtualLayoutContainer.prototype, 'alpha', Object.getOwnPropertyDescriptor(Container.prototype, 'alpha'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Container.prototype, 'interactivityEnabled'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'right', Object.getOwnPropertyDescriptor(Container.prototype, 'right'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'bottom', Object.getOwnPropertyDescriptor(Container.prototype, 'bottom'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'width', Object.getOwnPropertyDescriptor(Container.prototype, 'width'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'height', Object.getOwnPropertyDescriptor(Container.prototype, 'height'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'numChildren', Object.getOwnPropertyDescriptor(Container.prototype, 'numChildren'));
  VirtualLayoutContainer.prototype.focus = Focusable.prototype.focus;
  VirtualLayoutContainer.prototype.blur = Focusable.prototype.blur;
  VirtualLayoutContainer.prototype.onFocused = Focusable.prototype.onFocused;
  VirtualLayoutContainer.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(VirtualLayoutContainer.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(VirtualLayoutContainer.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  DataScroller.prototype.isRendered = VirtualLayoutContainer.prototype.isRendered;
  DataScroller.prototype.getChildUnderPoint_g1oyt7$ = VirtualLayoutContainer.prototype.getChildUnderPoint_g1oyt7$;
  DataScroller.prototype.getChildUnderRay_p0mkez$ = VirtualLayoutContainer.prototype.getChildUnderRay_p0mkez$;
  DataScroller.prototype.getChildrenUnderPoint_adthd4$ = VirtualLayoutContainer.prototype.getChildrenUnderPoint_adthd4$;
  DataScroller.prototype.getChildrenUnderRay_w6o14y$ = VirtualLayoutContainer.prototype.getChildrenUnderRay_w6o14y$;
  DataScroller.prototype.handlesInteraction_1811yh$ = VirtualLayoutContainer.prototype.handlesInteraction_1811yh$;
  DataScroller.prototype.handlesInteraction_j3fyc4$ = VirtualLayoutContainer.prototype.handlesInteraction_j3fyc4$;
  DataScroller.prototype.hasInteraction_j3fyc4$ = VirtualLayoutContainer.prototype.hasInteraction_j3fyc4$;
  DataScroller.prototype.hasInteraction_j3fyc4$$default = VirtualLayoutContainer.prototype.hasInteraction_j3fyc4$$default;
  DataScroller.prototype.getInteractionSignal_j3fyc4$ = VirtualLayoutContainer.prototype.getInteractionSignal_j3fyc4$;
  DataScroller.prototype.addInteractionSignal_pqftit$ = VirtualLayoutContainer.prototype.addInteractionSignal_pqftit$;
  DataScroller.prototype.intersectsGlobalRay_ujzndq$ = VirtualLayoutContainer.prototype.intersectsGlobalRay_ujzndq$;
  DataScroller.prototype.intersectsGlobalRay_94uff6$ = VirtualLayoutContainer.prototype.intersectsGlobalRay_94uff6$;
  DataScroller.prototype.setSize_yxjqmk$ = VirtualLayoutContainer.prototype.setSize_yxjqmk$;
  DataScroller.prototype.setSize_i12l7q$ = VirtualLayoutContainer.prototype.setSize_i12l7q$;
  DataScroller.prototype.moveTo_1fv2cb$ = VirtualLayoutContainer.prototype.moveTo_1fv2cb$;
  DataScroller.prototype.moveTo_y2kzbl$ = VirtualLayoutContainer.prototype.moveTo_y2kzbl$;
  DataScroller.prototype.moveTo_y2kzbl$$default = VirtualLayoutContainer.prototype.moveTo_y2kzbl$$default;
  DataScroller.prototype.setPosition_y2kzbl$ = VirtualLayoutContainer.prototype.setPosition_y2kzbl$;
  DataScroller.prototype.setRotation_y2kzbl$ = VirtualLayoutContainer.prototype.setRotation_y2kzbl$;
  DataScroller.prototype.setScaling_y2kzbl$ = VirtualLayoutContainer.prototype.setScaling_y2kzbl$;
  DataScroller.prototype.setOrigin_y2kzbl$ = VirtualLayoutContainer.prototype.setOrigin_y2kzbl$;
  DataScroller.prototype.localToGlobal_9wm29k$ = VirtualLayoutContainer.prototype.localToGlobal_9wm29k$;
  DataScroller.prototype.localToGlobal_ujzndq$ = VirtualLayoutContainer.prototype.localToGlobal_ujzndq$;
  DataScroller.prototype.globalToLocal_9wm29k$ = VirtualLayoutContainer.prototype.globalToLocal_9wm29k$;
  DataScroller.prototype.globalToLocal_ujzndq$ = VirtualLayoutContainer.prototype.globalToLocal_ujzndq$;
  DataScroller.prototype.rayToPlane_94uff5$ = VirtualLayoutContainer.prototype.rayToPlane_94uff5$;
  DataScroller.prototype.convertCoord_jsa5cl$ = VirtualLayoutContainer.prototype.convertCoord_jsa5cl$;
  DataScroller.prototype.windowToLocal_9wm29l$ = VirtualLayoutContainer.prototype.windowToLocal_9wm29l$;
  DataScroller.prototype.localToWindow_9wm29k$ = VirtualLayoutContainer.prototype.localToWindow_9wm29k$;
  DataScroller.prototype.previousSibling = VirtualLayoutContainer.prototype.previousSibling;
  DataScroller.prototype.nextSibling = VirtualLayoutContainer.prototype.nextSibling;
  DataScroller.prototype.validate = VirtualLayoutContainer.prototype.validate;
  DataScroller.prototype.validate_za3lpa$ = VirtualLayoutContainer.prototype.validate_za3lpa$;
  DataScroller.prototype.containsChild_npz94r$ = VirtualLayoutContainer.prototype.containsChild_npz94r$;
  DataScroller.prototype.getChildAt_za3lpa$ = VirtualLayoutContainer.prototype.getChildAt_za3lpa$;
  DataScroller.prototype.iterateChildren_9z398f$ = VirtualLayoutContainer.prototype.iterateChildren_9z398f$;
  DataScroller.prototype.iterateChildren_bwf5pq$ = VirtualLayoutContainer.prototype.iterateChildren_bwf5pq$;
  DataScroller.prototype.iterateChildrenReversed_bwf5pq$ = VirtualLayoutContainer.prototype.iterateChildrenReversed_bwf5pq$;
  DataScroller.prototype.focus = VirtualLayoutContainer.prototype.focus;
  DataScroller.prototype.blur = VirtualLayoutContainer.prototype.blur;
  DataScroller.prototype.onFocused = VirtualLayoutContainer.prototype.onFocused;
  DataScroller.prototype.onBlurred = VirtualLayoutContainer.prototype.onBlurred;
  Object.defineProperty(DataScroller.prototype, 'alpha', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'alpha'));
  Object.defineProperty(DataScroller.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(DataScroller.prototype, 'right', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'right'));
  Object.defineProperty(DataScroller.prototype, 'bottom', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'bottom'));
  Object.defineProperty(DataScroller.prototype, 'width', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'width'));
  Object.defineProperty(DataScroller.prototype, 'height', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'height'));
  Object.defineProperty(DataScroller.prototype, 'numChildren', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'numChildren'));
  Object.defineProperty(DataScroller.prototype, 'isFocused', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'isFocused'));
  Object.defineProperty(DataScroller.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(VirtualLayoutContainer.prototype, 'parentFocusableContainer'));
  Object.defineProperty(DataScrollerStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  BasicLayoutElementImpl.prototype.setSize_yxjqmk$ = BasicLayoutElement.prototype.setSize_yxjqmk$;
  BasicLayoutElementImpl.prototype.setSize_i12l7q$ = BasicLayoutElement.prototype.setSize_i12l7q$;
  BasicLayoutElementImpl.prototype.moveTo_1fv2cb$ = BasicLayoutElement.prototype.moveTo_1fv2cb$;
  BasicLayoutElementImpl.prototype.moveTo_y2kzbl$ = BasicLayoutElement.prototype.moveTo_y2kzbl$;
  BasicLayoutElementImpl.prototype.moveTo_y2kzbl$$default = BasicLayoutElement.prototype.moveTo_y2kzbl$$default;
  BasicLayoutElementImpl.prototype.setPosition_y2kzbl$ = BasicLayoutElement.prototype.setPosition_y2kzbl$;
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'right', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'right'));
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'bottom', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'bottom'));
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'width', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'width'));
  Object.defineProperty(BasicLayoutElementImpl.prototype, 'height', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'height'));
  FocusContainer.prototype.intersectsGlobalRay_ujzndq$ = LayoutElement.prototype.intersectsGlobalRay_ujzndq$;
  FocusContainer.prototype.intersectsGlobalRay_94uff6$ = LayoutElement.prototype.intersectsGlobalRay_94uff6$;
  FocusContainer.prototype.setSize_yxjqmk$ = LayoutElement.prototype.setSize_yxjqmk$;
  FocusContainer.prototype.setSize_i12l7q$ = LayoutElement.prototype.setSize_i12l7q$;
  FocusContainer.prototype.moveTo_1fv2cb$ = LayoutElement.prototype.moveTo_1fv2cb$;
  FocusContainer.prototype.moveTo_y2kzbl$ = LayoutElement.prototype.moveTo_y2kzbl$;
  FocusContainer.prototype.moveTo_y2kzbl$$default = LayoutElement.prototype.moveTo_y2kzbl$$default;
  FocusContainer.prototype.setPosition_y2kzbl$ = LayoutElement.prototype.setPosition_y2kzbl$;
  FocusContainer.prototype.setRotation_y2kzbl$ = LayoutElement.prototype.setRotation_y2kzbl$;
  FocusContainer.prototype.setScaling_y2kzbl$ = LayoutElement.prototype.setScaling_y2kzbl$;
  FocusContainer.prototype.setOrigin_y2kzbl$ = LayoutElement.prototype.setOrigin_y2kzbl$;
  FocusContainer.prototype.localToGlobal_9wm29k$ = LayoutElement.prototype.localToGlobal_9wm29k$;
  FocusContainer.prototype.localToGlobal_ujzndq$ = LayoutElement.prototype.localToGlobal_ujzndq$;
  FocusContainer.prototype.globalToLocal_9wm29k$ = LayoutElement.prototype.globalToLocal_9wm29k$;
  FocusContainer.prototype.globalToLocal_ujzndq$ = LayoutElement.prototype.globalToLocal_ujzndq$;
  FocusContainer.prototype.rayToPlane_94uff5$ = LayoutElement.prototype.rayToPlane_94uff5$;
  FocusContainer.prototype.convertCoord_jsa5cl$ = LayoutElement.prototype.convertCoord_jsa5cl$;
  Object.defineProperty(FocusContainer.prototype, 'right', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'right'));
  Object.defineProperty(FocusContainer.prototype, 'bottom', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'bottom'));
  Object.defineProperty(FocusContainer.prototype, 'width', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'width'));
  Object.defineProperty(FocusContainer.prototype, 'height', Object.getOwnPropertyDescriptor(LayoutElement.prototype, 'height'));
  VirtualList.prototype.intersectsGlobalRay_ujzndq$ = FocusContainer.prototype.intersectsGlobalRay_ujzndq$;
  VirtualList.prototype.intersectsGlobalRay_94uff6$ = FocusContainer.prototype.intersectsGlobalRay_94uff6$;
  VirtualList.prototype.setSize_yxjqmk$ = FocusContainer.prototype.setSize_yxjqmk$;
  VirtualList.prototype.setSize_i12l7q$ = FocusContainer.prototype.setSize_i12l7q$;
  VirtualList.prototype.moveTo_1fv2cb$ = FocusContainer.prototype.moveTo_1fv2cb$;
  VirtualList.prototype.moveTo_y2kzbl$ = FocusContainer.prototype.moveTo_y2kzbl$;
  VirtualList.prototype.moveTo_y2kzbl$$default = FocusContainer.prototype.moveTo_y2kzbl$$default;
  VirtualList.prototype.setPosition_y2kzbl$ = FocusContainer.prototype.setPosition_y2kzbl$;
  VirtualList.prototype.setRotation_y2kzbl$ = FocusContainer.prototype.setRotation_y2kzbl$;
  VirtualList.prototype.setScaling_y2kzbl$ = FocusContainer.prototype.setScaling_y2kzbl$;
  VirtualList.prototype.setOrigin_y2kzbl$ = FocusContainer.prototype.setOrigin_y2kzbl$;
  VirtualList.prototype.localToGlobal_9wm29k$ = FocusContainer.prototype.localToGlobal_9wm29k$;
  VirtualList.prototype.localToGlobal_ujzndq$ = FocusContainer.prototype.localToGlobal_ujzndq$;
  VirtualList.prototype.globalToLocal_9wm29k$ = FocusContainer.prototype.globalToLocal_9wm29k$;
  VirtualList.prototype.globalToLocal_ujzndq$ = FocusContainer.prototype.globalToLocal_ujzndq$;
  VirtualList.prototype.rayToPlane_94uff5$ = FocusContainer.prototype.rayToPlane_94uff5$;
  VirtualList.prototype.convertCoord_jsa5cl$ = FocusContainer.prototype.convertCoord_jsa5cl$;
  Object.defineProperty(VirtualList.prototype, 'right', Object.getOwnPropertyDescriptor(FocusContainer.prototype, 'right'));
  Object.defineProperty(VirtualList.prototype, 'bottom', Object.getOwnPropertyDescriptor(FocusContainer.prototype, 'bottom'));
  Object.defineProperty(VirtualList.prototype, 'width', Object.getOwnPropertyDescriptor(FocusContainer.prototype, 'width'));
  Object.defineProperty(VirtualList.prototype, 'height', Object.getOwnPropertyDescriptor(FocusContainer.prototype, 'height'));
  VirtualList.prototype.layout_ge8abi$ = ItemRendererOwner.prototype.layout_ge8abi$;
  Object.defineProperty(NumericStepperStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  Object.defineProperty(OptionsListStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  Panel.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  Object.defineProperty(PanelStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  Object.defineProperty(ProgressBarRectStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  Rect.prototype.isRendered = UiComponent.prototype.isRendered;
  Rect.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  Rect.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  Rect.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  Rect.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  Rect.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  Rect.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  Rect.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  Rect.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  Rect.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  Rect.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  Rect.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  Rect.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  Rect.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  Rect.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  Rect.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  Rect.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  Rect.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  Rect.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  Rect.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  Rect.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  Rect.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  Rect.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  Rect.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  Rect.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  Rect.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  Rect.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  Rect.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  Rect.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  Rect.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  Rect.prototype.previousSibling = UiComponent.prototype.previousSibling;
  Rect.prototype.nextSibling = UiComponent.prototype.nextSibling;
  Rect.prototype.validate = UiComponent.prototype.validate;
  Rect.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(Rect.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(Rect.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(Rect.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(Rect.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(Rect.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(Rect.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  RuleStyleSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  ScrollArea.prototype.layout_ge8abi$ = LayoutContainer.prototype.layout_ge8abi$;
  ScrollArea.prototype.isRendered = LayoutContainer.prototype.isRendered;
  ScrollArea.prototype.getChildUnderPoint_g1oyt7$ = LayoutContainer.prototype.getChildUnderPoint_g1oyt7$;
  ScrollArea.prototype.getChildUnderRay_p0mkez$ = LayoutContainer.prototype.getChildUnderRay_p0mkez$;
  ScrollArea.prototype.getChildrenUnderPoint_adthd4$ = LayoutContainer.prototype.getChildrenUnderPoint_adthd4$;
  ScrollArea.prototype.getChildrenUnderRay_w6o14y$ = LayoutContainer.prototype.getChildrenUnderRay_w6o14y$;
  ScrollArea.prototype.handlesInteraction_1811yh$ = LayoutContainer.prototype.handlesInteraction_1811yh$;
  ScrollArea.prototype.handlesInteraction_j3fyc4$ = LayoutContainer.prototype.handlesInteraction_j3fyc4$;
  ScrollArea.prototype.hasInteraction_j3fyc4$ = LayoutContainer.prototype.hasInteraction_j3fyc4$;
  ScrollArea.prototype.hasInteraction_j3fyc4$$default = LayoutContainer.prototype.hasInteraction_j3fyc4$$default;
  ScrollArea.prototype.getInteractionSignal_j3fyc4$ = LayoutContainer.prototype.getInteractionSignal_j3fyc4$;
  ScrollArea.prototype.addInteractionSignal_pqftit$ = LayoutContainer.prototype.addInteractionSignal_pqftit$;
  ScrollArea.prototype.intersectsGlobalRay_ujzndq$ = LayoutContainer.prototype.intersectsGlobalRay_ujzndq$;
  ScrollArea.prototype.intersectsGlobalRay_94uff6$ = LayoutContainer.prototype.intersectsGlobalRay_94uff6$;
  ScrollArea.prototype.setSize_yxjqmk$ = LayoutContainer.prototype.setSize_yxjqmk$;
  ScrollArea.prototype.setSize_i12l7q$ = LayoutContainer.prototype.setSize_i12l7q$;
  ScrollArea.prototype.moveTo_1fv2cb$ = LayoutContainer.prototype.moveTo_1fv2cb$;
  ScrollArea.prototype.moveTo_y2kzbl$ = LayoutContainer.prototype.moveTo_y2kzbl$;
  ScrollArea.prototype.moveTo_y2kzbl$$default = LayoutContainer.prototype.moveTo_y2kzbl$$default;
  ScrollArea.prototype.setPosition_y2kzbl$ = LayoutContainer.prototype.setPosition_y2kzbl$;
  ScrollArea.prototype.setRotation_y2kzbl$ = LayoutContainer.prototype.setRotation_y2kzbl$;
  ScrollArea.prototype.setScaling_y2kzbl$ = LayoutContainer.prototype.setScaling_y2kzbl$;
  ScrollArea.prototype.setOrigin_y2kzbl$ = LayoutContainer.prototype.setOrigin_y2kzbl$;
  ScrollArea.prototype.localToGlobal_9wm29k$ = LayoutContainer.prototype.localToGlobal_9wm29k$;
  ScrollArea.prototype.localToGlobal_ujzndq$ = LayoutContainer.prototype.localToGlobal_ujzndq$;
  ScrollArea.prototype.globalToLocal_9wm29k$ = LayoutContainer.prototype.globalToLocal_9wm29k$;
  ScrollArea.prototype.globalToLocal_ujzndq$ = LayoutContainer.prototype.globalToLocal_ujzndq$;
  ScrollArea.prototype.rayToPlane_94uff5$ = LayoutContainer.prototype.rayToPlane_94uff5$;
  ScrollArea.prototype.convertCoord_jsa5cl$ = LayoutContainer.prototype.convertCoord_jsa5cl$;
  ScrollArea.prototype.windowToLocal_9wm29l$ = LayoutContainer.prototype.windowToLocal_9wm29l$;
  ScrollArea.prototype.localToWindow_9wm29k$ = LayoutContainer.prototype.localToWindow_9wm29k$;
  ScrollArea.prototype.previousSibling = LayoutContainer.prototype.previousSibling;
  ScrollArea.prototype.nextSibling = LayoutContainer.prototype.nextSibling;
  ScrollArea.prototype.validate = LayoutContainer.prototype.validate;
  ScrollArea.prototype.validate_za3lpa$ = LayoutContainer.prototype.validate_za3lpa$;
  ScrollArea.prototype.containsChild_npz94r$ = LayoutContainer.prototype.containsChild_npz94r$;
  ScrollArea.prototype.getChildAt_za3lpa$ = LayoutContainer.prototype.getChildAt_za3lpa$;
  ScrollArea.prototype.iterateChildren_9z398f$ = LayoutContainer.prototype.iterateChildren_9z398f$;
  ScrollArea.prototype.iterateChildren_bwf5pq$ = LayoutContainer.prototype.iterateChildren_bwf5pq$;
  ScrollArea.prototype.iterateChildrenReversed_bwf5pq$ = LayoutContainer.prototype.iterateChildrenReversed_bwf5pq$;
  ScrollArea.prototype.unaryPlus_8db8yx$ = LayoutContainer.prototype.unaryPlus_8db8yx$;
  ScrollArea.prototype.unaryMinus_8db8yx$ = LayoutContainer.prototype.unaryMinus_8db8yx$;
  ScrollArea.prototype.clearElements_6taknv$ = LayoutContainer.prototype.clearElements_6taknv$;
  ScrollArea.prototype.addElementAfter_tu2188$ = LayoutContainer.prototype.addElementAfter_tu2188$;
  ScrollArea.prototype.addElementBefore_tu2188$ = LayoutContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(ScrollArea.prototype, 'alpha', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'alpha'));
  Object.defineProperty(ScrollArea.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(ScrollArea.prototype, 'right', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'right'));
  Object.defineProperty(ScrollArea.prototype, 'bottom', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'bottom'));
  Object.defineProperty(ScrollArea.prototype, 'width', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'width'));
  Object.defineProperty(ScrollArea.prototype, 'height', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'height'));
  Object.defineProperty(ScrollArea.prototype, 'numChildren', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'numChildren'));
  Object.defineProperty(ScrollAreaStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  Object.defineProperty(ScrollBarStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  MutableClampedScrollModel.prototype.clamp_mx4ult$ = ClampedScrollModel.prototype.clamp_mx4ult$;
  MutableClampedScrollModel.prototype.snap_mx4ult$ = ClampedScrollModel.prototype.snap_mx4ult$;
  ScrollModelImpl.prototype.clamp_mx4ult$ = MutableClampedScrollModel.prototype.clamp_mx4ult$;
  ScrollModelImpl.prototype.snap_mx4ult$ = MutableClampedScrollModel.prototype.snap_mx4ult$;
  Object.defineProperty(ScrollModelImpl.prototype, 'value', Object.getOwnPropertyDescriptor(MutableClampedScrollModel.prototype, 'value'));
  ScrollRect.prototype.isRendered = ElementContainer.prototype.isRendered;
  ScrollRect.prototype.getChildUnderPoint_g1oyt7$ = ElementContainer.prototype.getChildUnderPoint_g1oyt7$;
  ScrollRect.prototype.getChildUnderRay_p0mkez$ = ElementContainer.prototype.getChildUnderRay_p0mkez$;
  ScrollRect.prototype.getChildrenUnderPoint_adthd4$ = ElementContainer.prototype.getChildrenUnderPoint_adthd4$;
  ScrollRect.prototype.getChildrenUnderRay_w6o14y$ = ElementContainer.prototype.getChildrenUnderRay_w6o14y$;
  ScrollRect.prototype.handlesInteraction_1811yh$ = ElementContainer.prototype.handlesInteraction_1811yh$;
  ScrollRect.prototype.handlesInteraction_j3fyc4$ = ElementContainer.prototype.handlesInteraction_j3fyc4$;
  ScrollRect.prototype.hasInteraction_j3fyc4$ = ElementContainer.prototype.hasInteraction_j3fyc4$;
  ScrollRect.prototype.hasInteraction_j3fyc4$$default = ElementContainer.prototype.hasInteraction_j3fyc4$$default;
  ScrollRect.prototype.getInteractionSignal_j3fyc4$ = ElementContainer.prototype.getInteractionSignal_j3fyc4$;
  ScrollRect.prototype.addInteractionSignal_pqftit$ = ElementContainer.prototype.addInteractionSignal_pqftit$;
  ScrollRect.prototype.intersectsGlobalRay_ujzndq$ = ElementContainer.prototype.intersectsGlobalRay_ujzndq$;
  ScrollRect.prototype.intersectsGlobalRay_94uff6$ = ElementContainer.prototype.intersectsGlobalRay_94uff6$;
  ScrollRect.prototype.setSize_yxjqmk$ = ElementContainer.prototype.setSize_yxjqmk$;
  ScrollRect.prototype.setSize_i12l7q$ = ElementContainer.prototype.setSize_i12l7q$;
  ScrollRect.prototype.moveTo_1fv2cb$ = ElementContainer.prototype.moveTo_1fv2cb$;
  ScrollRect.prototype.moveTo_y2kzbl$ = ElementContainer.prototype.moveTo_y2kzbl$;
  ScrollRect.prototype.moveTo_y2kzbl$$default = ElementContainer.prototype.moveTo_y2kzbl$$default;
  ScrollRect.prototype.setPosition_y2kzbl$ = ElementContainer.prototype.setPosition_y2kzbl$;
  ScrollRect.prototype.setRotation_y2kzbl$ = ElementContainer.prototype.setRotation_y2kzbl$;
  ScrollRect.prototype.setScaling_y2kzbl$ = ElementContainer.prototype.setScaling_y2kzbl$;
  ScrollRect.prototype.setOrigin_y2kzbl$ = ElementContainer.prototype.setOrigin_y2kzbl$;
  ScrollRect.prototype.localToGlobal_9wm29k$ = ElementContainer.prototype.localToGlobal_9wm29k$;
  ScrollRect.prototype.localToGlobal_ujzndq$ = ElementContainer.prototype.localToGlobal_ujzndq$;
  ScrollRect.prototype.globalToLocal_9wm29k$ = ElementContainer.prototype.globalToLocal_9wm29k$;
  ScrollRect.prototype.globalToLocal_ujzndq$ = ElementContainer.prototype.globalToLocal_ujzndq$;
  ScrollRect.prototype.rayToPlane_94uff5$ = ElementContainer.prototype.rayToPlane_94uff5$;
  ScrollRect.prototype.convertCoord_jsa5cl$ = ElementContainer.prototype.convertCoord_jsa5cl$;
  ScrollRect.prototype.windowToLocal_9wm29l$ = ElementContainer.prototype.windowToLocal_9wm29l$;
  ScrollRect.prototype.localToWindow_9wm29k$ = ElementContainer.prototype.localToWindow_9wm29k$;
  ScrollRect.prototype.previousSibling = ElementContainer.prototype.previousSibling;
  ScrollRect.prototype.nextSibling = ElementContainer.prototype.nextSibling;
  ScrollRect.prototype.validate = ElementContainer.prototype.validate;
  ScrollRect.prototype.validate_za3lpa$ = ElementContainer.prototype.validate_za3lpa$;
  ScrollRect.prototype.containsChild_npz94r$ = ElementContainer.prototype.containsChild_npz94r$;
  ScrollRect.prototype.getChildAt_za3lpa$ = ElementContainer.prototype.getChildAt_za3lpa$;
  ScrollRect.prototype.iterateChildren_9z398f$ = ElementContainer.prototype.iterateChildren_9z398f$;
  ScrollRect.prototype.iterateChildren_bwf5pq$ = ElementContainer.prototype.iterateChildren_bwf5pq$;
  ScrollRect.prototype.iterateChildrenReversed_bwf5pq$ = ElementContainer.prototype.iterateChildrenReversed_bwf5pq$;
  ScrollRect.prototype.unaryPlus_8db8yx$ = ElementContainer.prototype.unaryPlus_8db8yx$;
  ScrollRect.prototype.unaryMinus_8db8yx$ = ElementContainer.prototype.unaryMinus_8db8yx$;
  ScrollRect.prototype.clearElements_6taknv$ = ElementContainer.prototype.clearElements_6taknv$;
  ScrollRect.prototype.addElementAfter_tu2188$ = ElementContainer.prototype.addElementAfter_tu2188$;
  ScrollRect.prototype.addElementBefore_tu2188$ = ElementContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(ScrollRect.prototype, 'alpha', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'alpha'));
  Object.defineProperty(ScrollRect.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(ScrollRect.prototype, 'right', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'right'));
  Object.defineProperty(ScrollRect.prototype, 'bottom', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'bottom'));
  Object.defineProperty(ScrollRect.prototype, 'width', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'width'));
  Object.defineProperty(ScrollRect.prototype, 'height', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'height'));
  Object.defineProperty(ScrollRect.prototype, 'numChildren', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'numChildren'));
  SimpleItemRenderer.prototype.isRendered = ItemRenderer.prototype.isRendered;
  SimpleItemRenderer.prototype.getChildUnderPoint_g1oyt7$ = ItemRenderer.prototype.getChildUnderPoint_g1oyt7$;
  SimpleItemRenderer.prototype.getChildUnderRay_p0mkez$ = ItemRenderer.prototype.getChildUnderRay_p0mkez$;
  SimpleItemRenderer.prototype.getChildrenUnderPoint_adthd4$ = ItemRenderer.prototype.getChildrenUnderPoint_adthd4$;
  SimpleItemRenderer.prototype.getChildrenUnderRay_w6o14y$ = ItemRenderer.prototype.getChildrenUnderRay_w6o14y$;
  SimpleItemRenderer.prototype.handlesInteraction_1811yh$ = ItemRenderer.prototype.handlesInteraction_1811yh$;
  SimpleItemRenderer.prototype.handlesInteraction_j3fyc4$ = ItemRenderer.prototype.handlesInteraction_j3fyc4$;
  SimpleItemRenderer.prototype.hasInteraction_j3fyc4$ = ItemRenderer.prototype.hasInteraction_j3fyc4$;
  SimpleItemRenderer.prototype.hasInteraction_j3fyc4$$default = ItemRenderer.prototype.hasInteraction_j3fyc4$$default;
  SimpleItemRenderer.prototype.getInteractionSignal_j3fyc4$ = ItemRenderer.prototype.getInteractionSignal_j3fyc4$;
  SimpleItemRenderer.prototype.addInteractionSignal_pqftit$ = ItemRenderer.prototype.addInteractionSignal_pqftit$;
  SimpleItemRenderer.prototype.intersectsGlobalRay_ujzndq$ = ItemRenderer.prototype.intersectsGlobalRay_ujzndq$;
  SimpleItemRenderer.prototype.intersectsGlobalRay_94uff6$ = ItemRenderer.prototype.intersectsGlobalRay_94uff6$;
  SimpleItemRenderer.prototype.setSize_yxjqmk$ = ItemRenderer.prototype.setSize_yxjqmk$;
  SimpleItemRenderer.prototype.setSize_i12l7q$ = ItemRenderer.prototype.setSize_i12l7q$;
  SimpleItemRenderer.prototype.moveTo_1fv2cb$ = ItemRenderer.prototype.moveTo_1fv2cb$;
  SimpleItemRenderer.prototype.moveTo_y2kzbl$ = ItemRenderer.prototype.moveTo_y2kzbl$;
  SimpleItemRenderer.prototype.moveTo_y2kzbl$$default = ItemRenderer.prototype.moveTo_y2kzbl$$default;
  SimpleItemRenderer.prototype.setPosition_y2kzbl$ = ItemRenderer.prototype.setPosition_y2kzbl$;
  SimpleItemRenderer.prototype.setRotation_y2kzbl$ = ItemRenderer.prototype.setRotation_y2kzbl$;
  SimpleItemRenderer.prototype.setScaling_y2kzbl$ = ItemRenderer.prototype.setScaling_y2kzbl$;
  SimpleItemRenderer.prototype.setOrigin_y2kzbl$ = ItemRenderer.prototype.setOrigin_y2kzbl$;
  SimpleItemRenderer.prototype.localToGlobal_9wm29k$ = ItemRenderer.prototype.localToGlobal_9wm29k$;
  SimpleItemRenderer.prototype.localToGlobal_ujzndq$ = ItemRenderer.prototype.localToGlobal_ujzndq$;
  SimpleItemRenderer.prototype.globalToLocal_9wm29k$ = ItemRenderer.prototype.globalToLocal_9wm29k$;
  SimpleItemRenderer.prototype.globalToLocal_ujzndq$ = ItemRenderer.prototype.globalToLocal_ujzndq$;
  SimpleItemRenderer.prototype.rayToPlane_94uff5$ = ItemRenderer.prototype.rayToPlane_94uff5$;
  SimpleItemRenderer.prototype.convertCoord_jsa5cl$ = ItemRenderer.prototype.convertCoord_jsa5cl$;
  SimpleItemRenderer.prototype.windowToLocal_9wm29l$ = ItemRenderer.prototype.windowToLocal_9wm29l$;
  SimpleItemRenderer.prototype.localToWindow_9wm29k$ = ItemRenderer.prototype.localToWindow_9wm29k$;
  SimpleItemRenderer.prototype.previousSibling = ItemRenderer.prototype.previousSibling;
  SimpleItemRenderer.prototype.nextSibling = ItemRenderer.prototype.nextSibling;
  SimpleItemRenderer.prototype.validate = ItemRenderer.prototype.validate;
  SimpleItemRenderer.prototype.validate_za3lpa$ = ItemRenderer.prototype.validate_za3lpa$;
  Object.defineProperty(SimpleItemRenderer.prototype, 'alpha', Object.getOwnPropertyDescriptor(ItemRenderer.prototype, 'alpha'));
  Object.defineProperty(SimpleItemRenderer.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ItemRenderer.prototype, 'interactivityEnabled'));
  Object.defineProperty(SimpleItemRenderer.prototype, 'right', Object.getOwnPropertyDescriptor(ItemRenderer.prototype, 'right'));
  Object.defineProperty(SimpleItemRenderer.prototype, 'bottom', Object.getOwnPropertyDescriptor(ItemRenderer.prototype, 'bottom'));
  Object.defineProperty(SimpleItemRenderer.prototype, 'width', Object.getOwnPropertyDescriptor(ItemRenderer.prototype, 'width'));
  Object.defineProperty(SimpleItemRenderer.prototype, 'height', Object.getOwnPropertyDescriptor(ItemRenderer.prototype, 'height'));
  SimpleItemRenderer.prototype.focus = Focusable.prototype.focus;
  SimpleItemRenderer.prototype.blur = Focusable.prototype.blur;
  SimpleItemRenderer.prototype.onFocused = Focusable.prototype.onFocused;
  SimpleItemRenderer.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(SimpleItemRenderer.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(SimpleItemRenderer.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  StackLayout.prototype.layout_ge8abi$ = LayoutAlgorithm.prototype.layout_ge8abi$;
  Stage$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(Stage$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Stage$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Stage.prototype.isRendered = ElementContainer.prototype.isRendered;
  Stage.prototype.getChildUnderPoint_g1oyt7$ = ElementContainer.prototype.getChildUnderPoint_g1oyt7$;
  Stage.prototype.getChildUnderRay_p0mkez$ = ElementContainer.prototype.getChildUnderRay_p0mkez$;
  Stage.prototype.getChildrenUnderPoint_adthd4$ = ElementContainer.prototype.getChildrenUnderPoint_adthd4$;
  Stage.prototype.getChildrenUnderRay_w6o14y$ = ElementContainer.prototype.getChildrenUnderRay_w6o14y$;
  Stage.prototype.handlesInteraction_1811yh$ = ElementContainer.prototype.handlesInteraction_1811yh$;
  Stage.prototype.handlesInteraction_j3fyc4$ = ElementContainer.prototype.handlesInteraction_j3fyc4$;
  Stage.prototype.hasInteraction_j3fyc4$ = ElementContainer.prototype.hasInteraction_j3fyc4$;
  Stage.prototype.hasInteraction_j3fyc4$$default = ElementContainer.prototype.hasInteraction_j3fyc4$$default;
  Stage.prototype.getInteractionSignal_j3fyc4$ = ElementContainer.prototype.getInteractionSignal_j3fyc4$;
  Stage.prototype.addInteractionSignal_pqftit$ = ElementContainer.prototype.addInteractionSignal_pqftit$;
  Stage.prototype.intersectsGlobalRay_ujzndq$ = ElementContainer.prototype.intersectsGlobalRay_ujzndq$;
  Stage.prototype.intersectsGlobalRay_94uff6$ = ElementContainer.prototype.intersectsGlobalRay_94uff6$;
  Stage.prototype.setSize_yxjqmk$ = ElementContainer.prototype.setSize_yxjqmk$;
  Stage.prototype.setSize_i12l7q$ = ElementContainer.prototype.setSize_i12l7q$;
  Stage.prototype.moveTo_1fv2cb$ = ElementContainer.prototype.moveTo_1fv2cb$;
  Stage.prototype.moveTo_y2kzbl$ = ElementContainer.prototype.moveTo_y2kzbl$;
  Stage.prototype.moveTo_y2kzbl$$default = ElementContainer.prototype.moveTo_y2kzbl$$default;
  Stage.prototype.setPosition_y2kzbl$ = ElementContainer.prototype.setPosition_y2kzbl$;
  Stage.prototype.setRotation_y2kzbl$ = ElementContainer.prototype.setRotation_y2kzbl$;
  Stage.prototype.setScaling_y2kzbl$ = ElementContainer.prototype.setScaling_y2kzbl$;
  Stage.prototype.setOrigin_y2kzbl$ = ElementContainer.prototype.setOrigin_y2kzbl$;
  Stage.prototype.localToGlobal_9wm29k$ = ElementContainer.prototype.localToGlobal_9wm29k$;
  Stage.prototype.localToGlobal_ujzndq$ = ElementContainer.prototype.localToGlobal_ujzndq$;
  Stage.prototype.globalToLocal_9wm29k$ = ElementContainer.prototype.globalToLocal_9wm29k$;
  Stage.prototype.globalToLocal_ujzndq$ = ElementContainer.prototype.globalToLocal_ujzndq$;
  Stage.prototype.rayToPlane_94uff5$ = ElementContainer.prototype.rayToPlane_94uff5$;
  Stage.prototype.convertCoord_jsa5cl$ = ElementContainer.prototype.convertCoord_jsa5cl$;
  Stage.prototype.windowToLocal_9wm29l$ = ElementContainer.prototype.windowToLocal_9wm29l$;
  Stage.prototype.localToWindow_9wm29k$ = ElementContainer.prototype.localToWindow_9wm29k$;
  Stage.prototype.previousSibling = ElementContainer.prototype.previousSibling;
  Stage.prototype.nextSibling = ElementContainer.prototype.nextSibling;
  Stage.prototype.validate = ElementContainer.prototype.validate;
  Stage.prototype.validate_za3lpa$ = ElementContainer.prototype.validate_za3lpa$;
  Stage.prototype.containsChild_npz94r$ = ElementContainer.prototype.containsChild_npz94r$;
  Stage.prototype.getChildAt_za3lpa$ = ElementContainer.prototype.getChildAt_za3lpa$;
  Stage.prototype.iterateChildren_9z398f$ = ElementContainer.prototype.iterateChildren_9z398f$;
  Stage.prototype.iterateChildren_bwf5pq$ = ElementContainer.prototype.iterateChildren_bwf5pq$;
  Stage.prototype.iterateChildrenReversed_bwf5pq$ = ElementContainer.prototype.iterateChildrenReversed_bwf5pq$;
  Stage.prototype.unaryPlus_8db8yx$ = ElementContainer.prototype.unaryPlus_8db8yx$;
  Stage.prototype.unaryMinus_8db8yx$ = ElementContainer.prototype.unaryMinus_8db8yx$;
  Stage.prototype.clearElements_6taknv$ = ElementContainer.prototype.clearElements_6taknv$;
  Stage.prototype.addElementAfter_tu2188$ = ElementContainer.prototype.addElementAfter_tu2188$;
  Stage.prototype.addElementBefore_tu2188$ = ElementContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(Stage.prototype, 'alpha', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'alpha'));
  Object.defineProperty(Stage.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(Stage.prototype, 'right', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'right'));
  Object.defineProperty(Stage.prototype, 'bottom', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'bottom'));
  Object.defineProperty(Stage.prototype, 'width', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'width'));
  Object.defineProperty(Stage.prototype, 'height', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'height'));
  Object.defineProperty(Stage.prototype, 'numChildren', Object.getOwnPropertyDescriptor(ElementContainer.prototype, 'numChildren'));
  Stage.prototype.focus = Focusable.prototype.focus;
  Stage.prototype.blur = Focusable.prototype.blur;
  Stage.prototype.onFocused = Focusable.prototype.onFocused;
  Stage.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(Stage.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(Stage.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(StageStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  TabNavigator.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  Object.defineProperty(TabNavigatorStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  TextField.prototype.isRendered = UiComponent.prototype.isRendered;
  TextField.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  TextField.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  TextField.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  TextField.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  TextField.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  TextField.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  TextField.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  TextField.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  TextField.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  TextField.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  TextField.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  TextField.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  TextField.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  TextField.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  TextField.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  TextField.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  TextField.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  TextField.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  TextField.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  TextField.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  TextField.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  TextField.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  TextField.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  TextField.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  TextField.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  TextField.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  TextField.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  TextField.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  TextField.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  TextField.prototype.previousSibling = UiComponent.prototype.previousSibling;
  TextField.prototype.nextSibling = UiComponent.prototype.nextSibling;
  TextField.prototype.validate = UiComponent.prototype.validate;
  TextField.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(TextField.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(TextField.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(TextField.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(TextField.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(TextField.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(TextField.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  EditableTextField.prototype.focus = Focusable.prototype.focus;
  EditableTextField.prototype.blur = Focusable.prototype.blur;
  EditableTextField.prototype.onFocused = Focusable.prototype.onFocused;
  EditableTextField.prototype.onBlurred = Focusable.prototype.onBlurred;
  EditableTextField.prototype.isRendered = Focusable.prototype.isRendered;
  EditableTextField.prototype.getChildUnderPoint_g1oyt7$ = Focusable.prototype.getChildUnderPoint_g1oyt7$;
  EditableTextField.prototype.getChildUnderRay_p0mkez$ = Focusable.prototype.getChildUnderRay_p0mkez$;
  EditableTextField.prototype.getChildrenUnderPoint_adthd4$ = Focusable.prototype.getChildrenUnderPoint_adthd4$;
  EditableTextField.prototype.getChildrenUnderRay_w6o14y$ = Focusable.prototype.getChildrenUnderRay_w6o14y$;
  EditableTextField.prototype.handlesInteraction_1811yh$ = Focusable.prototype.handlesInteraction_1811yh$;
  EditableTextField.prototype.handlesInteraction_j3fyc4$ = Focusable.prototype.handlesInteraction_j3fyc4$;
  EditableTextField.prototype.hasInteraction_j3fyc4$ = Focusable.prototype.hasInteraction_j3fyc4$;
  EditableTextField.prototype.hasInteraction_j3fyc4$$default = Focusable.prototype.hasInteraction_j3fyc4$$default;
  EditableTextField.prototype.getInteractionSignal_j3fyc4$ = Focusable.prototype.getInteractionSignal_j3fyc4$;
  EditableTextField.prototype.addInteractionSignal_pqftit$ = Focusable.prototype.addInteractionSignal_pqftit$;
  EditableTextField.prototype.intersectsGlobalRay_ujzndq$ = Focusable.prototype.intersectsGlobalRay_ujzndq$;
  EditableTextField.prototype.intersectsGlobalRay_94uff6$ = Focusable.prototype.intersectsGlobalRay_94uff6$;
  EditableTextField.prototype.setSize_yxjqmk$ = Focusable.prototype.setSize_yxjqmk$;
  EditableTextField.prototype.setSize_i12l7q$ = Focusable.prototype.setSize_i12l7q$;
  EditableTextField.prototype.moveTo_1fv2cb$ = Focusable.prototype.moveTo_1fv2cb$;
  EditableTextField.prototype.moveTo_y2kzbl$ = Focusable.prototype.moveTo_y2kzbl$;
  EditableTextField.prototype.moveTo_y2kzbl$$default = Focusable.prototype.moveTo_y2kzbl$$default;
  EditableTextField.prototype.setPosition_y2kzbl$ = Focusable.prototype.setPosition_y2kzbl$;
  EditableTextField.prototype.setRotation_y2kzbl$ = Focusable.prototype.setRotation_y2kzbl$;
  EditableTextField.prototype.setScaling_y2kzbl$ = Focusable.prototype.setScaling_y2kzbl$;
  EditableTextField.prototype.setOrigin_y2kzbl$ = Focusable.prototype.setOrigin_y2kzbl$;
  EditableTextField.prototype.localToGlobal_9wm29k$ = Focusable.prototype.localToGlobal_9wm29k$;
  EditableTextField.prototype.localToGlobal_ujzndq$ = Focusable.prototype.localToGlobal_ujzndq$;
  EditableTextField.prototype.globalToLocal_9wm29k$ = Focusable.prototype.globalToLocal_9wm29k$;
  EditableTextField.prototype.globalToLocal_ujzndq$ = Focusable.prototype.globalToLocal_ujzndq$;
  EditableTextField.prototype.rayToPlane_94uff5$ = Focusable.prototype.rayToPlane_94uff5$;
  EditableTextField.prototype.convertCoord_jsa5cl$ = Focusable.prototype.convertCoord_jsa5cl$;
  EditableTextField.prototype.windowToLocal_9wm29l$ = Focusable.prototype.windowToLocal_9wm29l$;
  EditableTextField.prototype.localToWindow_9wm29k$ = Focusable.prototype.localToWindow_9wm29k$;
  EditableTextField.prototype.previousSibling = Focusable.prototype.previousSibling;
  EditableTextField.prototype.nextSibling = Focusable.prototype.nextSibling;
  EditableTextField.prototype.validate = Focusable.prototype.validate;
  EditableTextField.prototype.validate_za3lpa$ = Focusable.prototype.validate_za3lpa$;
  Object.defineProperty(EditableTextField.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(EditableTextField.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(EditableTextField.prototype, 'alpha', Object.getOwnPropertyDescriptor(Focusable.prototype, 'alpha'));
  Object.defineProperty(EditableTextField.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Focusable.prototype, 'interactivityEnabled'));
  Object.defineProperty(EditableTextField.prototype, 'right', Object.getOwnPropertyDescriptor(Focusable.prototype, 'right'));
  Object.defineProperty(EditableTextField.prototype, 'bottom', Object.getOwnPropertyDescriptor(Focusable.prototype, 'bottom'));
  Object.defineProperty(EditableTextField.prototype, 'width', Object.getOwnPropertyDescriptor(Focusable.prototype, 'width'));
  Object.defineProperty(EditableTextField.prototype, 'height', Object.getOwnPropertyDescriptor(Focusable.prototype, 'height'));
  Object.defineProperty(EditableTextField.prototype, 'label', Object.getOwnPropertyDescriptor(TextField.prototype, 'label'));
  Object.defineProperty(FlowStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  FlowStyleSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  Object.defineProperty(CharStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  CharStyleSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  TextInput.prototype.focus = Focusable.prototype.focus;
  TextInput.prototype.blur = Focusable.prototype.blur;
  TextInput.prototype.onFocused = Focusable.prototype.onFocused;
  TextInput.prototype.onBlurred = Focusable.prototype.onBlurred;
  TextInput.prototype.isRendered = Focusable.prototype.isRendered;
  TextInput.prototype.getChildUnderPoint_g1oyt7$ = Focusable.prototype.getChildUnderPoint_g1oyt7$;
  TextInput.prototype.getChildUnderRay_p0mkez$ = Focusable.prototype.getChildUnderRay_p0mkez$;
  TextInput.prototype.getChildrenUnderPoint_adthd4$ = Focusable.prototype.getChildrenUnderPoint_adthd4$;
  TextInput.prototype.getChildrenUnderRay_w6o14y$ = Focusable.prototype.getChildrenUnderRay_w6o14y$;
  TextInput.prototype.handlesInteraction_1811yh$ = Focusable.prototype.handlesInteraction_1811yh$;
  TextInput.prototype.handlesInteraction_j3fyc4$ = Focusable.prototype.handlesInteraction_j3fyc4$;
  TextInput.prototype.hasInteraction_j3fyc4$ = Focusable.prototype.hasInteraction_j3fyc4$;
  TextInput.prototype.hasInteraction_j3fyc4$$default = Focusable.prototype.hasInteraction_j3fyc4$$default;
  TextInput.prototype.getInteractionSignal_j3fyc4$ = Focusable.prototype.getInteractionSignal_j3fyc4$;
  TextInput.prototype.addInteractionSignal_pqftit$ = Focusable.prototype.addInteractionSignal_pqftit$;
  TextInput.prototype.intersectsGlobalRay_ujzndq$ = Focusable.prototype.intersectsGlobalRay_ujzndq$;
  TextInput.prototype.intersectsGlobalRay_94uff6$ = Focusable.prototype.intersectsGlobalRay_94uff6$;
  TextInput.prototype.setSize_yxjqmk$ = Focusable.prototype.setSize_yxjqmk$;
  TextInput.prototype.setSize_i12l7q$ = Focusable.prototype.setSize_i12l7q$;
  TextInput.prototype.moveTo_1fv2cb$ = Focusable.prototype.moveTo_1fv2cb$;
  TextInput.prototype.moveTo_y2kzbl$ = Focusable.prototype.moveTo_y2kzbl$;
  TextInput.prototype.moveTo_y2kzbl$$default = Focusable.prototype.moveTo_y2kzbl$$default;
  TextInput.prototype.setPosition_y2kzbl$ = Focusable.prototype.setPosition_y2kzbl$;
  TextInput.prototype.setRotation_y2kzbl$ = Focusable.prototype.setRotation_y2kzbl$;
  TextInput.prototype.setScaling_y2kzbl$ = Focusable.prototype.setScaling_y2kzbl$;
  TextInput.prototype.setOrigin_y2kzbl$ = Focusable.prototype.setOrigin_y2kzbl$;
  TextInput.prototype.localToGlobal_9wm29k$ = Focusable.prototype.localToGlobal_9wm29k$;
  TextInput.prototype.localToGlobal_ujzndq$ = Focusable.prototype.localToGlobal_ujzndq$;
  TextInput.prototype.globalToLocal_9wm29k$ = Focusable.prototype.globalToLocal_9wm29k$;
  TextInput.prototype.globalToLocal_ujzndq$ = Focusable.prototype.globalToLocal_ujzndq$;
  TextInput.prototype.rayToPlane_94uff5$ = Focusable.prototype.rayToPlane_94uff5$;
  TextInput.prototype.convertCoord_jsa5cl$ = Focusable.prototype.convertCoord_jsa5cl$;
  TextInput.prototype.windowToLocal_9wm29l$ = Focusable.prototype.windowToLocal_9wm29l$;
  TextInput.prototype.localToWindow_9wm29k$ = Focusable.prototype.localToWindow_9wm29k$;
  TextInput.prototype.previousSibling = Focusable.prototype.previousSibling;
  TextInput.prototype.nextSibling = Focusable.prototype.nextSibling;
  TextInput.prototype.validate = Focusable.prototype.validate;
  TextInput.prototype.validate_za3lpa$ = Focusable.prototype.validate_za3lpa$;
  Object.defineProperty(TextInput.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(TextInput.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(TextInput.prototype, 'alpha', Object.getOwnPropertyDescriptor(Focusable.prototype, 'alpha'));
  Object.defineProperty(TextInput.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Focusable.prototype, 'interactivityEnabled'));
  Object.defineProperty(TextInput.prototype, 'right', Object.getOwnPropertyDescriptor(Focusable.prototype, 'right'));
  Object.defineProperty(TextInput.prototype, 'bottom', Object.getOwnPropertyDescriptor(Focusable.prototype, 'bottom'));
  Object.defineProperty(TextInput.prototype, 'width', Object.getOwnPropertyDescriptor(Focusable.prototype, 'width'));
  Object.defineProperty(TextInput.prototype, 'height', Object.getOwnPropertyDescriptor(Focusable.prototype, 'height'));
  TextArea.prototype.focus = Focusable.prototype.focus;
  TextArea.prototype.blur = Focusable.prototype.blur;
  TextArea.prototype.onFocused = Focusable.prototype.onFocused;
  TextArea.prototype.onBlurred = Focusable.prototype.onBlurred;
  TextArea.prototype.isRendered = Focusable.prototype.isRendered;
  TextArea.prototype.getChildUnderPoint_g1oyt7$ = Focusable.prototype.getChildUnderPoint_g1oyt7$;
  TextArea.prototype.getChildUnderRay_p0mkez$ = Focusable.prototype.getChildUnderRay_p0mkez$;
  TextArea.prototype.getChildrenUnderPoint_adthd4$ = Focusable.prototype.getChildrenUnderPoint_adthd4$;
  TextArea.prototype.getChildrenUnderRay_w6o14y$ = Focusable.prototype.getChildrenUnderRay_w6o14y$;
  TextArea.prototype.handlesInteraction_1811yh$ = Focusable.prototype.handlesInteraction_1811yh$;
  TextArea.prototype.handlesInteraction_j3fyc4$ = Focusable.prototype.handlesInteraction_j3fyc4$;
  TextArea.prototype.hasInteraction_j3fyc4$ = Focusable.prototype.hasInteraction_j3fyc4$;
  TextArea.prototype.hasInteraction_j3fyc4$$default = Focusable.prototype.hasInteraction_j3fyc4$$default;
  TextArea.prototype.getInteractionSignal_j3fyc4$ = Focusable.prototype.getInteractionSignal_j3fyc4$;
  TextArea.prototype.addInteractionSignal_pqftit$ = Focusable.prototype.addInteractionSignal_pqftit$;
  TextArea.prototype.intersectsGlobalRay_ujzndq$ = Focusable.prototype.intersectsGlobalRay_ujzndq$;
  TextArea.prototype.intersectsGlobalRay_94uff6$ = Focusable.prototype.intersectsGlobalRay_94uff6$;
  TextArea.prototype.setSize_yxjqmk$ = Focusable.prototype.setSize_yxjqmk$;
  TextArea.prototype.setSize_i12l7q$ = Focusable.prototype.setSize_i12l7q$;
  TextArea.prototype.moveTo_1fv2cb$ = Focusable.prototype.moveTo_1fv2cb$;
  TextArea.prototype.moveTo_y2kzbl$ = Focusable.prototype.moveTo_y2kzbl$;
  TextArea.prototype.moveTo_y2kzbl$$default = Focusable.prototype.moveTo_y2kzbl$$default;
  TextArea.prototype.setPosition_y2kzbl$ = Focusable.prototype.setPosition_y2kzbl$;
  TextArea.prototype.setRotation_y2kzbl$ = Focusable.prototype.setRotation_y2kzbl$;
  TextArea.prototype.setScaling_y2kzbl$ = Focusable.prototype.setScaling_y2kzbl$;
  TextArea.prototype.setOrigin_y2kzbl$ = Focusable.prototype.setOrigin_y2kzbl$;
  TextArea.prototype.localToGlobal_9wm29k$ = Focusable.prototype.localToGlobal_9wm29k$;
  TextArea.prototype.localToGlobal_ujzndq$ = Focusable.prototype.localToGlobal_ujzndq$;
  TextArea.prototype.globalToLocal_9wm29k$ = Focusable.prototype.globalToLocal_9wm29k$;
  TextArea.prototype.globalToLocal_ujzndq$ = Focusable.prototype.globalToLocal_ujzndq$;
  TextArea.prototype.rayToPlane_94uff5$ = Focusable.prototype.rayToPlane_94uff5$;
  TextArea.prototype.convertCoord_jsa5cl$ = Focusable.prototype.convertCoord_jsa5cl$;
  TextArea.prototype.windowToLocal_9wm29l$ = Focusable.prototype.windowToLocal_9wm29l$;
  TextArea.prototype.localToWindow_9wm29k$ = Focusable.prototype.localToWindow_9wm29k$;
  TextArea.prototype.previousSibling = Focusable.prototype.previousSibling;
  TextArea.prototype.nextSibling = Focusable.prototype.nextSibling;
  TextArea.prototype.validate = Focusable.prototype.validate;
  TextArea.prototype.validate_za3lpa$ = Focusable.prototype.validate_za3lpa$;
  Object.defineProperty(TextArea.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(TextArea.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  Object.defineProperty(TextArea.prototype, 'alpha', Object.getOwnPropertyDescriptor(Focusable.prototype, 'alpha'));
  Object.defineProperty(TextArea.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Focusable.prototype, 'interactivityEnabled'));
  Object.defineProperty(TextArea.prototype, 'right', Object.getOwnPropertyDescriptor(Focusable.prototype, 'right'));
  Object.defineProperty(TextArea.prototype, 'bottom', Object.getOwnPropertyDescriptor(Focusable.prototype, 'bottom'));
  Object.defineProperty(TextArea.prototype, 'width', Object.getOwnPropertyDescriptor(Focusable.prototype, 'width'));
  Object.defineProperty(TextArea.prototype, 'height', Object.getOwnPropertyDescriptor(Focusable.prototype, 'height'));
  TextureComponent.prototype.isRendered = UiComponent.prototype.isRendered;
  TextureComponent.prototype.getChildUnderPoint_g1oyt7$ = UiComponent.prototype.getChildUnderPoint_g1oyt7$;
  TextureComponent.prototype.getChildUnderRay_p0mkez$ = UiComponent.prototype.getChildUnderRay_p0mkez$;
  TextureComponent.prototype.getChildrenUnderPoint_adthd4$ = UiComponent.prototype.getChildrenUnderPoint_adthd4$;
  TextureComponent.prototype.getChildrenUnderRay_w6o14y$ = UiComponent.prototype.getChildrenUnderRay_w6o14y$;
  TextureComponent.prototype.handlesInteraction_1811yh$ = UiComponent.prototype.handlesInteraction_1811yh$;
  TextureComponent.prototype.handlesInteraction_j3fyc4$ = UiComponent.prototype.handlesInteraction_j3fyc4$;
  TextureComponent.prototype.hasInteraction_j3fyc4$ = UiComponent.prototype.hasInteraction_j3fyc4$;
  TextureComponent.prototype.hasInteraction_j3fyc4$$default = UiComponent.prototype.hasInteraction_j3fyc4$$default;
  TextureComponent.prototype.getInteractionSignal_j3fyc4$ = UiComponent.prototype.getInteractionSignal_j3fyc4$;
  TextureComponent.prototype.addInteractionSignal_pqftit$ = UiComponent.prototype.addInteractionSignal_pqftit$;
  TextureComponent.prototype.intersectsGlobalRay_ujzndq$ = UiComponent.prototype.intersectsGlobalRay_ujzndq$;
  TextureComponent.prototype.intersectsGlobalRay_94uff6$ = UiComponent.prototype.intersectsGlobalRay_94uff6$;
  TextureComponent.prototype.setSize_yxjqmk$ = UiComponent.prototype.setSize_yxjqmk$;
  TextureComponent.prototype.setSize_i12l7q$ = UiComponent.prototype.setSize_i12l7q$;
  TextureComponent.prototype.moveTo_1fv2cb$ = UiComponent.prototype.moveTo_1fv2cb$;
  TextureComponent.prototype.moveTo_y2kzbl$ = UiComponent.prototype.moveTo_y2kzbl$;
  TextureComponent.prototype.moveTo_y2kzbl$$default = UiComponent.prototype.moveTo_y2kzbl$$default;
  TextureComponent.prototype.setPosition_y2kzbl$ = UiComponent.prototype.setPosition_y2kzbl$;
  TextureComponent.prototype.setRotation_y2kzbl$ = UiComponent.prototype.setRotation_y2kzbl$;
  TextureComponent.prototype.setScaling_y2kzbl$ = UiComponent.prototype.setScaling_y2kzbl$;
  TextureComponent.prototype.setOrigin_y2kzbl$ = UiComponent.prototype.setOrigin_y2kzbl$;
  TextureComponent.prototype.localToGlobal_9wm29k$ = UiComponent.prototype.localToGlobal_9wm29k$;
  TextureComponent.prototype.localToGlobal_ujzndq$ = UiComponent.prototype.localToGlobal_ujzndq$;
  TextureComponent.prototype.globalToLocal_9wm29k$ = UiComponent.prototype.globalToLocal_9wm29k$;
  TextureComponent.prototype.globalToLocal_ujzndq$ = UiComponent.prototype.globalToLocal_ujzndq$;
  TextureComponent.prototype.rayToPlane_94uff5$ = UiComponent.prototype.rayToPlane_94uff5$;
  TextureComponent.prototype.convertCoord_jsa5cl$ = UiComponent.prototype.convertCoord_jsa5cl$;
  TextureComponent.prototype.windowToLocal_9wm29l$ = UiComponent.prototype.windowToLocal_9wm29l$;
  TextureComponent.prototype.localToWindow_9wm29k$ = UiComponent.prototype.localToWindow_9wm29k$;
  TextureComponent.prototype.previousSibling = UiComponent.prototype.previousSibling;
  TextureComponent.prototype.nextSibling = UiComponent.prototype.nextSibling;
  TextureComponent.prototype.validate = UiComponent.prototype.validate;
  TextureComponent.prototype.validate_za3lpa$ = UiComponent.prototype.validate_za3lpa$;
  Object.defineProperty(TextureComponent.prototype, 'alpha', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'alpha'));
  Object.defineProperty(TextureComponent.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(TextureComponent.prototype, 'right', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'right'));
  Object.defineProperty(TextureComponent.prototype, 'bottom', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'bottom'));
  Object.defineProperty(TextureComponent.prototype, 'width', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'width'));
  Object.defineProperty(TextureComponent.prototype, 'height', Object.getOwnPropertyDescriptor(UiComponent.prototype, 'height'));
  Object.defineProperty(DividerStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  WindowPanel.prototype.isRendered = Labelable.prototype.isRendered;
  WindowPanel.prototype.getChildUnderPoint_g1oyt7$ = Labelable.prototype.getChildUnderPoint_g1oyt7$;
  WindowPanel.prototype.getChildUnderRay_p0mkez$ = Labelable.prototype.getChildUnderRay_p0mkez$;
  WindowPanel.prototype.getChildrenUnderPoint_adthd4$ = Labelable.prototype.getChildrenUnderPoint_adthd4$;
  WindowPanel.prototype.getChildrenUnderRay_w6o14y$ = Labelable.prototype.getChildrenUnderRay_w6o14y$;
  WindowPanel.prototype.handlesInteraction_1811yh$ = Labelable.prototype.handlesInteraction_1811yh$;
  WindowPanel.prototype.handlesInteraction_j3fyc4$ = Labelable.prototype.handlesInteraction_j3fyc4$;
  WindowPanel.prototype.hasInteraction_j3fyc4$ = Labelable.prototype.hasInteraction_j3fyc4$;
  WindowPanel.prototype.hasInteraction_j3fyc4$$default = Labelable.prototype.hasInteraction_j3fyc4$$default;
  WindowPanel.prototype.getInteractionSignal_j3fyc4$ = Labelable.prototype.getInteractionSignal_j3fyc4$;
  WindowPanel.prototype.addInteractionSignal_pqftit$ = Labelable.prototype.addInteractionSignal_pqftit$;
  WindowPanel.prototype.intersectsGlobalRay_ujzndq$ = Labelable.prototype.intersectsGlobalRay_ujzndq$;
  WindowPanel.prototype.intersectsGlobalRay_94uff6$ = Labelable.prototype.intersectsGlobalRay_94uff6$;
  WindowPanel.prototype.setSize_yxjqmk$ = Labelable.prototype.setSize_yxjqmk$;
  WindowPanel.prototype.setSize_i12l7q$ = Labelable.prototype.setSize_i12l7q$;
  WindowPanel.prototype.moveTo_1fv2cb$ = Labelable.prototype.moveTo_1fv2cb$;
  WindowPanel.prototype.moveTo_y2kzbl$ = Labelable.prototype.moveTo_y2kzbl$;
  WindowPanel.prototype.moveTo_y2kzbl$$default = Labelable.prototype.moveTo_y2kzbl$$default;
  WindowPanel.prototype.setPosition_y2kzbl$ = Labelable.prototype.setPosition_y2kzbl$;
  WindowPanel.prototype.setRotation_y2kzbl$ = Labelable.prototype.setRotation_y2kzbl$;
  WindowPanel.prototype.setScaling_y2kzbl$ = Labelable.prototype.setScaling_y2kzbl$;
  WindowPanel.prototype.setOrigin_y2kzbl$ = Labelable.prototype.setOrigin_y2kzbl$;
  WindowPanel.prototype.localToGlobal_9wm29k$ = Labelable.prototype.localToGlobal_9wm29k$;
  WindowPanel.prototype.localToGlobal_ujzndq$ = Labelable.prototype.localToGlobal_ujzndq$;
  WindowPanel.prototype.globalToLocal_9wm29k$ = Labelable.prototype.globalToLocal_9wm29k$;
  WindowPanel.prototype.globalToLocal_ujzndq$ = Labelable.prototype.globalToLocal_ujzndq$;
  WindowPanel.prototype.rayToPlane_94uff5$ = Labelable.prototype.rayToPlane_94uff5$;
  WindowPanel.prototype.convertCoord_jsa5cl$ = Labelable.prototype.convertCoord_jsa5cl$;
  WindowPanel.prototype.windowToLocal_9wm29l$ = Labelable.prototype.windowToLocal_9wm29l$;
  WindowPanel.prototype.localToWindow_9wm29k$ = Labelable.prototype.localToWindow_9wm29k$;
  WindowPanel.prototype.previousSibling = Labelable.prototype.previousSibling;
  WindowPanel.prototype.nextSibling = Labelable.prototype.nextSibling;
  WindowPanel.prototype.validate = Labelable.prototype.validate;
  WindowPanel.prototype.validate_za3lpa$ = Labelable.prototype.validate_za3lpa$;
  Object.defineProperty(WindowPanel.prototype, 'alpha', Object.getOwnPropertyDescriptor(Labelable.prototype, 'alpha'));
  Object.defineProperty(WindowPanel.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Labelable.prototype, 'interactivityEnabled'));
  Object.defineProperty(WindowPanel.prototype, 'right', Object.getOwnPropertyDescriptor(Labelable.prototype, 'right'));
  Object.defineProperty(WindowPanel.prototype, 'bottom', Object.getOwnPropertyDescriptor(Labelable.prototype, 'bottom'));
  Object.defineProperty(WindowPanel.prototype, 'width', Object.getOwnPropertyDescriptor(Labelable.prototype, 'width'));
  Object.defineProperty(WindowPanel.prototype, 'height', Object.getOwnPropertyDescriptor(Labelable.prototype, 'height'));
  WindowPanel.prototype.layout_ge8abi$ = LayoutDataProvider.prototype.layout_ge8abi$;
  Object.defineProperty(WindowPanelStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  AppConfig$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(AppConfig$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(AppConfig$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Object.defineProperty(AssetBinding.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(Progress.prototype, 'percentLoaded'));
  AssetLoader.prototype.hasBeenInvoked = Loadable.prototype.hasBeenInvoked;
  AssetLoader.prototype.hasCompleted = Loadable.prototype.hasCompleted;
  AssetLoader.prototype.hasFailed = Loadable.prototype.hasFailed;
  AssetLoader.prototype.hasSucceeded = Loadable.prototype.hasSucceeded;
  AssetLoader.prototype.isRunning = Loadable.prototype.isRunning;
  Object.defineProperty(AssetLoader.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(Loadable.prototype, 'percentLoaded'));
  MutableAssetLoader.prototype.hasBeenInvoked = AssetLoader.prototype.hasBeenInvoked;
  MutableAssetLoader.prototype.hasCompleted = AssetLoader.prototype.hasCompleted;
  MutableAssetLoader.prototype.hasFailed = AssetLoader.prototype.hasFailed;
  MutableAssetLoader.prototype.hasSucceeded = AssetLoader.prototype.hasSucceeded;
  MutableAssetLoader.prototype.isRunning = AssetLoader.prototype.isRunning;
  Object.defineProperty(MutableAssetLoader.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(AssetLoader.prototype, 'percentLoaded'));
  MutableAssetLoader.prototype.setStatus_pxr8bi$ = MutableResultAction.prototype.setStatus_pxr8bi$;
  AssetManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(AssetManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(AssetManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Object.defineProperty(AssetManager.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(Progress.prototype, 'percentLoaded'));
  AssetManagerImpl.prototype.load_re1kiq$$default = AssetManager.prototype.load_re1kiq$;
  AssetManagerImpl.prototype.load_re1kiq$ = AssetManager.prototype.load_re1kiq$;
  AssetManagerImpl.prototype.load_re1kiq$$default = AssetManager.prototype.load_re1kiq$$default;
  AssetManagerImpl.prototype.load_yu4i4z$ = AssetManager.prototype.load_yu4i4z$;
  Object.defineProperty(AssetManagerImpl.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(AssetManager.prototype, 'percentLoaded'));
  FailedLoader.prototype.hasBeenInvoked = MutableAssetLoader.prototype.hasBeenInvoked;
  FailedLoader.prototype.hasCompleted = MutableAssetLoader.prototype.hasCompleted;
  FailedLoader.prototype.hasFailed = MutableAssetLoader.prototype.hasFailed;
  FailedLoader.prototype.hasSucceeded = MutableAssetLoader.prototype.hasSucceeded;
  FailedLoader.prototype.isRunning = MutableAssetLoader.prototype.isRunning;
  FailedLoader.prototype.setStatus_pxr8bi$ = MutableAssetLoader.prototype.setStatus_pxr8bi$;
  Object.defineProperty(FailedLoader.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(MutableAssetLoader.prototype, 'percentLoaded'));
  Object.defineProperty(Cache$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Cache$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  AudioManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(AudioManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(AudioManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  MutableAudioManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  DrivableChild.prototype.previousSibling = Child.prototype.previousSibling;
  DrivableChild.prototype.nextSibling = Child.prototype.nextSibling;
  MutableAudioManager.prototype.remove = DrivableChild.prototype.remove;
  MutableAudioManager.prototype.previousSibling = DrivableChild.prototype.previousSibling;
  MutableAudioManager.prototype.nextSibling = DrivableChild.prototype.nextSibling;
  DrivableChildBase.prototype.remove = DrivableChild.prototype.remove;
  DrivableChildBase.prototype.previousSibling = DrivableChild.prototype.previousSibling;
  DrivableChildBase.prototype.nextSibling = DrivableChild.prototype.nextSibling;
  AudioManagerImpl.prototype.canPlaySound_mx4ult$ = MutableAudioManager.prototype.canPlaySound_mx4ult$;
  AudioManagerImpl.prototype.remove = MutableAudioManager.prototype.remove;
  AudioManagerImpl.prototype.previousSibling = MutableAudioManager.prototype.previousSibling;
  AudioManagerImpl.prototype.nextSibling = MutableAudioManager.prototype.nextSibling;
  CursorManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(CursorManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(CursorManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  CursorManagerBase.prototype.addCursor_ahv9y6$ = CursorManager.prototype.addCursor_ahv9y6$;
  DependencyKeyImpl.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(DependencyKeyImpl.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(DependencyKeyImpl.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Object.defineProperty(dKey$ObjectLiteral.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(dKey$ObjectLiteral.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  FocusManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(FocusManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(FocusManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  FocusManagerImpl.prototype.clearFocused = FocusManager.prototype.clearFocused;
  FocusManagerImpl.prototype.focusNext = FocusManager.prototype.focusNext;
  FocusManagerImpl.prototype.focusPrevious = FocusManager.prototype.focusPrevious;
  Camera$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(Camera$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Camera$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  CameraBase.prototype.moveToLookAtRect_j02c0$$default = Camera.prototype.moveToLookAtRect_j02c0$;
  CameraBase.prototype.update_6taknv$ = Camera.prototype.update_6taknv$;
  CameraBase.prototype.setViewport_dleff0$ = Camera.prototype.setViewport_dleff0$;
  CameraBase.prototype.setDirection_9wm29k$ = Camera.prototype.setDirection_9wm29k$;
  CameraBase.prototype.pointToLookAt_9wm29k$ = Camera.prototype.pointToLookAt_9wm29k$;
  CameraBase.prototype.moveToLookAtPoint_7b5o5w$ = Camera.prototype.moveToLookAtPoint_7b5o5w$;
  CameraBase.prototype.moveToLookAtRect_j02c0$ = Camera.prototype.moveToLookAtRect_j02c0$;
  CameraBase.prototype.moveToLookAtRect_j02c0$$default = Camera.prototype.moveToLookAtRect_j02c0$$default;
  CameraBase.prototype.moveToLookAtRect_81m47f$ = Camera.prototype.moveToLookAtRect_81m47f$;
  Object.defineProperty(CameraBase.prototype, 'aspect', Object.getOwnPropertyDescriptor(Camera.prototype, 'aspect'));
  TextureAtlasDataSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  AtlasPageSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  AtlasRegionDataSerializer.prototype.write2_6l37rg$ = To.prototype.write2_6l37rg$;
  Window$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(Window$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Window$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  MutableParent.prototype.containsChild_npz94r$ = Parent.prototype.containsChild_npz94r$;
  MutableParent.prototype.getChildAt_za3lpa$ = Parent.prototype.getChildAt_za3lpa$;
  MutableParent.prototype.iterateChildren_9z398f$ = Parent.prototype.iterateChildren_9z398f$;
  MutableParent.prototype.iterateChildren_bwf5pq$ = Parent.prototype.iterateChildren_bwf5pq$;
  MutableParent.prototype.iterateChildrenReversed_bwf5pq$ = Parent.prototype.iterateChildrenReversed_bwf5pq$;
  MutableParent.prototype.previousSibling = Parent.prototype.previousSibling;
  MutableParent.prototype.nextSibling = Parent.prototype.nextSibling;
  Object.defineProperty(MutableParent.prototype, 'numChildren', Object.getOwnPropertyDescriptor(Parent.prototype, 'numChildren'));
  ParentBase.prototype.clearChildren_6taknv$$default = MutableParent.prototype.clearChildren_6taknv$;
  ParentBase.prototype.addChild_qaye9v$ = MutableParent.prototype.addChild_qaye9v$;
  ParentBase.prototype.addAllChildren_dk1gku$ = MutableParent.prototype.addAllChildren_dk1gku$;
  ParentBase.prototype.addAllChildren_ndcjk8$ = MutableParent.prototype.addAllChildren_ndcjk8$;
  ParentBase.prototype.addAllChildren_njvo8r$ = MutableParent.prototype.addAllChildren_njvo8r$;
  ParentBase.prototype.addAllChildren_ga54mp$ = MutableParent.prototype.addAllChildren_ga54mp$;
  ParentBase.prototype.addChildAfter_96et1m$ = MutableParent.prototype.addChildAfter_96et1m$;
  ParentBase.prototype.addChildBefore_96et1m$ = MutableParent.prototype.addChildBefore_96et1m$;
  ParentBase.prototype.removeChild_6iy558$ = MutableParent.prototype.removeChild_6iy558$;
  ParentBase.prototype.swapChildren_96et1m$ = MutableParent.prototype.swapChildren_96et1m$;
  ParentBase.prototype.clearChildren_6taknv$ = MutableParent.prototype.clearChildren_6taknv$;
  ParentBase.prototype.clearChildren_6taknv$$default = MutableParent.prototype.clearChildren_6taknv$$default;
  ParentBase.prototype.containsChild_npz94r$ = MutableParent.prototype.containsChild_npz94r$;
  ParentBase.prototype.getChildAt_za3lpa$ = MutableParent.prototype.getChildAt_za3lpa$;
  ParentBase.prototype.iterateChildren_9z398f$ = MutableParent.prototype.iterateChildren_9z398f$;
  ParentBase.prototype.iterateChildren_bwf5pq$ = MutableParent.prototype.iterateChildren_bwf5pq$;
  ParentBase.prototype.iterateChildrenReversed_bwf5pq$ = MutableParent.prototype.iterateChildrenReversed_bwf5pq$;
  ParentBase.prototype.previousSibling = MutableParent.prototype.previousSibling;
  ParentBase.prototype.nextSibling = MutableParent.prototype.nextSibling;
  Object.defineProperty(ParentBase.prototype, 'numChildren', Object.getOwnPropertyDescriptor(MutableParent.prototype, 'numChildren'));
  Object.defineProperty(I18n$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(I18n$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  InteractionEventBase.prototype.isStopped = InteractionEvent.prototype.isStopped;
  Object.defineProperty(DownRepeatStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  InteractivityManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(InteractivityManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(InteractivityManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  InteractivityManagerImpl.prototype.dispatch_qts5q5$ = InteractivityManager.prototype.dispatch_qts5q5$;
  InteractivityManagerImpl.prototype.dispatch_z2oxuu$ = InteractivityManager.prototype.dispatch_z2oxuu$;
  KeyState$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(KeyState$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(KeyState$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  KeyInput$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(KeyInput$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  KeyInput.prototype.keyIsDown_3iojlf$ = KeyState.prototype.keyIsDown_3iojlf$;
  MouseState$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(MouseState$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(MouseState$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  MouseInput$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(MouseInput$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  MouseInput.prototype.mousePosition_9wm29l$ = MouseState.prototype.mousePosition_9wm29l$;
  Files$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(Files$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Files$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Object.defineProperty(CommandDispatcher$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(CommandDispatcher$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Object.defineProperty(NavigationManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(NavigationManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  NavigationManagerImpl.prototype.path_61zpoe$ = NavigationManager.prototype.path_61zpoe$;
  NavigationManagerImpl.prototype.clear = NavigationManager.prototype.clear;
  NavigationManagerImpl.prototype.push_8twpiv$ = NavigationManager.prototype.push_8twpiv$;
  NavigationManagerImpl.prototype.push_hmiasb$ = NavigationManager.prototype.push_hmiasb$;
  NavigationManagerImpl.prototype.pop = NavigationManager.prototype.pop;
  NavigationManagerImpl.prototype.pathToString = NavigationManager.prototype.pathToString;
  Object.defineProperty(NavEventImpl.prototype, 'oldPathStr', Object.getOwnPropertyDescriptor(NavEvent.prototype, 'oldPathStr'));
  Object.defineProperty(NavEventImpl.prototype, 'newPathStr', Object.getOwnPropertyDescriptor(NavEvent.prototype, 'newPathStr'));
  NavBindable.prototype.previousSibling = Child.prototype.previousSibling;
  NavBindable.prototype.nextSibling = Child.prototype.nextSibling;
  Persistence$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(Persistence$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Persistence$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Lift.prototype.createLayoutData = LayoutContainer.prototype.createLayoutData;
  Lift.prototype.layout_ge8abi$ = LayoutContainer.prototype.layout_ge8abi$;
  Lift.prototype.isRendered = LayoutContainer.prototype.isRendered;
  Lift.prototype.getChildUnderPoint_g1oyt7$ = LayoutContainer.prototype.getChildUnderPoint_g1oyt7$;
  Lift.prototype.getChildUnderRay_p0mkez$ = LayoutContainer.prototype.getChildUnderRay_p0mkez$;
  Lift.prototype.getChildrenUnderPoint_adthd4$ = LayoutContainer.prototype.getChildrenUnderPoint_adthd4$;
  Lift.prototype.getChildrenUnderRay_w6o14y$ = LayoutContainer.prototype.getChildrenUnderRay_w6o14y$;
  Lift.prototype.handlesInteraction_1811yh$ = LayoutContainer.prototype.handlesInteraction_1811yh$;
  Lift.prototype.handlesInteraction_j3fyc4$ = LayoutContainer.prototype.handlesInteraction_j3fyc4$;
  Lift.prototype.hasInteraction_j3fyc4$ = LayoutContainer.prototype.hasInteraction_j3fyc4$;
  Lift.prototype.hasInteraction_j3fyc4$$default = LayoutContainer.prototype.hasInteraction_j3fyc4$$default;
  Lift.prototype.getInteractionSignal_j3fyc4$ = LayoutContainer.prototype.getInteractionSignal_j3fyc4$;
  Lift.prototype.addInteractionSignal_pqftit$ = LayoutContainer.prototype.addInteractionSignal_pqftit$;
  Lift.prototype.intersectsGlobalRay_ujzndq$ = LayoutContainer.prototype.intersectsGlobalRay_ujzndq$;
  Lift.prototype.intersectsGlobalRay_94uff6$ = LayoutContainer.prototype.intersectsGlobalRay_94uff6$;
  Lift.prototype.setSize_yxjqmk$ = LayoutContainer.prototype.setSize_yxjqmk$;
  Lift.prototype.setSize_i12l7q$ = LayoutContainer.prototype.setSize_i12l7q$;
  Lift.prototype.moveTo_1fv2cb$ = LayoutContainer.prototype.moveTo_1fv2cb$;
  Lift.prototype.moveTo_y2kzbl$ = LayoutContainer.prototype.moveTo_y2kzbl$;
  Lift.prototype.moveTo_y2kzbl$$default = LayoutContainer.prototype.moveTo_y2kzbl$$default;
  Lift.prototype.setPosition_y2kzbl$ = LayoutContainer.prototype.setPosition_y2kzbl$;
  Lift.prototype.setRotation_y2kzbl$ = LayoutContainer.prototype.setRotation_y2kzbl$;
  Lift.prototype.setScaling_y2kzbl$ = LayoutContainer.prototype.setScaling_y2kzbl$;
  Lift.prototype.setOrigin_y2kzbl$ = LayoutContainer.prototype.setOrigin_y2kzbl$;
  Lift.prototype.localToGlobal_9wm29k$ = LayoutContainer.prototype.localToGlobal_9wm29k$;
  Lift.prototype.localToGlobal_ujzndq$ = LayoutContainer.prototype.localToGlobal_ujzndq$;
  Lift.prototype.globalToLocal_9wm29k$ = LayoutContainer.prototype.globalToLocal_9wm29k$;
  Lift.prototype.globalToLocal_ujzndq$ = LayoutContainer.prototype.globalToLocal_ujzndq$;
  Lift.prototype.rayToPlane_94uff5$ = LayoutContainer.prototype.rayToPlane_94uff5$;
  Lift.prototype.convertCoord_jsa5cl$ = LayoutContainer.prototype.convertCoord_jsa5cl$;
  Lift.prototype.windowToLocal_9wm29l$ = LayoutContainer.prototype.windowToLocal_9wm29l$;
  Lift.prototype.localToWindow_9wm29k$ = LayoutContainer.prototype.localToWindow_9wm29k$;
  Lift.prototype.previousSibling = LayoutContainer.prototype.previousSibling;
  Lift.prototype.nextSibling = LayoutContainer.prototype.nextSibling;
  Lift.prototype.validate = LayoutContainer.prototype.validate;
  Lift.prototype.validate_za3lpa$ = LayoutContainer.prototype.validate_za3lpa$;
  Lift.prototype.containsChild_npz94r$ = LayoutContainer.prototype.containsChild_npz94r$;
  Lift.prototype.getChildAt_za3lpa$ = LayoutContainer.prototype.getChildAt_za3lpa$;
  Lift.prototype.iterateChildren_9z398f$ = LayoutContainer.prototype.iterateChildren_9z398f$;
  Lift.prototype.iterateChildren_bwf5pq$ = LayoutContainer.prototype.iterateChildren_bwf5pq$;
  Lift.prototype.iterateChildrenReversed_bwf5pq$ = LayoutContainer.prototype.iterateChildrenReversed_bwf5pq$;
  Lift.prototype.unaryPlus_8db8yx$ = LayoutContainer.prototype.unaryPlus_8db8yx$;
  Lift.prototype.unaryMinus_8db8yx$ = LayoutContainer.prototype.unaryMinus_8db8yx$;
  Lift.prototype.clearElements_6taknv$ = LayoutContainer.prototype.clearElements_6taknv$;
  Lift.prototype.addElementAfter_tu2188$ = LayoutContainer.prototype.addElementAfter_tu2188$;
  Lift.prototype.addElementBefore_tu2188$ = LayoutContainer.prototype.addElementBefore_tu2188$;
  Object.defineProperty(Lift.prototype, 'alpha', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'alpha'));
  Object.defineProperty(Lift.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'interactivityEnabled'));
  Object.defineProperty(Lift.prototype, 'right', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'right'));
  Object.defineProperty(Lift.prototype, 'bottom', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'bottom'));
  Object.defineProperty(Lift.prototype, 'width', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'width'));
  Object.defineProperty(Lift.prototype, 'height', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'height'));
  Object.defineProperty(Lift.prototype, 'numChildren', Object.getOwnPropertyDescriptor(LayoutContainer.prototype, 'numChildren'));
  Lift.prototype.focus = Focusable.prototype.focus;
  Lift.prototype.blur = Focusable.prototype.blur;
  Lift.prototype.onFocused = Focusable.prototype.onFocused;
  Lift.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(Lift.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(Lift.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  PopUpManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(PopUpManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(PopUpManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  Object.defineProperty(PopUpManagerStyle$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(StyleType.prototype, 'extends'));
  PopUpManagerImpl.prototype.removePopUp_k58t2y$ = PopUpManager.prototype.removePopUp_k58t2y$;
  HttpRequest.prototype.hasBeenInvoked = Loadable.prototype.hasBeenInvoked;
  HttpRequest.prototype.hasCompleted = Loadable.prototype.hasCompleted;
  HttpRequest.prototype.hasFailed = Loadable.prototype.hasFailed;
  HttpRequest.prototype.hasSucceeded = Loadable.prototype.hasSucceeded;
  HttpRequest.prototype.isRunning = Loadable.prototype.isRunning;
  Object.defineProperty(HttpRequest.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(Loadable.prototype, 'percentLoaded'));
  MutableHttpRequest.prototype.hasBeenInvoked = HttpRequest.prototype.hasBeenInvoked;
  MutableHttpRequest.prototype.hasCompleted = HttpRequest.prototype.hasCompleted;
  MutableHttpRequest.prototype.hasFailed = HttpRequest.prototype.hasFailed;
  MutableHttpRequest.prototype.hasSucceeded = HttpRequest.prototype.hasSucceeded;
  MutableHttpRequest.prototype.isRunning = HttpRequest.prototype.isRunning;
  Object.defineProperty(MutableHttpRequest.prototype, 'responseError', Object.getOwnPropertyDescriptor(HttpRequest.prototype, 'responseError'));
  Object.defineProperty(MutableHttpRequest.prototype, 'resultBinary', Object.getOwnPropertyDescriptor(HttpRequest.prototype, 'resultBinary'));
  Object.defineProperty(MutableHttpRequest.prototype, 'resultText', Object.getOwnPropertyDescriptor(HttpRequest.prototype, 'resultText'));
  Object.defineProperty(MutableHttpRequest.prototype, 'percentLoaded', Object.getOwnPropertyDescriptor(HttpRequest.prototype, 'percentLoaded'));
  MutableHttpRequest.prototype.setStatus_pxr8bi$ = MutableLoadable.prototype.setStatus_pxr8bi$;
  SelectionManager$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(SelectionManager$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(SelectionManager$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  LimitedCallback.prototype.remove = DrivableChild.prototype.remove;
  LimitedCallback.prototype.previousSibling = DrivableChild.prototype.previousSibling;
  LimitedCallback.prototype.nextSibling = DrivableChild.prototype.nextSibling;
  DelayedCallback.prototype.remove = DrivableChild.prototype.remove;
  DelayedCallback.prototype.previousSibling = DrivableChild.prototype.previousSibling;
  DelayedCallback.prototype.nextSibling = DrivableChild.prototype.nextSibling;
  TimeDriver$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(TimeDriver$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(TimeDriver$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  TimeDriver.prototype.clearChildren_6taknv$$default = MutableParent.prototype.clearChildren_6taknv$;
  TimeDriver.prototype.addChild_qaye9v$ = MutableParent.prototype.addChild_qaye9v$;
  TimeDriver.prototype.addAllChildren_dk1gku$ = MutableParent.prototype.addAllChildren_dk1gku$;
  TimeDriver.prototype.addAllChildren_ndcjk8$ = MutableParent.prototype.addAllChildren_ndcjk8$;
  TimeDriver.prototype.addAllChildren_njvo8r$ = MutableParent.prototype.addAllChildren_njvo8r$;
  TimeDriver.prototype.addAllChildren_ga54mp$ = MutableParent.prototype.addAllChildren_ga54mp$;
  TimeDriver.prototype.addChildAfter_96et1m$ = MutableParent.prototype.addChildAfter_96et1m$;
  TimeDriver.prototype.addChildBefore_96et1m$ = MutableParent.prototype.addChildBefore_96et1m$;
  TimeDriver.prototype.removeChild_6iy558$ = MutableParent.prototype.removeChild_6iy558$;
  TimeDriver.prototype.swapChildren_96et1m$ = MutableParent.prototype.swapChildren_96et1m$;
  TimeDriver.prototype.clearChildren_6taknv$ = MutableParent.prototype.clearChildren_6taknv$;
  TimeDriver.prototype.clearChildren_6taknv$$default = MutableParent.prototype.clearChildren_6taknv$$default;
  TimeDriver.prototype.containsChild_npz94r$ = MutableParent.prototype.containsChild_npz94r$;
  TimeDriver.prototype.getChildAt_za3lpa$ = MutableParent.prototype.getChildAt_za3lpa$;
  TimeDriver.prototype.iterateChildren_9z398f$ = MutableParent.prototype.iterateChildren_9z398f$;
  TimeDriver.prototype.iterateChildren_bwf5pq$ = MutableParent.prototype.iterateChildren_bwf5pq$;
  TimeDriver.prototype.iterateChildrenReversed_bwf5pq$ = MutableParent.prototype.iterateChildrenReversed_bwf5pq$;
  TimeDriver.prototype.previousSibling = MutableParent.prototype.previousSibling;
  TimeDriver.prototype.nextSibling = MutableParent.prototype.nextSibling;
  Object.defineProperty(TimeDriver.prototype, 'numChildren', Object.getOwnPropertyDescriptor(MutableParent.prototype, 'numChildren'));
  TimeDriverImpl.prototype.addChild_qaye9v$ = TimeDriver.prototype.addChild_qaye9v$;
  TimeDriverImpl.prototype.addAllChildren_dk1gku$ = TimeDriver.prototype.addAllChildren_dk1gku$;
  TimeDriverImpl.prototype.addAllChildren_ndcjk8$ = TimeDriver.prototype.addAllChildren_ndcjk8$;
  TimeDriverImpl.prototype.addAllChildren_njvo8r$ = TimeDriver.prototype.addAllChildren_njvo8r$;
  TimeDriverImpl.prototype.addAllChildren_ga54mp$ = TimeDriver.prototype.addAllChildren_ga54mp$;
  TimeDriverImpl.prototype.addChildAfter_96et1m$ = TimeDriver.prototype.addChildAfter_96et1m$;
  TimeDriverImpl.prototype.addChildBefore_96et1m$ = TimeDriver.prototype.addChildBefore_96et1m$;
  TimeDriverImpl.prototype.removeChild_6iy558$ = TimeDriver.prototype.removeChild_6iy558$;
  TimeDriverImpl.prototype.swapChildren_96et1m$ = TimeDriver.prototype.swapChildren_96et1m$;
  TimeDriverImpl.prototype.clearChildren_6taknv$ = TimeDriver.prototype.clearChildren_6taknv$;
  TimeDriverImpl.prototype.clearChildren_6taknv$$default = TimeDriver.prototype.clearChildren_6taknv$$default;
  TimeDriverImpl.prototype.containsChild_npz94r$ = TimeDriver.prototype.containsChild_npz94r$;
  TimeDriverImpl.prototype.getChildAt_za3lpa$ = TimeDriver.prototype.getChildAt_za3lpa$;
  TimeDriverImpl.prototype.iterateChildren_9z398f$ = TimeDriver.prototype.iterateChildren_9z398f$;
  TimeDriverImpl.prototype.previousSibling = TimeDriver.prototype.previousSibling;
  TimeDriverImpl.prototype.nextSibling = TimeDriver.prototype.nextSibling;
  Object.defineProperty(TimeDriverImpl.prototype, 'numChildren', Object.getOwnPropertyDescriptor(TimeDriver.prototype, 'numChildren'));
  TweenBase.prototype.jumpTo_mx4ult$ = Tween.prototype.jumpTo_mx4ult$;
  TweenBase.prototype.update_mx4ult$ = Tween.prototype.update_mx4ult$;
  TweenBase.prototype.finish = Tween.prototype.finish;
  TweenBase.prototype.rewind = Tween.prototype.rewind;
  TweenBase.prototype.apparentTime_mx4ult$ = Tween.prototype.apparentTime_mx4ult$;
  Object.defineProperty(TweenBase.prototype, 'alpha', Object.getOwnPropertyDescriptor(Tween.prototype, 'alpha'));
  MeshData.prototype.clearChildren_6taknv$$default = MutableParent.prototype.clearChildren_6taknv$;
  MeshData.prototype.addChild_qaye9v$ = MutableParent.prototype.addChild_qaye9v$;
  MeshData.prototype.addAllChildren_dk1gku$ = MutableParent.prototype.addAllChildren_dk1gku$;
  MeshData.prototype.addAllChildren_ndcjk8$ = MutableParent.prototype.addAllChildren_ndcjk8$;
  MeshData.prototype.addAllChildren_njvo8r$ = MutableParent.prototype.addAllChildren_njvo8r$;
  MeshData.prototype.addAllChildren_ga54mp$ = MutableParent.prototype.addAllChildren_ga54mp$;
  MeshData.prototype.addChildAfter_96et1m$ = MutableParent.prototype.addChildAfter_96et1m$;
  MeshData.prototype.addChildBefore_96et1m$ = MutableParent.prototype.addChildBefore_96et1m$;
  MeshData.prototype.removeChild_6iy558$ = MutableParent.prototype.removeChild_6iy558$;
  MeshData.prototype.swapChildren_96et1m$ = MutableParent.prototype.swapChildren_96et1m$;
  MeshData.prototype.clearChildren_6taknv$ = MutableParent.prototype.clearChildren_6taknv$;
  MeshData.prototype.clearChildren_6taknv$$default = MutableParent.prototype.clearChildren_6taknv$$default;
  MeshData.prototype.containsChild_npz94r$ = MutableParent.prototype.containsChild_npz94r$;
  MeshData.prototype.getChildAt_za3lpa$ = MutableParent.prototype.getChildAt_za3lpa$;
  MeshData.prototype.iterateChildren_9z398f$ = MutableParent.prototype.iterateChildren_9z398f$;
  MeshData.prototype.iterateChildren_bwf5pq$ = MutableParent.prototype.iterateChildren_bwf5pq$;
  MeshData.prototype.iterateChildrenReversed_bwf5pq$ = MutableParent.prototype.iterateChildrenReversed_bwf5pq$;
  MeshData.prototype.previousSibling = MutableParent.prototype.previousSibling;
  MeshData.prototype.nextSibling = MutableParent.prototype.nextSibling;
  Object.defineProperty(MeshData.prototype, 'numChildren', Object.getOwnPropertyDescriptor(MutableParent.prototype, 'numChildren'));
  GlRect.prototype.isRendered = Rect.prototype.isRendered;
  GlRect.prototype.getChildUnderPoint_g1oyt7$ = Rect.prototype.getChildUnderPoint_g1oyt7$;
  GlRect.prototype.getChildUnderRay_p0mkez$ = Rect.prototype.getChildUnderRay_p0mkez$;
  GlRect.prototype.getChildrenUnderPoint_adthd4$ = Rect.prototype.getChildrenUnderPoint_adthd4$;
  GlRect.prototype.getChildrenUnderRay_w6o14y$ = Rect.prototype.getChildrenUnderRay_w6o14y$;
  GlRect.prototype.handlesInteraction_1811yh$ = Rect.prototype.handlesInteraction_1811yh$;
  GlRect.prototype.handlesInteraction_j3fyc4$ = Rect.prototype.handlesInteraction_j3fyc4$;
  GlRect.prototype.hasInteraction_j3fyc4$ = Rect.prototype.hasInteraction_j3fyc4$;
  GlRect.prototype.hasInteraction_j3fyc4$$default = Rect.prototype.hasInteraction_j3fyc4$$default;
  GlRect.prototype.getInteractionSignal_j3fyc4$ = Rect.prototype.getInteractionSignal_j3fyc4$;
  GlRect.prototype.addInteractionSignal_pqftit$ = Rect.prototype.addInteractionSignal_pqftit$;
  GlRect.prototype.intersectsGlobalRay_ujzndq$ = Rect.prototype.intersectsGlobalRay_ujzndq$;
  GlRect.prototype.intersectsGlobalRay_94uff6$ = Rect.prototype.intersectsGlobalRay_94uff6$;
  GlRect.prototype.setSize_yxjqmk$ = Rect.prototype.setSize_yxjqmk$;
  GlRect.prototype.setSize_i12l7q$ = Rect.prototype.setSize_i12l7q$;
  GlRect.prototype.moveTo_1fv2cb$ = Rect.prototype.moveTo_1fv2cb$;
  GlRect.prototype.moveTo_y2kzbl$ = Rect.prototype.moveTo_y2kzbl$;
  GlRect.prototype.moveTo_y2kzbl$$default = Rect.prototype.moveTo_y2kzbl$$default;
  GlRect.prototype.setPosition_y2kzbl$ = Rect.prototype.setPosition_y2kzbl$;
  GlRect.prototype.setRotation_y2kzbl$ = Rect.prototype.setRotation_y2kzbl$;
  GlRect.prototype.setScaling_y2kzbl$ = Rect.prototype.setScaling_y2kzbl$;
  GlRect.prototype.setOrigin_y2kzbl$ = Rect.prototype.setOrigin_y2kzbl$;
  GlRect.prototype.localToGlobal_9wm29k$ = Rect.prototype.localToGlobal_9wm29k$;
  GlRect.prototype.localToGlobal_ujzndq$ = Rect.prototype.localToGlobal_ujzndq$;
  GlRect.prototype.globalToLocal_9wm29k$ = Rect.prototype.globalToLocal_9wm29k$;
  GlRect.prototype.globalToLocal_ujzndq$ = Rect.prototype.globalToLocal_ujzndq$;
  GlRect.prototype.rayToPlane_94uff5$ = Rect.prototype.rayToPlane_94uff5$;
  GlRect.prototype.convertCoord_jsa5cl$ = Rect.prototype.convertCoord_jsa5cl$;
  GlRect.prototype.windowToLocal_9wm29l$ = Rect.prototype.windowToLocal_9wm29l$;
  GlRect.prototype.localToWindow_9wm29k$ = Rect.prototype.localToWindow_9wm29k$;
  GlRect.prototype.previousSibling = Rect.prototype.previousSibling;
  GlRect.prototype.nextSibling = Rect.prototype.nextSibling;
  GlRect.prototype.validate = Rect.prototype.validate;
  GlRect.prototype.validate_za3lpa$ = Rect.prototype.validate_za3lpa$;
  Object.defineProperty(GlRect.prototype, 'alpha', Object.getOwnPropertyDescriptor(Rect.prototype, 'alpha'));
  Object.defineProperty(GlRect.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Rect.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlRect.prototype, 'right', Object.getOwnPropertyDescriptor(Rect.prototype, 'right'));
  Object.defineProperty(GlRect.prototype, 'bottom', Object.getOwnPropertyDescriptor(Rect.prototype, 'bottom'));
  Object.defineProperty(GlRect.prototype, 'width', Object.getOwnPropertyDescriptor(Rect.prototype, 'width'));
  Object.defineProperty(GlRect.prototype, 'height', Object.getOwnPropertyDescriptor(Rect.prototype, 'height'));
  GlScrollArea.prototype.createLayoutData = ScrollArea.prototype.createLayoutData;
  GlScrollArea.prototype.layout_ge8abi$ = ScrollArea.prototype.layout_ge8abi$;
  GlScrollArea.prototype.isRendered = ScrollArea.prototype.isRendered;
  GlScrollArea.prototype.getChildUnderPoint_g1oyt7$ = ScrollArea.prototype.getChildUnderPoint_g1oyt7$;
  GlScrollArea.prototype.getChildUnderRay_p0mkez$ = ScrollArea.prototype.getChildUnderRay_p0mkez$;
  GlScrollArea.prototype.getChildrenUnderPoint_adthd4$ = ScrollArea.prototype.getChildrenUnderPoint_adthd4$;
  GlScrollArea.prototype.getChildrenUnderRay_w6o14y$ = ScrollArea.prototype.getChildrenUnderRay_w6o14y$;
  GlScrollArea.prototype.handlesInteraction_1811yh$ = ScrollArea.prototype.handlesInteraction_1811yh$;
  GlScrollArea.prototype.handlesInteraction_j3fyc4$ = ScrollArea.prototype.handlesInteraction_j3fyc4$;
  GlScrollArea.prototype.hasInteraction_j3fyc4$ = ScrollArea.prototype.hasInteraction_j3fyc4$;
  GlScrollArea.prototype.hasInteraction_j3fyc4$$default = ScrollArea.prototype.hasInteraction_j3fyc4$$default;
  GlScrollArea.prototype.getInteractionSignal_j3fyc4$ = ScrollArea.prototype.getInteractionSignal_j3fyc4$;
  GlScrollArea.prototype.addInteractionSignal_pqftit$ = ScrollArea.prototype.addInteractionSignal_pqftit$;
  GlScrollArea.prototype.intersectsGlobalRay_ujzndq$ = ScrollArea.prototype.intersectsGlobalRay_ujzndq$;
  GlScrollArea.prototype.intersectsGlobalRay_94uff6$ = ScrollArea.prototype.intersectsGlobalRay_94uff6$;
  GlScrollArea.prototype.setSize_yxjqmk$ = ScrollArea.prototype.setSize_yxjqmk$;
  GlScrollArea.prototype.setSize_i12l7q$ = ScrollArea.prototype.setSize_i12l7q$;
  GlScrollArea.prototype.moveTo_1fv2cb$ = ScrollArea.prototype.moveTo_1fv2cb$;
  GlScrollArea.prototype.moveTo_y2kzbl$ = ScrollArea.prototype.moveTo_y2kzbl$;
  GlScrollArea.prototype.moveTo_y2kzbl$$default = ScrollArea.prototype.moveTo_y2kzbl$$default;
  GlScrollArea.prototype.setPosition_y2kzbl$ = ScrollArea.prototype.setPosition_y2kzbl$;
  GlScrollArea.prototype.setRotation_y2kzbl$ = ScrollArea.prototype.setRotation_y2kzbl$;
  GlScrollArea.prototype.setScaling_y2kzbl$ = ScrollArea.prototype.setScaling_y2kzbl$;
  GlScrollArea.prototype.setOrigin_y2kzbl$ = ScrollArea.prototype.setOrigin_y2kzbl$;
  GlScrollArea.prototype.localToGlobal_9wm29k$ = ScrollArea.prototype.localToGlobal_9wm29k$;
  GlScrollArea.prototype.localToGlobal_ujzndq$ = ScrollArea.prototype.localToGlobal_ujzndq$;
  GlScrollArea.prototype.globalToLocal_9wm29k$ = ScrollArea.prototype.globalToLocal_9wm29k$;
  GlScrollArea.prototype.globalToLocal_ujzndq$ = ScrollArea.prototype.globalToLocal_ujzndq$;
  GlScrollArea.prototype.rayToPlane_94uff5$ = ScrollArea.prototype.rayToPlane_94uff5$;
  GlScrollArea.prototype.convertCoord_jsa5cl$ = ScrollArea.prototype.convertCoord_jsa5cl$;
  GlScrollArea.prototype.windowToLocal_9wm29l$ = ScrollArea.prototype.windowToLocal_9wm29l$;
  GlScrollArea.prototype.localToWindow_9wm29k$ = ScrollArea.prototype.localToWindow_9wm29k$;
  GlScrollArea.prototype.previousSibling = ScrollArea.prototype.previousSibling;
  GlScrollArea.prototype.nextSibling = ScrollArea.prototype.nextSibling;
  GlScrollArea.prototype.validate = ScrollArea.prototype.validate;
  GlScrollArea.prototype.validate_za3lpa$ = ScrollArea.prototype.validate_za3lpa$;
  GlScrollArea.prototype.containsChild_npz94r$ = ScrollArea.prototype.containsChild_npz94r$;
  GlScrollArea.prototype.getChildAt_za3lpa$ = ScrollArea.prototype.getChildAt_za3lpa$;
  GlScrollArea.prototype.iterateChildren_9z398f$ = ScrollArea.prototype.iterateChildren_9z398f$;
  GlScrollArea.prototype.iterateChildren_bwf5pq$ = ScrollArea.prototype.iterateChildren_bwf5pq$;
  GlScrollArea.prototype.iterateChildrenReversed_bwf5pq$ = ScrollArea.prototype.iterateChildrenReversed_bwf5pq$;
  GlScrollArea.prototype.unaryPlus_8db8yx$ = ScrollArea.prototype.unaryPlus_8db8yx$;
  GlScrollArea.prototype.unaryMinus_8db8yx$ = ScrollArea.prototype.unaryMinus_8db8yx$;
  GlScrollArea.prototype.clearElements_6taknv$ = ScrollArea.prototype.clearElements_6taknv$;
  GlScrollArea.prototype.addElementAfter_tu2188$ = ScrollArea.prototype.addElementAfter_tu2188$;
  GlScrollArea.prototype.addElementBefore_tu2188$ = ScrollArea.prototype.addElementBefore_tu2188$;
  Object.defineProperty(GlScrollArea.prototype, 'alpha', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'alpha'));
  Object.defineProperty(GlScrollArea.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlScrollArea.prototype, 'right', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'right'));
  Object.defineProperty(GlScrollArea.prototype, 'bottom', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'bottom'));
  Object.defineProperty(GlScrollArea.prototype, 'width', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'width'));
  Object.defineProperty(GlScrollArea.prototype, 'height', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'height'));
  Object.defineProperty(GlScrollArea.prototype, 'numChildren', Object.getOwnPropertyDescriptor(ScrollArea.prototype, 'numChildren'));
  GlStageImpl.prototype.isRendered = Stage.prototype.isRendered;
  GlStageImpl.prototype.getChildUnderPoint_g1oyt7$ = Stage.prototype.getChildUnderPoint_g1oyt7$;
  GlStageImpl.prototype.getChildUnderRay_p0mkez$ = Stage.prototype.getChildUnderRay_p0mkez$;
  GlStageImpl.prototype.getChildrenUnderPoint_adthd4$ = Stage.prototype.getChildrenUnderPoint_adthd4$;
  GlStageImpl.prototype.getChildrenUnderRay_w6o14y$ = Stage.prototype.getChildrenUnderRay_w6o14y$;
  GlStageImpl.prototype.handlesInteraction_1811yh$ = Stage.prototype.handlesInteraction_1811yh$;
  GlStageImpl.prototype.handlesInteraction_j3fyc4$ = Stage.prototype.handlesInteraction_j3fyc4$;
  GlStageImpl.prototype.hasInteraction_j3fyc4$ = Stage.prototype.hasInteraction_j3fyc4$;
  GlStageImpl.prototype.hasInteraction_j3fyc4$$default = Stage.prototype.hasInteraction_j3fyc4$$default;
  GlStageImpl.prototype.getInteractionSignal_j3fyc4$ = Stage.prototype.getInteractionSignal_j3fyc4$;
  GlStageImpl.prototype.addInteractionSignal_pqftit$ = Stage.prototype.addInteractionSignal_pqftit$;
  GlStageImpl.prototype.intersectsGlobalRay_ujzndq$ = Stage.prototype.intersectsGlobalRay_ujzndq$;
  GlStageImpl.prototype.setSize_yxjqmk$ = Stage.prototype.setSize_yxjqmk$;
  GlStageImpl.prototype.setSize_i12l7q$ = Stage.prototype.setSize_i12l7q$;
  GlStageImpl.prototype.moveTo_1fv2cb$ = Stage.prototype.moveTo_1fv2cb$;
  GlStageImpl.prototype.moveTo_y2kzbl$ = Stage.prototype.moveTo_y2kzbl$;
  GlStageImpl.prototype.moveTo_y2kzbl$$default = Stage.prototype.moveTo_y2kzbl$$default;
  GlStageImpl.prototype.setPosition_y2kzbl$ = Stage.prototype.setPosition_y2kzbl$;
  GlStageImpl.prototype.setRotation_y2kzbl$ = Stage.prototype.setRotation_y2kzbl$;
  GlStageImpl.prototype.setScaling_y2kzbl$ = Stage.prototype.setScaling_y2kzbl$;
  GlStageImpl.prototype.setOrigin_y2kzbl$ = Stage.prototype.setOrigin_y2kzbl$;
  GlStageImpl.prototype.localToGlobal_9wm29k$ = Stage.prototype.localToGlobal_9wm29k$;
  GlStageImpl.prototype.localToGlobal_ujzndq$ = Stage.prototype.localToGlobal_ujzndq$;
  GlStageImpl.prototype.globalToLocal_9wm29k$ = Stage.prototype.globalToLocal_9wm29k$;
  GlStageImpl.prototype.globalToLocal_ujzndq$ = Stage.prototype.globalToLocal_ujzndq$;
  GlStageImpl.prototype.rayToPlane_94uff5$ = Stage.prototype.rayToPlane_94uff5$;
  GlStageImpl.prototype.convertCoord_jsa5cl$ = Stage.prototype.convertCoord_jsa5cl$;
  GlStageImpl.prototype.windowToLocal_9wm29l$ = Stage.prototype.windowToLocal_9wm29l$;
  GlStageImpl.prototype.localToWindow_9wm29k$ = Stage.prototype.localToWindow_9wm29k$;
  GlStageImpl.prototype.previousSibling = Stage.prototype.previousSibling;
  GlStageImpl.prototype.nextSibling = Stage.prototype.nextSibling;
  GlStageImpl.prototype.validate = Stage.prototype.validate;
  GlStageImpl.prototype.validate_za3lpa$ = Stage.prototype.validate_za3lpa$;
  GlStageImpl.prototype.containsChild_npz94r$ = Stage.prototype.containsChild_npz94r$;
  GlStageImpl.prototype.getChildAt_za3lpa$ = Stage.prototype.getChildAt_za3lpa$;
  GlStageImpl.prototype.iterateChildren_9z398f$ = Stage.prototype.iterateChildren_9z398f$;
  GlStageImpl.prototype.iterateChildren_bwf5pq$ = Stage.prototype.iterateChildren_bwf5pq$;
  GlStageImpl.prototype.iterateChildrenReversed_bwf5pq$ = Stage.prototype.iterateChildrenReversed_bwf5pq$;
  GlStageImpl.prototype.unaryPlus_8db8yx$ = Stage.prototype.unaryPlus_8db8yx$;
  GlStageImpl.prototype.unaryMinus_8db8yx$ = Stage.prototype.unaryMinus_8db8yx$;
  GlStageImpl.prototype.clearElements_6taknv$ = Stage.prototype.clearElements_6taknv$;
  GlStageImpl.prototype.addElementAfter_tu2188$ = Stage.prototype.addElementAfter_tu2188$;
  GlStageImpl.prototype.addElementBefore_tu2188$ = Stage.prototype.addElementBefore_tu2188$;
  GlStageImpl.prototype.focus = Stage.prototype.focus;
  GlStageImpl.prototype.blur = Stage.prototype.blur;
  GlStageImpl.prototype.onFocused = Stage.prototype.onFocused;
  GlStageImpl.prototype.onBlurred = Stage.prototype.onBlurred;
  Object.defineProperty(GlStageImpl.prototype, 'alpha', Object.getOwnPropertyDescriptor(Stage.prototype, 'alpha'));
  Object.defineProperty(GlStageImpl.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Stage.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlStageImpl.prototype, 'right', Object.getOwnPropertyDescriptor(Stage.prototype, 'right'));
  Object.defineProperty(GlStageImpl.prototype, 'bottom', Object.getOwnPropertyDescriptor(Stage.prototype, 'bottom'));
  Object.defineProperty(GlStageImpl.prototype, 'width', Object.getOwnPropertyDescriptor(Stage.prototype, 'width'));
  Object.defineProperty(GlStageImpl.prototype, 'height', Object.getOwnPropertyDescriptor(Stage.prototype, 'height'));
  Object.defineProperty(GlStageImpl.prototype, 'numChildren', Object.getOwnPropertyDescriptor(Stage.prototype, 'numChildren'));
  Object.defineProperty(GlStageImpl.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Stage.prototype, 'isFocused'));
  Object.defineProperty(GlStageImpl.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Stage.prototype, 'parentFocusableContainer'));
  GlTextureComponent.prototype.setRegion_o5do7t$ = TextureComponent.prototype.setRegion_o5do7t$;
  GlTextureComponent.prototype.setRegion_smhrz9$ = TextureComponent.prototype.setRegion_smhrz9$;
  GlTextureComponent.prototype.isRendered = TextureComponent.prototype.isRendered;
  GlTextureComponent.prototype.getChildUnderPoint_g1oyt7$ = TextureComponent.prototype.getChildUnderPoint_g1oyt7$;
  GlTextureComponent.prototype.getChildUnderRay_p0mkez$ = TextureComponent.prototype.getChildUnderRay_p0mkez$;
  GlTextureComponent.prototype.getChildrenUnderPoint_adthd4$ = TextureComponent.prototype.getChildrenUnderPoint_adthd4$;
  GlTextureComponent.prototype.getChildrenUnderRay_w6o14y$ = TextureComponent.prototype.getChildrenUnderRay_w6o14y$;
  GlTextureComponent.prototype.handlesInteraction_1811yh$ = TextureComponent.prototype.handlesInteraction_1811yh$;
  GlTextureComponent.prototype.handlesInteraction_j3fyc4$ = TextureComponent.prototype.handlesInteraction_j3fyc4$;
  GlTextureComponent.prototype.hasInteraction_j3fyc4$ = TextureComponent.prototype.hasInteraction_j3fyc4$;
  GlTextureComponent.prototype.hasInteraction_j3fyc4$$default = TextureComponent.prototype.hasInteraction_j3fyc4$$default;
  GlTextureComponent.prototype.getInteractionSignal_j3fyc4$ = TextureComponent.prototype.getInteractionSignal_j3fyc4$;
  GlTextureComponent.prototype.addInteractionSignal_pqftit$ = TextureComponent.prototype.addInteractionSignal_pqftit$;
  GlTextureComponent.prototype.intersectsGlobalRay_ujzndq$ = TextureComponent.prototype.intersectsGlobalRay_ujzndq$;
  GlTextureComponent.prototype.intersectsGlobalRay_94uff6$ = TextureComponent.prototype.intersectsGlobalRay_94uff6$;
  GlTextureComponent.prototype.setSize_yxjqmk$ = TextureComponent.prototype.setSize_yxjqmk$;
  GlTextureComponent.prototype.setSize_i12l7q$ = TextureComponent.prototype.setSize_i12l7q$;
  GlTextureComponent.prototype.moveTo_1fv2cb$ = TextureComponent.prototype.moveTo_1fv2cb$;
  GlTextureComponent.prototype.moveTo_y2kzbl$ = TextureComponent.prototype.moveTo_y2kzbl$;
  GlTextureComponent.prototype.moveTo_y2kzbl$$default = TextureComponent.prototype.moveTo_y2kzbl$$default;
  GlTextureComponent.prototype.setPosition_y2kzbl$ = TextureComponent.prototype.setPosition_y2kzbl$;
  GlTextureComponent.prototype.setRotation_y2kzbl$ = TextureComponent.prototype.setRotation_y2kzbl$;
  GlTextureComponent.prototype.setScaling_y2kzbl$ = TextureComponent.prototype.setScaling_y2kzbl$;
  GlTextureComponent.prototype.setOrigin_y2kzbl$ = TextureComponent.prototype.setOrigin_y2kzbl$;
  GlTextureComponent.prototype.localToGlobal_9wm29k$ = TextureComponent.prototype.localToGlobal_9wm29k$;
  GlTextureComponent.prototype.localToGlobal_ujzndq$ = TextureComponent.prototype.localToGlobal_ujzndq$;
  GlTextureComponent.prototype.globalToLocal_9wm29k$ = TextureComponent.prototype.globalToLocal_9wm29k$;
  GlTextureComponent.prototype.globalToLocal_ujzndq$ = TextureComponent.prototype.globalToLocal_ujzndq$;
  GlTextureComponent.prototype.rayToPlane_94uff5$ = TextureComponent.prototype.rayToPlane_94uff5$;
  GlTextureComponent.prototype.convertCoord_jsa5cl$ = TextureComponent.prototype.convertCoord_jsa5cl$;
  GlTextureComponent.prototype.windowToLocal_9wm29l$ = TextureComponent.prototype.windowToLocal_9wm29l$;
  GlTextureComponent.prototype.localToWindow_9wm29k$ = TextureComponent.prototype.localToWindow_9wm29k$;
  GlTextureComponent.prototype.previousSibling = TextureComponent.prototype.previousSibling;
  GlTextureComponent.prototype.nextSibling = TextureComponent.prototype.nextSibling;
  GlTextureComponent.prototype.validate = TextureComponent.prototype.validate;
  GlTextureComponent.prototype.validate_za3lpa$ = TextureComponent.prototype.validate_za3lpa$;
  Object.defineProperty(GlTextureComponent.prototype, 'alpha', Object.getOwnPropertyDescriptor(TextureComponent.prototype, 'alpha'));
  Object.defineProperty(GlTextureComponent.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(TextureComponent.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlTextureComponent.prototype, 'right', Object.getOwnPropertyDescriptor(TextureComponent.prototype, 'right'));
  Object.defineProperty(GlTextureComponent.prototype, 'bottom', Object.getOwnPropertyDescriptor(TextureComponent.prototype, 'bottom'));
  Object.defineProperty(GlTextureComponent.prototype, 'width', Object.getOwnPropertyDescriptor(TextureComponent.prototype, 'width'));
  Object.defineProperty(GlTextureComponent.prototype, 'height', Object.getOwnPropertyDescriptor(TextureComponent.prototype, 'height'));
  GlScrollRect.prototype.isRendered = ScrollRect.prototype.isRendered;
  GlScrollRect.prototype.getChildUnderPoint_g1oyt7$ = ScrollRect.prototype.getChildUnderPoint_g1oyt7$;
  GlScrollRect.prototype.getChildUnderRay_p0mkez$ = ScrollRect.prototype.getChildUnderRay_p0mkez$;
  GlScrollRect.prototype.getChildrenUnderPoint_adthd4$ = ScrollRect.prototype.getChildrenUnderPoint_adthd4$;
  GlScrollRect.prototype.getChildrenUnderRay_w6o14y$ = ScrollRect.prototype.getChildrenUnderRay_w6o14y$;
  GlScrollRect.prototype.handlesInteraction_1811yh$ = ScrollRect.prototype.handlesInteraction_1811yh$;
  GlScrollRect.prototype.handlesInteraction_j3fyc4$ = ScrollRect.prototype.handlesInteraction_j3fyc4$;
  GlScrollRect.prototype.hasInteraction_j3fyc4$ = ScrollRect.prototype.hasInteraction_j3fyc4$;
  GlScrollRect.prototype.hasInteraction_j3fyc4$$default = ScrollRect.prototype.hasInteraction_j3fyc4$$default;
  GlScrollRect.prototype.getInteractionSignal_j3fyc4$ = ScrollRect.prototype.getInteractionSignal_j3fyc4$;
  GlScrollRect.prototype.addInteractionSignal_pqftit$ = ScrollRect.prototype.addInteractionSignal_pqftit$;
  GlScrollRect.prototype.intersectsGlobalRay_ujzndq$ = ScrollRect.prototype.intersectsGlobalRay_ujzndq$;
  GlScrollRect.prototype.setSize_yxjqmk$ = ScrollRect.prototype.setSize_yxjqmk$;
  GlScrollRect.prototype.setSize_i12l7q$ = ScrollRect.prototype.setSize_i12l7q$;
  GlScrollRect.prototype.moveTo_1fv2cb$ = ScrollRect.prototype.moveTo_1fv2cb$;
  GlScrollRect.prototype.moveTo_y2kzbl$ = ScrollRect.prototype.moveTo_y2kzbl$;
  GlScrollRect.prototype.moveTo_y2kzbl$$default = ScrollRect.prototype.moveTo_y2kzbl$$default;
  GlScrollRect.prototype.setPosition_y2kzbl$ = ScrollRect.prototype.setPosition_y2kzbl$;
  GlScrollRect.prototype.setRotation_y2kzbl$ = ScrollRect.prototype.setRotation_y2kzbl$;
  GlScrollRect.prototype.setScaling_y2kzbl$ = ScrollRect.prototype.setScaling_y2kzbl$;
  GlScrollRect.prototype.setOrigin_y2kzbl$ = ScrollRect.prototype.setOrigin_y2kzbl$;
  GlScrollRect.prototype.localToGlobal_9wm29k$ = ScrollRect.prototype.localToGlobal_9wm29k$;
  GlScrollRect.prototype.localToGlobal_ujzndq$ = ScrollRect.prototype.localToGlobal_ujzndq$;
  GlScrollRect.prototype.globalToLocal_9wm29k$ = ScrollRect.prototype.globalToLocal_9wm29k$;
  GlScrollRect.prototype.globalToLocal_ujzndq$ = ScrollRect.prototype.globalToLocal_ujzndq$;
  GlScrollRect.prototype.rayToPlane_94uff5$ = ScrollRect.prototype.rayToPlane_94uff5$;
  GlScrollRect.prototype.convertCoord_jsa5cl$ = ScrollRect.prototype.convertCoord_jsa5cl$;
  GlScrollRect.prototype.windowToLocal_9wm29l$ = ScrollRect.prototype.windowToLocal_9wm29l$;
  GlScrollRect.prototype.localToWindow_9wm29k$ = ScrollRect.prototype.localToWindow_9wm29k$;
  GlScrollRect.prototype.previousSibling = ScrollRect.prototype.previousSibling;
  GlScrollRect.prototype.nextSibling = ScrollRect.prototype.nextSibling;
  GlScrollRect.prototype.validate = ScrollRect.prototype.validate;
  GlScrollRect.prototype.validate_za3lpa$ = ScrollRect.prototype.validate_za3lpa$;
  GlScrollRect.prototype.containsChild_npz94r$ = ScrollRect.prototype.containsChild_npz94r$;
  GlScrollRect.prototype.getChildAt_za3lpa$ = ScrollRect.prototype.getChildAt_za3lpa$;
  GlScrollRect.prototype.iterateChildren_9z398f$ = ScrollRect.prototype.iterateChildren_9z398f$;
  GlScrollRect.prototype.iterateChildren_bwf5pq$ = ScrollRect.prototype.iterateChildren_bwf5pq$;
  GlScrollRect.prototype.iterateChildrenReversed_bwf5pq$ = ScrollRect.prototype.iterateChildrenReversed_bwf5pq$;
  GlScrollRect.prototype.unaryPlus_8db8yx$ = ScrollRect.prototype.unaryPlus_8db8yx$;
  GlScrollRect.prototype.unaryMinus_8db8yx$ = ScrollRect.prototype.unaryMinus_8db8yx$;
  GlScrollRect.prototype.clearElements_6taknv$ = ScrollRect.prototype.clearElements_6taknv$;
  GlScrollRect.prototype.addElementAfter_tu2188$ = ScrollRect.prototype.addElementAfter_tu2188$;
  GlScrollRect.prototype.addElementBefore_tu2188$ = ScrollRect.prototype.addElementBefore_tu2188$;
  Object.defineProperty(GlScrollRect.prototype, 'contentsWidth', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'contentsWidth'));
  Object.defineProperty(GlScrollRect.prototype, 'contentsHeight', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'contentsHeight'));
  Object.defineProperty(GlScrollRect.prototype, 'alpha', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'alpha'));
  Object.defineProperty(GlScrollRect.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlScrollRect.prototype, 'right', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'right'));
  Object.defineProperty(GlScrollRect.prototype, 'bottom', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'bottom'));
  Object.defineProperty(GlScrollRect.prototype, 'width', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'width'));
  Object.defineProperty(GlScrollRect.prototype, 'height', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'height'));
  Object.defineProperty(GlScrollRect.prototype, 'numChildren', Object.getOwnPropertyDescriptor(ScrollRect.prototype, 'numChildren'));
  GlTextField.prototype.isRendered = TextField.prototype.isRendered;
  GlTextField.prototype.getChildUnderPoint_g1oyt7$ = TextField.prototype.getChildUnderPoint_g1oyt7$;
  GlTextField.prototype.getChildUnderRay_p0mkez$ = TextField.prototype.getChildUnderRay_p0mkez$;
  GlTextField.prototype.getChildrenUnderPoint_adthd4$ = TextField.prototype.getChildrenUnderPoint_adthd4$;
  GlTextField.prototype.getChildrenUnderRay_w6o14y$ = TextField.prototype.getChildrenUnderRay_w6o14y$;
  GlTextField.prototype.handlesInteraction_1811yh$ = TextField.prototype.handlesInteraction_1811yh$;
  GlTextField.prototype.handlesInteraction_j3fyc4$ = TextField.prototype.handlesInteraction_j3fyc4$;
  GlTextField.prototype.hasInteraction_j3fyc4$ = TextField.prototype.hasInteraction_j3fyc4$;
  GlTextField.prototype.hasInteraction_j3fyc4$$default = TextField.prototype.hasInteraction_j3fyc4$$default;
  GlTextField.prototype.getInteractionSignal_j3fyc4$ = TextField.prototype.getInteractionSignal_j3fyc4$;
  GlTextField.prototype.addInteractionSignal_pqftit$ = TextField.prototype.addInteractionSignal_pqftit$;
  GlTextField.prototype.intersectsGlobalRay_ujzndq$ = TextField.prototype.intersectsGlobalRay_ujzndq$;
  GlTextField.prototype.intersectsGlobalRay_94uff6$ = TextField.prototype.intersectsGlobalRay_94uff6$;
  GlTextField.prototype.setSize_yxjqmk$ = TextField.prototype.setSize_yxjqmk$;
  GlTextField.prototype.setSize_i12l7q$ = TextField.prototype.setSize_i12l7q$;
  GlTextField.prototype.moveTo_1fv2cb$ = TextField.prototype.moveTo_1fv2cb$;
  GlTextField.prototype.moveTo_y2kzbl$ = TextField.prototype.moveTo_y2kzbl$;
  GlTextField.prototype.moveTo_y2kzbl$$default = TextField.prototype.moveTo_y2kzbl$$default;
  GlTextField.prototype.setPosition_y2kzbl$ = TextField.prototype.setPosition_y2kzbl$;
  GlTextField.prototype.setRotation_y2kzbl$ = TextField.prototype.setRotation_y2kzbl$;
  GlTextField.prototype.setScaling_y2kzbl$ = TextField.prototype.setScaling_y2kzbl$;
  GlTextField.prototype.setOrigin_y2kzbl$ = TextField.prototype.setOrigin_y2kzbl$;
  GlTextField.prototype.localToGlobal_9wm29k$ = TextField.prototype.localToGlobal_9wm29k$;
  GlTextField.prototype.localToGlobal_ujzndq$ = TextField.prototype.localToGlobal_ujzndq$;
  GlTextField.prototype.globalToLocal_9wm29k$ = TextField.prototype.globalToLocal_9wm29k$;
  GlTextField.prototype.globalToLocal_ujzndq$ = TextField.prototype.globalToLocal_ujzndq$;
  GlTextField.prototype.rayToPlane_94uff5$ = TextField.prototype.rayToPlane_94uff5$;
  GlTextField.prototype.convertCoord_jsa5cl$ = TextField.prototype.convertCoord_jsa5cl$;
  GlTextField.prototype.windowToLocal_9wm29l$ = TextField.prototype.windowToLocal_9wm29l$;
  GlTextField.prototype.localToWindow_9wm29k$ = TextField.prototype.localToWindow_9wm29k$;
  GlTextField.prototype.previousSibling = TextField.prototype.previousSibling;
  GlTextField.prototype.nextSibling = TextField.prototype.nextSibling;
  GlTextField.prototype.validate = TextField.prototype.validate;
  GlTextField.prototype.validate_za3lpa$ = TextField.prototype.validate_za3lpa$;
  Object.defineProperty(GlTextField.prototype, 'label', Object.getOwnPropertyDescriptor(TextField.prototype, 'label'));
  Object.defineProperty(GlTextField.prototype, 'alpha', Object.getOwnPropertyDescriptor(TextField.prototype, 'alpha'));
  Object.defineProperty(GlTextField.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(TextField.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlTextField.prototype, 'right', Object.getOwnPropertyDescriptor(TextField.prototype, 'right'));
  Object.defineProperty(GlTextField.prototype, 'bottom', Object.getOwnPropertyDescriptor(TextField.prototype, 'bottom'));
  Object.defineProperty(GlTextField.prototype, 'width', Object.getOwnPropertyDescriptor(TextField.prototype, 'width'));
  Object.defineProperty(GlTextField.prototype, 'height', Object.getOwnPropertyDescriptor(TextField.prototype, 'height'));
  GlTextField.prototype.focus = Focusable.prototype.focus;
  GlTextField.prototype.blur = Focusable.prototype.blur;
  GlTextField.prototype.onFocused = Focusable.prototype.onFocused;
  GlTextField.prototype.onBlurred = Focusable.prototype.onBlurred;
  Object.defineProperty(GlTextField.prototype, 'isFocused', Object.getOwnPropertyDescriptor(Focusable.prototype, 'isFocused'));
  Object.defineProperty(GlTextField.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(Focusable.prototype, 'parentFocusableContainer'));
  GlEditableTextField.prototype.focus = EditableTextField.prototype.focus;
  GlEditableTextField.prototype.blur = EditableTextField.prototype.blur;
  GlEditableTextField.prototype.onFocused = EditableTextField.prototype.onFocused;
  GlEditableTextField.prototype.onBlurred = EditableTextField.prototype.onBlurred;
  GlEditableTextField.prototype.isRendered = EditableTextField.prototype.isRendered;
  GlEditableTextField.prototype.getChildUnderPoint_g1oyt7$ = EditableTextField.prototype.getChildUnderPoint_g1oyt7$;
  GlEditableTextField.prototype.getChildUnderRay_p0mkez$ = EditableTextField.prototype.getChildUnderRay_p0mkez$;
  GlEditableTextField.prototype.getChildrenUnderPoint_adthd4$ = EditableTextField.prototype.getChildrenUnderPoint_adthd4$;
  GlEditableTextField.prototype.getChildrenUnderRay_w6o14y$ = EditableTextField.prototype.getChildrenUnderRay_w6o14y$;
  GlEditableTextField.prototype.handlesInteraction_1811yh$ = EditableTextField.prototype.handlesInteraction_1811yh$;
  GlEditableTextField.prototype.handlesInteraction_j3fyc4$ = EditableTextField.prototype.handlesInteraction_j3fyc4$;
  GlEditableTextField.prototype.hasInteraction_j3fyc4$ = EditableTextField.prototype.hasInteraction_j3fyc4$;
  GlEditableTextField.prototype.hasInteraction_j3fyc4$$default = EditableTextField.prototype.hasInteraction_j3fyc4$$default;
  GlEditableTextField.prototype.getInteractionSignal_j3fyc4$ = EditableTextField.prototype.getInteractionSignal_j3fyc4$;
  GlEditableTextField.prototype.addInteractionSignal_pqftit$ = EditableTextField.prototype.addInteractionSignal_pqftit$;
  GlEditableTextField.prototype.intersectsGlobalRay_ujzndq$ = EditableTextField.prototype.intersectsGlobalRay_ujzndq$;
  GlEditableTextField.prototype.intersectsGlobalRay_94uff6$ = EditableTextField.prototype.intersectsGlobalRay_94uff6$;
  GlEditableTextField.prototype.setSize_yxjqmk$ = EditableTextField.prototype.setSize_yxjqmk$;
  GlEditableTextField.prototype.setSize_i12l7q$ = EditableTextField.prototype.setSize_i12l7q$;
  GlEditableTextField.prototype.moveTo_1fv2cb$ = EditableTextField.prototype.moveTo_1fv2cb$;
  GlEditableTextField.prototype.moveTo_y2kzbl$ = EditableTextField.prototype.moveTo_y2kzbl$;
  GlEditableTextField.prototype.moveTo_y2kzbl$$default = EditableTextField.prototype.moveTo_y2kzbl$$default;
  GlEditableTextField.prototype.setPosition_y2kzbl$ = EditableTextField.prototype.setPosition_y2kzbl$;
  GlEditableTextField.prototype.setRotation_y2kzbl$ = EditableTextField.prototype.setRotation_y2kzbl$;
  GlEditableTextField.prototype.setScaling_y2kzbl$ = EditableTextField.prototype.setScaling_y2kzbl$;
  GlEditableTextField.prototype.setOrigin_y2kzbl$ = EditableTextField.prototype.setOrigin_y2kzbl$;
  GlEditableTextField.prototype.localToGlobal_9wm29k$ = EditableTextField.prototype.localToGlobal_9wm29k$;
  GlEditableTextField.prototype.localToGlobal_ujzndq$ = EditableTextField.prototype.localToGlobal_ujzndq$;
  GlEditableTextField.prototype.globalToLocal_9wm29k$ = EditableTextField.prototype.globalToLocal_9wm29k$;
  GlEditableTextField.prototype.globalToLocal_ujzndq$ = EditableTextField.prototype.globalToLocal_ujzndq$;
  GlEditableTextField.prototype.rayToPlane_94uff5$ = EditableTextField.prototype.rayToPlane_94uff5$;
  GlEditableTextField.prototype.convertCoord_jsa5cl$ = EditableTextField.prototype.convertCoord_jsa5cl$;
  GlEditableTextField.prototype.windowToLocal_9wm29l$ = EditableTextField.prototype.windowToLocal_9wm29l$;
  GlEditableTextField.prototype.localToWindow_9wm29k$ = EditableTextField.prototype.localToWindow_9wm29k$;
  GlEditableTextField.prototype.previousSibling = EditableTextField.prototype.previousSibling;
  GlEditableTextField.prototype.nextSibling = EditableTextField.prototype.nextSibling;
  GlEditableTextField.prototype.validate = EditableTextField.prototype.validate;
  GlEditableTextField.prototype.validate_za3lpa$ = EditableTextField.prototype.validate_za3lpa$;
  Object.defineProperty(GlEditableTextField.prototype, 'isFocused', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'isFocused'));
  Object.defineProperty(GlEditableTextField.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'parentFocusableContainer'));
  Object.defineProperty(GlEditableTextField.prototype, 'alpha', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'alpha'));
  Object.defineProperty(GlEditableTextField.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlEditableTextField.prototype, 'right', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'right'));
  Object.defineProperty(GlEditableTextField.prototype, 'bottom', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'bottom'));
  Object.defineProperty(GlEditableTextField.prototype, 'width', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'width'));
  Object.defineProperty(GlEditableTextField.prototype, 'height', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'height'));
  Object.defineProperty(GlEditableTextField.prototype, 'label', Object.getOwnPropertyDescriptor(EditableTextField.prototype, 'label'));
  TfPart.prototype.setSize_yxjqmk$ = BasicLayoutElement.prototype.setSize_yxjqmk$;
  TfPart.prototype.setSize_i12l7q$ = BasicLayoutElement.prototype.setSize_i12l7q$;
  TfPart.prototype.moveTo_1fv2cb$ = BasicLayoutElement.prototype.moveTo_1fv2cb$;
  TfPart.prototype.moveTo_y2kzbl$ = BasicLayoutElement.prototype.moveTo_y2kzbl$;
  TfPart.prototype.moveTo_y2kzbl$$default = BasicLayoutElement.prototype.moveTo_y2kzbl$$default;
  TfPart.prototype.setPosition_y2kzbl$ = BasicLayoutElement.prototype.setPosition_y2kzbl$;
  Object.defineProperty(TfPart.prototype, 'right', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'right'));
  Object.defineProperty(TfPart.prototype, 'bottom', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'bottom'));
  Object.defineProperty(TfPart.prototype, 'width', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'width'));
  Object.defineProperty(TfPart.prototype, 'height', Object.getOwnPropertyDescriptor(BasicLayoutElement.prototype, 'height'));
  TfWord.prototype.setSize_yxjqmk$ = TfPart.prototype.setSize_yxjqmk$;
  TfWord.prototype.setSize_i12l7q$ = TfPart.prototype.setSize_i12l7q$;
  TfWord.prototype.moveTo_1fv2cb$ = TfPart.prototype.moveTo_1fv2cb$;
  TfWord.prototype.moveTo_y2kzbl$ = TfPart.prototype.moveTo_y2kzbl$;
  TfWord.prototype.moveTo_y2kzbl$$default = TfPart.prototype.moveTo_y2kzbl$$default;
  TfWord.prototype.setPosition_y2kzbl$ = TfPart.prototype.setPosition_y2kzbl$;
  Object.defineProperty(TfWord.prototype, 'right', Object.getOwnPropertyDescriptor(TfPart.prototype, 'right'));
  Object.defineProperty(TfWord.prototype, 'bottom', Object.getOwnPropertyDescriptor(TfPart.prototype, 'bottom'));
  Object.defineProperty(TfWord.prototype, 'width', Object.getOwnPropertyDescriptor(TfPart.prototype, 'width'));
  Object.defineProperty(TfWord.prototype, 'height', Object.getOwnPropertyDescriptor(TfPart.prototype, 'height'));
  GlTextInput.prototype.focus = TextInput.prototype.focus;
  GlTextInput.prototype.blur = TextInput.prototype.blur;
  GlTextInput.prototype.onFocused = TextInput.prototype.onFocused;
  GlTextInput.prototype.onBlurred = TextInput.prototype.onBlurred;
  GlTextInput.prototype.isRendered = TextInput.prototype.isRendered;
  GlTextInput.prototype.getChildUnderPoint_g1oyt7$ = TextInput.prototype.getChildUnderPoint_g1oyt7$;
  GlTextInput.prototype.getChildUnderRay_p0mkez$ = TextInput.prototype.getChildUnderRay_p0mkez$;
  GlTextInput.prototype.getChildrenUnderPoint_adthd4$ = TextInput.prototype.getChildrenUnderPoint_adthd4$;
  GlTextInput.prototype.getChildrenUnderRay_w6o14y$ = TextInput.prototype.getChildrenUnderRay_w6o14y$;
  GlTextInput.prototype.handlesInteraction_1811yh$ = TextInput.prototype.handlesInteraction_1811yh$;
  GlTextInput.prototype.handlesInteraction_j3fyc4$ = TextInput.prototype.handlesInteraction_j3fyc4$;
  GlTextInput.prototype.hasInteraction_j3fyc4$ = TextInput.prototype.hasInteraction_j3fyc4$;
  GlTextInput.prototype.hasInteraction_j3fyc4$$default = TextInput.prototype.hasInteraction_j3fyc4$$default;
  GlTextInput.prototype.getInteractionSignal_j3fyc4$ = TextInput.prototype.getInteractionSignal_j3fyc4$;
  GlTextInput.prototype.addInteractionSignal_pqftit$ = TextInput.prototype.addInteractionSignal_pqftit$;
  GlTextInput.prototype.intersectsGlobalRay_ujzndq$ = TextInput.prototype.intersectsGlobalRay_ujzndq$;
  GlTextInput.prototype.intersectsGlobalRay_94uff6$ = TextInput.prototype.intersectsGlobalRay_94uff6$;
  GlTextInput.prototype.setSize_yxjqmk$ = TextInput.prototype.setSize_yxjqmk$;
  GlTextInput.prototype.setSize_i12l7q$ = TextInput.prototype.setSize_i12l7q$;
  GlTextInput.prototype.moveTo_1fv2cb$ = TextInput.prototype.moveTo_1fv2cb$;
  GlTextInput.prototype.moveTo_y2kzbl$ = TextInput.prototype.moveTo_y2kzbl$;
  GlTextInput.prototype.moveTo_y2kzbl$$default = TextInput.prototype.moveTo_y2kzbl$$default;
  GlTextInput.prototype.setPosition_y2kzbl$ = TextInput.prototype.setPosition_y2kzbl$;
  GlTextInput.prototype.setRotation_y2kzbl$ = TextInput.prototype.setRotation_y2kzbl$;
  GlTextInput.prototype.setScaling_y2kzbl$ = TextInput.prototype.setScaling_y2kzbl$;
  GlTextInput.prototype.setOrigin_y2kzbl$ = TextInput.prototype.setOrigin_y2kzbl$;
  GlTextInput.prototype.localToGlobal_9wm29k$ = TextInput.prototype.localToGlobal_9wm29k$;
  GlTextInput.prototype.localToGlobal_ujzndq$ = TextInput.prototype.localToGlobal_ujzndq$;
  GlTextInput.prototype.globalToLocal_9wm29k$ = TextInput.prototype.globalToLocal_9wm29k$;
  GlTextInput.prototype.globalToLocal_ujzndq$ = TextInput.prototype.globalToLocal_ujzndq$;
  GlTextInput.prototype.rayToPlane_94uff5$ = TextInput.prototype.rayToPlane_94uff5$;
  GlTextInput.prototype.convertCoord_jsa5cl$ = TextInput.prototype.convertCoord_jsa5cl$;
  GlTextInput.prototype.windowToLocal_9wm29l$ = TextInput.prototype.windowToLocal_9wm29l$;
  GlTextInput.prototype.localToWindow_9wm29k$ = TextInput.prototype.localToWindow_9wm29k$;
  GlTextInput.prototype.previousSibling = TextInput.prototype.previousSibling;
  GlTextInput.prototype.nextSibling = TextInput.prototype.nextSibling;
  GlTextInput.prototype.validate = TextInput.prototype.validate;
  GlTextInput.prototype.validate_za3lpa$ = TextInput.prototype.validate_za3lpa$;
  Object.defineProperty(GlTextInput.prototype, 'isFocused', Object.getOwnPropertyDescriptor(TextInput.prototype, 'isFocused'));
  Object.defineProperty(GlTextInput.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(TextInput.prototype, 'parentFocusableContainer'));
  Object.defineProperty(GlTextInput.prototype, 'alpha', Object.getOwnPropertyDescriptor(TextInput.prototype, 'alpha'));
  Object.defineProperty(GlTextInput.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(TextInput.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlTextInput.prototype, 'right', Object.getOwnPropertyDescriptor(TextInput.prototype, 'right'));
  Object.defineProperty(GlTextInput.prototype, 'bottom', Object.getOwnPropertyDescriptor(TextInput.prototype, 'bottom'));
  Object.defineProperty(GlTextInput.prototype, 'width', Object.getOwnPropertyDescriptor(TextInput.prototype, 'width'));
  Object.defineProperty(GlTextInput.prototype, 'height', Object.getOwnPropertyDescriptor(TextInput.prototype, 'height'));
  GlTextArea.prototype.focus = TextArea.prototype.focus;
  GlTextArea.prototype.blur = TextArea.prototype.blur;
  GlTextArea.prototype.onFocused = TextArea.prototype.onFocused;
  GlTextArea.prototype.onBlurred = TextArea.prototype.onBlurred;
  GlTextArea.prototype.isRendered = TextArea.prototype.isRendered;
  GlTextArea.prototype.getChildUnderPoint_g1oyt7$ = TextArea.prototype.getChildUnderPoint_g1oyt7$;
  GlTextArea.prototype.getChildUnderRay_p0mkez$ = TextArea.prototype.getChildUnderRay_p0mkez$;
  GlTextArea.prototype.getChildrenUnderPoint_adthd4$ = TextArea.prototype.getChildrenUnderPoint_adthd4$;
  GlTextArea.prototype.getChildrenUnderRay_w6o14y$ = TextArea.prototype.getChildrenUnderRay_w6o14y$;
  GlTextArea.prototype.handlesInteraction_1811yh$ = TextArea.prototype.handlesInteraction_1811yh$;
  GlTextArea.prototype.handlesInteraction_j3fyc4$ = TextArea.prototype.handlesInteraction_j3fyc4$;
  GlTextArea.prototype.hasInteraction_j3fyc4$ = TextArea.prototype.hasInteraction_j3fyc4$;
  GlTextArea.prototype.hasInteraction_j3fyc4$$default = TextArea.prototype.hasInteraction_j3fyc4$$default;
  GlTextArea.prototype.getInteractionSignal_j3fyc4$ = TextArea.prototype.getInteractionSignal_j3fyc4$;
  GlTextArea.prototype.addInteractionSignal_pqftit$ = TextArea.prototype.addInteractionSignal_pqftit$;
  GlTextArea.prototype.intersectsGlobalRay_ujzndq$ = TextArea.prototype.intersectsGlobalRay_ujzndq$;
  GlTextArea.prototype.intersectsGlobalRay_94uff6$ = TextArea.prototype.intersectsGlobalRay_94uff6$;
  GlTextArea.prototype.setSize_yxjqmk$ = TextArea.prototype.setSize_yxjqmk$;
  GlTextArea.prototype.setSize_i12l7q$ = TextArea.prototype.setSize_i12l7q$;
  GlTextArea.prototype.moveTo_1fv2cb$ = TextArea.prototype.moveTo_1fv2cb$;
  GlTextArea.prototype.moveTo_y2kzbl$ = TextArea.prototype.moveTo_y2kzbl$;
  GlTextArea.prototype.moveTo_y2kzbl$$default = TextArea.prototype.moveTo_y2kzbl$$default;
  GlTextArea.prototype.setPosition_y2kzbl$ = TextArea.prototype.setPosition_y2kzbl$;
  GlTextArea.prototype.setRotation_y2kzbl$ = TextArea.prototype.setRotation_y2kzbl$;
  GlTextArea.prototype.setScaling_y2kzbl$ = TextArea.prototype.setScaling_y2kzbl$;
  GlTextArea.prototype.setOrigin_y2kzbl$ = TextArea.prototype.setOrigin_y2kzbl$;
  GlTextArea.prototype.localToGlobal_9wm29k$ = TextArea.prototype.localToGlobal_9wm29k$;
  GlTextArea.prototype.localToGlobal_ujzndq$ = TextArea.prototype.localToGlobal_ujzndq$;
  GlTextArea.prototype.globalToLocal_9wm29k$ = TextArea.prototype.globalToLocal_9wm29k$;
  GlTextArea.prototype.globalToLocal_ujzndq$ = TextArea.prototype.globalToLocal_ujzndq$;
  GlTextArea.prototype.rayToPlane_94uff5$ = TextArea.prototype.rayToPlane_94uff5$;
  GlTextArea.prototype.convertCoord_jsa5cl$ = TextArea.prototype.convertCoord_jsa5cl$;
  GlTextArea.prototype.windowToLocal_9wm29l$ = TextArea.prototype.windowToLocal_9wm29l$;
  GlTextArea.prototype.localToWindow_9wm29k$ = TextArea.prototype.localToWindow_9wm29k$;
  GlTextArea.prototype.previousSibling = TextArea.prototype.previousSibling;
  GlTextArea.prototype.nextSibling = TextArea.prototype.nextSibling;
  GlTextArea.prototype.validate = TextArea.prototype.validate;
  GlTextArea.prototype.validate_za3lpa$ = TextArea.prototype.validate_za3lpa$;
  Object.defineProperty(GlTextArea.prototype, 'isFocused', Object.getOwnPropertyDescriptor(TextArea.prototype, 'isFocused'));
  Object.defineProperty(GlTextArea.prototype, 'parentFocusableContainer', Object.getOwnPropertyDescriptor(TextArea.prototype, 'parentFocusableContainer'));
  Object.defineProperty(GlTextArea.prototype, 'alpha', Object.getOwnPropertyDescriptor(TextArea.prototype, 'alpha'));
  Object.defineProperty(GlTextArea.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(TextArea.prototype, 'interactivityEnabled'));
  Object.defineProperty(GlTextArea.prototype, 'right', Object.getOwnPropertyDescriptor(TextArea.prototype, 'right'));
  Object.defineProperty(GlTextArea.prototype, 'bottom', Object.getOwnPropertyDescriptor(TextArea.prototype, 'bottom'));
  Object.defineProperty(GlTextArea.prototype, 'width', Object.getOwnPropertyDescriptor(TextArea.prototype, 'width'));
  Object.defineProperty(GlTextArea.prototype, 'height', Object.getOwnPropertyDescriptor(TextArea.prototype, 'height'));
  Gl20$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(Gl20$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Gl20$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  GlState$Companion.prototype.factory_r456d0$ = DKey.prototype.factory_r456d0$;
  Object.defineProperty(GlState$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(GlState$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  ShaderBatch.prototype.putVertex_t7yqw$ = VertexFeed.prototype.putVertex_t7yqw$;
  ShaderBatch.prototype.putIndex_za3lpa$ = IndexFeed.prototype.putIndex_za3lpa$;
  ShaderBatchImpl.prototype.begin_za3lpa$ = ShaderBatch.prototype.begin_za3lpa$;
  ShaderBatchImpl.prototype.flush_6taknv$ = ShaderBatch.prototype.flush_6taknv$;
  ShaderBatchImpl.prototype.putVertex_t7yqw$ = ShaderBatch.prototype.putVertex_t7yqw$;
  ShaderBatchImpl.prototype.putIndex_za3lpa$ = ShaderBatch.prototype.putIndex_za3lpa$;
  ShaderProgramBase.prototype.getRequiredUniformLocation_61zpoe$ = ShaderProgram.prototype.getRequiredUniformLocation_61zpoe$;
  WrappedGl20.prototype.uniform2f_1b4vwg$ = Gl20.prototype.uniform2f_1b4vwg$;
  WrappedGl20.prototype.uniform3f_1b4vwf$ = Gl20.prototype.uniform3f_1b4vwf$;
  WrappedGl20.prototype.uniform3f_k001p3$ = Gl20.prototype.uniform3f_k001p3$;
  WrappedGl20.prototype.uniform4f_k001p3$ = Gl20.prototype.uniform4f_k001p3$;
  WrappedGl20.prototype.uniformMatrix4fv_7gr31f$ = Gl20.prototype.uniformMatrix4fv_7gr31f$;
  WrappedGl20.prototype.uniformMatrix4fv_yp0fny$ = Gl20.prototype.uniformMatrix4fv_yp0fny$;
  CheckboxSkinPart.prototype.isRendered = Labelable.prototype.isRendered;
  CheckboxSkinPart.prototype.getChildUnderPoint_g1oyt7$ = Labelable.prototype.getChildUnderPoint_g1oyt7$;
  CheckboxSkinPart.prototype.getChildUnderRay_p0mkez$ = Labelable.prototype.getChildUnderRay_p0mkez$;
  CheckboxSkinPart.prototype.getChildrenUnderPoint_adthd4$ = Labelable.prototype.getChildrenUnderPoint_adthd4$;
  CheckboxSkinPart.prototype.getChildrenUnderRay_w6o14y$ = Labelable.prototype.getChildrenUnderRay_w6o14y$;
  CheckboxSkinPart.prototype.handlesInteraction_1811yh$ = Labelable.prototype.handlesInteraction_1811yh$;
  CheckboxSkinPart.prototype.handlesInteraction_j3fyc4$ = Labelable.prototype.handlesInteraction_j3fyc4$;
  CheckboxSkinPart.prototype.hasInteraction_j3fyc4$ = Labelable.prototype.hasInteraction_j3fyc4$;
  CheckboxSkinPart.prototype.hasInteraction_j3fyc4$$default = Labelable.prototype.hasInteraction_j3fyc4$$default;
  CheckboxSkinPart.prototype.getInteractionSignal_j3fyc4$ = Labelable.prototype.getInteractionSignal_j3fyc4$;
  CheckboxSkinPart.prototype.addInteractionSignal_pqftit$ = Labelable.prototype.addInteractionSignal_pqftit$;
  CheckboxSkinPart.prototype.intersectsGlobalRay_ujzndq$ = Labelable.prototype.intersectsGlobalRay_ujzndq$;
  CheckboxSkinPart.prototype.intersectsGlobalRay_94uff6$ = Labelable.prototype.intersectsGlobalRay_94uff6$;
  CheckboxSkinPart.prototype.setSize_yxjqmk$ = Labelable.prototype.setSize_yxjqmk$;
  CheckboxSkinPart.prototype.setSize_i12l7q$ = Labelable.prototype.setSize_i12l7q$;
  CheckboxSkinPart.prototype.moveTo_1fv2cb$ = Labelable.prototype.moveTo_1fv2cb$;
  CheckboxSkinPart.prototype.moveTo_y2kzbl$ = Labelable.prototype.moveTo_y2kzbl$;
  CheckboxSkinPart.prototype.moveTo_y2kzbl$$default = Labelable.prototype.moveTo_y2kzbl$$default;
  CheckboxSkinPart.prototype.setPosition_y2kzbl$ = Labelable.prototype.setPosition_y2kzbl$;
  CheckboxSkinPart.prototype.setRotation_y2kzbl$ = Labelable.prototype.setRotation_y2kzbl$;
  CheckboxSkinPart.prototype.setScaling_y2kzbl$ = Labelable.prototype.setScaling_y2kzbl$;
  CheckboxSkinPart.prototype.setOrigin_y2kzbl$ = Labelable.prototype.setOrigin_y2kzbl$;
  CheckboxSkinPart.prototype.localToGlobal_9wm29k$ = Labelable.prototype.localToGlobal_9wm29k$;
  CheckboxSkinPart.prototype.localToGlobal_ujzndq$ = Labelable.prototype.localToGlobal_ujzndq$;
  CheckboxSkinPart.prototype.globalToLocal_9wm29k$ = Labelable.prototype.globalToLocal_9wm29k$;
  CheckboxSkinPart.prototype.globalToLocal_ujzndq$ = Labelable.prototype.globalToLocal_ujzndq$;
  CheckboxSkinPart.prototype.rayToPlane_94uff5$ = Labelable.prototype.rayToPlane_94uff5$;
  CheckboxSkinPart.prototype.convertCoord_jsa5cl$ = Labelable.prototype.convertCoord_jsa5cl$;
  CheckboxSkinPart.prototype.windowToLocal_9wm29l$ = Labelable.prototype.windowToLocal_9wm29l$;
  CheckboxSkinPart.prototype.localToWindow_9wm29k$ = Labelable.prototype.localToWindow_9wm29k$;
  CheckboxSkinPart.prototype.previousSibling = Labelable.prototype.previousSibling;
  CheckboxSkinPart.prototype.nextSibling = Labelable.prototype.nextSibling;
  CheckboxSkinPart.prototype.validate = Labelable.prototype.validate;
  CheckboxSkinPart.prototype.validate_za3lpa$ = Labelable.prototype.validate_za3lpa$;
  Object.defineProperty(CheckboxSkinPart.prototype, 'alpha', Object.getOwnPropertyDescriptor(Labelable.prototype, 'alpha'));
  Object.defineProperty(CheckboxSkinPart.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Labelable.prototype, 'interactivityEnabled'));
  Object.defineProperty(CheckboxSkinPart.prototype, 'right', Object.getOwnPropertyDescriptor(Labelable.prototype, 'right'));
  Object.defineProperty(CheckboxSkinPart.prototype, 'bottom', Object.getOwnPropertyDescriptor(Labelable.prototype, 'bottom'));
  Object.defineProperty(CheckboxSkinPart.prototype, 'width', Object.getOwnPropertyDescriptor(Labelable.prototype, 'width'));
  Object.defineProperty(CheckboxSkinPart.prototype, 'height', Object.getOwnPropertyDescriptor(Labelable.prototype, 'height'));
  LabelButtonSkinPart.prototype.isRendered = Labelable.prototype.isRendered;
  LabelButtonSkinPart.prototype.getChildUnderPoint_g1oyt7$ = Labelable.prototype.getChildUnderPoint_g1oyt7$;
  LabelButtonSkinPart.prototype.getChildUnderRay_p0mkez$ = Labelable.prototype.getChildUnderRay_p0mkez$;
  LabelButtonSkinPart.prototype.getChildrenUnderPoint_adthd4$ = Labelable.prototype.getChildrenUnderPoint_adthd4$;
  LabelButtonSkinPart.prototype.getChildrenUnderRay_w6o14y$ = Labelable.prototype.getChildrenUnderRay_w6o14y$;
  LabelButtonSkinPart.prototype.handlesInteraction_1811yh$ = Labelable.prototype.handlesInteraction_1811yh$;
  LabelButtonSkinPart.prototype.handlesInteraction_j3fyc4$ = Labelable.prototype.handlesInteraction_j3fyc4$;
  LabelButtonSkinPart.prototype.hasInteraction_j3fyc4$ = Labelable.prototype.hasInteraction_j3fyc4$;
  LabelButtonSkinPart.prototype.hasInteraction_j3fyc4$$default = Labelable.prototype.hasInteraction_j3fyc4$$default;
  LabelButtonSkinPart.prototype.getInteractionSignal_j3fyc4$ = Labelable.prototype.getInteractionSignal_j3fyc4$;
  LabelButtonSkinPart.prototype.addInteractionSignal_pqftit$ = Labelable.prototype.addInteractionSignal_pqftit$;
  LabelButtonSkinPart.prototype.intersectsGlobalRay_ujzndq$ = Labelable.prototype.intersectsGlobalRay_ujzndq$;
  LabelButtonSkinPart.prototype.intersectsGlobalRay_94uff6$ = Labelable.prototype.intersectsGlobalRay_94uff6$;
  LabelButtonSkinPart.prototype.setSize_yxjqmk$ = Labelable.prototype.setSize_yxjqmk$;
  LabelButtonSkinPart.prototype.setSize_i12l7q$ = Labelable.prototype.setSize_i12l7q$;
  LabelButtonSkinPart.prototype.moveTo_1fv2cb$ = Labelable.prototype.moveTo_1fv2cb$;
  LabelButtonSkinPart.prototype.moveTo_y2kzbl$ = Labelable.prototype.moveTo_y2kzbl$;
  LabelButtonSkinPart.prototype.moveTo_y2kzbl$$default = Labelable.prototype.moveTo_y2kzbl$$default;
  LabelButtonSkinPart.prototype.setPosition_y2kzbl$ = Labelable.prototype.setPosition_y2kzbl$;
  LabelButtonSkinPart.prototype.setRotation_y2kzbl$ = Labelable.prototype.setRotation_y2kzbl$;
  LabelButtonSkinPart.prototype.setScaling_y2kzbl$ = Labelable.prototype.setScaling_y2kzbl$;
  LabelButtonSkinPart.prototype.setOrigin_y2kzbl$ = Labelable.prototype.setOrigin_y2kzbl$;
  LabelButtonSkinPart.prototype.localToGlobal_9wm29k$ = Labelable.prototype.localToGlobal_9wm29k$;
  LabelButtonSkinPart.prototype.localToGlobal_ujzndq$ = Labelable.prototype.localToGlobal_ujzndq$;
  LabelButtonSkinPart.prototype.globalToLocal_9wm29k$ = Labelable.prototype.globalToLocal_9wm29k$;
  LabelButtonSkinPart.prototype.globalToLocal_ujzndq$ = Labelable.prototype.globalToLocal_ujzndq$;
  LabelButtonSkinPart.prototype.rayToPlane_94uff5$ = Labelable.prototype.rayToPlane_94uff5$;
  LabelButtonSkinPart.prototype.convertCoord_jsa5cl$ = Labelable.prototype.convertCoord_jsa5cl$;
  LabelButtonSkinPart.prototype.windowToLocal_9wm29l$ = Labelable.prototype.windowToLocal_9wm29l$;
  LabelButtonSkinPart.prototype.localToWindow_9wm29k$ = Labelable.prototype.localToWindow_9wm29k$;
  LabelButtonSkinPart.prototype.previousSibling = Labelable.prototype.previousSibling;
  LabelButtonSkinPart.prototype.nextSibling = Labelable.prototype.nextSibling;
  LabelButtonSkinPart.prototype.validate = Labelable.prototype.validate;
  LabelButtonSkinPart.prototype.validate_za3lpa$ = Labelable.prototype.validate_za3lpa$;
  Object.defineProperty(LabelButtonSkinPart.prototype, 'alpha', Object.getOwnPropertyDescriptor(Labelable.prototype, 'alpha'));
  Object.defineProperty(LabelButtonSkinPart.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Labelable.prototype, 'interactivityEnabled'));
  Object.defineProperty(LabelButtonSkinPart.prototype, 'right', Object.getOwnPropertyDescriptor(Labelable.prototype, 'right'));
  Object.defineProperty(LabelButtonSkinPart.prototype, 'bottom', Object.getOwnPropertyDescriptor(Labelable.prototype, 'bottom'));
  Object.defineProperty(LabelButtonSkinPart.prototype, 'width', Object.getOwnPropertyDescriptor(Labelable.prototype, 'width'));
  Object.defineProperty(LabelButtonSkinPart.prototype, 'height', Object.getOwnPropertyDescriptor(Labelable.prototype, 'height'));
  IconButtonSkinPart.prototype.isRendered = Labelable.prototype.isRendered;
  IconButtonSkinPart.prototype.getChildUnderPoint_g1oyt7$ = Labelable.prototype.getChildUnderPoint_g1oyt7$;
  IconButtonSkinPart.prototype.getChildUnderRay_p0mkez$ = Labelable.prototype.getChildUnderRay_p0mkez$;
  IconButtonSkinPart.prototype.getChildrenUnderPoint_adthd4$ = Labelable.prototype.getChildrenUnderPoint_adthd4$;
  IconButtonSkinPart.prototype.getChildrenUnderRay_w6o14y$ = Labelable.prototype.getChildrenUnderRay_w6o14y$;
  IconButtonSkinPart.prototype.handlesInteraction_1811yh$ = Labelable.prototype.handlesInteraction_1811yh$;
  IconButtonSkinPart.prototype.handlesInteraction_j3fyc4$ = Labelable.prototype.handlesInteraction_j3fyc4$;
  IconButtonSkinPart.prototype.hasInteraction_j3fyc4$ = Labelable.prototype.hasInteraction_j3fyc4$;
  IconButtonSkinPart.prototype.hasInteraction_j3fyc4$$default = Labelable.prototype.hasInteraction_j3fyc4$$default;
  IconButtonSkinPart.prototype.getInteractionSignal_j3fyc4$ = Labelable.prototype.getInteractionSignal_j3fyc4$;
  IconButtonSkinPart.prototype.addInteractionSignal_pqftit$ = Labelable.prototype.addInteractionSignal_pqftit$;
  IconButtonSkinPart.prototype.intersectsGlobalRay_ujzndq$ = Labelable.prototype.intersectsGlobalRay_ujzndq$;
  IconButtonSkinPart.prototype.intersectsGlobalRay_94uff6$ = Labelable.prototype.intersectsGlobalRay_94uff6$;
  IconButtonSkinPart.prototype.setSize_yxjqmk$ = Labelable.prototype.setSize_yxjqmk$;
  IconButtonSkinPart.prototype.setSize_i12l7q$ = Labelable.prototype.setSize_i12l7q$;
  IconButtonSkinPart.prototype.moveTo_1fv2cb$ = Labelable.prototype.moveTo_1fv2cb$;
  IconButtonSkinPart.prototype.moveTo_y2kzbl$ = Labelable.prototype.moveTo_y2kzbl$;
  IconButtonSkinPart.prototype.moveTo_y2kzbl$$default = Labelable.prototype.moveTo_y2kzbl$$default;
  IconButtonSkinPart.prototype.setPosition_y2kzbl$ = Labelable.prototype.setPosition_y2kzbl$;
  IconButtonSkinPart.prototype.setRotation_y2kzbl$ = Labelable.prototype.setRotation_y2kzbl$;
  IconButtonSkinPart.prototype.setScaling_y2kzbl$ = Labelable.prototype.setScaling_y2kzbl$;
  IconButtonSkinPart.prototype.setOrigin_y2kzbl$ = Labelable.prototype.setOrigin_y2kzbl$;
  IconButtonSkinPart.prototype.localToGlobal_9wm29k$ = Labelable.prototype.localToGlobal_9wm29k$;
  IconButtonSkinPart.prototype.localToGlobal_ujzndq$ = Labelable.prototype.localToGlobal_ujzndq$;
  IconButtonSkinPart.prototype.globalToLocal_9wm29k$ = Labelable.prototype.globalToLocal_9wm29k$;
  IconButtonSkinPart.prototype.globalToLocal_ujzndq$ = Labelable.prototype.globalToLocal_ujzndq$;
  IconButtonSkinPart.prototype.rayToPlane_94uff5$ = Labelable.prototype.rayToPlane_94uff5$;
  IconButtonSkinPart.prototype.convertCoord_jsa5cl$ = Labelable.prototype.convertCoord_jsa5cl$;
  IconButtonSkinPart.prototype.windowToLocal_9wm29l$ = Labelable.prototype.windowToLocal_9wm29l$;
  IconButtonSkinPart.prototype.localToWindow_9wm29k$ = Labelable.prototype.localToWindow_9wm29k$;
  IconButtonSkinPart.prototype.previousSibling = Labelable.prototype.previousSibling;
  IconButtonSkinPart.prototype.nextSibling = Labelable.prototype.nextSibling;
  IconButtonSkinPart.prototype.validate = Labelable.prototype.validate;
  IconButtonSkinPart.prototype.validate_za3lpa$ = Labelable.prototype.validate_za3lpa$;
  Object.defineProperty(IconButtonSkinPart.prototype, 'alpha', Object.getOwnPropertyDescriptor(Labelable.prototype, 'alpha'));
  Object.defineProperty(IconButtonSkinPart.prototype, 'interactivityEnabled', Object.getOwnPropertyDescriptor(Labelable.prototype, 'interactivityEnabled'));
  Object.defineProperty(IconButtonSkinPart.prototype, 'right', Object.getOwnPropertyDescriptor(Labelable.prototype, 'right'));
  Object.defineProperty(IconButtonSkinPart.prototype, 'bottom', Object.getOwnPropertyDescriptor(Labelable.prototype, 'bottom'));
  Object.defineProperty(IconButtonSkinPart.prototype, 'width', Object.getOwnPropertyDescriptor(Labelable.prototype, 'width'));
  Object.defineProperty(IconButtonSkinPart.prototype, 'height', Object.getOwnPropertyDescriptor(Labelable.prototype, 'height'));
  Object.defineProperty(Theme$Companion.prototype, 'isPrivate', Object.getOwnPropertyDescriptor(DKey.prototype, 'isPrivate'));
  Object.defineProperty(Theme$Companion.prototype, 'extends', Object.getOwnPropertyDescriptor(DKey.prototype, 'extends'));
  var package$com = _.com || (_.com = {});
  var package$acornui = package$com.acornui || (package$com.acornui = {});
  Object.defineProperty(package$acornui, 'assertionsEnabled', {
    get: function () {
      return assertionsEnabled;
    },
    set: function (value) {
      assertionsEnabled = value;
    }
  });
  package$acornui._assert_eltq40$ = _assert;
  package$acornui._assert_4ina18$ = _assert_0;
  package$acornui._assert_d2rpia$ = _assert_1;
  package$acornui._assert_fwoila$ = _assert_2;
  var package$component = package$acornui.component || (package$acornui.component = {});
  package$component.AttachmentHolder = AttachmentHolder;
  package$component.createOrReuseAttachment_jdv91x$ = createOrReuseAttachment;
  Object.defineProperty(BoxStyle, 'Companion', {
    get: BoxStyle$Companion_getInstance
  });
  package$component.BoxStyle = BoxStyle;
  Object.defineProperty(package$component, 'BoxStyleSerializer', {
    get: BoxStyleSerializer_getInstance
  });
  package$component.boxStyle_rhwxvi$ = boxStyle;
  package$component.LinearGradient_bx0ajd$ = LinearGradient;
  package$component.LinearGradient_ngm8nz$ = LinearGradient_1;
  package$component.LinearGradient_7a5m1c$ = LinearGradient_2;
  package$component.LinearGradient = LinearGradient_0;
  Object.defineProperty(package$component, 'LinearGradientSerializer', {
    get: LinearGradientSerializer_getInstance
  });
  Object.defineProperty(GradientDirection, 'TOP_LEFT', {
    get: GradientDirection$TOP_LEFT_getInstance
  });
  Object.defineProperty(GradientDirection, 'TOP', {
    get: GradientDirection$TOP_getInstance
  });
  Object.defineProperty(GradientDirection, 'TOP_RIGHT', {
    get: GradientDirection$TOP_RIGHT_getInstance
  });
  Object.defineProperty(GradientDirection, 'RIGHT', {
    get: GradientDirection$RIGHT_getInstance
  });
  Object.defineProperty(GradientDirection, 'BOTTOM_RIGHT', {
    get: GradientDirection$BOTTOM_RIGHT_getInstance
  });
  Object.defineProperty(GradientDirection, 'BOTTOM', {
    get: GradientDirection$BOTTOM_getInstance
  });
  Object.defineProperty(GradientDirection, 'BOTTOM_LEFT', {
    get: GradientDirection$BOTTOM_LEFT_getInstance
  });
  Object.defineProperty(GradientDirection, 'LEFT', {
    get: GradientDirection$LEFT_getInstance
  });
  Object.defineProperty(GradientDirection, 'ANGLE', {
    get: GradientDirection$ANGLE_getInstance
  });
  package$component.GradientDirection = GradientDirection;
  package$component.ColorStop = ColorStop;
  Object.defineProperty(package$component, 'ColorStopSerializer', {
    get: ColorStopSerializer_getInstance
  });
  package$component.BorderColors_init_1qghwi$ = BorderColors_init;
  package$component.BorderColors = BorderColors;
  Object.defineProperty(package$component, 'BorderColorsSerializer', {
    get: BorderColorsSerializer_getInstance
  });
  Object.defineProperty(Button, 'Companion', {
    get: Button$Companion_getInstance
  });
  package$component.Button = Button;
  Object.defineProperty(ButtonState, 'UP', {
    get: ButtonState$UP_getInstance
  });
  Object.defineProperty(ButtonState, 'OVER', {
    get: ButtonState$OVER_getInstance
  });
  Object.defineProperty(ButtonState, 'DOWN', {
    get: ButtonState$DOWN_getInstance
  });
  Object.defineProperty(ButtonState, 'SELECTED_UP', {
    get: ButtonState$SELECTED_UP_getInstance
  });
  Object.defineProperty(ButtonState, 'SELECTED_OVER', {
    get: ButtonState$SELECTED_OVER_getInstance
  });
  Object.defineProperty(ButtonState, 'SELECTED_DOWN', {
    get: ButtonState$SELECTED_DOWN_getInstance
  });
  Object.defineProperty(ButtonState, 'DISABLED', {
    get: ButtonState$DISABLED_getInstance
  });
  package$component.ButtonState = ButtonState;
  Object.defineProperty(ButtonStyle, 'Companion', {
    get: ButtonStyle$Companion_getInstance
  });
  package$component.ButtonStyle = ButtonStyle;
  package$component.Labelable = Labelable;
  package$component.Selectable = Selectable;
  package$component.button_907r7w$ = button;
  package$component.button_l5thvq$ = button_0;
  package$component.CameraElement = CameraElement;
  Object.defineProperty(Checkbox, 'Companion', {
    get: Checkbox$Companion_getInstance
  });
  package$component.Checkbox = Checkbox;
  package$component.checkbox_ika95p$ = checkbox;
  package$component.checkbox_82spor$ = checkbox_0;
  package$component.Closeable = Closeable;
  Object.defineProperty(ColorPicker, 'Companion', {
    get: ColorPicker$Companion_getInstance
  });
  package$component.ColorPicker = ColorPicker;
  Object.defineProperty(ColorPickerStyle, 'Companion', {
    get: ColorPickerStyle$Companion_getInstance
  });
  package$component.ColorPickerStyle = ColorPickerStyle;
  package$component.colorPicker_8hoamn$ = colorPicker;
  Object.defineProperty(ColorPalette, 'Companion', {
    get: ColorPalette$Companion_getInstance
  });
  package$component.ColorPalette = ColorPalette;
  Object.defineProperty(ColorPaletteStyle, 'Companion', {
    get: ColorPaletteStyle$Companion_getInstance
  });
  package$component.ColorPaletteStyle = ColorPaletteStyle;
  package$component.ColorPickerWithText = ColorPickerWithText;
  package$component.colorPickerWithText_8hoamn$ = colorPickerWithText;
  package$component.ColorTransformable = ColorTransformable;
  package$component.Container = Container;
  package$component.ContainerImpl = ContainerImpl;
  Object.defineProperty(NativeContainer, 'Companion', {
    get: NativeContainer$Companion_getInstance
  });
  package$component.NativeContainer = NativeContainer;
  Object.defineProperty(package$component, 'NativeContainerDummy', {
    get: NativeContainerDummy_getInstance
  });
  package$component.container_pyfd8h$ = container;
  var package$datagrid = package$component.datagrid || (package$component.datagrid = {});
  package$datagrid.IntColumn = IntColumn;
  package$datagrid.IntCell = IntCell;
  package$datagrid.IntEditorCell = IntEditorCell;
  package$datagrid.StringColumn = StringColumn;
  package$datagrid.StringCell = StringCell;
  package$datagrid.StringEditorCell = StringEditorCell;
  Object.defineProperty(DataGrid, 'Companion', {
    get: DataGrid$Companion_getInstance
  });
  package$datagrid.DataGrid = DataGrid;
  Object.defineProperty(DataGridStyle, 'Companion', {
    get: DataGridStyle$Companion_getInstance
  });
  package$datagrid.DataGridStyle = DataGridStyle;
  package$datagrid.dataGrid_8c2cvs$ = dataGrid;
  package$datagrid.DataGridCell = DataGridCell;
  package$datagrid.DataGridEditorCell = DataGridEditorCell;
  Object.defineProperty(ColumnSortDirection, 'NONE', {
    get: ColumnSortDirection$NONE_getInstance
  });
  Object.defineProperty(ColumnSortDirection, 'ASCENDING', {
    get: ColumnSortDirection$ASCENDING_getInstance
  });
  Object.defineProperty(ColumnSortDirection, 'DESCENDING', {
    get: ColumnSortDirection$DESCENDING_getInstance
  });
  package$datagrid.ColumnSortDirection = ColumnSortDirection;
  package$datagrid.DataGridColumn = DataGridColumn;
  package$component.ElementParent = ElementParent;
  package$component.ElementContainer = ElementContainer;
  package$component.ElementContainerImpl = ElementContainerImpl;
  Object.defineProperty(HDivider, 'Companion', {
    get: HDivider$Companion_getInstance
  });
  package$component.HDivider = HDivider;
  package$component.hDivider_cmra5n$ = hDivider;
  Object.defineProperty(HeadingGroup, 'Companion', {
    get: HeadingGroup$Companion_getInstance
  });
  package$component.HeadingGroup = HeadingGroup;
  package$component.headingGroup_uj34qx$ = headingGroup;
  Object.defineProperty(HeadingGroupStyle, 'Companion', {
    get: HeadingGroupStyle$Companion_getInstance
  });
  package$component.HeadingGroupStyle = HeadingGroupStyle;
  Object.defineProperty(IconButton, 'Companion', {
    get: IconButton$Companion_getInstance
  });
  package$component.IconButton = IconButton;
  package$component.iconButton_907r7w$ = iconButton;
  package$component.iconButton_l5thvq$ = iconButton_0;
  package$component.iconButton_qq6aw$ = iconButton_1;
  package$component.Image = Image;
  package$component.image_e3xjfr$ = image;
  package$component.image_3mizo5$ = image_0;
  package$component.image_1nvu9p$ = image_1;
  package$component.contentsImage_jcpyyr$ = contentsImage;
  package$component.contentsTexture_ekwtfz$ = contentsTexture;
  package$component.InteractiveElement = InteractiveElement;
  Object.defineProperty(InteractivityMode, 'NONE', {
    get: InteractivityMode$NONE_getInstance
  });
  Object.defineProperty(InteractivityMode, 'ALL', {
    get: InteractivityMode$ALL_getInstance
  });
  Object.defineProperty(InteractivityMode, 'CHILDREN', {
    get: InteractivityMode$CHILDREN_getInstance
  });
  package$component.InteractivityMode = InteractivityMode;
  package$component.createOrReuse_jn33i$ = createOrReuse;
  package$component.ItemRenderer = ItemRenderer;
  var package$layout = package$component.layout || (package$component.layout = {});
  var package$algorithm = package$layout.algorithm || (package$layout.algorithm = {});
  package$algorithm.BasicLayoutData = BasicLayoutData;
  package$algorithm.basicLayoutData_zgro2x$ = basicLayoutData;
  package$algorithm.CanvasLayout = CanvasLayout;
  package$algorithm.CanvasLayoutContainer = CanvasLayoutContainer;
  package$algorithm.canvas_xhj23u$ = canvas;
  package$algorithm.CanvasLayoutData = CanvasLayoutData;
  package$algorithm.canvasLayoutData_jc13db$ = canvasLayoutData;
  package$algorithm.FlowLayout = FlowLayout;
  package$algorithm.LineInfo = LineInfo;
  package$algorithm.FlowLayoutData = FlowLayoutData;
  Object.defineProperty(FlowDisplay, 'INLINE_BLOCK', {
    get: FlowDisplay$INLINE_BLOCK_getInstance
  });
  Object.defineProperty(FlowDisplay, 'INLINE', {
    get: FlowDisplay$INLINE_getInstance
  });
  Object.defineProperty(FlowDisplay, 'BLOCK', {
    get: FlowDisplay$BLOCK_getInstance
  });
  package$algorithm.FlowDisplay = FlowDisplay;
  Object.defineProperty(FlowHAlign, 'LEFT', {
    get: FlowHAlign$LEFT_getInstance
  });
  Object.defineProperty(FlowHAlign, 'CENTER', {
    get: FlowHAlign$CENTER_getInstance
  });
  Object.defineProperty(FlowHAlign, 'RIGHT', {
    get: FlowHAlign$RIGHT_getInstance
  });
  Object.defineProperty(FlowHAlign, 'JUSTIFY', {
    get: FlowHAlign$JUSTIFY_getInstance
  });
  package$algorithm.FlowHAlign = FlowHAlign;
  Object.defineProperty(FlowVAlign, 'TOP', {
    get: FlowVAlign$TOP_getInstance
  });
  Object.defineProperty(FlowVAlign, 'MIDDLE', {
    get: FlowVAlign$MIDDLE_getInstance
  });
  Object.defineProperty(FlowVAlign, 'BOTTOM', {
    get: FlowVAlign$BOTTOM_getInstance
  });
  Object.defineProperty(FlowVAlign, 'BASELINE', {
    get: FlowVAlign$BASELINE_getInstance
  });
  package$algorithm.FlowVAlign = FlowVAlign;
  package$algorithm.FlowLayoutContainer = FlowLayoutContainer;
  package$algorithm.flow_sg545c$ = flow;
  package$algorithm.flowLayoutData_sfc3c5$ = flowLayoutData;
  package$algorithm.GridLayout = GridLayout;
  package$algorithm.GridColumn = GridColumn;
  package$algorithm.gridColumn_wzgckh$ = gridColumn;
  package$algorithm.GridLayoutData = GridLayoutData;
  package$algorithm.gridLayoutData_c2mx37$ = gridLayoutData;
  package$algorithm.GridLayoutContainer = GridLayoutContainer;
  package$algorithm.grid_weczx4$ = grid;
  Object.defineProperty(FormContainer, 'Companion', {
    get: FormContainer$Companion_getInstance
  });
  package$algorithm.FormContainer = FormContainer;
  package$algorithm.form_9z364$ = form;
  Object.defineProperty(package$algorithm, 'formLabelStyle', {
    get: function () {
      return formLabelStyle;
    }
  });
  package$algorithm.formLabel_7i1swk$ = formLabel;
  package$algorithm.HorizontalLayout = HorizontalLayout;
  package$algorithm.HorizontalLayoutData = HorizontalLayoutData;
  package$algorithm.HorizontalLayoutContainer = HorizontalLayoutContainer;
  package$algorithm.hGroup_aiug52$ = hGroup;
  package$algorithm.LayoutAlgorithm = LayoutAlgorithm;
  package$algorithm.LayoutDataProvider = LayoutDataProvider;
  package$algorithm.bindable_k0e54s$ = bindable;
  package$algorithm.BasicLayoutAlgorithm = BasicLayoutAlgorithm;
  package$algorithm.ScaleLayout = ScaleLayout;
  package$algorithm.ScaleLayoutData = ScaleLayoutData;
  package$algorithm.ScaleBoxLayoutContainer = ScaleBoxLayoutContainer;
  package$algorithm.scaleBox_1me2zx$ = scaleBox;
  package$algorithm.VerticalLayout = VerticalLayout;
  package$algorithm.VerticalLayoutData = VerticalLayoutData;
  package$algorithm.VerticalLayoutContainer = VerticalLayoutContainer;
  package$algorithm.vGroup_hlverc$ = vGroup;
  var package$virtual = package$algorithm.virtual || (package$algorithm.virtual = {});
  package$virtual.VirtualHorizontalLayout = VirtualHorizontalLayout;
  package$virtual.hDataScroller_u94tih$ = hDataScroller;
  package$virtual.VirtualizedVerticalLayout = VirtualizedVerticalLayout;
  package$virtual.vDataScroller_yk2cof$ = vDataScroller;
  package$virtual.VirtualLayoutAlgorithm = VirtualLayoutAlgorithm;
  package$virtual.ItemRendererOwner = ItemRendererOwner;
  Object.defineProperty(VirtualDirection, 'VERTICAL', {
    get: VirtualDirection$VERTICAL_getInstance
  });
  Object.defineProperty(VirtualDirection, 'HORIZONTAL', {
    get: VirtualDirection$HORIZONTAL_getInstance
  });
  package$virtual.VirtualDirection = VirtualDirection;
  package$virtual.bindable_2z0oqo$ = bindable_0;
  Object.defineProperty(HAlign, 'LEFT', {
    get: HAlign$LEFT_getInstance
  });
  Object.defineProperty(HAlign, 'CENTER', {
    get: HAlign$CENTER_getInstance
  });
  Object.defineProperty(HAlign, 'RIGHT', {
    get: HAlign$RIGHT_getInstance
  });
  package$layout.HAlign = HAlign;
  Object.defineProperty(VAlign, 'TOP', {
    get: VAlign$TOP_getInstance
  });
  Object.defineProperty(VAlign, 'MIDDLE', {
    get: VAlign$MIDDLE_getInstance
  });
  Object.defineProperty(VAlign, 'BOTTOM', {
    get: VAlign$BOTTOM_getInstance
  });
  package$layout.VAlign = VAlign;
  package$layout.VirtualLayoutContainer = VirtualLayoutContainer;
  Object.defineProperty(DataScroller, 'Companion', {
    get: DataScroller$Companion_getInstance
  });
  package$layout.DataScroller = DataScroller;
  Object.defineProperty(DataScrollerStyle, 'Companion', {
    get: DataScrollerStyle$Companion_getInstance
  });
  package$layout.DataScrollerStyle = DataScrollerStyle;
  package$layout.DataScrollerSelection = DataScrollerSelection;
  package$layout.LayoutContainer = LayoutContainer;
  package$layout.LayoutContainerImpl = LayoutContainerImpl;
  package$layout.layoutContainer_n2p6og$ = layoutContainer;
  package$layout.LayoutData = LayoutData;
  package$layout.LayoutElement = LayoutElement;
  package$layout.BasicLayoutElement = BasicLayoutElement;
  package$layout.clampWidth_ob6lr2$ = clampWidth;
  package$layout.clampHeight_ob6lr2$ = clampHeight;
  package$layout.Sizable = Sizable;
  package$layout.BasicLayoutElementImpl = BasicLayoutElementImpl;
  package$layout.SizeConstraints = SizeConstraints;
  package$layout.Spacer = Spacer;
  package$layout.spacer_4yhnsi$ = spacer;
  package$layout.Transformable = Transformable;
  package$layout.Positionable = Positionable;
  Object.defineProperty(VirtualList, 'Companion', {
    get: VirtualList$Companion_getInstance
  });
  package$layout.VirtualList = VirtualList;
  package$layout.virtualList_4ipchw$ = virtualList;
  package$layout.VirtualListSelection = VirtualListSelection;
  package$component.NinePatchComponent = NinePatchComponent;
  package$component.ninePatch_ttmdtr$ = ninePatch;
  Object.defineProperty(NumericStepper, 'Companion', {
    get: NumericStepper$Companion_getInstance
  });
  package$component.NumericStepper = NumericStepper;
  Object.defineProperty(NumericStepperStyle, 'Companion', {
    get: NumericStepperStyle$Companion_getInstance
  });
  package$component.NumericStepperStyle = NumericStepperStyle;
  package$component.numericStepper_lv631a$ = numericStepper;
  Object.defineProperty(OptionsList, 'Companion', {
    get: OptionsList$Companion_getInstance
  });
  package$component.OptionsList = OptionsList;
  Object.defineProperty(OptionsListStyle, 'Companion', {
    get: OptionsListStyle$Companion_getInstance
  });
  package$component.OptionsListStyle = OptionsListStyle;
  package$component.optionsList_2x4hku$ = optionsList;
  Object.defineProperty(Panel, 'Companion', {
    get: Panel$Companion_getInstance
  });
  package$component.Panel = Panel;
  Object.defineProperty(PanelStyle, 'Companion', {
    get: PanelStyle$Companion_getInstance
  });
  package$component.PanelStyle = PanelStyle;
  package$component.panel_4k1mq$ = panel;
  Object.defineProperty(ProgressBarRect, 'Companion', {
    get: ProgressBarRect$Companion_getInstance
  });
  package$component.ProgressBarRect = ProgressBarRect;
  Object.defineProperty(ProgressBarRectStyle, 'Companion', {
    get: ProgressBarRectStyle$Companion_getInstance
  });
  package$component.ProgressBarRectStyle = ProgressBarRectStyle;
  package$component.progressBarRectStyle_icn41r$ = progressBarRectStyle;
  package$component.progressBarRect_6si6zs$ = progressBarRect;
  package$component.showAssetLoadingBar_xyvsx5$ = showAssetLoadingBar;
  Object.defineProperty(RadioButton, 'Companion', {
    get: RadioButton$Companion_getInstance
  });
  package$component.RadioButton = RadioButton;
  package$component.radioButton_17d9qc$ = radioButton;
  package$component.radioButton_8z8may$ = radioButton_0;
  package$component.RadioGroup = RadioGroup;
  package$component.radioGroup_345k54$ = radioGroup;
  Object.defineProperty(Rect, 'Companion', {
    get: Rect$Companion_getInstance
  });
  package$component.Rect = Rect;
  package$component.rect_85s2bm$ = rect;
  Object.defineProperty(Rule, 'Companion', {
    get: Rule$Companion_getInstance
  });
  package$component.Rule = Rule;
  Object.defineProperty(RuleStyle, 'Companion', {
    get: RuleStyle$Companion_getInstance
  });
  package$component.RuleStyle = RuleStyle;
  Object.defineProperty(package$component, 'RuleStyleSerializer', {
    get: RuleStyleSerializer_getInstance
  });
  package$component.hr_t01pre$ = hr;
  package$component.vr_t01pre$ = vr;
  Object.defineProperty(HScrollBar, 'Companion', {
    get: HScrollBar$Companion_getInstance
  });
  var package$scroll = package$component.scroll || (package$component.scroll = {});
  package$scroll.HScrollBar = HScrollBar;
  package$scroll.hScrollBar_pxwlmr$ = hScrollBar;
  Object.defineProperty(HSlider, 'Companion', {
    get: HSlider$Companion_getInstance
  });
  package$scroll.HSlider = HSlider;
  package$scroll.hSlider_wwgp2a$ = hSlider;
  Object.defineProperty(ScrollArea, 'Companion', {
    get: ScrollArea$Companion_getInstance
  });
  package$scroll.ScrollArea = ScrollArea;
  Object.defineProperty(ScrollPolicy, 'OFF', {
    get: ScrollPolicy$OFF_getInstance
  });
  Object.defineProperty(ScrollPolicy, 'ON', {
    get: ScrollPolicy$ON_getInstance
  });
  Object.defineProperty(ScrollPolicy, 'AUTO', {
    get: ScrollPolicy$AUTO_getInstance
  });
  package$scroll.ScrollPolicy = ScrollPolicy;
  package$scroll.toCssString_1663pe$ = toCssString;
  package$scroll.scrollArea_fanjlz$ = scrollArea;
  Object.defineProperty(ScrollAreaStyle, 'Companion', {
    get: ScrollAreaStyle$Companion_getInstance
  });
  package$scroll.ScrollAreaStyle = ScrollAreaStyle;
  package$scroll.ScrollBarBase = ScrollBarBase;
  Object.defineProperty(ScrollBarStyle, 'Companion', {
    get: ScrollBarStyle$Companion_getInstance
  });
  package$scroll.ScrollBarStyle = ScrollBarStyle;
  package$scroll.ScrollModel = ScrollModel;
  package$scroll.MutableScrollModel = MutableScrollModel;
  package$scroll.ClampedScrollModel = ClampedScrollModel;
  package$scroll.MutableClampedScrollModel = MutableClampedScrollModel;
  package$scroll.ScrollModelImpl = ScrollModelImpl;
  Object.defineProperty(ScrollRect, 'Companion', {
    get: ScrollRect$Companion_getInstance
  });
  package$scroll.ScrollRect = ScrollRect;
  package$scroll.scrollRect_oy7180$ = scrollRect;
  Object.defineProperty(TossScroller, 'Companion', {
    get: TossScroller$Companion_getInstance
  });
  package$scroll.TossScroller = TossScroller;
  package$scroll.TossScrollModelBinding = TossScrollModelBinding;
  package$scroll.enableTossScrolling_mkm3i4$ = enableTossScrolling;
  package$scroll.disableTossScrolling_erfg7f$ = disableTossScrolling;
  Object.defineProperty(VScrollBar, 'Companion', {
    get: VScrollBar$Companion_getInstance
  });
  package$scroll.VScrollBar = VScrollBar;
  package$scroll.vScrollBar_tkotyn$ = vScrollBar;
  Object.defineProperty(VSlider, 'Companion', {
    get: VSlider$Companion_getInstance
  });
  package$scroll.VSlider = VSlider;
  package$scroll.vSlider_at0esw$ = vSlider;
  Object.defineProperty(SimpleItemRenderer, 'Companion', {
    get: SimpleItemRenderer$Companion_getInstance
  });
  package$component.SimpleItemRenderer = SimpleItemRenderer;
  package$component.simpleItemRenderer_ls8ylo$ = simpleItemRenderer;
  package$component.StackLayout = StackLayout;
  package$component.StackLayoutData = StackLayoutData;
  package$component.StackLayoutContainer = StackLayoutContainer;
  package$component.stack_339xz$ = stack;
  Object.defineProperty(Stage, 'Companion', {
    get: Stage$Companion_getInstance
  });
  package$component.Stage = Stage;
  Object.defineProperty(StageStyle, 'Companion', {
    get: StageStyle$Companion_getInstance
  });
  package$component.StageStyle = StageStyle;
  package$component.get_stage_xd4dkp$ = get_stage;
  var package$style = package$component.style || (package$component.style = {});
  package$style.Style = Style;
  package$style.MutableStyle = MutableStyle;
  package$style.StyleBase = StyleBase;
  package$style.onChanged_bs293j$ = onChanged;
  package$style.batch_xx8g0u$ = batch;
  package$style.styleProperty_k9sko8$ = styleProperty;
  package$style.set_qc129b$ = set_0;
  package$style.StyleProp = StyleProp;
  Object.defineProperty(package$style, 'noSkin', {
    get: function () {
      return noSkin;
    }
  });
  Object.defineProperty(package$style, 'noSkinOptional', {
    get: function () {
      return noSkinOptional;
    }
  });
  package$style.StyleBinding = StyleBinding;
  package$style.style_me8cu5$ = style;
  Object.defineProperty(Styles, 'Companion', {
    get: Styles$Companion_getInstance
  });
  package$style.Styles = Styles;
  package$style.StyleEntry = StyleEntry;
  package$style.StyleType = StyleType;
  package$style.StyleTag = StyleTag;
  package$style.styleTag = styleTag;
  package$style.styles_vsgycv$ = styles;
  package$style.addTag_252qwq$ = addTag;
  package$style.removeTag_252qwq$ = removeTag;
  package$style.setTags_ssotdh$ = setTags;
  package$style.removeTags_ssotdh$ = removeTags;
  package$style.addTags_ssotdh$ = addTags;
  package$style.setStyle_po3d9a$ = setStyle;
  package$style.setStyle_r7s299$ = setStyle_0;
  Object.defineProperty(TabNavigator, 'Companion', {
    get: TabNavigator$Companion_getInstance
  });
  package$component.TabNavigator = TabNavigator;
  package$component.TabNavigatorTab = TabNavigatorTab;
  Object.defineProperty(TabNavigatorStyle, 'Companion', {
    get: TabNavigatorStyle$Companion_getInstance
  });
  package$component.TabNavigatorStyle = TabNavigatorStyle;
  package$component.tabNavigator_b18d7o$ = tabNavigator;
  Object.defineProperty(EditableTextField, 'Companion', {
    get: EditableTextField$Companion_getInstance
  });
  var package$text = package$component.text || (package$component.text = {});
  package$text.EditableTextField = EditableTextField;
  package$text.TextCommander = TextCommander;
  package$text.exec_lpiurw$ = exec;
  package$text.queryBool_slabdu$ = queryBool;
  package$text.queryString_slabdu$ = queryString;
  package$text.queryColor_slabdu$ = queryColor;
  package$text.backColor_5ikqc$ = backColor;
  package$text.bold_67uulm$ = bold;
  package$text.copy_67uulm$ = copy;
  package$text.createLink_k9iajs$ = createLink;
  package$text.cut_67uulm$ = cut;
  package$text.fontName_k9iajs$ = fontName;
  package$text.fontSize_sb0juw$ = fontSize;
  package$text.foreColor_5ikqc$ = foreColor;
  package$text.formatBlock_k9iajs$ = formatBlock;
  package$text.indent_67uulm$ = indent;
  package$text.insertHorizontalRule_67uulm$ = insertHorizontalRule;
  package$text.insertImage_k9iajs$ = insertImage;
  package$text.insertOrderedList_67uulm$ = insertOrderedList;
  package$text.insertUnorderedList_67uulm$ = insertUnorderedList;
  package$text.insertParagraph_67uulm$ = insertParagraph;
  package$text.insertText_k9iajs$ = insertText;
  package$text.insertHtml_k9iajs$ = insertHtml;
  package$text.italic_67uulm$ = italic;
  package$text.justifyCenter_67uulm$ = justifyCenter;
  package$text.justifyFull_67uulm$ = justifyFull;
  package$text.justifyLeft_67uulm$ = justifyLeft;
  package$text.justifyRight_67uulm$ = justifyRight;
  package$text.outdent_67uulm$ = outdent;
  package$text.paste_67uulm$ = paste;
  package$text.redo_67uulm$ = redo;
  package$text.removeFormat_67uulm$ = removeFormat;
  package$text.selectAll_67uulm$ = selectAll;
  package$text.strikeThrough_67uulm$ = strikeThrough;
  package$text.subscript_67uulm$ = subscript;
  package$text.superscript_67uulm$ = superscript;
  package$text.underline_67uulm$ = underline;
  package$text.undo_67uulm$ = undo;
  package$text.unlink_67uulm$ = unlink;
  package$text.hiliteColor_5ikqc$ = hiliteColor;
  package$text.styleWithCSS_l3m7u9$ = styleWithCSS;
  Object.defineProperty(TextCommand, 'backColor', {
    get: TextCommand$backColor_getInstance
  });
  Object.defineProperty(TextCommand, 'bold', {
    get: TextCommand$bold_getInstance
  });
  Object.defineProperty(TextCommand, 'contentReadOnly', {
    get: TextCommand$contentReadOnly_getInstance
  });
  Object.defineProperty(TextCommand, 'copy', {
    get: TextCommand$copy_getInstance
  });
  Object.defineProperty(TextCommand, 'createLink', {
    get: TextCommand$createLink_getInstance
  });
  Object.defineProperty(TextCommand, 'cut', {
    get: TextCommand$cut_getInstance
  });
  Object.defineProperty(TextCommand, 'decreaseFontSize', {
    get: TextCommand$decreaseFontSize_getInstance
  });
  Object.defineProperty(TextCommand, 'delete', {
    get: TextCommand$delete_getInstance
  });
  Object.defineProperty(TextCommand, 'enableInlineTableEditing', {
    get: TextCommand$enableInlineTableEditing_getInstance
  });
  Object.defineProperty(TextCommand, 'enableObjectResizing', {
    get: TextCommand$enableObjectResizing_getInstance
  });
  Object.defineProperty(TextCommand, 'fontName', {
    get: TextCommand$fontName_getInstance
  });
  Object.defineProperty(TextCommand, 'fontSize', {
    get: TextCommand$fontSize_getInstance
  });
  Object.defineProperty(TextCommand, 'foreColor', {
    get: TextCommand$foreColor_getInstance
  });
  Object.defineProperty(TextCommand, 'formatBlock', {
    get: TextCommand$formatBlock_getInstance
  });
  Object.defineProperty(TextCommand, 'forwardDelete', {
    get: TextCommand$forwardDelete_getInstance
  });
  Object.defineProperty(TextCommand, 'heading', {
    get: TextCommand$heading_getInstance
  });
  Object.defineProperty(TextCommand, 'hiliteColor', {
    get: TextCommand$hiliteColor_getInstance
  });
  Object.defineProperty(TextCommand, 'increaseFontSize', {
    get: TextCommand$increaseFontSize_getInstance
  });
  Object.defineProperty(TextCommand, 'indent', {
    get: TextCommand$indent_getInstance
  });
  Object.defineProperty(TextCommand, 'insertBrOnReturn', {
    get: TextCommand$insertBrOnReturn_getInstance
  });
  Object.defineProperty(TextCommand, 'insertHorizontalRule', {
    get: TextCommand$insertHorizontalRule_getInstance
  });
  Object.defineProperty(TextCommand, 'insertHTML', {
    get: TextCommand$insertHTML_getInstance
  });
  Object.defineProperty(TextCommand, 'insertImage', {
    get: TextCommand$insertImage_getInstance
  });
  Object.defineProperty(TextCommand, 'insertOrderedList', {
    get: TextCommand$insertOrderedList_getInstance
  });
  Object.defineProperty(TextCommand, 'insertUnorderedList', {
    get: TextCommand$insertUnorderedList_getInstance
  });
  Object.defineProperty(TextCommand, 'insertParagraph', {
    get: TextCommand$insertParagraph_getInstance
  });
  Object.defineProperty(TextCommand, 'insertText', {
    get: TextCommand$insertText_getInstance
  });
  Object.defineProperty(TextCommand, 'italic', {
    get: TextCommand$italic_getInstance
  });
  Object.defineProperty(TextCommand, 'justifyCenter', {
    get: TextCommand$justifyCenter_getInstance
  });
  Object.defineProperty(TextCommand, 'justifyFull', {
    get: TextCommand$justifyFull_getInstance
  });
  Object.defineProperty(TextCommand, 'justifyLeft', {
    get: TextCommand$justifyLeft_getInstance
  });
  Object.defineProperty(TextCommand, 'justifyRight', {
    get: TextCommand$justifyRight_getInstance
  });
  Object.defineProperty(TextCommand, 'outdent', {
    get: TextCommand$outdent_getInstance
  });
  Object.defineProperty(TextCommand, 'paste', {
    get: TextCommand$paste_getInstance
  });
  Object.defineProperty(TextCommand, 'redo', {
    get: TextCommand$redo_getInstance
  });
  Object.defineProperty(TextCommand, 'removeFormat', {
    get: TextCommand$removeFormat_getInstance
  });
  Object.defineProperty(TextCommand, 'selectAll', {
    get: TextCommand$selectAll_getInstance
  });
  Object.defineProperty(TextCommand, 'strikeThrough', {
    get: TextCommand$strikeThrough_getInstance
  });
  Object.defineProperty(TextCommand, 'subscript', {
    get: TextCommand$subscript_getInstance
  });
  Object.defineProperty(TextCommand, 'superscript', {
    get: TextCommand$superscript_getInstance
  });
  Object.defineProperty(TextCommand, 'underline', {
    get: TextCommand$underline_getInstance
  });
  Object.defineProperty(TextCommand, 'undo', {
    get: TextCommand$undo_getInstance
  });
  Object.defineProperty(TextCommand, 'unlink', {
    get: TextCommand$unlink_getInstance
  });
  Object.defineProperty(TextCommand, 'styleWithCSS', {
    get: TextCommand$styleWithCSS_getInstance
  });
  package$text.TextCommand = TextCommand;
  Object.defineProperty(TextField, 'Companion', {
    get: TextField$Companion_getInstance
  });
  package$text.TextField = TextField;
  package$text.editableText_554rha$ = editableText;
  package$text.get_selectable_nuhhuc$ = get_selectable;
  package$text.set_selectable_4wfbfz$ = set_selectable;
  package$text.text_7i1swk$ = text_1;
  package$text.text_os944a$ = text_0;
  package$text.TextSelection = TextSelection;
  Object.defineProperty(FlowStyle, 'Companion', {
    get: FlowStyle$Companion_getInstance
  });
  package$text.FlowStyle = FlowStyle;
  Object.defineProperty(package$text, 'FlowStyleSerializer', {
    get: FlowStyleSerializer_getInstance
  });
  Object.defineProperty(CharStyle, 'Companion', {
    get: CharStyle$Companion_getInstance
  });
  package$text.CharStyle = CharStyle;
  Object.defineProperty(package$text, 'CharStyleSerializer', {
    get: CharStyleSerializer_getInstance
  });
  package$text.charStyle_8j5cku$ = charStyle;
  Object.defineProperty(TextInput, 'Companion', {
    get: TextInput$Companion_getInstance
  });
  package$text.TextInput = TextInput;
  package$text.get_selectable_pckjwk$ = get_selectable_0;
  package$text.set_selectable_ctwz4v$ = set_selectable_0;
  Object.defineProperty(TextArea, 'Companion', {
    get: TextArea$Companion_getInstance
  });
  package$text.TextArea = TextArea;
  package$text.get_selectable_c5jgw3$ = get_selectable_1;
  package$text.set_selectable_mw1lpa$ = set_selectable_1;
  package$text.textInput_6756bu$ = textInput;
  package$text.textArea_t0y7uh$ = textArea;
  Object.defineProperty(TextureComponent, 'Companion', {
    get: TextureComponent$Companion_getInstance
  });
  package$component.TextureComponent = TextureComponent;
  package$component.textureC_5bvz7g$ = textureC;
  package$component.textureC_84wgra$ = textureC_0;
  package$component.textureC_p36mbj$ = textureC_1;
  package$component.UiComponent = UiComponent;
  Object.defineProperty(UiComponentImpl, 'Companion', {
    get: UiComponentImpl$Companion_getInstance
  });
  package$component.UiComponentImpl = UiComponentImpl;
  Object.defineProperty(NativeComponent, 'Companion', {
    get: NativeComponent$Companion_getInstance
  });
  package$component.NativeComponent = NativeComponent;
  Object.defineProperty(package$component, 'NativeComponentDummy', {
    get: NativeComponentDummy_getInstance
  });
  package$component.Validatable = Validatable;
  package$component.ValidationTree = ValidationTree;
  package$component.validationTree_tsl8a9$ = validationTree;
  package$component.validationProp_a0927t$ = validationProp;
  Object.defineProperty(package$component, 'ValidationFlags', {
    get: ValidationFlags_getInstance
  });
  package$component.invalidateSize_6wsfsl$ = invalidateSize;
  package$component.invalidateLayout_6wsfsl$ = invalidateLayout;
  package$component.invalidateProperties_6wsfsl$ = invalidateProperties;
  Object.defineProperty(VDivider, 'Companion', {
    get: VDivider$Companion_getInstance
  });
  package$component.VDivider = VDivider;
  Object.defineProperty(DividerStyle, 'Companion', {
    get: DividerStyle$Companion_getInstance
  });
  package$component.DividerStyle = DividerStyle;
  package$component.vDivider_x2925f$ = vDivider;
  Object.defineProperty(WindowPanel, 'Companion', {
    get: WindowPanel$Companion_getInstance
  });
  package$component.WindowPanel = WindowPanel;
  Object.defineProperty(WindowPanelStyle, 'Companion', {
    get: WindowPanelStyle$Companion_getInstance
  });
  package$component.WindowPanelStyle = WindowPanelStyle;
  package$component.windowPanel_le0aby$ = windowPanel;
  Object.defineProperty(AppConfig, 'Companion', {
    get: AppConfig$Companion_getInstance
  });
  var package$core = package$acornui.core || (package$acornui.core = {});
  package$core.AppConfig = AppConfig;
  package$core.WindowConfig = WindowConfig;
  package$core.GlConfig = GlConfig;
  Object.defineProperty(package$core, 'UserInfo', {
    get: UserInfo_getInstance
  });
  Object.defineProperty(Browser, 'NONE', {
    get: Browser$NONE_getInstance
  });
  Object.defineProperty(Browser, 'IE', {
    get: Browser$IE_getInstance
  });
  Object.defineProperty(Browser, 'FX', {
    get: Browser$FX_getInstance
  });
  Object.defineProperty(Browser, 'CH', {
    get: Browser$CH_getInstance
  });
  Object.defineProperty(Browser, 'SF', {
    get: Browser$SF_getInstance
  });
  package$core.Browser = Browser;
  var package$assets = package$core.assets || (package$core.assets = {});
  package$assets.assetBinding_q8ohgi$ = assetBinding;
  package$assets.assetBinding_h42ago$ = assetBinding_0;
  package$assets.AssetBinding = AssetBinding;
  package$assets.loadDecorated_uo8azo$ = loadDecorated_0;
  package$assets.loadDecorated_tjxxly$ = loadDecorated;
  package$assets.unloadDecorated_uo8azo$ = unloadDecorated_0;
  package$assets.unloadDecorated_2m7jon$ = unloadDecorated;
  package$assets.AssetLoader = AssetLoader;
  package$assets.MutableAssetLoader = MutableAssetLoader;
  Object.defineProperty(AssetManager, 'Companion', {
    get: AssetManager$Companion_getInstance
  });
  package$assets.AssetManager = AssetManager;
  Object.defineProperty(AssetManagerImpl, 'Companion', {
    get: AssetManagerImpl$Companion_getInstance
  });
  package$assets.AssetManagerImpl = AssetManagerImpl;
  package$assets.AssetType = AssetType;
  Object.defineProperty(package$assets, 'AssetTypes', {
    get: AssetTypes_getInstance
  });
  package$assets.loadJson_de16hq$ = loadJson;
  package$assets.loadJson_p8thd9$ = loadJson_0;
  Object.defineProperty(Cache, 'Companion', {
    get: Cache$Companion_getInstance
  });
  package$assets.Cache = Cache;
  package$assets.CacheImpl = CacheImpl;
  package$assets.CacheKey = CacheKey;
  package$assets.jsonDecorator_wk6irm$ = jsonDecorator;
  package$assets.JsonDecorator = JsonDecorator;
  package$assets.jsonBinding_q3uvuv$ = jsonBinding;
  package$assets.loadJson_ee0luc$ = loadJson_1;
  package$assets.unloadJson_ee0luc$ = unloadJson;
  package$assets.LoadingQueueBusyWatch = LoadingQueueBusyWatch;
  package$assets.loadingQueueBusyWatch_4yfvcu$ = loadingQueueBusyWatch;
  var package$audio = package$core.audio || (package$core.audio = {});
  package$audio.AudioDevice = AudioDevice;
  Object.defineProperty(package$audio, 'DummyAudioDevice', {
    get: DummyAudioDevice_getInstance
  });
  Object.defineProperty(AudioManager, 'Companion', {
    get: AudioManager$Companion_getInstance
  });
  package$audio.AudioManager = AudioManager;
  Object.defineProperty(MutableAudioManager, 'Companion', {
    get: MutableAudioManager$Companion_getInstance
  });
  package$audio.MutableAudioManager = MutableAudioManager;
  package$audio.AudioManagerImpl = AudioManagerImpl;
  package$audio.SoundFactory = SoundFactory;
  package$audio.Sound = Sound;
  package$audio.Music = Music;
  Object.defineProperty(MusicReadyState, 'NOTHING', {
    get: MusicReadyState$NOTHING_getInstance
  });
  Object.defineProperty(MusicReadyState, 'READY', {
    get: MusicReadyState$READY_getInstance
  });
  package$audio.MusicReadyState = MusicReadyState;
  package$audio.setPanning_wn5ry0$ = setPanning;
  package$audio.tweenVolume_vjz4g6$ = tweenVolume;
  var package$behavior = package$core.behavior || (package$core.behavior = {});
  package$behavior.Selection = Selection;
  var package$browser = package$core.browser || (package$core.browser = {});
  package$browser.Location = Location;
  package$browser.MultipartFormData = MultipartFormData;
  package$browser.FormDataItem = FormDataItem;
  package$browser.ByteArrayFormItem = ByteArrayFormItem;
  package$browser.StringFormItem = StringFormItem;
  Object.defineProperty(CursorManager, 'Companion', {
    get: CursorManager$Companion_getInstance
  });
  var package$cursor = package$core.cursor || (package$core.cursor = {});
  package$cursor.CursorManager = CursorManager;
  package$cursor.Cursor = Cursor;
  Object.defineProperty(CursorReference, 'Companion', {
    get: CursorReference$Companion_getInstance
  });
  package$cursor.CursorReference = CursorReference;
  package$cursor.CursorManagerBase = CursorManagerBase;
  Object.defineProperty(package$cursor, 'StandardCursors', {
    get: StandardCursors_getInstance
  });
  Object.defineProperty(package$cursor, 'CursorPriority', {
    get: CursorPriority_getInstance
  });
  Object.defineProperty(RollOverCursor, 'Companion', {
    get: RollOverCursor$Companion_getInstance
  });
  package$cursor.RollOverCursor = RollOverCursor;
  package$cursor.clearCursor_fo06qu$ = clearCursor;
  package$cursor.cursor_43s1tk$ = cursor;
  var package$di = package$core.di || (package$core.di = {});
  package$di.Bootstrap = Bootstrap;
  package$di.scope_dp61z4$ = scope;
  package$di.Scoped = Scoped;
  package$di.injectOptional_db32c5$ = injectOptional_0;
  package$di.injectOptional_y3a68v$ = injectOptional;
  package$di.inject_y3a68v$ = inject;
  package$di.Injector = Injector;
  package$di.DKey = DKey;
  package$di.DependencyKeyImpl = DependencyKeyImpl;
  package$di.dKey_9ce4rd$ = dKey;
  package$di.Owned = Owned;
  package$di.owns_wir4s5$ = owns;
  package$di.own_hwf7iz$ = own;
  package$di.OwnedImpl = OwnedImpl;
  var package$focus = package$core.focus || (package$core.focus = {});
  package$focus.FakeFocusMouse = FakeFocusMouse;
  package$focus.fakeFocusMouse_xd4dkp$ = fakeFocusMouse;
  Object.defineProperty(FocusManager, 'Companion', {
    get: FocusManager$Companion_getInstance
  });
  package$focus.FocusManager = FocusManager;
  Object.defineProperty(FocusChangeResult, 'UNCHANGED', {
    get: FocusChangeResult$UNCHANGED_getInstance
  });
  Object.defineProperty(FocusChangeResult, 'CHANGED', {
    get: FocusChangeResult$CHANGED_getInstance
  });
  Object.defineProperty(FocusChangeResult, 'CANCELED', {
    get: FocusChangeResult$CANCELED_getInstance
  });
  package$focus.FocusChangeResult = FocusChangeResult;
  package$focus.FocusContainer = FocusContainer;
  package$focus.Focusable = Focusable;
  package$focus.get_firstFocusableChild_pbrlc3$ = get_firstFocusableChild;
  package$focus.focusFirst_erfg7f$ = focusFirst;
  package$focus.FocusManagerImpl = FocusManagerImpl;
  Object.defineProperty(FocusNode, 'Companion', {
    get: FocusNode$Companion_getInstance
  });
  package$focus.FocusNode = FocusNode;
  package$focus.SimpleHighlight = SimpleHighlight;
  Object.defineProperty(AtlasComponent, 'Companion', {
    get: AtlasComponent$Companion_getInstance
  });
  var package$graphics = package$core.graphics || (package$core.graphics = {});
  package$graphics.AtlasComponent = AtlasComponent;
  package$graphics.atlas_xor2vl$ = atlas_0;
  package$graphics.atlas_8hemid$ = atlas;
  package$graphics.contentsAtlas_46zsid$ = contentsAtlas;
  package$graphics.AtlasPageDecorator = AtlasPageDecorator;
  package$graphics.AtlasRegionBinding = AtlasRegionBinding;
  package$graphics.atlasRegionBinding_q5n96q$ = atlasRegionBinding;
  package$graphics.atlasRegionBinding_340eli$ = atlasRegionBinding_0;
  package$graphics.atlasPageTextureBinding_xc6y34$ = atlasPageTextureBinding;
  package$graphics.atlasPageBinding_xs0oc7$ = atlasPageBinding;
  Object.defineProperty(BlendMode, 'Companion', {
    get: BlendMode$Companion_getInstance
  });
  package$graphics.BlendMode = BlendMode;
  Object.defineProperty(Camera, 'Companion', {
    get: Camera$Companion_getInstance
  });
  package$graphics.Camera = Camera;
  package$graphics.CameraBase = CameraBase;
  package$graphics.OrthographicCamera = OrthographicCamera;
  package$graphics.orthographicCamera_jwv1mx$ = orthographicCamera;
  package$graphics.PerspectiveCamera = PerspectiveCamera;
  package$graphics.perspectiveCamera_milcn$ = perspectiveCamera;
  package$graphics.setToProjection_exmamw$ = setToProjection;
  package$graphics.RgbData = RgbData;
  package$graphics.rgbData_o5cxdp$ = rgbData;
  Object.defineProperty(Scaling, 'FIT', {
    get: Scaling$FIT_getInstance
  });
  Object.defineProperty(Scaling, 'FILL', {
    get: Scaling$FILL_getInstance
  });
  Object.defineProperty(Scaling, 'FILL_X', {
    get: Scaling$FILL_X_getInstance
  });
  Object.defineProperty(Scaling, 'FILL_Y', {
    get: Scaling$FILL_Y_getInstance
  });
  Object.defineProperty(Scaling, 'STRETCH', {
    get: Scaling$STRETCH_getInstance
  });
  Object.defineProperty(Scaling, 'STRETCH_X', {
    get: Scaling$STRETCH_X_getInstance
  });
  Object.defineProperty(Scaling, 'STRETCH_Y', {
    get: Scaling$STRETCH_Y_getInstance
  });
  Object.defineProperty(Scaling, 'NONE', {
    get: Scaling$NONE_getInstance
  });
  package$graphics.Scaling = Scaling;
  package$graphics.SpriteAnimation = SpriteAnimation;
  package$graphics.spriteAnimation_1h9fky$ = spriteAnimation;
  package$graphics.spriteAnimation_olq3ye$ = spriteAnimation_0;
  package$graphics.Texture = Texture;
  package$graphics.TextureAtlasData = TextureAtlasData;
  Object.defineProperty(package$graphics, 'TextureAtlasDataSerializer', {
    get: TextureAtlasDataSerializer_getInstance
  });
  package$graphics.AtlasPageData = AtlasPageData;
  Object.defineProperty(package$graphics, 'AtlasPageSerializer', {
    get: AtlasPageSerializer_getInstance
  });
  package$graphics.AtlasRegionData = AtlasRegionData;
  Object.defineProperty(package$graphics, 'AtlasRegionDataSerializer', {
    get: AtlasRegionDataSerializer_getInstance
  });
  Object.defineProperty(Window, 'Companion', {
    get: Window$Companion_getInstance
  });
  package$graphics.Window = Window;
  package$graphics.PopUpSpecs = PopUpSpecs;
  package$core.Child = Child;
  package$core.Parent = Parent;
  package$core.MutableParent = MutableParent;
  package$core.ParentBase = ParentBase;
  package$core.ConcurrentParent = ConcurrentParent;
  Object.defineProperty(TreeWalk, 'CONTINUE', {
    get: TreeWalk$CONTINUE_getInstance
  });
  Object.defineProperty(TreeWalk, 'HALT', {
    get: TreeWalk$HALT_getInstance
  });
  Object.defineProperty(TreeWalk, 'SKIP', {
    get: TreeWalk$SKIP_getInstance
  });
  Object.defineProperty(TreeWalk, 'ISOLATE', {
    get: TreeWalk$ISOLATE_getInstance
  });
  package$core.TreeWalk = TreeWalk;
  package$core.childWalkLevelOrder$f = childWalkLevelOrder$lambda;
  package$core.childWalkLevelOrder_ym7dh1$ = childWalkLevelOrder_0;
  package$core.childWalkLevelOrder_xwrp08$ = childWalkLevelOrder;
  package$core.childWalkLevelOrderReversed_xwrp08$ = childWalkLevelOrderReversed;
  package$core.findChildLevelOrder$f = findChildLevelOrder$lambda;
  package$core.findChildLevelOrder_wi81li$ = findChildLevelOrder;
  package$core.findChildLevelOrder_j0gpex$ = findChildLevelOrder_0;
  package$core.findLastChildLevelOrder_j0gpex$ = findLastChildLevelOrder;
  package$core.childWalkPreOrder$f = childWalkPreOrder$lambda;
  package$core.childWalkPreOrder_ym7dh1$ = childWalkPreOrder_0;
  package$core.childWalkPreOrder_xwrp08$ = childWalkPreOrder;
  package$core.childWalkPreOrderReversed_xwrp08$ = childWalkPreOrderReversed;
  package$core.findChildPreOrder$f = findChildPreOrder$lambda;
  package$core.findChildPreOrder_wi81li$ = findChildPreOrder;
  package$core.findChildPreOrder_j0gpex$ = findChildPreOrder_0;
  package$core.findLastChildPreOrder_j0gpex$ = findLastChildPreOrder;
  package$core.parentWalk_j0gpex$ = parentWalk;
  package$core.root_6iy55o$ = root;
  package$core.ancestryCount_6iy55o$ = ancestryCount;
  package$core.ancestry_mnhe99$ = ancestry;
  package$core.isAncestorOf_cy0rjl$ = isAncestorOf;
  package$core.isDescendantOf_cy0rjl$ = isDescendantOf;
  package$core.findCommonParent_h35tww$ = findCommonParent;
  package$core.leftDescendant_doye8s$ = leftDescendant;
  package$core.rightDescendant_doye8s$ = rightDescendant;
  package$core.previousSibling_doye8s$ = previousSibling;
  package$core.nextSibling_doye8s$ = nextSibling;
  package$core.isBefore_cy0rjl$ = isBefore;
  package$core.isAfter_cy0rjl$ = isAfter;
  Object.defineProperty(I18n, 'Companion', {
    get: I18n$Companion_getInstance
  });
  var package$i18n = package$core.i18n || (package$core.i18n = {});
  package$i18n.I18n = I18n;
  package$i18n.I18nBundle = I18nBundle;
  package$i18n.i18n_jshkfs$ = i18n;
  package$i18n.I18nImpl = I18nImpl;
  package$i18n.I18nBundleImpl = I18nBundleImpl;
  Object.defineProperty(package$i18n, 'i18nPath', {
    get: function () {
      return i18nPath;
    },
    set: function (value) {
      i18nPath = value;
    }
  });
  Object.defineProperty(package$i18n, 'i18nDefaultPath', {
    get: function () {
      return i18nDefaultPath;
    },
    set: function (value) {
      i18nDefaultPath = value;
    }
  });
  package$i18n.loadBundle_bbw4ww$ = loadBundle;
  package$i18n.loadBundleForLocale_bbw4ww$ = loadBundleForLocale;
  Object.defineProperty(package$i18n, 'PropertiesDecorator', {
    get: PropertiesDecorator_getInstance
  });
  var package$input = package$core.input || (package$core.input = {});
  Object.defineProperty(package$input, 'Ascii', {
    get: Ascii_getInstance
  });
  package$input.mouseDown_3ayf9d$ = mouseDown;
  package$input.mouseUp_3ayf9d$ = mouseUp;
  package$input.mouseMove_3ayf9d$ = mouseMove;
  package$input.keyDown_3ayf9d$ = keyDown;
  package$input.keyUp_3ayf9d$ = keyUp;
  package$input.mouseOver_3ayf9d$ = mouseOver;
  package$input.mouseOut_3ayf9d$ = mouseOut;
  package$input.wheel_3ayf9d$ = wheel;
  package$input.touchStart_3ayf9d$ = touchStart;
  package$input.touchMove_3ayf9d$ = touchMove;
  package$input.touchEnd_3ayf9d$ = touchEnd;
  package$input.touchCancel_3ayf9d$ = touchCancel;
  package$input.clipboardCopy_3ayf9d$ = clipboardCopy;
  package$input.clipboardCut_3ayf9d$ = clipboardCut;
  package$input.clipboardPaste_3ayf9d$ = clipboardPaste;
  var package$interaction = package$input.interaction || (package$input.interaction = {});
  package$interaction.CharInteraction = CharInteraction;
  Object.defineProperty(ClickEvent, 'Companion', {
    get: ClickEvent$Companion_getInstance
  });
  package$interaction.ClickEvent = ClickEvent;
  package$interaction.click_3ayf9d$ = click;
  package$interaction.rightClick_3ayf9d$ = rightClick;
  package$interaction.middleClick_3ayf9d$ = middleClick;
  package$interaction.backClick_3ayf9d$ = backClick;
  package$interaction.forwardClick_3ayf9d$ = forwardClick;
  package$interaction.dispatchClick_fo06qu$ = dispatchClick;
  package$interaction.ClickDispatcher = ClickDispatcher;
  package$interaction.clickDispatcher_xd4dkp$ = clickDispatcher;
  Object.defineProperty(ClipboardInteraction, 'Companion', {
    get: ClipboardInteraction$Companion_getInstance
  });
  package$interaction.ClipboardInteraction = ClipboardInteraction;
  package$interaction.DataTransferRead = DataTransferRead;
  package$interaction.DataTransferItem = DataTransferItem;
  Object.defineProperty(DownRepeat, 'Companion', {
    get: DownRepeat$Companion_getInstance
  });
  package$interaction.DownRepeat = DownRepeat;
  package$interaction.downRepeatEnabled_erfg7f$ = downRepeatEnabled;
  package$interaction.enableDownRepeat_erfg7f$ = enableDownRepeat;
  package$interaction.enableDownRepeat_lw8fzr$ = enableDownRepeat_0;
  package$interaction.disableDownRepeat_erfg7f$ = disableDownRepeat;
  Object.defineProperty(DownRepeatStyle, 'Companion', {
    get: DownRepeatStyle$Companion_getInstance
  });
  package$interaction.DownRepeatStyle = DownRepeatStyle;
  Object.defineProperty(Drag, 'Companion', {
    get: Drag$Companion_getInstance
  });
  package$interaction.Drag = Drag;
  package$interaction.DragImpl = DragImpl;
  Object.defineProperty(DragEvent, 'Companion', {
    get: DragEvent$Companion_getInstance
  });
  package$interaction.DragEvent = DragEvent;
  package$interaction.dragAttachment_mkm3i4$ = dragAttachment;
  package$interaction.dragStart_erfg7f$ = dragStart;
  package$interaction.drag_erfg7f$ = drag;
  package$interaction.dragEnd_erfg7f$ = dragEnd;
  Object.defineProperty(KeyInteraction, 'Companion', {
    get: KeyInteraction$Companion_getInstance
  });
  package$interaction.KeyInteraction = KeyInteraction;
  Object.defineProperty(KeyLocation, 'STANDARD', {
    get: KeyLocation$STANDARD_getInstance
  });
  Object.defineProperty(KeyLocation, 'LEFT', {
    get: KeyLocation$LEFT_getInstance
  });
  Object.defineProperty(KeyLocation, 'RIGHT', {
    get: KeyLocation$RIGHT_getInstance
  });
  Object.defineProperty(KeyLocation, 'NUMBER_PAD', {
    get: KeyLocation$NUMBER_PAD_getInstance
  });
  Object.defineProperty(KeyLocation, 'UNKNOWN', {
    get: KeyLocation$UNKNOWN_getInstance
  });
  package$interaction.KeyLocation = KeyLocation;
  Object.defineProperty(MouseInteraction, 'Companion', {
    get: MouseInteraction$Companion_getInstance
  });
  package$interaction.MouseInteraction = MouseInteraction;
  Object.defineProperty(WheelInteraction, 'Companion', {
    get: WheelInteraction$Companion_getInstance
  });
  package$interaction.WheelInteraction = WheelInteraction;
  Object.defineProperty(MouseUpOutside, 'Companion', {
    get: MouseUpOutside$Companion_getInstance
  });
  package$interaction.MouseUpOutside = MouseUpOutside;
  package$interaction.mouseUpOutside_fo06qu$ = mouseUpOutside;
  Object.defineProperty(PinchInteraction, 'Companion', {
    get: PinchInteraction$Companion_getInstance
  });
  package$interaction.PinchInteraction = PinchInteraction;
  Object.defineProperty(Pinch, 'Companion', {
    get: Pinch$Companion_getInstance
  });
  package$interaction.Pinch = Pinch;
  package$interaction.pinchAttachment_ca3jkb$ = pinchAttachment;
  package$interaction.pinch_fo06qu$ = pinch;
  package$interaction.rollOver_3ayf9d$ = rollOver;
  package$interaction.rollOut_3ayf9d$ = rollOut;
  Object.defineProperty(TouchInteraction, 'Companion', {
    get: TouchInteraction$Companion_getInstance
  });
  package$interaction.TouchInteraction = TouchInteraction;
  Object.defineProperty(Touch, 'Companion', {
    get: Touch$Companion_getInstance
  });
  package$interaction.Touch = Touch;
  Object.defineProperty(InteractivityManager, 'Companion', {
    get: InteractivityManager$Companion_getInstance
  });
  package$input.InteractivityManager = InteractivityManager;
  Object.defineProperty(InteractionType, 'Companion', {
    get: InteractionType$Companion_getInstance
  });
  package$input.InteractionType = InteractionType;
  package$input.InteractionEvent = InteractionEvent;
  Object.defineProperty(InteractionEventBase, 'Companion', {
    get: InteractionEventBase$Companion_getInstance
  });
  package$input.InteractionEventBase = InteractionEventBase;
  package$input.InteractivityManagerImpl = InteractivityManagerImpl;
  Object.defineProperty(KeyState, 'Companion', {
    get: KeyState$Companion_getInstance
  });
  package$input.KeyState = KeyState;
  Object.defineProperty(KeyInput, 'Companion', {
    get: KeyInput$Companion_getInstance
  });
  package$input.KeyInput = KeyInput;
  Object.defineProperty(MouseState, 'Companion', {
    get: MouseState$Companion_getInstance
  });
  package$input.MouseState = MouseState;
  Object.defineProperty(MouseInput, 'Companion', {
    get: MouseInput$Companion_getInstance
  });
  package$input.MouseInput = MouseInput;
  package$input.Propagation = Propagation;
  Object.defineProperty(WhichButton, 'UNKNOWN', {
    get: WhichButton$UNKNOWN_getInstance
  });
  Object.defineProperty(WhichButton, 'LEFT', {
    get: WhichButton$LEFT_getInstance
  });
  Object.defineProperty(WhichButton, 'RIGHT', {
    get: WhichButton$RIGHT_getInstance
  });
  Object.defineProperty(WhichButton, 'MIDDLE', {
    get: WhichButton$MIDDLE_getInstance
  });
  Object.defineProperty(WhichButton, 'BACK', {
    get: WhichButton$BACK_getInstance
  });
  Object.defineProperty(WhichButton, 'FORWARD', {
    get: WhichButton$FORWARD_getInstance
  });
  package$input.WhichButton = WhichButton;
  Object.defineProperty(BufferFactory, 'Companion', {
    get: BufferFactory$Companion_getInstance
  });
  var package$io = package$core.io || (package$core.io = {});
  package$io.BufferFactory = BufferFactory;
  Object.defineProperty(Files, 'Companion', {
    get: Files$Companion_getInstance
  });
  var package$file = package$io.file || (package$io.file = {});
  package$file.Files = Files;
  package$file.FilesImpl = FilesImpl;
  package$file.FileEntry = FileEntry;
  package$file.Directory = Directory;
  Object.defineProperty(package$io, 'JSON_KEY', {
    get: function () {
      return JSON_KEY;
    }
  });
  package$core.Lifecycle = Lifecycle;
  package$core.LifecycleBase = LifecycleBase;
  package$core.Drivable = Drivable;
  package$core.Updatable = Updatable;
  package$core.DrivableChild = DrivableChild;
  package$core.DrivableChildBase = DrivableChildBase;
  Object.defineProperty(Binder, 'Companion', {
    get: Binder$Companion_getInstance
  });
  var package$mvc = package$core.mvc || (package$core.mvc = {});
  package$mvc.Binder = Binder;
  package$mvc.signalBinding_xtwq58$ = signalBinding;
  package$mvc.binder = binder;
  Object.defineProperty(CommandDispatcher, 'Companion', {
    get: CommandDispatcher$Companion_getInstance
  });
  package$mvc.CommandDispatcher = CommandDispatcher;
  package$mvc.invokeCommand_ime8ct$ = invokeCommand;
  package$mvc.CommandDispatcherImpl = CommandDispatcherImpl;
  package$mvc.CommandType = CommandType;
  package$mvc.Command = Command;
  package$mvc.Commander = Commander;
  package$mvc.commander_xd4dkp$ = commander;
  Object.defineProperty(NavigationManager, 'Companion', {
    get: NavigationManager$Companion_getInstance
  });
  var package$nav = package$core.nav || (package$core.nav = {});
  package$nav.NavigationManager = NavigationManager;
  package$nav.NavEvent = NavEvent;
  package$nav.navigate_tcnizb$ = navigate;
  Object.defineProperty(NavNode, 'Companion', {
    get: NavNode$Companion_getInstance
  });
  package$nav.NavNode = NavNode;
  package$nav.NavigationManagerImpl = NavigationManagerImpl;
  package$nav.NavEventImpl = NavEventImpl;
  package$nav.NavBindable = NavBindable;
  package$nav.NavBinding = NavBinding;
  package$nav.NavBindingEvent = NavBindingEvent;
  package$nav.navBinding_v5vokz$ = navBinding;
  package$nav.navAddElement_3o5m0o$ = navAddElement;
  package$nav.navAddChild_lem167$ = navAddChild;
  package$nav.bindToPath_cs58xq$ = bindToPath;
  Object.defineProperty(Persistence, 'Companion', {
    get: Persistence$Companion_getInstance
  });
  var package$persistance = package$core.persistance || (package$core.persistance = {});
  package$persistance.Persistence = Persistence;
  var package$popup = package$core.popup || (package$core.popup = {});
  package$popup.Lift = Lift;
  package$popup.lift_bkval1$ = lift;
  Object.defineProperty(PopUpManager, 'Companion', {
    get: PopUpManager$Companion_getInstance
  });
  package$popup.PopUpManager = PopUpManager;
  package$popup.PopUpInfo = PopUpInfo;
  Object.defineProperty(PopUpManagerStyle, 'Companion', {
    get: PopUpManagerStyle$Companion_getInstance
  });
  package$popup.PopUpManagerStyle = PopUpManagerStyle;
  package$popup.PopUpManagerImpl = PopUpManagerImpl;
  package$popup.addPopUp_40ntlz$ = addPopUp;
  package$popup.removePopUp_9wppfc$ = removePopUp;
  var package$request = package$core.request || (package$core.request = {});
  package$request.UrlRequestData = UrlRequestData;
  Object.defineProperty(package$request, 'UrlRequestMethod', {
    get: UrlRequestMethod_getInstance
  });
  Object.defineProperty(ResponseType, 'BINARY', {
    get: ResponseType$BINARY_getInstance
  });
  Object.defineProperty(ResponseType, 'TEXT', {
    get: ResponseType$TEXT_getInstance
  });
  package$request.ResponseType = ResponseType;
  Object.defineProperty(RestServiceFactory, 'Companion', {
    get: RestServiceFactory$Companion_getInstance
  });
  package$request.RestServiceFactory = RestServiceFactory;
  package$request.HttpRequest = HttpRequest;
  package$request.MutableHttpRequest = MutableHttpRequest;
  package$request.createRequest = createRequest;
  package$request.HttpResponse = HttpResponse;
  package$request.ResponseException = ResponseException;
  Object.defineProperty(SelectionManager, 'Companion', {
    get: SelectionManager$Companion_getInstance
  });
  var package$selection = package$core.selection || (package$core.selection = {});
  package$selection.SelectionManager = SelectionManager;
  package$selection.SelectionManagerImpl = SelectionManagerImpl;
  var package$string = package$core.string || (package$core.string = {});
  package$string.Formatter = Formatter;
  Object.defineProperty(package$string, 'ToStringFormatter', {
    get: ToStringFormatter_getInstance
  });
  Object.defineProperty(package$string, 'IntFormatter', {
    get: IntFormatter_getInstance
  });
  Object.defineProperty(package$string, 'UidUtil', {
    get: UidUtil_getInstance
  });
  var package$time = package$core.time || (package$core.time = {});
  package$time.Date = Date_0;
  Object.defineProperty(DateUtil, 'Companion', {
    get: DateUtil$Companion_getInstance
  });
  package$time.DateUtil = DateUtil;
  Object.defineProperty(package$time, 'Eras', {
    get: Eras_getInstance
  });
  package$time.LimitedCallback = LimitedCallback;
  package$time.limitedCallback_ro1ol9$ = limitedCallback;
  package$time.DelayedCallback = DelayedCallback;
  package$time.delayedCallback_ro1ol9$ = delayedCallback;
  Object.defineProperty(package$time, 'Months', {
    get: Months_getInstance
  });
  package$time.onTick_fz98er$ = onTick;
  Object.defineProperty(TimeDriver, 'Companion', {
    get: TimeDriver$Companion_getInstance
  });
  package$time.TimeDriver = TimeDriver;
  package$time.TimeDriverImpl = TimeDriverImpl;
  package$time.drive_o5g4ox$ = drive_0;
  package$time.TimeProvider = TimeProvider;
  Object.defineProperty(package$time, 'time', {
    get: get_time,
    set: set_time
  });
  Object.defineProperty(Timer, 'Companion', {
    get: Timer$Companion_getInstance
  });
  package$time.Timer = Timer;
  package$time.timer_5uu2lh$ = timer;
  Object.defineProperty(EnterFrame, 'Companion', {
    get: EnterFrame$Companion_getInstance
  });
  package$time.EnterFrame = EnterFrame;
  package$time.callLater_wa5o32$ = callLater;
  package$time.callLater_23gt2n$ = callLater_0;
  package$time.enterFrame_7tkcza$ = enterFrame;
  package$time.enterFrame_9t0aih$ = enterFrame_0;
  package$time.measure_wa5o32$ = measure;
  package$time.averagedMeasure_wa5o32$ = averagedMeasure;
  package$time.printFrameMeasure = printFrameMeasure;
  Object.defineProperty(CallbackTween, 'Companion', {
    get: CallbackTween$Companion_getInstance
  });
  var package$tween = package$core.tween || (package$core.tween = {});
  package$tween.CallbackTween = CallbackTween;
  Object.defineProperty(package$tween, 'TweenRegistry', {
    get: TweenRegistry_getInstance
  });
  package$tween.createPropertyTween_abp5vu$ = createPropertyTween;
  package$tween.TimelineTween = TimelineTween;
  package$tween.timelineTween_yvi22g$ = timelineTween;
  Object.defineProperty(Tween, 'Companion', {
    get: Tween$Companion_getInstance
  });
  package$tween.Tween = Tween;
  package$tween.TweenBase = TweenBase;
  package$tween.TweenImpl = TweenImpl;
  Object.defineProperty(TweenDriver, 'Companion', {
    get: TweenDriver$Companion_getInstance
  });
  package$tween.TweenDriver = TweenDriver;
  package$tween.driveTween_asoma$ = driveTween;
  package$tween.drive_9my1al$ = drive;
  package$tween.tween_bj4ia8$ = tween;
  package$tween.toFromTween_n8x9nj$ = toFromTween;
  package$tween.relativeTween_gho0c3$ = relativeTween;
  package$tween.tweenCall_l5b6g4$ = tweenCall;
  package$tween.tweenAlpha_r80noc$ = tweenAlpha;
  package$tween.tweenX_r80noc$ = tweenX;
  package$tween.tweenY_r80noc$ = tweenY;
  package$tween.tweenZ_r80noc$ = tweenZ;
  package$tween.tweenScale_fswqy1$ = tweenScale;
  package$tween.tweenScaleX_r80noc$ = tweenScaleX;
  package$tween.tweenScaleY_r80noc$ = tweenScaleY;
  package$tween.tweenRotationX_r80noc$ = tweenRotationX;
  package$tween.tweenRotationY_r80noc$ = tweenRotationY;
  package$tween.tweenRotation_r80noc$ = tweenRotation;
  package$tween.tweenPosition_i452bo$ = tweenPosition;
  package$tween.tweenTint_kus9mz$ = tweenTint;
  Object.defineProperty(Version, 'Companion', {
    get: Version$Companion_getInstance
  });
  package$core.Version = Version;
  package$acornui.debugWhyCantSee_k58t2y$ = debugWhyCantSee;
  package$acornui.debugFullPath_k58t2y$ = debugFullPath;
  Object.defineProperty(DynamicMeshComponent, 'Companion', {
    get: DynamicMeshComponent$Companion_getInstance
  });
  var package$gl = package$acornui.gl || (package$acornui.gl = {});
  var package$component_0 = package$gl.component || (package$gl.component = {});
  var package$drawing = package$component_0.drawing || (package$component_0.drawing = {});
  package$drawing.DynamicMeshComponent = DynamicMeshComponent;
  package$drawing.dynamicMeshC_e93gom$ = dynamicMeshC;
  Object.defineProperty(MeshData, 'Companion', {
    get: MeshData$Companion_getInstance
  });
  package$drawing.MeshData = MeshData;
  package$drawing.rotate_mth9lx$ = rotate;
  package$drawing.transform_q20wsg$ = transform;
  package$drawing.meshData_1sp366$ = meshData;
  package$drawing.FillStyle = FillStyle;
  package$drawing.LineStyle = LineStyle;
  Object.defineProperty(package$drawing, 'CapStyle', {
    get: CapStyle_getInstance
  });
  package$drawing.CapBuilder = CapBuilder;
  Object.defineProperty(MeshIntersectionType, 'BOUNDING_BOX', {
    get: MeshIntersectionType$BOUNDING_BOX_getInstance
  });
  Object.defineProperty(MeshIntersectionType, 'EXACT', {
    get: MeshIntersectionType$EXACT_getInstance
  });
  package$drawing.MeshIntersectionType = MeshIntersectionType;
  Object.defineProperty(package$drawing, 'fillStyle', {
    get: function () {
      return fillStyle;
    }
  });
  Object.defineProperty(package$drawing, 'lineStyle', {
    get: function () {
      return lineStyle;
    }
  });
  Object.defineProperty(package$drawing, 'MiterCap', {
    get: MiterCap_getInstance
  });
  Object.defineProperty(package$drawing, 'NoCap', {
    get: NoCap_getInstance
  });
  Object.defineProperty(package$drawing, 'QUAD_INDICES', {
    get: function () {
      return QUAD_INDICES;
    }
  });
  Object.defineProperty(package$drawing, 'TRIANGLE_INDICES', {
    get: function () {
      return TRIANGLE_INDICES;
    }
  });
  package$drawing.fillTriangle_uwxsiv$ = fillTriangle;
  package$drawing.fillQuad_v89or8$ = fillQuad;
  package$drawing.line_1g23ti$ = line;
  package$drawing.line_n9wssq$ = line_0;
  package$drawing.triangle_ffopf2$ = triangle;
  package$drawing.triangle_cu2q5p$ = triangle_0;
  package$drawing.quad_uyilgy$ = quad;
  package$drawing.rect_able2a$ = rect_0;
  package$drawing.quad_6jxd3i$ = quad_0;
  package$drawing.circle_o3poyj$ = circle;
  package$drawing.oval_7n5c08$ = oval;
  package$drawing.calculateOvalPoint_7frhg$ = calculateOvalPoint;
  package$drawing.curvedRect_bvozb6$ = curvedRect;
  package$drawing.cylinder_3qe4at$ = cylinder;
  package$drawing.box_3336ut$ = box;
  Object.defineProperty(StaticMeshComponent, 'Companion', {
    get: StaticMeshComponent$Companion_getInstance
  });
  package$drawing.StaticMeshComponent = StaticMeshComponent;
  package$drawing.staticMeshC_rxm3cv$ = staticMeshC;
  package$drawing.staticMeshC_dgmexy$ = staticMeshC_0;
  Object.defineProperty(StaticMesh, 'Companion', {
    get: StaticMesh$Companion_getInstance
  });
  package$drawing.StaticMesh = StaticMesh;
  package$drawing.staticMesh_klih6$ = staticMesh;
  package$component_0.GlFilter = GlFilter;
  package$component_0.GlRect = GlRect;
  package$component_0.GlScrollArea = GlScrollArea;
  package$component_0.GlStageImpl = GlStageImpl;
  package$component_0.GlTextureComponent_init_46419d$ = GlTextureComponent_init;
  package$component_0.GlTextureComponent_init_w2j5p2$ = GlTextureComponent_init_0;
  package$component_0.GlTextureComponent = GlTextureComponent;
  Object.defineProperty(Gl20, 'Companion', {
    get: Gl20$Companion_getInstance
  });
  Object.defineProperty(package$component_0, 'StencilUtil', {
    get: StencilUtil_getInstance
  });
  package$component_0.GlScrollRect = GlScrollRect;
  package$component_0.scissorLocal_ihgxuk$ = scissorLocal_0;
  package$component_0.scissorLocal_p6ohwc$ = scissorLocal;
  var package$core_0 = package$gl.core || (package$gl.core = {});
  package$core_0.scissor_5ntqyk$ = scissor;
  package$component_0.Sprite = Sprite;
  var package$text_0 = package$component_0.text || (package$component_0.text = {});
  Object.defineProperty(package$text_0, 'AngelCodeParser', {
    get: AngelCodeParser_getInstance
  });
  package$text_0.BitmapFont = BitmapFont;
  package$text_0.FontStyle = FontStyle;
  package$text_0.Glyph = Glyph;
  package$text_0.loadFontFromDir_tss024$ = loadFontFromDir;
  package$text_0.loadFontFromDir_d711lu$ = loadFontFromDir_0;
  package$text_0.loadFontFromAtlas_d711lu$ = loadFontFromAtlas;
  Object.defineProperty(package$text_0, 'BitmapFontRegistry', {
    get: BitmapFontRegistry_getInstance
  });
  package$text_0.BitmapFontData = BitmapFontData;
  package$text_0.BitmapFontPageData = BitmapFontPageData;
  package$text_0.GlyphData = GlyphData;
  package$text_0.GlEditableTextField = GlEditableTextField;
  package$text_0.GlTextCommander = GlTextCommander;
  package$text_0.GlTextField = GlTextField;
  package$text_0.TfPartColors = TfPartColors;
  package$text_0.TfPart = TfPart;
  package$text_0.TfWord = TfWord;
  package$text_0.TfCharacter = TfCharacter;
  package$text_0.GlTextInput = GlTextInput;
  package$text_0.GlTextArea = GlTextArea;
  Object.defineProperty(BufferUsage, 'STREAM', {
    get: BufferUsage$STREAM_getInstance
  });
  Object.defineProperty(BufferUsage, 'STATIC', {
    get: BufferUsage$STATIC_getInstance
  });
  Object.defineProperty(BufferUsage, 'DYNAMIC', {
    get: BufferUsage$DYNAMIC_getInstance
  });
  package$core_0.BufferUsage = BufferUsage;
  package$core_0.DrawComponent = DrawComponent;
  Object.defineProperty(Framebuffer, 'Companion', {
    get: Framebuffer$Companion_getInstance
  });
  package$core_0.Framebuffer = Framebuffer;
  package$core_0.BufferTexture = BufferTexture;
  package$core_0.Gl20 = Gl20;
  package$core_0.GlProgramRef = GlProgramRef;
  package$core_0.GlShaderRef = GlShaderRef;
  package$core_0.GlBufferRef = GlBufferRef;
  package$core_0.GlFramebufferRef = GlFramebufferRef;
  package$core_0.GlRenderbufferRef = GlRenderbufferRef;
  package$core_0.GlTextureRef = GlTextureRef;
  package$core_0.GlActiveInfoRef = GlActiveInfoRef;
  package$core_0.GlUniformLocationRef = GlUniformLocationRef;
  Object.defineProperty(GlState, 'Companion', {
    get: GlState$Companion_getInstance
  });
  package$core_0.GlState = GlState;
  package$core_0.GlTextureBase = GlTextureBase;
  Object.defineProperty(TextureTarget, 'TEXTURE_2D', {
    get: TextureTarget$TEXTURE_2D_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP', {
    get: TextureTarget$TEXTURE_CUBE_MAP_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP_POSITIVE_X', {
    get: TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_X_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP_NEGATIVE_X', {
    get: TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_X_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP_POSITIVE_Y', {
    get: TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Y_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP_NEGATIVE_Y', {
    get: TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Y_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP_POSITIVE_Z', {
    get: TextureTarget$TEXTURE_CUBE_MAP_POSITIVE_Z_getInstance
  });
  Object.defineProperty(TextureTarget, 'TEXTURE_CUBE_MAP_NEGATIVE_Z', {
    get: TextureTarget$TEXTURE_CUBE_MAP_NEGATIVE_Z_getInstance
  });
  Object.defineProperty(TextureTarget, 'Companion', {
    get: TextureTarget$Companion_getInstance
  });
  package$core_0.TextureTarget = TextureTarget;
  Object.defineProperty(TextureMagFilter, 'NEAREST', {
    get: TextureMagFilter$NEAREST_getInstance
  });
  Object.defineProperty(TextureMagFilter, 'LINEAR', {
    get: TextureMagFilter$LINEAR_getInstance
  });
  package$core_0.TextureMagFilter = TextureMagFilter;
  Object.defineProperty(TextureMinFilter, 'NEAREST', {
    get: TextureMinFilter$NEAREST_getInstance
  });
  Object.defineProperty(TextureMinFilter, 'LINEAR', {
    get: TextureMinFilter$LINEAR_getInstance
  });
  Object.defineProperty(TextureMinFilter, 'NEAREST_MIPMAP_NEAREST', {
    get: TextureMinFilter$NEAREST_MIPMAP_NEAREST_getInstance
  });
  Object.defineProperty(TextureMinFilter, 'LINEAR_MIPMAP_NEAREST', {
    get: TextureMinFilter$LINEAR_MIPMAP_NEAREST_getInstance
  });
  Object.defineProperty(TextureMinFilter, 'NEAREST_MIPMAP_LINEAR', {
    get: TextureMinFilter$NEAREST_MIPMAP_LINEAR_getInstance
  });
  Object.defineProperty(TextureMinFilter, 'LINEAR_MIPMAP_LINEAR', {
    get: TextureMinFilter$LINEAR_MIPMAP_LINEAR_getInstance
  });
  package$core_0.TextureMinFilter = TextureMinFilter;
  Object.defineProperty(TextureWrapMode, 'REPEAT', {
    get: TextureWrapMode$REPEAT_getInstance
  });
  Object.defineProperty(TextureWrapMode, 'CLAMP_TO_EDGE', {
    get: TextureWrapMode$CLAMP_TO_EDGE_getInstance
  });
  Object.defineProperty(TextureWrapMode, 'MIRRORED_REPEAT', {
    get: TextureWrapMode$MIRRORED_REPEAT_getInstance
  });
  package$core_0.TextureWrapMode = TextureWrapMode;
  Object.defineProperty(TexturePixelFormat, 'DEPTH_COMPONENT', {
    get: TexturePixelFormat$DEPTH_COMPONENT_getInstance
  });
  Object.defineProperty(TexturePixelFormat, 'ALPHA', {
    get: TexturePixelFormat$ALPHA_getInstance
  });
  Object.defineProperty(TexturePixelFormat, 'RGB', {
    get: TexturePixelFormat$RGB_getInstance
  });
  Object.defineProperty(TexturePixelFormat, 'RGBA', {
    get: TexturePixelFormat$RGBA_getInstance
  });
  Object.defineProperty(TexturePixelFormat, 'LUMINANCE', {
    get: TexturePixelFormat$LUMINANCE_getInstance
  });
  Object.defineProperty(TexturePixelFormat, 'LUMINANCE_ALPHA', {
    get: TexturePixelFormat$LUMINANCE_ALPHA_getInstance
  });
  package$core_0.TexturePixelFormat = TexturePixelFormat;
  Object.defineProperty(TexturePixelType, 'UNSIGNED_BYTE', {
    get: TexturePixelType$UNSIGNED_BYTE_getInstance
  });
  Object.defineProperty(TexturePixelType, 'UNSIGNED_SHORT_5_6_5', {
    get: TexturePixelType$UNSIGNED_SHORT_5_6_5_getInstance
  });
  Object.defineProperty(TexturePixelType, 'UNSIGNED_SHORT_5_5_5_1', {
    get: TexturePixelType$UNSIGNED_SHORT_5_5_5_1_getInstance
  });
  Object.defineProperty(TexturePixelType, 'UNSIGNED_SHORT_4_4_4_4', {
    get: TexturePixelType$UNSIGNED_SHORT_4_4_4_4_getInstance
  });
  package$core_0.TexturePixelType = TexturePixelType;
  package$core_0.RgbTexture = RgbTexture;
  package$core_0.rgbTexture_cthb9x$ = rgbTexture;
  package$core_0.ShaderBatch = ShaderBatch;
  package$core_0.ShaderBatchImpl = ShaderBatchImpl;
  Object.defineProperty(ShaderProgram, 'Companion', {
    get: ShaderProgram$Companion_getInstance
  });
  package$core_0.ShaderProgram = ShaderProgram;
  package$core_0.ShaderProgramBase = ShaderProgramBase;
  package$core_0.ShaderCompileException = ShaderCompileException;
  package$core_0.DefaultShaderProgram = DefaultShaderProgram;
  Object.defineProperty(package$core_0, 'standardVertexAttributes', {
    get: function () {
      return standardVertexAttributes;
    }
  });
  Object.defineProperty(Vertex, 'Companion', {
    get: Vertex$Companion_getInstance
  });
  package$core_0.Vertex = Vertex;
  package$core_0.VertexFeed = VertexFeed;
  package$core_0.IndexFeed = IndexFeed;
  package$core_0.pushQuadIndices_qky3j1$ = pushQuadIndices;
  package$core_0.VertexAttributes = VertexAttributes;
  package$core_0.VertexAttribute = VertexAttribute;
  Object.defineProperty(package$core_0, 'VertexAttributeUsage', {
    get: VertexAttributeUsage_getInstance
  });
  package$core_0.WrappedGl20 = WrappedGl20;
  var package$skins = package$acornui.skins || (package$acornui.skins = {});
  package$skins.BasicUiSkin = BasicUiSkin;
  package$skins.populateButtonStyle_dttyo5$ = populateButtonStyle;
  package$skins.populateButtonStyle_quoawv$ = populateButtonStyle_1;
  package$skins.populateButtonStyle_4stbvl$ = populateButtonStyle_0;
  package$skins.iconButtonSkin_dqq1j4$ = iconButtonSkin_0;
  package$skins.labelButtonSkin_yxwifr$ = labelButtonSkin;
  package$skins.tabButtonSkin_yxwifr$ = tabButtonSkin;
  package$skins.iconButtonSkin_yxwifr$ = iconButtonSkin;
  package$skins.checkboxNoLabelSkin_yxwifr$ = checkboxNoLabelSkin;
  package$skins.checkboxSkin_yxwifr$ = checkboxSkin;
  package$skins.radioButtonSkin_yxwifr$ = radioButtonSkin;
  package$skins.buttonTexture_kof42k$ = buttonTexture;
  package$skins.CheckboxSkinPart = CheckboxSkinPart;
  package$skins.LabelButtonSkinPart = LabelButtonSkinPart;
  package$skins.IconButtonSkinPart = IconButtonSkinPart;
  package$skins.getButtonFillColor_oac0q6$ = getButtonFillColor;
  package$skins.getButtonStrokeColor_oac0q6$ = getButtonStrokeColor;
  Object.defineProperty(Theme, 'Companion', {
    get: Theme$Companion_getInstance
  });
  package$skins.Theme = Theme;
  Object.defineProperty(package$skins, 'StyleSelectors', {
    get: StyleSelectors_getInstance
  });
  assertionsEnabled = false;
  formLabelStyle = styleTag();
  progressBar = null;
  noSkin = noSkin$lambda;
  noSkinOptional = noSkinOptional$lambda;
  i18nPath = 'assets/res/{bundleName}_{locale}.properties';
  i18nDefaultPath = 'assets/res/{bundleName}.properties';
  fakeClickEvent = new ClickEvent();
  JSON_KEY = new DependencyKeyImpl();
  time = properties_0.Delegates.notNull_30y1fr$();
  _measuredTotalTime = 0.0;
  _measuredIterations = 0;
  mat = new Matrix4();
  quat = new Quaternion();
  fillStyle = new FillStyle();
  lineStyle = new LineStyle();
  v1 = new Vector2();
  v2 = new Vector2();
  v3 = new Vector2();
  v4 = new Vector2();
  QUAD_INDICES = [0, 1, 2, 2, 3, 0];
  TRIANGLE_INDICES = [0, 1, 2];
  v1_3 = new Vector3();
  standardVertexAttributes = new standardVertexAttributes$ObjectLiteral(listOf([new VertexAttribute(3, false, Gl20$Companion_getInstance().FLOAT, VertexAttributeUsage_getInstance().POSITION), new VertexAttribute(3, false, Gl20$Companion_getInstance().FLOAT, VertexAttributeUsage_getInstance().NORMAL), new VertexAttribute(4, false, Gl20$Companion_getInstance().FLOAT, VertexAttributeUsage_getInstance().COLOR_TINT), new VertexAttribute(2, false, Gl20$Companion_getInstance().FLOAT, VertexAttributeUsage_getInstance().TEXTURE_COORD)]));
  Kotlin.defineModule('AcornUiCore', _);
  return _;
}(typeof AcornUiCore === 'undefined' ? {} : AcornUiCore, kotlin, AcornUtils);

//@ sourceMappingURL=AcornUiCore.js.map
